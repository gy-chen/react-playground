{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fs\"","webpack:///external \"path\"","webpack:///external \"events\"","webpack:///./node_modules/puppeteer/lib/helper.js","webpack:///./node_modules/puppeteer/node6/lib/helper.js","webpack:///external \"util\"","webpack:///./node_modules/debug/src/index.js","webpack:///external \"stream\"","webpack:///./node_modules/depd/index.js","webpack:///./node_modules/inherits/inherits.js","webpack:///external \"url\"","webpack:///external \"http\"","webpack:///./node_modules/express/lib/utils.js","webpack:///./node_modules/safer-buffer/safer.js","webpack:///external \"buffer\"","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/puppeteer/node_modules/debug/src/index.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/bytes/index.js","webpack:///./node_modules/http-errors/index.js","webpack:///./node_modules/type-is/index.js","webpack:///./node_modules/parseurl/index.js","webpack:///external \"crypto\"","webpack:///external \"os\"","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/ws/lib/constants.js","webpack:///./node_modules/content-type/index.js","webpack:///./node_modules/setprototypeof/index.js","webpack:///external \"net\"","webpack:///./node_modules/body-parser/lib/read.js","webpack:///./node_modules/on-finished/index.js","webpack:///./node_modules/encodeurl/index.js","webpack:///./node_modules/escape-html/index.js","webpack:///./node_modules/array-flatten/array-flatten.js","webpack:///./node_modules/utils-merge/index.js","webpack:///./node_modules/rimraf/rimraf.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///external \"https\"","webpack:///./node_modules/puppeteer/lib/ExecutionContext.js","webpack:///./node_modules/ws/lib/permessage-deflate.js","webpack:///./node_modules/puppeteer/node6/lib/ExecutionContext.js","webpack:///external \"tty\"","webpack:///external \"zlib\"","webpack:///./node_modules/qs/lib/index.js","webpack:///./node_modules/statuses/index.js","webpack:///./node_modules/methods/index.js","webpack:///./node_modules/send/index.js","webpack:///./node_modules/puppeteer/lib/Errors.js","webpack:///external \"assert\"","webpack:///./node_modules/minimatch/minimatch.js","webpack:///./node_modules/path-is-absolute/index.js","webpack:///./node_modules/puppeteer/lib/Connection.js","webpack:///./node_modules/ws/lib/buffer-util.js","webpack:///./node_modules/puppeteer/node6/lib/Errors.js","webpack:///./node_modules/puppeteer/node6/lib/Connection.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/depd/lib/compat/index.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/iconv-lite/lib/index.js","webpack:///./node_modules/unpipe/index.js","webpack:///./node_modules/mime-types/index.js","webpack:///./node_modules/qs/lib/utils.js","webpack:///./node_modules/qs/lib/formats.js","webpack:///external \"querystring\"","webpack:///./node_modules/express/lib/router/index.js","webpack:///./node_modules/express/lib/router/route.js","webpack:///./node_modules/express/lib/router/layer.js","webpack:///./node_modules/express/lib/middleware/query.js","webpack:///./node_modules/content-disposition/index.js","webpack:///./node_modules/etag/index.js","webpack:///./node_modules/fresh/index.js","webpack:///./node_modules/range-parser/index.js","webpack:///./node_modules/proxy-addr/index.js","webpack:///./node_modules/puppeteer/node_modules/debug/src/common.js","webpack:///./node_modules/supports-color/index.js","webpack:///./node_modules/glob/glob.js","webpack:///./node_modules/fs.realpath/index.js","webpack:///./node_modules/glob/common.js","webpack:///./node_modules/wrappy/wrappy.js","webpack:///./node_modules/once/once.js","webpack:///external \"child_process\"","webpack:///./node_modules/puppeteer/lib/BrowserFetcher.js","webpack:///./node_modules/extract-zip/index.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/https-proxy-agent/index.js","webpack:///external \"tls\"","webpack:///./node_modules/https-proxy-agent/node_modules/debug/src/common.js","webpack:///./node_modules/proxy-from-env/index.js","webpack:///./node_modules/mime/index.js","webpack:///./node_modules/puppeteer/lib/NetworkManager.js","webpack:///external \"readline\"","webpack:///./node_modules/ws/index.js","webpack:///./node_modules/ws/lib/websocket.js","webpack:///./node_modules/ws/lib/extension.js","webpack:///./node_modules/ws/lib/receiver.js","webpack:///./node_modules/ws/lib/validation.js","webpack:///./node_modules/ws/lib/sender.js","webpack:///./node_modules/puppeteer/node6/lib/BrowserFetcher.js","webpack:///./node_modules/puppeteer/node6/lib/NetworkManager.js","webpack:///./src/server/index.tsx","webpack:///./node_modules/express/index.js","webpack:///./node_modules/express/lib/express.js","webpack:///./node_modules/body-parser/index.js","webpack:///./node_modules/depd/lib/compat/callsite-tostring.js","webpack:///./node_modules/depd/lib/compat/event-listener-count.js","webpack:///./node_modules/body-parser/lib/types/json.js","webpack:///./node_modules/http-errors/node_modules/statuses/index.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/debug/src/node.js","webpack:///./node_modules/raw-body/index.js","webpack:///./node_modules/iconv-lite/lib/bom-handling.js","webpack:///./node_modules/iconv-lite/encodings/index.js","webpack:///./node_modules/iconv-lite/encodings/internal.js","webpack:///external \"string_decoder\"","webpack:///./node_modules/iconv-lite/encodings/utf16.js","webpack:///./node_modules/iconv-lite/encodings/utf7.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data.js","webpack:///./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack:///./node_modules/iconv-lite/encodings/dbcs-data.js","webpack:///./node_modules/iconv-lite/lib/streams.js","webpack:///./node_modules/iconv-lite/lib/extend-node.js","webpack:///./node_modules/ee-first/index.js","webpack:///./node_modules/media-typer/index.js","webpack:///./node_modules/mime-db/index.js","webpack:///./node_modules/body-parser/lib/types/raw.js","webpack:///./node_modules/body-parser/lib/types/text.js","webpack:///./node_modules/body-parser/lib/types/urlencoded.js","webpack:///./node_modules/qs/lib/stringify.js","webpack:///./node_modules/qs/lib/parse.js","webpack:///./node_modules/merge-descriptors/index.js","webpack:///./node_modules/express/lib/application.js","webpack:///./node_modules/finalhandler/index.js","webpack:///./node_modules/path-to-regexp/index.js","webpack:///./node_modules/express/lib/middleware/init.js","webpack:///./node_modules/express/lib/view.js","webpack:///./node_modules/express/lib sync","webpack:///./node_modules/destroy/index.js","webpack:///./node_modules/send/node_modules/mime/mime.js","webpack:///./node_modules/forwarded/index.js","webpack:///./node_modules/ipaddr.js/lib/ipaddr.js","webpack:///./node_modules/express/lib/request.js","webpack:///./node_modules/accepts/index.js","webpack:///./node_modules/negotiator/index.js","webpack:///./node_modules/negotiator/lib/charset.js","webpack:///./node_modules/negotiator/lib/encoding.js","webpack:///./node_modules/negotiator/lib/language.js","webpack:///./node_modules/negotiator/lib/mediaType.js","webpack:///./node_modules/express/lib/response.js","webpack:///./node_modules/cookie-signature/index.js","webpack:///./node_modules/cookie/index.js","webpack:///./node_modules/vary/index.js","webpack:///./node_modules/serve-static/index.js","webpack:///./node_modules/puppeteer/index.js","webpack:///./node_modules/puppeteer/lib/Puppeteer.js","webpack:///./node_modules/puppeteer/node_modules/debug/src/browser.js","webpack:///./node_modules/puppeteer/node_modules/ms/index.js","webpack:///./node_modules/puppeteer/node_modules/debug/src/node.js","webpack:///./node_modules/has-flag/index.js","webpack:///./node_modules/puppeteer/lib/Launcher.js","webpack:///./node_modules/fs.realpath/old.js","webpack:///./node_modules/brace-expansion/index.js","webpack:///./node_modules/concat-map/index.js","webpack:///./node_modules/balanced-match/index.js","webpack:///./node_modules/glob/sync.js","webpack:///./node_modules/inflight/inflight.js","webpack:///./node_modules/yauzl/index.js","webpack:///./node_modules/fd-slicer/index.js","webpack:///./node_modules/pend/index.js","webpack:///./node_modules/mkdirp/index.js","webpack:///./node_modules/concat-stream/index.js","webpack:///./node_modules/readable-stream/readable.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/util-deprecate/node.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/buffer-from/index.js","webpack:///./node_modules/typedarray/index.js","webpack:///./node_modules/agent-base/index.js","webpack:///./node_modules/agent-base/patch-core.js","webpack:///./node_modules/es6-promisify/dist/promisify.js","webpack:///./node_modules/es6-promisify/dist/promise.js","webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./node_modules/https-proxy-agent/node_modules/debug/src/index.js","webpack:///./node_modules/https-proxy-agent/node_modules/debug/src/browser.js","webpack:///./node_modules/https-proxy-agent/node_modules/ms/index.js","webpack:///./node_modules/https-proxy-agent/node_modules/debug/src/node.js","webpack:///./node_modules/puppeteer/lib/Browser.js","webpack:///./node_modules/puppeteer/lib/Target.js","webpack:///./node_modules/puppeteer/lib/Page.js","webpack:///./node_modules/mime/Mime.js","webpack:///./node_modules/puppeteer/lib/Multimap.js","webpack:///./node_modules/puppeteer/lib/Dialog.js","webpack:///./node_modules/puppeteer/lib/EmulationManager.js","webpack:///./node_modules/puppeteer/lib/FrameManager.js","webpack:///./node_modules/puppeteer/lib/Input.js","webpack:///./node_modules/puppeteer/lib/USKeyboardLayout.js","webpack:///./node_modules/puppeteer/lib/Tracing.js","webpack:///./node_modules/puppeteer/lib/Coverage.js","webpack:///./node_modules/puppeteer/lib/Worker.js","webpack:///./node_modules/puppeteer/lib/Accessibility.js","webpack:///./node_modules/puppeteer/lib/TaskQueue.js","webpack:///./node_modules/puppeteer/lib/WebSocketTransport.js","webpack:///./node_modules/async-limiter/index.js","webpack:///./node_modules/ws/lib/event-target.js","webpack:///./node_modules/ws/lib/websocket-server.js","webpack:///./node_modules/puppeteer/lib/PipeTransport.js","webpack:///./node_modules/puppeteer/node6/lib/Puppeteer.js","webpack:///./node_modules/puppeteer/node6/lib/Launcher.js","webpack:///./node_modules/puppeteer/node6/lib/Browser.js","webpack:///./node_modules/puppeteer/node6/lib/Target.js","webpack:///./node_modules/puppeteer/node6/lib/Page.js","webpack:///./node_modules/puppeteer/node6/lib/Multimap.js","webpack:///./node_modules/puppeteer/node6/lib/Dialog.js","webpack:///./node_modules/puppeteer/node6/lib/EmulationManager.js","webpack:///./node_modules/puppeteer/node6/lib/FrameManager.js","webpack:///./node_modules/puppeteer/node6/lib/Input.js","webpack:///./node_modules/puppeteer/node6/lib/USKeyboardLayout.js","webpack:///./node_modules/puppeteer/node6/lib/Tracing.js","webpack:///./node_modules/puppeteer/node6/lib/Coverage.js","webpack:///./node_modules/puppeteer/node6/lib/Worker.js","webpack:///./node_modules/puppeteer/node6/lib/Accessibility.js","webpack:///./node_modules/puppeteer/node6/lib/TaskQueue.js","webpack:///./node_modules/puppeteer/node6/lib/WebSocketTransport.js","webpack:///./node_modules/puppeteer/node6/lib/PipeTransport.js","webpack:///./node_modules/mongodb/lib/utils.js","webpack:///./node_modules/mongodb-core/index.js","webpack:///./node_modules/mongodb/lib/operations/collection_ops.js","webpack:///./node_modules/mongodb-core/lib/error.js","webpack:///./node_modules/mongodb/lib/operations/db_ops.js","webpack:///./node_modules/mongodb-core/lib/topologies/shared.js","webpack:///./node_modules/mongodb-core/lib/connection/commands.js","webpack:///./node_modules/mongodb-core/lib/connection/utils.js","webpack:///./node_modules/mongodb-core/lib/utils.js","webpack:///./node_modules/mongodb/lib/cursor.js","webpack:///./node_modules/mongodb-core/lib/wireprotocol/shared.js","webpack:///./node_modules/mongodb-core/lib/topologies/read_preference.js","webpack:///./node_modules/mongodb-core/lib/connection/logger.js","webpack:///./node_modules/bson/lib/bson/long.js","webpack:///./node_modules/mongodb/lib/collection.js","webpack:///./node_modules/mongodb/lib/db.js","webpack:///./node_modules/mongodb/lib/topologies/topology_base.js","webpack:///./node_modules/bson/lib/bson/min_key.js","webpack:///./node_modules/bson/lib/bson/binary.js","webpack:///./node_modules/mongodb/lib/operations/cursor_ops.js","webpack:///./node_modules/bson/lib/bson/double.js","webpack:///./node_modules/bson/lib/bson/timestamp.js","webpack:///./node_modules/bson/lib/bson/objectid.js","webpack:///./node_modules/bson/lib/bson/regexp.js","webpack:///./node_modules/bson/lib/bson/symbol.js","webpack:///./node_modules/bson/lib/bson/code.js","webpack:///./node_modules/bson/lib/bson/decimal128.js","webpack:///./node_modules/bson/lib/bson/max_key.js","webpack:///./node_modules/bson/lib/bson/db_ref.js","webpack:///./node_modules/mongodb-core/lib/wireprotocol/compression.js","webpack:///./node_modules/mongodb-core/lib/auth/defaultAuthProviders.js","webpack:///./node_modules/mongodb-core/lib/auth/scram.js","webpack:///./node_modules/mongodb-core/lib/cursor.js","webpack:///./node_modules/mongodb/lib/mongo_client.js","webpack:///./node_modules/mongodb/lib/bulk/common.js","webpack:///./node_modules/mongodb/lib/topologies/server.js","webpack:///./node_modules/bson/lib/bson/map.js","webpack:///./node_modules/bson/lib/bson/int_32.js","webpack:///./node_modules/require_optional/index.js","webpack:///./node_modules/require_optional sync","webpack:///./node_modules/mongodb-core/lib/topologies/server.js","webpack:///./node_modules/mongodb-core/lib/transactions.js","webpack:///./node_modules/mongodb/lib/change_stream.js","webpack:///./node_modules/mongodb/lib/command_cursor.js","webpack:///./node_modules/mongodb/lib/operations/admin_ops.js","webpack:///./node_modules/mongodb/lib/operations/mongo_client_ops.js","webpack:///./node_modules/bson/index.js","webpack:///./node_modules/bson/lib/bson/parser/utils.js","webpack:///./node_modules/mongodb-core/lib/connection/connection.js","webpack:///./node_modules/mongodb-core/lib/auth/mongocr.js","webpack:///./node_modules/mongodb-core/lib/auth/x509.js","webpack:///./node_modules/mongodb-core/lib/auth/plain.js","webpack:///./node_modules/mongodb-core/lib/auth/gssapi.js","webpack:///external \"dns\"","webpack:///./node_modules/mongodb/lib/aggregation_cursor.js","webpack:///./node_modules/mongodb/lib/constants.js","webpack:///./node_modules/mongodb/lib/admin.js","webpack:///./node_modules/mongodb/lib/topologies/mongos.js","webpack:///./node_modules/mongodb/lib/topologies/replset.js","webpack:///./node_modules/mongodb/lib/gridfs/chunk.js","webpack:///./src/server/geolocation.ts","webpack:///./node_modules/mongodb/index.js","webpack:///./node_modules/bson/lib/bson/bson.js","webpack:///./node_modules/bson/lib/bson/parser/deserializer.js","webpack:///./node_modules/bson/lib/bson/parser/serializer.js","webpack:///./node_modules/bson/lib/bson/float_parser.js","webpack:///./node_modules/bson/lib/bson/parser/calculate_size.js","webpack:///./node_modules/resolve-from/index.js","webpack:///external \"module\"","webpack:///./node_modules/semver/semver.js","webpack:///./node_modules/mongodb-core/lib/connection/pool.js","webpack:///./node_modules/mongodb-core/lib/connection/command_result.js","webpack:///./node_modules/mongodb-core/lib/connection/apm.js","webpack:///./node_modules/mongodb-core/lib/auth/sspi.js","webpack:///./node_modules/saslprep/index.js","webpack:///./node_modules/saslprep/lib/memory-code-points.js","webpack:///./node_modules/sparse-bitfield/index.js","webpack:///./node_modules/memory-pager/index.js","webpack:///./node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","webpack:///./node_modules/mongodb-core/lib/wireprotocol/3_2_support.js","webpack:///./node_modules/mongodb-core/lib/topologies/replset.js","webpack:///./node_modules/mongodb-core/lib/topologies/replset_state.js","webpack:///./node_modules/mongodb-core/lib/topologies/mongos.js","webpack:///./node_modules/mongodb-core/lib/sessions.js","webpack:///./node_modules/mongodb-core/lib/uri_parser.js","webpack:///./node_modules/mongodb/lib/apm.js","webpack:///./node_modules/mongodb/lib/error.js","webpack:///./node_modules/mongodb/lib/bulk/unordered.js","webpack:///./node_modules/mongodb/lib/bulk/ordered.js","webpack:///./node_modules/mongodb/lib/authenticate.js","webpack:///./node_modules/mongodb/lib/url_parser.js","webpack:///./node_modules/mongodb/lib/gridfs/grid_store.js","webpack:///./node_modules/mongodb/lib/gridfs-stream/index.js","webpack:///./node_modules/mongodb/lib/gridfs-stream/download.js","webpack:///./node_modules/mongodb/lib/gridfs-stream/upload.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","TimeoutError","debugError","apiCoverage","Helper","[object Object]","fun","args","isString","assert","length","map","arg","is","undefined","JSON","stringify","join","exceptionDetails","exception","description","message","text","stackTrace","callframe","callFrames","location","url","lineNumber","columnNumber","functionName","remoteObject","objectId","unserializableValue","NaN","Infinity","Error","client","send","catch","error","classType","publicName","methodName","Reflect","ownKeys","method","startsWith","constructor","set","syncStack","this","e","stack","substring","indexOf","clientStack","includes","className","toLowerCase","Events","event","values","listenerCount","traceAPICoverage","emitter","eventName","handler","on","listeners","listener","removeListener","splice","Map","obj","String","Number","nodeFunction","Promise","resolve","reject","err","result","predicate","timeout","eventTimeout","resolveCallback","rejectCallback","promise","addEventListener","cleanup","removeEventListeners","clearTimeout","setTimeout","taskName","timeoutError","timeoutPromise","x","timeoutTimer","race","helper","fn","gen","step","info","done","then","process","type","callSiteToString","eventListenerCount","relative","depd","basePath","cwd","containsNamespace","str","namespace","vals","split","val","convertDataDescriptorToAccessor","prop","descriptor","getOwnPropertyDescriptor","writable","createArgumentsString","arity","substr","createStackString","TypeError","file","callSiteLocation","getStack","deprecate","log","_file","_ignored","isignored","_namespace","_traced","istraced","_warned","function","wrapfunction","wrapproperty","noDeprecation","env","NO_DEPRECATION","traceDeprecation","TRACE_DEPRECATION","site","haslisteners","caller","callFile","callSite","depSite","seen","msg","defaultMessage","DeprecationError","slice","emit","output","stderr","isTTY","formatColor","formatPlain","write","getFileName","line","getLineNumber","colm","getColumnNumber","isEval","getEvalOrigin","getFunctionName","funcName","formatLocation","context","getThis","typeName","getTypeName","getMethodName","formatted","Date","toUTCString","limit","stackTraceLimit","prep","prepareStackTrace","prepareObjectStackTrace","Math","max","captureStackTrace","deprecatedfn","eval","configurable","apply","arguments","stackString","util","inherits","Buffer","contentDisposition","contentType","flatten","mime","etag","proxyaddr","qs","querystring","createETagGenerator","options","body","encoding","buf","isBuffer","from","parseExtendedQueryString","parse","allowPrototypes","newObject","weak","wetag","isAbsolute","path","normalizeType","index","parts","ret","quality","params","originalIndex","pms","parseFloat","acceptParams","lookup","normalizeTypes","types","push","compileETag","compileQueryParser","compileTrust","a","compile","setCharset","charset","parsed","parameters","format","buffer","safer","Safer","Uint8Array","encodingOrOffset","alloc","size","fill","RangeError","kStringMaxLength","binding","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","copyProps","src","dst","SafeBuffer","allocUnsafe","allocUnsafeSlow","SlowBuffer","browser","__nwjs","pna","objectKeys","keys","Duplex","Readable","Writable","v","readable","allowHalfOpen","once","onend","_writableState","ended","nextTick","onEndNT","self","end","highWaterMark","_readableState","destroyed","_destroy","cb","formatThousandsRegExp","formatDecimalsRegExp","b","kb","mb","gb","tb","parseRegExp","isFinite","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","Boolean","unit","toFixed","replace","isNaN","floatValue","results","exec","parseInt","floor","setPrototypeOf","statuses","codeClass","status","charAt","createError","props","statusCode","HttpError","expose","createHttpErrorConstructor","codes","forEach","code","CodeError","token","toUpperCase","match","ClientError","createClientErrorConstructor","ServerError","createServerErrorConstructor","ImATeapot","populateConstructorExports","typer","typeis","types_","tryNormalizeType","Array","isArray","mimeMatch","normalize","hasbody","req","headers","expected","actual","actualParts","expectedParts","hasBody","Url","parseurl","_parsedUrl","fresh","fastparse","_raw","charCodeAt","pathname","query","search","href","parsedUrl","original","originalUrl","_parsedOriginalUrl","objectToString","toString","isBoolean","isNull","isNullOrUndefined","isNumber","isSymbol","isUndefined","isRegExp","re","isObject","isDate","isError","isFunction","isPrimitive","BINARY_TYPES","GUID","kStatusCode","kWebSocket","EMPTY_BUFFER","NOOP","PARAM_REGEXP","TEXT_REGEXP","TOKEN_REGEXP","QESC_REGEXP","QUOTE_REGEXP","TYPE_REGEXP","qstring","test","ContentType","string","param","sort","header","getHeader","getcontenttype","trim","lastIndex","__proto__","proto","getBody","iconv","onFinished","zlib","res","next","debug","stream","opts","_body","verify","inflate","createInflate","pipe","createGunzip","contentstream","encodingExists","_error","resume","decode","isFinished","defer","attached","__onFinished","queue","createListener","callback","eeMsg","eeSocket","finished","onFinish","cancel","onSocket","socket","first","assignSocket","patchAssignSocket","attachFinishedListener","attachListener","setImmediate","complete","upgrade","UNMATCHED_SURROGATE_PAIR_REGEXP","UNMATCHED_SURROGATE_PAIR_REPLACE","ENCODE_CHARS_REGEXP","encodeURI","matchHtmlRegExp","escape","html","array","depth","flattenForever","flattenWithDepth","rimraf","sync","rimrafSync","fs","glob","_0666","defaultGlobOpts","nosort","silent","isWindows","platform","defaults","maxBusyTries","emfileWait","disableGlob","equal","busyTries","errState","hasMagic","afterGlob","er","rimraf_","CB","lstat","stat","st","fixWinEPERM","isDirectory","rmdir","unlink","chmod","er2","er3","stats","fixWinEPERMSync","chmodSync","statSync","rmdirSync","unlinkSync","originalEr","readdir","files","f","rmkids","lstatSync","readdirSync","retries","threw","rmkidsSync","version","arg1","arg2","arg3","len","EVALUATION_SCRIPT_URL","SOURCE_URL_REGEX","createJSHandle","frame","subtype","frameManager","_frameManager","ElementHandle","_client","page","JSHandle","ExecutionContext","contextPayload","_frame","_contextId","id","_isDefault","auxData","pageFunction","handle","evaluateHandle","jsonValue","dispose","suffix","contextId","expression","expressionWithSourceUrl","returnByValue","awaitPromise","userGesture","rewriteError","getExceptionMessage","functionText","Function","e1","e2","functionDeclaration","executionContextId","objectHandle","_context","_disposed","_remoteObject","endsWith","prototypeHandle","prototypeObjectId","objects","propertyName","getProperties","response","ownProperties","valueFromRemoteObject","releaseObject","super","_page","nodeInfo","node","frameId","executionContext","evaluate","async","element","pageJavascriptEnabled","isConnected","nodeType","Node","ELEMENT_NODE","scrollIntoView","block","inline","behavior","observer","IntersectionObserver","entries","intersectionRatio","disconnect","observe","_javascriptEnabled","quads","quad","_fromProtocolQuad","filter","area","p1","p2","y","computeQuadArea","point","_scrollIntoViewIfNeeded","_clickablePoint","mouse","move","click","filePaths","filePath","touchscreen","tap","focus","keyboard","press","_getBoxModel","model","border","min","width","height","content","padding","margin","needsViewportReset","boundingBox","viewport","newViewport","ceil","setViewport","assign","layoutViewport","pageX","pageY","clip","imageData","screenshot","selector","querySelector","asElement","arrayHandle","querySelectorAll","properties","elementHandle","$","iterator","ownerDocument","XPathResult","ORDERED_NODE_ITERATOR_TYPE","item","iterateNext","tracePublicAPI","Limiter","bufferUtil","TRAILER","EMPTY_BLOCK","kPerMessageDeflate","kWriteInProgress","kPendingClose","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","deflateOnData","chunk","inflateOnData","_maxPayload","reset","inflateOnError","_inflate","isServer","maxPayload","_options","_threshold","threshold","_isServer","_deflate","concurrency","concurrencyLimit","extensionName","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","configurations","normalizeParams","acceptAsServer","acceptAsClient","close","offers","accepted","find","num","isInteger","data","fin","_decompress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","flush","concat","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","document","formats","STATUS_CODES","arr","populateStatusesMap","redirect","300","301","302","303","305","307","308","empty","204","205","304","retry","502","503","504","http","METHODS","destroy","encodeUrl","escapeHtml","ms","parseRange","Stream","extname","sep","BYTES_RANGE_REGEXP","MAX_MAXAGE","UP_PATH_REGEXP","SendStream","_acceptRanges","acceptRanges","_cacheControl","cacheControl","_etag","_dotfiles","dotfiles","_hidden","hidden","_extensions","extensions","normalizeList","_immutable","immutable","_index","_lastModified","lastModified","_maxage","maxAge","maxage","_root","root","contentRange","range","start","createHtmlDocument","title","getHeaderNames","_headers","hasListeners","list","parseHttpDate","date","timestamp","paths","doc","removeHeader","clearHeaders","setHeader","setHeaders","byteLength","hasTrailingSlash","isConditionalGET","isPreconditionFailure","parseTokenList","every","unmodifiedSince","removeContentHeaderFields","notModified","headersAlreadySent","isCachable","onStatError","isFresh","last-modified","isRangeFresh","ifRange","loc","collapseLeadingSlashes","decodeURIComponent","part","containsDotFile","access","sendIndex","sendFile","ranges","offset","headersSent","_header","bytes","combine","Content-Range","createReadStream","charsets","modified","mtime","CustomError","minimatch","Minimatch","GLOBSTAR","expand","plTypes","!","open","?","+","*","@","qmark","star","twoStarDot","twoStarNoDot","reSpecials","reduce","slashSplit","ext","k","pattern","nocomment","regexp","negate","comment","make","braceExpand","nobrace","def","orig","_made","parseNegate","globSet","console","globParts","si","negateOffset","nonegate","isSub","noglobstar","stateChar","nocase","escaping","patternListStack","negativeLists","inClass","reClassStart","classStart","patternStart","dot","clearStateChar","noext","reStart","pl","pop","reEnd","cs","RegExp","sp","SUBPARSE","tail","_","$1","$2","addPatternStart","nl","nlBefore","nlFirst","nlLast","nlAfter","openParensBefore","cleanAfter","dollar","newRe","flags","regExp","_glob","_src","makeRe","twoStar","ex","mm","nonull","partial","filename","matchBase","hit","matchOne","flipNegate","fi","pi","fl","fr","pr","swallowee","posix","win32","device","isUnc","debugProtocol","debugSession","EventEmitter","Connection","transport","delay","_url","_lastId","_callbacks","_delay","_transport","onmessage","_onMessage","onclose","_onClose","_sessions","_closed","session","connection","_connection","CDPSession","delete","createProtocolError","sessionId","_onClosed","clear","Disconnected","targetInfo","targetId","targetType","_targetType","_sessionId","has","totalLength","target","copy","_mask","source","mask","_unmask","bu","BufferUtil","unmask","webpackPolyfill","children","lazyProperty","prevTime","createDebug","enabled","curr","diff","prev","coerce","unshift","formatter","formatters","formatArgs","useColors","color","hash","colors","selectColor","init","disable","enable","namespaces","save","names","skips","humanize","h","plural","long","round","fmtShort","bomHandling","encodings","defaultCharUnicode","defaultCharSingleByte","encode","encoder","getEncoder","trail","skipDecodeWarning","decoder","getDecoder","enc","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecOptions","codec","codecDef","encodingName","bomAware","addBOM","PrependBOM","stripBOM","StripBOM","nodeVer","versions","nodeVerArr","unpipe","hasPipeDataListeners","preference","db","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","extension","exts","to","hexTable","arrayToObject","plainObjects","acc","compact","refs","j","compacted","compactQueue","out","merge","mergeTarget","percentTwenties","default","RFC1738","RFC3986","Route","Layer","methods","mixin","parseUrl","objectRegExp","router","_params","caseSensitive","mergeParams","strict","appendMethods","addition","gettype","matchLayer","layer","old","idx","protohost","searchIndex","pathLength","fqdnIndex","getProtohost","removed","slashAdded","paramcalled","parentParams","parentUrl","baseUrl","restore","layerError","route","getPathname","has_method","_handles_method","parent","layerPath","process_params","handle_request","handle_error","trim_prefix","sendOptionsResponse","called","paramVal","paramCallbacks","paramCalled","paramIndex","paramCallback","use","callbacks","sensitive","dispatch","_all","head","all","handles","pathRegexp","fast_star","fast_slash","decode_param","URIError","0","queryparse","fallback","NON_LATIN1_REGEXP","basename","isQuotedString","fallbackName","getlatin1","hasFallback","HEX_ESCAPE_REGEXP","createparams","ustring","ContentDisposition","DISPOSITION_TYPE_REGEXP","decodefield","ENCODE_URL_ATTR_CHAR_REGEXP","HEX_ESCAPE_REPLACE_REGEXP","EXT_VALUE_REGEXP","binary","pdecode","hex","fromCharCode","pencode","char","encodeURIComponent","entity","isStats","Stats","ctime","ino","isstats","tag","getTime","crypto","createHash","update","digest","entitytag","CACHE_CONTROL_NO_CACHE_REGEXP","reqHeaders","resHeaders","modifiedSince","noneMatch","etagStale","matches","modifiedStale","mapWithIndex","mapWithoutIndex","sortByRangeIndex","sortByRangeStart","ordered","current","combined","combineRanges","trust","addrs","alladdrs","forwarded","ipaddr","DIGIT_REGEXP","isip","isValid","parseip","IP_RANGES","linklocal","loopback","uniquelocal","rangeSubnets","subnets","subnet","subnetip","subnetkind","subnetisipv4","subnetrange","parseipNotation","compileRangeSubnets","trustNone","kind","addr","ip","isIPv4MappedAddress","toIPv4Address","toIPv4MappedAddress","ipconv","trusted","note","pos","lastIndexOf","netmask","prefixLengthFromSubnetMask","parseNetmask","extend","instances","delimiter","toNamespace","instance","load","os","hasFlag","forceColor","getSupportLevel","level","hasBasic","has256","has16m","translateLevel","osRelease","release","some","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","supportsColor","FORCE_COLOR","stdout","rp","EE","globSync","common","setopts","alphasort","alphasorti","ownProp","inflight","childrenIgnored","isIgnored","Glob","GlobSync","_didRealPath","_processing","_emitQueue","_processQueue","paused","noprocess","_process","_finish","options_","origin","add","aborted","realpath","_didRealpath","_realpath","finish","found","_realpathSet","matchset","_makeAbs","realpathCache","real","syscall","_mark","mark","makeAbs","abort","pause","eq","_emitMatch","pq","inGlobStar","prefix","_processSimple","read","remain","_processGlobStar","_processReaddir","_readdir","_processReaddir2","pn","rawGlob","dotOk","matchedEntries","nomount","shift","absolute","nodir","cache","statCache","_readdirInGlobStar","follow","lstatcb","isSym","isSymbolicLink","symlinks","_readdirError","_readdirEntries","readdirCb","cwdAbs","_processGlobStar2","remainWithoutGlobStar","gspref","noGlobStar","instead","below","_stat","exists","_processSimple2","needDir","maxLength","statcb","_stat2","realpathSync","monkeypatch","unmonkeypatch","origRealpath","origRealpathSync","ok","newError","field","nounique","ignore","ignoreMap","setupIgnores","changedCwd","nou","literal","notDir","isDir","slash","mabs","gmatcher","localeCompare","gpattern","matcher","wrappy","wrapper","onceStrict","onceError","extract","URL","removeRecursive","ProxyAgent","getProxyForUrl","DEFAULT_DOWNLOAD_HOST","supportedPlatforms","downloadURLs","linux","mac","win64","archiveName","revision","downloadURL","host","readdirAsync","promisify","mkdirAsync","mkdir","unlinkAsync","chmodAsync","existsAsync","fulfill","httpRequest","proxyURL","parsedProxyURL","secureProxy","protocol","agent","rejectUnauthorized","requestCallback","request","projectRoot","_downloadsFolder","_downloadHost","_platform","arch","progressCallback","zipPath","folderPath","_getFolderPath","revisionInfo","destinationPath","downloadedBytes","totalBytes","createWriteStream","onData","downloadFile","dir","extractZip","executablePath","fileName","splits","parseFolderPath","entry","local","existsSync","yauzl","mkdirp","canonicalDir","lazyEntries","zipfile","cancelled","readEntry","destDir","dirname","canonicalDestDir","relativeDestDir","onEntry","dest","externalFileAttributes","symlink","madeBy","versionMadeBy","defaultDirMode","defaultFileMode","isSymlink","umask","procMode","openReadStream","readStream","link","writeStream","extractEntry","ReadableState","EElistenerCount","OurUint8Array","global","debugUtil","debuglog","StringDecoder","BufferList","destroyImpl","kProxyEvents","isDuplex","objectMode","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","pipes","pipesCount","flowing","endEmitted","reading","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","_read","readableAddChunk","addToFront","skipChunkCheck","state","emitReadable","onEofChunk","chunkInvalid","getPrototypeOf","_uint8ArrayToBuffer","addChunk","maybeReadMore","needMoreData","_undestroy","undestroy","isPaused","setEncoding","MAX_HWM","howMuchToRead","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","nReadingNextTick","resume_","fromList","hasStrings","nb","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","nOrig","doRead","pipeOpts","endFn","onunpipe","unpipeInfo","hasUnpiped","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","pipeOnDrain","increasedAwaitDrain","prependListener","_events","dests","ev","addListener","wrap","_this","_fromList","emitErrorNT","readableDestroyed","writableDestroyed","errorEmitted","ending","CorkedRequest","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","WritableState","internalUtil","realHasInstance","nop","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writecb","writelen","onwriteStateUpdate","finishMaybe","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","_write","writev","_writev","final","_final","doWrite","onwriteDrain","holder","count","allBuffers","isBuf","callFinal","need","prefinish","getBuffer","hasInstance","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","isEncoding","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","Transform","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","_flush","_this2","err2","net","tls","Agent","HttpsProxyAgent","proxy","hostname","port","ALPNProtocols","defaultPort","connect","buffers","buffersLength","buffered","firstLine","sock","secureEndpoint","servername","onsocket","auth","secure","_len","_key","DEFAULT_PORTS","ftp","gopher","https","ws","wss","stringEndsWith","getEnv","NO_PROXY","parsedProxy","parsedProxyHostname","parsedProxyPort","shouldProxy","Mime","Multimap","NetworkManager","_requestIdToRequest","_requestIdToRequestWillBeSentEvent","_extraHTTPHeaders","_offline","_credentials","_attemptedAuthentications","Set","_userRequestInterceptionEnabled","_protocolRequestInterceptionEnabled","_requestHashToRequestIds","_requestHashToInterceptionIds","_onRequestWillBeSent","_onRequestIntercepted","_onRequestServedFromCache","_onResponseReceived","_onLoadingFinished","_onLoadingFailed","credentials","_updateProtocolRequestInterception","extraHTTPHeaders","offline","latency","downloadThroughput","uploadThroughput","userAgent","patterns","urlPattern","cacheDisabled","requestHash","generateRequestHash","interceptionId","firstValue","_onRequest","requestId","authChallenge","username","password","authChallengeResponse","requestWillBeSentEvent","redirectChain","redirectResponse","_handleRequestRedirect","_redirectChain","Request","_fromMemoryCache","responsePayload","Response","_response","_bodyLoadedPromiseFulfill","_requestId","_interceptionId","RequestFinished","_failureText","errorText","RequestFailed","allowInterception","_isNavigationRequest","loaderId","_allowInterception","_interceptionHandled","_resourceType","_method","_postData","postData","overrides","responseBody","responseHeaders","statusTexts","responseBuffer","rawResponse","errorCode","errorReason","errorReasons","accessdenied","addressunreachable","blockedbyclient","blockedbyresponse","connectionaborted","connectionclosed","connectionfailed","connectionrefused","connectionreset","internetdisconnected","namenotresolved","timedout","failed","_request","_contentPromise","_bodyLoadedPromise","_remoteAddress","remoteIPAddress","remotePort","_status","_statusText","statusText","_fromDiskCache","fromDiskCache","_fromServiceWorker","fromServiceWorker","_securityDetails","securityDetails","SecurityDetails","base64Encoded","normalizedURL","decodeURI","headerValue","securityPayload","_subjectName","_issuer","_validFrom","_validTo","_protocol","100","101","102","200","201","202","203","206","207","208","209","306","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","426","428","429","431","451","500","501","505","506","507","508","510","511","WebSocket","Server","Receiver","Sender","PerMessageDeflate","EventTarget","readyStates","protocolVersions","closeTimeout","address","protocols","readyState","CONNECTING","_binaryType","_closeFrameReceived","_closeFrameSent","_closeMessage","_closeTimer","_closeCode","_receiver","_sender","_socket","protocolVersion","perMessageDeflate","createConnection","socketPath","isUnixSocket","isSecure","randomBytes","httpObj","tlsConnect","netConnect","Sec-WebSocket-Version","Sec-WebSocket-Key","Upgrade","offer","Origin","_req","handshakeTimeout","abortHandshake","CLOSING","emitClose","serverProt","protList","protError","accept","setSocket","CLOSED","OPEN","binaryType","bufferedAmount","bufferSize","_bufferedBytes","receiver","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setNoDelay","socketOnClose","socketOnData","socketOnEnd","socketOnError","removeAllListeners","ping","pong","compress","websocket","reason","receiverOnFinish","_listener","removeEventListener","tokenChars","elem","paramName","mustUnescape","isEscaping","inQuotes","SyntaxError","validation","GET_INFO","GET_PAYLOAD_LENGTH_16","GET_PAYLOAD_LENGTH_64","GET_MASK","GET_DATA","INFLATING","ErrorCtor","toBuffer","fragments","messageLength","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","startLoop","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","consume","compressed","haveLength","readUInt16BE","readUInt32BE","pow","controlMessage","decompress","dataMessage","byteOffset","isValidUTF8","isValidStatusCode","Validation","_firstFragment","_deflating","_queue","readOnly","payloadLength","opcode","rsv1","writeUInt16BE","writeUInt32BE","enqueue","doClose","sendFrame","ArrayBuffer","isView","viewToBuffer","doPing","doPong","dequeue","view","express","puppeteer","geolocation_1","CLIENT_PATH","__dirname","createApp","app","__awaiter","launch","_a","sent","newPage","geolocation","findGeolocation","goto","listen","bodyParser","Router","application","json","static","urlencoded","parsers","createParserGetter","parserName","parser","loadParser","_urlencoded","_json","addSuffix","fileLocation","isNative","getScriptNameOrSourceURL","callSiteFileLocation","isConstructor","isMethodCall","isToplevel","reviver","shouldParse","typeChecker","FIRST_CHAR_REGEXP","normalizeJsonSyntaxError","createStrictSyntaxError","getCharset","getOwnPropertyNames","ctor","superCtor","super_","TempCtor","storage","DEBUG","lastC","removeItem","window","documentElement","style","WebkitAppearance","firebug","table","navigator","chrome","localStorage","localstorage","tty","inspectOpts","isatty","fd","DEBUG_FD","guessHandleType","WriteStream","_type","_handle","unref","SyncWriteStream","autoClose","Socket","_isStdio","createWritableStdioStream","inspect","O","ICONV_ENCODING_MESSAGE_REGEXP","_decoder","received","invokeCallback","halt","onAborted","onEnd","PrependBOMWrapper","StripBOMWrapper","pass","InternalCodec","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","base64","_internal","InternalEncoder","InternalDecoder","prevStr","contBytes","accBytes","completeQuads","bufIdx","charCode","curByte","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","initialBytes","initialBytesLen","detectEncoding","asciiCharsLE","asciiCharsBE","utf16be","tmp","buf2","utf16","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","newBuf","idx1","idx2","10029","maccenteuro","808","ibm808","cp808","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","10000","10006","10007","10079","10081","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","20866","ibm878","cskoi8r","cp21866","21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","csmacintosh","437","737","775","850","852","855","856","857","858","860","861","862","863","864","865","866","869","874","922","1046","1124","1125","1129","1133","1161","1162","1163","1250","1251","1252","1253","1254","1255","1256","1257","1258","28591","28592","28593","28594","28595","28596","28597","28598","28599","28600","28601","28603","28604","28605","28606","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","ascii","tis620","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","NODE_START","UNASSIGNED_NODE","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","gb18030","thirdByteNodeIdx","thirdByteNode","fourthByteNodeIdx","fourthByteNode","secondByteNodeIdx","secondByteNode","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBuf","findIdx","mid","_getDecodeTrieNode","curAddr","writeTable","codeTrail","seq","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","mbCode","nextChar","resCode","subtable","uChars","gbChars","prevBufOffset","seqStart","curSeq","ptr","uCodeLead","shiftjis","¥","‾","csshiftjis","mskanji","sjis","windows31j","ms31j","xsjis","windows932","ms932","932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","936","cp936","gbk","xgbk","isoir58","€","chinese","windows949","ms949","949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","950","cp950","big5","big5hkscs","cnbig5","csbig5","xxbig5","IconvLiteEncoderStream","conv","IconvLiteDecoderStream","encodeStream","decodeStream","supportsStreams","_collect","collect","chunks","supportsNodeEncodingsExtension","extendNodeEncodings","nodeNativeEncodings","utf-8","ucs-2","utf-16le","isNativeEncoding","SlowBufferToString","SlowBufferWrite","swap","remaining","BufferIsEncoding","BufferByteLength","BufferToString","BufferWrite","_offset","_length","_encoding","ReadableSetEncoding","undoExtendNodeEncodings","stuff","cleanups","ee","thunk","paramRegExp","textRegExp","tokenRegExp","qescRegExp","quoteRegExp","subtypeNameRegExp","typeNameRegExp","typeRegExp","splitType","defaultCharset","extended","parameterLimit","paramCount","parameterCount","arrayLimit","extendedparser","maxKeys","simpleparser","mod","utils","arrayPrefixGenerators","brackets","indices","repeat","toISO","toISOString","encodeValuesOnly","serializeDate","skipNulls","strictNullHandling","generateArrayPrefix","allowDots","objKeys","arrayFormat","joined","addQueryPrefix","parseKeys","givenKey","child","segment","chain","leaf","cleanRoot","parseArrays","parseObject","ignoreQueryPrefix","tempObj","cleanStr","bracketEqualsPos","parseValues","newObj","redefine","finalhandler","middleware","View","logerror","engines","settings","defaultConfiguration","locals","mountpath","lazyrouter","_router","fns","engine","setting","disabled","del","render","renderOptions","_locals","defaultEngine","dirs","tryRender","server","createServer","DOUBLE_SPACE_REGEXP","NEWLINE_REGEXP","getErrorStatusCode","getResponseStatusCode","getErrorHeaders","getErrorMessage","getResourceName","statusMessage","pathtoRegexp","extraOffset","keysOffset","MATCHING_GROUP_REGEXP","optional","capture","escapeCount","__express","tryStat","roots","isFile","webpackEmptyContext","ReadStream","onOpenClose","destroyReadStream","define","DEBUG_MIME","warn","_loading","readFileSync","fields","default_type","mimeType","proxyAddrs","remoteAddress","expandIPv6","ipv4Part","ipv4Regexes","ipv6Part","ipv6Regexes","matchCIDR","second","partSize","cidrBits","subnetMatch","rangeList","defaultName","rangeName","IPv4","octets","octet","toNormalizedString","toByteArray","other","cidrRange","ref","SpecialRanges","unspecified","broadcast","multicast","linkLocal","carrierGradeNat","private","reserved","IPv6","cidr","stop","zeros","zerotable","128","192","224","240","248","252","254","255","fourOctet","longValue","parseIntAuto","reverse","zoneId","uniqueLocal","ipv4Mapped","rfc6145","rfc6052","6to4","teredo","32768","49152","57344","61440","63488","64512","65024","65280","65408","65472","65504","65520","65528","65532","65534","65535","zoneIndex","native","transitional","colonCount","lastColon","replacement","replacementCount","isIPv4","isIPv6","error1","isValidFourPartDecimal","parseCIDR","maskLength","subnetMaskFromPrefixLength","filledOctetCount","broadcastAddressFromCIDR","ipInterfaceOctets","subnetMaskOctets","networkAddressFromCIDR","fromByteArray","accepts","isIP","IncomingMessage","defineGetter","lc","referrer","referer","acceptsEncodings","acceptsEncoding","acceptsCharsets","acceptsCharset","acceptsLanguages","languages","acceptsLanguage","defaultValue","encrypted","subdomains","Negotiator","Accepts","negotiator","extToMime","validMime","mediaTypes","mimes","encodings_","charsets_","lang","langs","language","languages_","loadModule","moduleName","available","preferredCharsets","preferredEncodings","preferredLanguages","mediaType","preferredMediaTypes","preferredCharset","preferredEncoding","preferredLanguage","preferredMediaType","simpleCharsetRegExp","parseCharset","q","specify","spec","provided","parseAcceptCharset","isQuality","compareSpecs","getFullCharset","priorities","priority","getCharsetPriority","simpleEncodingRegExp","parseEncoding","hasIdentity","minQuality","parseAcceptEncoding","getFullEncoding","getEncodingPriority","simpleLanguageRegExp","parseLanguage","full","langauge","parseAcceptLanguage","getFullLanguage","getLanguagePriority","simpleMediaTypeRegExp","parseAccept","quoteCount","splitMediaTypes","parseMediaType","kvps","splitParameters","splitKeyValuePair","pair","getFullType","getMediaTypePriority","cookie","vary","ServerResponse","charsetRegExp","sendfile","streaming","onaborted","replacer","spaces","links","rel","etagFn","generateETag","jsonp","sendStatus","download","Content-Disposition","fullPath","ct","attachment","append","clearCookie","expires","secret","signed","now","serialize","u","sha1","createHmac","unsign","opt","pairs","pairSplitRegExp","dec","eq_idx","tryDecode","fieldContentRegExp","domain","httpOnly","sameSite","FIELD_NAME_REGEXP","fld","fallthrough","onDirectory","forwardError","asyncawait","Puppeteer","packageJson","preferredRevision","chromium_revision","isPuppeteerCore","Launcher","BrowserFetcher","_projectRoot","_launcher","defaultArgs","setItem","getItem","w","msAbs","isPlural","fmtLong","colorCode","hideDate","getDate","flag","argv","terminatorPos","removeFolder","childProcess","Browser","readline","WebSocketTransport","PipeTransport","mkdtempAsync","mkdtemp","removeFolderAsync","CHROME_PROFILE_PATH","tmpdir","DEFAULT_ARGS","_preferredRevision","_isPuppeteerCore","ignoreDefaultArgs","dumpio","handleSIGINT","handleSIGTERM","handleSIGHUP","ignoreHTTPSErrors","defaultViewport","slowMo","chromeArguments","temporaryUserDataDir","argument","chromeExecutable","missingText","_resolveExecutablePath","usePipe","stdio","chromeProcess","spawn","detached","chromeClosed","waitForChromeToClose","killChrome","exit","gracefullyCloseChrome","browserWSEndpoint","rl","createInterface","input","onClose","timeoutId","waitForWSEndpoint","targets","initialPageCallback","initialPagePromise","ensureInitialPage","pid","killed","execSync","kill","devtools","headless","userDataDir","browserContextIds","browserFetcher","pathModule","NODE_DEBUG","maybeCallback","backtrace","missingCallback","throwDeprecation","trace","rethrow","nextPartRe","splitRootRe","base","previous","seenLinks","knownHard","resolvedLink","linkTarget","dev","readlinkSync","LOOP","gotResolvedLink","gotStat","gotTarget","readlink","concatMap","balanced","isTop","expansions","pre","isNumericSequence","isAlphaSequence","isSequence","isOptions","post","escClose","parseCommaParts","postParts","embrace","N","numeric","incr","lte","gte","pad","isPadded","z","el","expansion","escSlash","escOpen","escComma","escPeriod","escapeBraces","unescapeBraces","random","maybeMatch","reg","begs","beg","left","right","ai","bi","newPattern","reqs","RES","cbs","makeres","fd_slicer","PassThrough","fromFd","defaultCallback","fstat","fromRandomAccessReader","createFromFd","reader","totalSize","MAX_SAFE_INTEGER","eocdrWithoutCommentSize","bufferReadStart","readAndAssertNoEof","readUInt32LE","eocdrBuffer","diskNumber","readUInt16LE","entryCount","centralDirectoryOffset","commentLength","expectedCommentLength","bufferToString","ZipFile","zip64EocdlBuffer","zip64EocdlOffset","zip64EocdrOffset","readUInt64LE","zip64EocdrBuffer","fileSize","emitError","readEntryCursor","entriesRead","isOpen","emittedError","emitErrorAndAutoClose","Entry","dosDateTimeToDate","time","position","bytesRead","AssertByteCountStream","byteCount","actualByteCount","expectedByteCount","RandomAccessReader","refCount","RefUnrefFilter","unreffedYet","fromBuffer","createFromBuffer","signature","versionNeededToExtract","generalPurposeBitFlag","compressionMethod","lastModFileTime","lastModFileDate","crc32","compressedSize","uncompressedSize","fileNameLength","extraFieldLength","fileCommentLength","internalFileAttributes","relativeOffsetOfLocalHeader","isUtf8","fileCommentStart","extraFieldBuffer","extraFields","headerId","dataSize","dataStart","dataEnd","dataBuffer","fileComment","zip64EiefBuffer","extraField","localFileHeaderEnd","fileDataStart","fileDataEnd","endpointStream","inflateFilter","checkerStream","getLastModDate","emptyStream","_readStreamForRange","refUnrefFilter","byteCounter","written","lower32","Pend","FdSlicer","pend","endOffset","bytesWritten","BufferSlicer","go","toRead","delta","bufferSlicer","pending","waiting","pendHold","pendGo","cbListener","wait","hold","_0777","mkdirP","made","xfs","mkdirSync","err0","err1","bufferFrom","U8","ConcatStream","shouldInferEncoding","inferEncoding","buff","firstBuffer","arrayConcat","strings","isBufferish","stringConcat","bufs","bufferConcat","u8","u8Concat","subarray","READABLE_STREAM","Constructor","_classCallCheck","custom","isModern","fromArrayBuffer","fromString","ophop","defineProp","MAX_ARRAY_LENGTH","ECMAScript","Class","HasProperty","HasOwnProperty","IsCallable","ToInt32","ToUint32","LN2","configureProperties","getOwnPropNames","desc","__defineGetter__","__defineSetter__","as_signed","bits","as_unsigned","packI8","unpackI8","packU8","unpackU8","packU8Clamped","packI16","unpackI16","packU16","unpackU16","packI32","unpackI32","packU32","unpackU32","packIEEE754","ebits","fbits","bias","roundToEven","unpackIEEE754","unpackF64","packF64","unpackF32","packF32","_bytes","ArrayBufferView","makeConstructor","bytesPerElement","pack","unpack","sequence","BYTES_PER_ELEMENT","_setter","_getter","makeArrayAccessor","makeArrayAccessors","_pack","_unpack","clamp","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","u16array","IS_BIG_ENDIAN","DataView","makeGetter","arrayType","littleEndian","uint8Array","makeSetter","typeArray","byteArray","getUint8","getInt8","getUint16","getInt16","getUint32","getInt32","getFloat32","getFloat64","setUint8","setInt8","setUint16","setInt16","setUint32","setInt32","setFloat32","setFloat64","_opts","_promisifiedCallback","addRequest","ownOpts","_defaultAgent","_last","shouldKeepAlive","timedOut","timeoutMs","freeSocket","_hadError","callbackError","ES6Promise","returnMultipleArguments","multiArgs","thisArg","_len2","_key2","globalObject","P","factory","vertxNext","customSchedulerFn","asap","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","isWorker","importScripts","MessageChannel","useSetTimeout","globalSetTimeout","channel","iterations","onFulfillment","onRejection","noop","PROMISE_ID","makePromise","_result","subscribe","resolve$1","createTextNode","characterData","port1","port2","postMessage","vertx","runOnLoop","runOnContext","attemptVertx","PENDING","FULFILLED","REJECTED","TRY_CATCH_ERROR","getThen","handleMaybeThenable","maybeThenable","then$$1","thenable","handleOwnThenable","sealed","fulfillmentHandler","rejectionHandler","tryThen","_label","handleForeignThenable","publishRejection","_onerror","publish","_subscribers","subscribers","settled","detail","hasCallback","succeeded","tryCatch","Enumerator","_instanceConstructor","_remaining","_enumerate","_eachEntry","resolve$$1","_then","_settledAt","Promise$1","_willSettleAt","enumerator","resolver","needsResolver","initializePromise","needsNew","finally","_setScheduler","scheduleFn","_setAsap","asapFn","_asap","polyfill","promiseToString","cast","_typeof","_console","Target","TaskQueue","contextIds","closeCallback","_ignoreHTTPSErrors","_defaultViewport","_screenshotTaskQueue","_closeCallback","_defaultContext","BrowserContext","_contexts","_targets","_targetCreated","_targetDestroyed","_targetInfoChanged","browserContextId","discover","createSession","_initializedPromise","TargetCreated","_initializedCallback","_closedCallback","TargetDestroyed","browserContext","previousURL","wasInitialized","_isInitialized","TargetChanged","existingTarget","targetPromise","check","waitWithTimeout","browserContexts","pages","_getVersion","product","_browser","_id","waitForTarget","permissions","webPermissionToProtocol","permission","protocolPermission","_createPageInContext","_disposeContext","Page","sessionFactory","screenshotTaskQueue","_targetInfo","_browserContext","_targetId","_sessionFactory","_pagePromise","_isClosedPromise","openerId","Dialog","EmulationManager","FrameManager","Keyboard","Mouse","Touchscreen","Tracing","Coverage","Worker","Accessibility","writeFileAsync","writeFile","frameTree","autoAttach","waitForDebuggerOnStart","override","_target","_keyboard","_mouse","_touchscreen","_accessibility","_networkManager","setFrameManager","_emulationManager","_tracing","_pageBindings","_coverage","_viewport","_workers","_createSession","worker","_addConsoleMessage","_handleException","WorkerCreated","WorkerDestroyed","FrameAttached","FrameDetached","FrameNavigated","DOMContentLoaded","Load","_onConsoleAPI","_onBindingCalled","_onDialog","_onCertificateError","_onTargetCrashed","_emitMetrics","_onLogEntryAdded","Close","longitude","latitude","accuracy","Console","ConsoleMessage","mainFrame","coverage","tracing","accessibility","frames","setRequestInterception","setOfflineMode","setDefaultNavigationTimeout","eventId","action","queryObjects","$eval","$$eval","$$","$x","urls","cookies","pageURL","startsWithHTTP","items","deleteCookie","addScriptTag","addStyleTag","puppeteerFunction","evaluationString","bindingName","me","authenticate","setExtraHTTPHeaders","setUserAgent","_buildMetricsObject","metrics","Metrics","metric","supportedMetrics","PageError","executionContextById","payload","textTokens","dialogType","Type","Alert","Confirm","Prompt","BeforeUnload","dialog","defaultPrompt","setContent","waitForNavigation","urlOrPredicate","waitForEvent","_go","history","currentIndex","entryId","media","needsReload","emulateViewport","reload","screenshotType","getType","fullPage","postTask","_screenshotTask","scale","contentSize","isMobile","deviceScaleFactor","isLandscape","screenOrientation","angle","mobile","shouldSetDefaultBackground","omitBackground","g","displayHeaderFooter","headerTemplate","footerTemplate","printBackground","landscape","pageRanges","preferCSSPageSize","paperWidth","paperHeight","PaperFormats","convertPrintParameterToInches","marginTop","top","marginLeft","marginBottom","bottom","marginRight","runBeforeUnload","hover","select","selectorOrFunctionOrTimeout","waitFor","waitForSelector","xpath","waitForXPath","waitForFunction","letter","legal","tabloid","ledger","a0","a1","a2","a3","a4","a5","a6","unitToPixels","px","in","cm","parameter","pixels","valueText","_text","_args","_types","getExtension","typeMap","force","hasPath","_map","_message","_handled","_defaultValue","promptText","_emulatingMobile","_hasTouch","hasTouch","reloadNeeded","readFileAsync","readFile","networkManager","_defaultNavigationTimeout","_frames","_contextIdToContext","_onFrameAttached","parentFrameId","_onFrameNavigated","_onFrameNavigatedWithinDocument","_onFrameDetached","_onFrameStoppedLoading","_onExecutionContextCreated","_onExecutionContextDestroyed","_onExecutionContextsCleared","_onLifecycleEvent","_handleFrameTree","assertNoLegacyNavigationOptions","waitUntil","watcher","LifecycleWatcher","ensureNewDocumentNavigation","navigate","timeoutOrTerminationPromise","newDocumentNavigationPromise","sameDocumentNavigationPromise","navigationResponse","LifecycleEvent","_onLoadingStopped","parentId","childFrames","_mainFrame","parentFrame","Frame","framePayload","isMainFrame","_removeFramesRecursively","_navigated","_navigatedWithinDocument","FrameNavigatedWithinDocument","_addExecutionContext","_removeExecutionContext","_detach","ExecutionContextCreated","ExecutionContextDestroyed","_parentFrame","_detached","_documentPromise","_contextPromise","_contextResolveCallback","_setDefaultContext","_waitTasks","_loaderId","_lifecycleEvents","_childFrames","waitTask","rerun","navigateFrame","waitForFrameNavigation","_document","retVal","doctype","XMLSerializer","serializeToString","outerHTML","lifecyclePromise","_name","script","createElement","rej","onload","appendChild","contents","addScriptContent","addStyleContent","nodeName","option","selected","multiple","dispatchEvent","Event","bubbles","_waitForSelectorOrXPath","polling","WaitTask","selectorOrXPath","isXPath","visible","waitForVisible","waitForHidden","FIRST_ORDERED_NODE_TYPE","singleNodeValue","TEXT_NODE","parentElement","getComputedStyle","isVisible","visibility","rect","getBoundingClientRect","hasVisibleBoundingBox","_navigationURL","terminate","predicateBody","_polling","_timeout","_predicateBody","_runCount","_resolve","_reject","_timeoutTimer","_terminated","_cleanup","runCount","success","waitForPredicatePageFunction","_runningTask","onRaf","requestAnimationFrame","pollRaf","mutations","childList","subtree","attributes","pollMutation","pollInterval","onTimeout","_expectedLifecycle","protocolEvent","puppeteerToProtocolLifecycle","_initialLoaderId","_navigationRequest","_eventListeners","_terminate","_checkLifecycleComplete","_sameDocumentNavigationPromise","_sameDocumentNavigationCompleteCallback","_lifecyclePromise","_lifecycleCallback","_newDocumentNavigationPromise","_newDocumentNavigationCompleteCallback","_timeoutPromise","_createTimeoutPromise","_terminationPromise","_terminationCallback","isNavigationRequest","errorMessage","_maximumTimer","_hasSameDocumentNavigation","checkLifecycle","expectedLifecycle","domcontentloaded","networkidle0","networkidle2","keyDefinitions","_modifiers","_pressedKeys","_keyDescriptionForString","autoRepeat","_modifierBit","modifiers","windowsVirtualKeyCode","keyCode","unmodifiedText","isKeypad","keyString","definition","shiftKey","shiftKeyCode","shiftText","sendCharacter","down","up","_x","_y","_button","steps","fromX","fromY","button","clickCount","touchPoints","1","2","3","4","5","6","7","8","9","Power","Eject","Abort","Help","Backspace","Tab","Numpad5","NumpadEnter","Enter","\r","\n","ShiftLeft","ShiftRight","ControlLeft","ControlRight","AltLeft","AltRight","Pause","CapsLock","Escape","Convert","NonConvert","Space","Numpad9","PageUp","Numpad3","PageDown","End","Numpad1","Home","Numpad7","ArrowLeft","Numpad4","Numpad8","ArrowUp","ArrowRight","Numpad6","Numpad2","ArrowDown","Select","Open","PrintScreen","Insert","Numpad0","Delete","NumpadDecimal","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyI","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","MetaLeft","MetaRight","ContextMenu","NumpadMultiply","NumpadAdd","NumpadSubtract","NumpadDivide","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","NumLock","ScrollLock","AudioVolumeMute","AudioVolumeDown","AudioVolumeUp","MediaTrackNext","MediaTrackPrevious","MediaStop","MediaPlayPause","Semicolon","Equal","NumpadEqual","Comma","Minus","Period","Slash","Backquote","BracketLeft","Backslash","BracketRight","Quote","AltGraph","Props","Cancel","Clear","Shift","Control","Alt","Accept","ModeChange"," ","Print","Execute","\u0000","Meta","-","/",";","=",",",".","`","[","\\","]","'","Attn","CrSel","ExSel","EraseEof","Play","ZoomOut",")","#","%","^","&","(","A","B","C","D","E","F","G","H","I","J","K","L","M","Q","R","S","T","U","V","W","X","Y","Z",":","<",">","~","{","|","}","\"","openAsync","writeAsync","closeAsync","_recording","_path","defaultCategories","screenshots","categories","transferMode","contentPromise","_readStream","eof","resultBuffer","_jsCoverage","JSCoverage","_cssCoverage","CSSCoverage","_enabled","_scriptURLs","_scriptSources","_resetOnNavigation","resetOnNavigation","reportAnonymousScripts","_reportAnonymousScripts","_onScriptParsed","callCount","detailed","skip","scriptId","scriptSource","profileResponse","flattenRanges","func","functions","convertToDisjointRanges","_stylesheetURLs","_stylesheetSources","_onStyleSheet","sourceURL","styleSheetId","ruleTrackingResponse","styleSheetIdToCoverage","ruleUsage","startOffset","used","nestedRanges","points","aLength","bLength","hitCountStack","lastOffset","lastResult","consoleAPICalled","exceptionThrown","jsHandleFactory","_executionContextPromise","_executionContextCallback","interestingOnly","nodes","AXNode","createTree","serializeTree","interestingNodes","collectInterestingNodes","collection","insideControl","isInteresting","isLeafNode","isControl","_children","whitelistedNodes","serializedNode","_payload","_richlyEditable","_editable","_focusable","_expanded","_role","role","_cachedHasFocusableChild","_hasFocusableChild","_isPlainTextField","_isTextOnlyObject","userStringProperties","userStringProperty","booleanProperties","booleanProperty","tristateProperties","tristateProperty","numericalProperties","numericalProperty","tokenProperties","tokenProperty","payloads","nodeById","nodeId","childId","childIds","_chain","task","_ws","Queue","jobs","_done","_run","methodResult","job","onDone","MessageEvent","CloseEvent","wasClean","OpenEvent","ErrorEvent","onMessage","onError","onOpen","Content-type","Content-Length","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","writeHead","Content-Type","_removeListeners","addListeners","listening","handleUpgrade","clients","shouldHandle","authorized","verified","completeUpgrade","pipeWrite","pipeRead","_pipeWrite","_pendingMessage","_dispatch","MongoError","ReadPreference","formatSortValue","sortDirection","formattedOrderClause","sortValue","orderBy","writeConcernKeys","emitDeprecationWarning","emitWarning","defaultMsgHandler","filterOptions","mergeOptions","translateOptions","translations","sslCA","sslCRL","sslValidate","sslKey","sslCert","sslPass","socketTimeoutMS","connectTimeoutMS","replicaSet","rs_name","secondaryAcceptableLatencyMS","connectWithNoPrimary","acceptableLatencyMS","shallowClone","getSingleProperty","checkCollectionName","collectionName","toError","errmsg","errMessage","driver","parseIndexOptions","fieldOrSpec","fieldHash","indexes","normalizeHintField","hint","finalHint","handleCallback","value1","value2","decorateCommand","command","exclude","debugOptions","debugFields","finaloptions","MAX_JS_INT","mergeOptionsAndWriteConcern","targetOptions","sourceOptions","mergeWriteConcern","translateReadPreference","readPreference","tags","maxStalenessSeconds","executeOperation","topology","operation","promiseLibrary","opOptions","owner","resultMutator","skipSessions","hasSessionSupport","startSession","optionsIndex","hasEnded","makeExecuteCallback","returnsCursor","endSession","applyRetryableWrites","retryWrites","applyWriteConcern","sources","coll","inTransaction","writeConcern","fsync","wtimeout","resolveReadPreference","defaultReadPreference","transaction","isPromiseLike","maybePromise","decorateWithCollation","capabilities","collation","commandsTakeCollation","coreTopology","decorateWithReadConcern","readConcern","deprecateOptions","config","msgHandler","optionsWarned","deprecated","deprecatedOptions","deprecatedOption","getLogger","logger","BSON","require_optional","EJSON","retrieveEJSON","BSONNative","MongoNetworkError","MongoParseError","MongoTimeoutError","MongoWriteConcernError","mongoErrorContextSymbol","ReplSet","Mongos","Logger","Cursor","Sessions","Query","defaultAuthProviders","MongoCR","X509","Plain","GSSAPI","ScramSHA1","ScramSHA256","parseConnectionString","Code","createIndexDb","createIndex","ensureIndexDb","ensureIndex","executeCommand","executeDbAdminCommand","indexInformationDb","indexInformation","Long","groupFunction","buildCountCommand","collectionOrCursor","maxTimeMS","cmd","numberOfRetries","deleteCallback","deletedCount","dropIndex","indexName","dropIndexes","findAndModify","queryObject","new","remove","upsert","projection","arrayFilters","serializeFunctions","checkKeys","finalOptions","bypassDocumentValidation","primary","insertDocuments","docs","keepGoing","prepareDocs","insert","writeErrors","ops","optionsOp","listCollections","toArray","collections","forceServerObjectId","pkFactory","createPk","processScope","scope","_bsontype","new_scope","removeDocuments","op","single","updateCallback","modifiedCount","nModified","upsertedId","upserted","upsertedCount","matchedCount","updateDocuments","multi","bulkWrite","operations","ignoreUndefined","bulk","initializeOrderedBulkOp","initializeUnorderedBulkOp","raw","writeCon","execute","insertedCount","nInserted","nMatched","nRemoved","getUpsertedIds","upsertedIds","insertedIds","inserted","getInsertedIds","checkForAtomicOperators","countDocuments","pipeline","$match","$skip","$limit","$group","$sum","aggregate","createIndexes","indexSpecs","PRIMARY","deleteMany","deleteOne","distinct","findAndRemove","findOne","batchSize","findOneAndDelete","findOneAndReplace","returnOriginal","findOneAndUpdate","geoHaystackSearch","commandObject","geoSearch","near","group","condition","initial","finalize","reduceFunction","$reduce","cond","$keyf","retval","groupfn","indexExists","insertOne","insertedId","isCapped","capped","mapReduce","mapCommandHash","mapreduce","exclusionList","timeMillis","counts","timing","parallelCollectionScan","numCursors","explicitlyIgnoreSession","cursors","rawId","cursor","cursorId","fromNumber","reIndex","rename","newName","Collection","renameCollection","dbName","dropTarget","admin","replaceOne","collStats","updateMany","updateOne","$err","errorLabels","RETRYABLE_ERROR_CODES","isRetryableError","CONSTANTS","illegalCommandFields","serverConfig","isDestroyed","indexParameters","keysToOmit","optionName","createIndexUsingCreateIndexes","createCreateIndexCommand","databaseName","SYSTEM_INDEX_COLLECTION","authdb","isDebug","listIndexes","processResults","finalUnique","removeKeys","addUser","Db","digestPassword","customData","roles","commandOptions","writeCommand","lastIsMaster","maxWireVersion","createUser","userPassword","md5","pwd","user","executeAuthCreateUserCommand","SYSTEM_USER_COLLECTION","findOptions","$set","nameOnly","documents","createCollection","listCollectionOptions","setReadPreference","dropCollection","dropDatabase","index_name","finalCode","finalParameters","listCollectionsTransforms","matching","profilingInfo","profilingLevel","profile","was","removeUser","dropUser","executeAuthRemoveUserCommand","setProfilingLevel","validateDatabaseName","invalidChars","emitSDAMEvent","driverVersion","nodejsversion","endianness","architecture","clone","getPreviousDescription","serverDescription","arbiters","hosts","passives","emitServerDescriptionChanged","topologyId","previousDescription","newDescription","getPreviousTopologyDescription","topologyDescription","topologyType","servers","getTopologyType","ismaster","secondary","arbiterOnly","inquireServerState","connectionId","monitoring","durationMS","latencyMS","failure","reply","currentIsmaster","currentType","changedIsMaster","inTopology","isMasterLatencyMS","inquireServerStateTimeout","haInterval","SessionMixins","endSessions","sessions","primaryPreferred","resolveClusterTime","$clusterTime","clusterTime","greaterThan","emitTopologyDescriptionChanged","cloneOptions","createClientInfo","clientInfo","appname","createCompressionInfo","compression","compressors","compressor","prevServer","currServer","Interval","timer","isRunning","setInterval","clearInterval","Timeout","_called","isRetryableWritesSupported","logicalSessionTimeoutMinutes","retrieveBSON","opcodes","bson","numberToSkip","numberToReturn","returnFieldSelector","getRequestId","pre32Limit","maxBsonSize","tailable","slaveOk","oplogReplay","noCursorTimeout","awaitData","exhaust","incRequestId","nextRequestId","toBin","OP_QUERY","GetMore","_buffer","OP_GETMORE","getLowBits","getHighBits","KillCursor","cursorIds","OP_KILL_CURSORS","msgHeader","msgBody","promoteLongs","promoteValues","promoteBuffers","responseTo","opCode","fromCompressed","responseFlags","readInt32LE","startingFrom","numberReturned","cursorNotFound","queryFailure","shardConfigStale","awaitCapable","isParsed","bsonSize","documentsReturnedIn","fieldsAsRaw","deserialize","noSnappyWarning","setProperty","getProperty","propName","fieldName","fObj","tObj","optionalBSON","retrieveSnappy","snappy","uncompress","compressSync","uncompressSync","requireOptional","noEJSONError","uuidV4","calculateDurationInMs","started","hrtime","relayEvents","events","collationNotSupported","setBSONModule","retrieveKerberos","kerberos","CoreCursor","each","hasNext","topologyOptions","INIT","tailableRetryInterval","currentNumberOfRetries","streamOptions","currentDoc","addCursorFlag","setCursorBatchSize","_next","_initImplicitSession","cursorState","_endSession","isDead","maxScan","returnKey","showRecordId","showDiskLoc","snapshot","setCursorOption","addQueryModifier","maxAwaitTimeMS","maxTimeMs","project","keyOrList","direction","order","$meta","setCursorLimit","setCursorSkip","rewind","internalCallback","applySkipLimit","skipKillCursors","completeClose","transforms","oldTransform","isClosed","transformStream","explain","firstDot","database","GET_MORE","getReadPreference","MESSAGE_HEADER_SIZE","OP_REPLY","OP_UPDATE","OP_INSERT","OP_DELETE","OP_COMPRESSED","parseHeader","minWireVersion","PRIMARY_PREFERRED","SECONDARY","SECONDARY_PREFERRED","NEAREST","VALID_MODES","needSlaveOk","equals","toJSON","secondaryPreferred","nearest","classFilters","filteredClasses","currentLogger","loggerLevel","dateTime","meta","isWarn","isInfo","setCurrentLogger","setLevel","_level","low_","high_","toInt","toNumber","TWO_PWR_32_DBL_","getLowBitsUnsigned","opt_radix","radix","isZero","isNegative","MIN_VALUE","radixLong","div","rem","multiply","subtract","radixToPower","remDiv","digits","getNumBitsAbs","bit","isOdd","notEquals","lessThan","compare","lessThanOrEqual","greaterThanOrEqual","thisNeg","otherNeg","not","ONE","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","fromBits","ZERO","TWO_PWR_24_","b00","NEG_ONE","approx","shiftRight","shiftLeft","log2","approxRes","approxRem","modulo","and","or","xor","numBits","shiftRightUnsigned","fromInt","cachedObj","INT_CACHE_","TWO_PWR_63_DBL_","MAX_VALUE","lowBits","highBits","power","TWO_PWR_16_DBL_","TWO_PWR_24_DBL_","TWO_PWR_31_DBL_","TWO_PWR_48_DBL_","TWO_PWR_64_DBL_","ObjectID","AggregationCursor","CommandCursor","unordered","ChangeStream","mergeKeys","internalHint","collectionHint","DEPRECATED_FIND_OPTIONS","object_size","newOptions","findCommand","awaitdata","insertMany","finalResult","getLastOp","opTime","mapInsertManyResults","removeOne","removeMany","drop","dropAllIndexes","cursorFactory","hasListIndexesCommand","estimatedDocumentCount","queryOption","optionsOption","allowDiskUse","ignoreReadConcern","$out","commandsTakeWriteConcern","watch","legalOptionNames","dbCache","bufferMaxEntries","parentDb","nativeParser","native_parser","noListener","collectionKeys","dbStats","hasListCollectionsCommand","$and","SYSTEM_NAMESPACE_COLLECTION","fromCollection","toCollection","new_collection","addChild","SYSTEM_PROFILE_COLLECTION","SYSTEM_COMMAND_COLLECTION","SYSTEM_JS_COLLECTION","ClientSession","Store","storeOptions","storedOps","opType","addObjectAndMethod","primaryOptions","secondaryOptions","executePrimary","executeSecondary","ServerCapabilities","setup_get_property","aggregationCursor","writeCommands","textSearch","authCommands","maxNumberOfDocsInBatch","maxWriteBatchSize","TopologyBase","setMaxListeners","clientOptions","sessionPool","sCapabilities","disconnectHandler","store","selectServer","logout","connections","forceClosed","endAllPooledSessions","parserType","MinKey","Binary","subType","sub_type","BSON_BINARY_SUBTYPE_DEFAULT","BUFFER_SIZE","writeStringToArray","put","byte_value","decoded_byte","asRaw","newBuffer","convertArraytoUtf8BinaryString","startIndex","endIndex","SUBTYPE_DEFAULT","SUBTYPE_FUNCTION","SUBTYPE_BYTE_ARRAY","SUBTYPE_UUID_OLD","SUBTYPE_UUID","SUBTYPE_MD5","SUBTYPE_USER_DEFINED","loop","bufferedCount","nextObject","cursorSkip","cursorLimit","isNotified","fetchDocs","readBufferedDocuments","Double","valueOf","Timestamp","radixTimestamp","MACHINE_ID","checkForHexRegExp","hasBufferType","generate","cacheHexString","__id","createFromHexString","toHexString","hexString","_Buffer","convertToHex","get_inc","getInc","inc","otherId","getTimestamp","setTime","createFromTime","decodeLookup","ObjectId","BSONRegExp","PARSE_STRING_REGEXP","PARSE_INF_REGEXP","PARSE_NAN_REGEXP","EXPONENT_BIAS","NAN_BUFFER","INF_NEGATIVE_BUFFER","INF_POSITIVE_BUFFER","EXPONENT_REGEX","isDigit","divideu128","DIVISOR","_rem","quotient","Decimal128","biasedExponent","sawRadix","foundNonZero","significantDigits","nDigitsRead","nDigits","radixPosition","firstNonZero","nDigitsStored","digitsInsert","firstDigit","lastDigit","exponent","significandHigh","significandLow","stringMatch","infMatch","nanMatch","digitsString","endOfString","roundDigit","roundBit","dIdx","uhleft","uhright","significand","leftHigh","leftLow","rightHigh","rightLow","productHigh","productMid","productMid2","productLow","multiply64x2","midh","midl","combination","biased_exponent","significand_digits","scientific_exponent","significand_msb","is_zero","significand128","least_digits","radix_position","$numberDecimal","MaxKey","DBRef","oid","$ref","$id","$db","Snappy","compressorIDs","uncompressibleCommands","dataToBeCompressed","agreedCompressor","zlibOptions","zlibCompressionLevel","deflate","compressorID","compressedData","SSPI","mongocr","x509","plain","gssapi","sspi","scram-sha-1","scram-sha-256","saslprep","AuthSession","ScramSHA","cryptoMethod","authStore","HMAC","_hiCache","_hiCacheCount","_hiCachePurge","hiLengthMap","sha256","numberOfValidConnections","errorObject","processedPassword","mechanism","saslprepFn","passwordDigest","executeScram","nonce","firstBare","saslStart","autoAuthorize","handleError","handleEnd","_err","_r","_count","_numberOfValidConnections","addAuthSession","dict","valueParts","parsePayload","salt","rnonce","withoutProof","saltedPassword","saltedData","pbkdf2Sync","HI","clientKey","storedKey","authMessage","clientSignature","clientFinal","saslContinue","conversationId","_execute","reauthenticate","pool","cursorIndex","dead","notified","currentLimit","reconnect","lastCursorId","cursorBatchSize","_find","queryOptions","virtual","operationTime","firstBatch","_getmore","wireProtocolHandler","getMore","isKilled","number","unreadDocumentsLength","elements","killCursor","isConnectionDead","_setCursorNotifiedImpl","setCursorDeadAndNotified","setCursorNotified","nextFunction","isCursorKilled","isCursorDeadButNotkilled","isCursorDeadAndKilled","initializeCursor","isGetMore","connectOp","validOptions","MongoClient","authSource","returnNonCachedInstance","explicit","withSession","cleanupHandler","ReferenceError","throw","WRITE_CONCERN_ERROR","INSERT","UPDATE","REMOVE","Int32","BulkWriteResult","bulkResult","nUpserted","lastOp","writeConcernErrors","WriteConcernError","WriteError","mergeBatchResults","batch","writeError","lastOpTS","lastOpT","opTimeTS","opTimeT","batchType","originalZeroIndex","writeConcernError","BulkWriteError","FindOperators","bulkOperation","updateDocument","currentOp","addToOperationsList","BulkOperationBase","isOrdered","isMaster","maxBatchSizeBytes","maxBsonObjectSize","currentBatch","currentBatchSize","currentBatchSizeBytes","currentInsertBatch","currentUpdateBatch","currentRemoveBatch","batches","executed","_writeConcern","executedError","emptyBatchError","operationId","resultHandler","writeResult","getWriteConcernError","Batch","originalIndexes","sizeBytes","handleMongoWriteConcernError","wrappedWriteConcernError","LegacyOp","INVALID_BSON_ERROR","MULTIPLE_ERROR","UNKNOWN_ERROR","CServer","auto_reconnect","autoReconnect","clonedOptions","poolSize","monitorCommands","socketOptions","connectErrorHandler","connectHandlers","errorHandler","destroyHandler","relay","_keys","_values","resolveFrom","semver","find_package_json","currentModule","peerOptionalDependencies","find_package_json_with_name","expectedVersions","moduleEntry","moduleEntryFile","satisfies","Pool","TwoSixWireProtocolSupport","ThreeTwoWireProtocolSupport","BasicCursor","sdam","serverAccounting","monitoringInterval","lastIsMasterMS","monitoringProcessId","initialConnect","lastUpdateTime","lastWriteDate","staleness","enableServerAccounting","disableServerAccounting","eventHandler","authArray","authMechanism","saslSupportedMechs","getSaslSupportedMechs","socketTimeout","connectionTimeout","serverError","extractIsMasterError","latestSupportedVersion","monitoringProcess","basicWriteValidations","isDisconnected","getDescription","setName","basicReadValidations","wireProtocolCommand","writeOptions","fullResult","getDefaultAuthMechanism","allConnections","_destroyed","emitDestroy","TxnState","stateMachine","NO_TRANSACTION","STARTING_TRANSACTION","TRANSACTION_IN_PROGRESS","TRANSACTION_COMMITTED","TRANSACTION_COMMITTED_EMPTY","TRANSACTION_ABORTED","Transaction","isActive","nextState","nextStates","isResumableError","cursorOptionNames","CHANGE_DOMAIN_TYPES","COLLECTION","DATABASE","CLUSTER","createChangeStreamCursor","resumeToken","resumeAfter","changeStreamCursor","buildChangeStreamAggregationCommand","change","processNewChange","changeStream","eventEmitter","pipeDestinations","cursorStream","pipeDestination","getResumeToken","getStartAtOperationTime","startAtOperationTime","cursorNamespace","changeStreamStageOptions","fullDocument","cursorOptions","allChangesForCluster","changeStreamPipeline","$changeStream","SELECTION_TIMEOUT","waitForTopologyConnected","hrElapsed","attemptingResume","noResumeTokenError","changeDomain","destination","methodsToInherit","replSetGetStatus","serverStatus","validateCollection","validate","ServerSessionPool","monitoringEvents","ignoreOptionNames","legacyOptionNames","legacyParse","validOptionNames","mongoClient","assignTopology","connectCallback","read_preference","connectHandler","connectWithUrl","parseFn","useNewUrlParser","transformUrlOptions","legacyTransformUrlOptions","warningMessage","_object","_finalOptions","createUnifiedOptions","db_options","createTopology","collectedEvents","object1","object2","collectEvents","clearAllEvents","replayEvents","handleConnectCallback","eventSet","v1","v2","translationOptions","createServers","newTopology","childOptions","noMerge","LEGACY_OPTIONS_MAP","camelCaseName","defaultDatabase","maxpoolsize","readconcernlevel","wtimeoutms","readPreferenceTags","read_preference_tags","serverObj","domain_socket","_validOptions","validateOptions","BSON_INT32_MAX","BSON_INT32_MIN","BSON_INT64_MAX","BSON_INT64_MIN","JS_INT_MAX","JS_INT_MIN","normalizedFunctionString","connectionAccountingSpy","connectionAccounting","messageHandler","maxBsonMessageSize","family","keepAlive","keepAliveInitialDelay","noDelay","domainSocket","singleBufferSerializtion","serializationFunction","ca","crl","cert","passphrase","ciphers","ecdhCurve","ssl","checkServerIdentity","responseOptions","flushing","hashedName","workItems","deleteConnection","setSocketTimeout","resetSocketTimeout","enableConnectionAccounting","spy","disableConnectionAccounting","timeoutHandler","closeHandler","hadError","emitMessageHandler","decompressedMsgBody","dataHandler","sizeOfMessage","remainingBytesToRead","emitBuffer","stubBuffer","bin","parseState","newData","newStubBuffer","legalSslSocketOptions","options1","options2","doConnect","_errorHandler","sslOptions","authorizationError","setKeepAlive","makeSSLConnection","connection_options","makeUnsecureConnection","addConnection","getnonce","hash_password","gssapiServiceName","GSSAPIInitialize","processes","MongoAuthProcess","mongo_auth_process","transition","MongoDBGSSAPIFirstStep","MongoDBGSSAPISecondStep","MongoDBGSSAPIThirdStep","drvier","geoNear","$geoNear","$project","$lookup","redact","$redact","$sort","unwind","$unwind","Admin","buildInfo","buildinfo","serverInfo","listDatabases","CMongos","seedlist","CReplSet","Chunk","mongoObject","mongoObjectFinal","chunkNumber","internalPosition","readSlice","readInto","getc","chunkCollection","buildMongoObject","files_id","fileId","DEFAULT_CHUNK_SIZE","geolocationCollection","ipInt","cidrToInt","ipFrom","$lt","ipTo","$gt","geolocationDocument","lat","lng","core","Instrumentation","GridStore","GridFSBucket","CoreServer","CoreConnection","instrument","instrumentation","serializer","calculateObjectSize","minInternalBufferSize","serializationIndex","finishedBuffer","serializeWithBufferAndIndex","finalBuffer","deserializeStream","numberOfDocuments","docStartIndex","BSON_DATA_NUMBER","BSON_DATA_STRING","BSON_DATA_OBJECT","BSON_DATA_ARRAY","BSON_DATA_BINARY","BSON_DATA_OID","BSON_DATA_BOOLEAN","BSON_DATA_DATE","BSON_DATA_NULL","BSON_DATA_REGEXP","BSON_DATA_CODE","BSON_DATA_SYMBOL","BSON_DATA_CODE_W_SCOPE","BSON_DATA_INT","BSON_DATA_TIMESTAMP","BSON_DATA_LONG","BSON_DATA_MIN_KEY","BSON_DATA_MAX_KEY","BSON_BINARY_SUBTYPE_FUNCTION","BSON_BINARY_SUBTYPE_BYTE_ARRAY","BSON_BINARY_SUBTYPE_UUID","BSON_BINARY_SUBTYPE_MD5","BSON_BINARY_SUBTYPE_USER_DEFINED","deserializeObject","evalFunctions","cacheFunctions","cacheFunctionsCrc32","bsonRegExp","arrayIndex","elementType","stringSize","readDoubleLE","objectSize","arrayOptions","stopIndex","BSON_DATA_UNDEFINED","JS_INT_MAX_LONG","JS_INT_MIN_LONG","BSON_DATA_DECIMAL128","decimal128","toObject","binarySize","totalBinarySize","regExpOptions","optionsArray","functionString","isolateEvalWithHash","functionCache","isolateEval","scopeObject","BSON_DATA_DBPOINTER","oidBuffer","writeIEEE754","ignoreKeys","serializeString","numberOfWrittenBytes","serializeNumber","longVal","serializeNull","serializeBoolean","dateInMilis","serializeRegExp","ignoreCase","multiline","serializeBSONRegExp","serializeMinMax","serializeObjectId","serializeBuffer","serializeObject","serializeInto","serializeDecimal128","serializeLong","serializeInt32","serializeDouble","serializeFunction","serializeCode","codeSize","serializeBinary","serializeSymbol","serializeDBRef","startingIndex","toBSON","readIEEE754","endian","mLen","nBytes","bBE","eLen","eMax","eBias","nBits","rt","calculateElement","ordered_values","Module","fromDir","fromFile","_resolveFilename","_nodeModulePaths","SemVer","SEMVER_SPEC_VERSION","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","COERCE","LONETILDE","TILDETRIM","TILDE","TILDELOOSE","LONECARET","CARETTRIM","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","HYPHENRANGE","HYPHENRANGELOOSE","STAR","loose","includePrerelease","major","minor","patch","prerelease","build","clean","compareMain","comparePre","compareIdentifiers","identifier","version1","version2","anum","bnum","gt","lt","neq","cmp","Comparator","comp","ANY","operator","rcompareIdentifiers","compareLoose","rcompare","rsort","Range","isX","hyphenReplace","$0","fM","fm","fp","fpr","fb","tM","tm","tp","tpr","testSet","allowed","outside","hilo","gtfn","ltefn","ltfn","ecomp","comparators","comparator","intersects","rangeTmp","sameDirectionIncreasing","sameDirectionDecreasing","sameSemVer","differentDirectionsInclusive","oppositeDirectionsLessThan","oppositeDirectionsGreaterThan","comps","hr","compRe","replaceCaret","replaceCarets","replaceTilde","replaceTildes","gtlt","xM","xm","xp","anyX","replaceXRange","replaceXRanges","replaceStars","parseComparator","thisComparators","thisComparator","rangeComparators","rangeComparator","toComparators","maxSatisfying","maxSV","rangeObj","minSatisfying","minSV","validRange","ltr","gtr","r1","r2","CommandResult","apm","DISCONNECTED","CONNECTED","DESTROYING","DESTROYED","minSize","passPhrase","reconnectInterval","reconnectTries","domainsEnabled","retriesLeft","reconnectId","availableConnections","inUseConnections","connectingConnections","executing","authProviders","reconnectConnection","authenticating","loggingout","nonAuthenticatedConnections","authenticatingTimestamp","numberOfConsecutiveTimeouts","connectionIndex","stateTransition","newState","legalStates","disconnected","connecting","connected","destroying","provider","authenticateAgainstProvider","providers","connectionFailureHandler","_connectionFailHandled","removeConnection","workItem","socketCount","attemptReconnect","_createConnection","_connectionFailureHandler","handlers","_connectHandler","moveConnectionBetween","handleOperationCallback","connectionCount","authenticateStragglers","immediateRelease","supports","causalConsistency","advanceOperationTime","responseDoc","waitForLogout","connectionsCount","authenticateLiveConnections","checkStatus","flushMonitoringOperations","serializeCommands","commands","thisCommand","originalCommandBuffer","hasUncompressibleCommands","concatenatedOriginalCommandBuffer","messageToBeCompressed","originalCommandOpCode","compressedMessage","writeInt32LE","compressionDetails","writeUInt8","noResponse","oldCb","sessionOptions","lsid","serverSession","lastUse","$query","CommandStartedEvent","CommandFailedEvent","CommandSucceededEvent","serializedCommands","tempErrorHandler","waitForAuth","totalConnections","foundValidConnection","writeSuccessful","SENSITIVE_COMMANDS","extractCommandName","generateConnectionId","maybeRedact","commandName","LEGACY_FIND_QUERY_MAP","$orderby","$hint","$comment","$maxScan","$max","$min","$returnKey","$showDiskLoc","$maxTimeMS","$snapshot","LEGACY_FIND_OPTIONS_MAP","returnFieldsSelector","OP_QUERY_KEYS","extractCommand","killCursors","$explain","extractReply","nextBatch","cursorsUnknown","commandObj","duration","SSIPAuthenticate","authProcess","authCommand","authCb","unassigned_code_points","commonly_mapped_to_nothing","non_ASCII_space_characters","prohibited_characters","bidirectional_r_al","bidirectional_l","mapped_input","getCodePoint","character","mapping2space","mapping2nothing","normalized_input","fromCodePoint","normalized_map","allowUnassigned","hasUnassigned","hasBidiRAL","hasBidiL","isFirstBidiRAL","isLastBidiRAL","codePointAt","bitfield","memory","codepoints","pager","Bitfield","pageOffset","pageSize","_trackUpdates","trackUpdates","_pageMask","getByte","setByte","allOffset","updated","Pager","updates","deduplicate","grow","nlen","twice","lastUpdate","noAllocate","cpy","truncate","WireProtocol","executeWrite","opsField","setupClassicFind","setupCommand","findCmd","finalCmd","$readPreference","decorateWithSessionsData","commitTransaction","abortTransaction","isTransactionCommand","isRetryableWrite","willRetryWrite","txnNumber","afterClusterTime","autocommit","startTransaction","commandns","killcursorCmd","killCursorCallback","getMoreCmd","sortObject","singleBatch","executeFindCommand","ReplSetState","UNREFERENCED","unreferenced","localThresholdMS","acceptableLatency","replicaSetState","heartbeatFrequencyMS","connectingServers","minHeartbeatFrequencyMS","connectOptions","authenticationContexts","initialConnectState","fullsetup","haTimeoutId","intervalIds","rexecuteOperations","hasPrimaryAndSecondary","hasPrimary","hasSecondary","connectNewServers","_handleEvent","_self","applyAuthenticationContexts","handleEvent","monitorServer","__host","_haInterval","intervalId","hrTime","lastWrite","updateServerMaxStaleness","pingServer","secondaryOnlyConnectionAllowed","topologyMonitor","unknownServers","intervalTime","executeReconnect","monitoringFrequencey","addServerToList","applyAuth","authContexts","customAuthContext","handleInitialConnectEvent","isConnecting","readPreferenceSecondary","shouldTriggerConnect","executeWriteOperation","retrying","incrementTransactionNumber","timeoutInterval","connectServers","allServers","secondaries","pickServer","getServers","RETRYABLE_WRITE_OPERATIONS","allArgs","currentContextIndex","errors","finalArguments","logoutServer","TopologyType","ServerType","ghosts","maxElectionId","maxSetVersion","replicasetDescription","hasPrimaryOrSecondary","ignoreArbiters","serverName","electionId","setVersion","removeType","removeFrom","isArbiter","inList","passive","isreplicaset","ismasterElectionId","compareObjectIds","ismasterSetVersion","currentElectionId","currentSetVersion","currentSetName","ismasterSetName","addToList","updateSecondariesMaxStaleness","allservers","pickNearest","pickNearestMaxStalenessSeconds","filterByTags","filteredServers","tagsArray","serverTag","maxStalenessMS","lowest","id1","id2","diffResult","connectingProxies","connectedProxies","disconnectedProxies","SERVER_EVENTS","destroyServer","moveServerFrom","removeProxyFrom","proxies","reconnectProxies","firstConnect","pickProxy","lowerBoundLatency","connectProxies","assertAlive","acquire","initialClusterTime","defaultTransactionOptions","endTransaction","txnState","commandHandler","transactionError","_reply","ServerSession","sessionTimeoutMinutes","hasTimedOut","dns","HOSTS_RX","matchesParentDomain","srvAddress","parentDomain","regex","srv","parseQueryStringItemValue","STRING_OPTIONS","numericValue","BOOLEAN_OPTIONS","AUTH_MECHANISMS","CASE_TRANSLATION","replicaset","connecttimeoutms","sockettimeoutms","minpoolsize","maxidletimems","waitqueuemultiple","waitqueuetimeoutms","readconcern","readpreference","maxstalenessseconds","readpreferencetags","authsource","authmechanism","authmechanismproperties","gssapiservicename","localthresholdms","serverselectiontimeoutms","serverselectiontryonce","heartbeatfrequencyms","retrywrites","uuidrepresentation","zlibcompressionlevel","applyConnectionStringOption","SERVICE_NAME","SERVICE_REALM","gssapiServiceRealm","CANONICALIZE_HOST_NAME","gssapiCanonicalizeHostName","caseTranslate","USERNAME_REQUIRED_MECHANISMS","PROTOCOL_MONGODB_SRV","SUPPORTED_PROTOCOLS","uri","cap","domainLength","lookupAddress","resolveSrv","addresses","resolveTxt","record","parseSrvConnectionString","dbAndQuery","parsedOptions","parsedQueryString","normalizedKey","parseQueryString","parseError","unescape","authorityParts","authParts","hostParsingError","parsedHost","applyAuthExpectations","authError","$MongoClient","$prototypeConnect","GET_MORE_NON_RESUMABLE_CODES","isGetMoreError","docType","UnorderedBulkOperation","bulkExecute","executeBatches","executeBatch","finalOptionsHandler","numberOfCommandsToExecute","handleWriteError","Bulk","OrderedBulkOperation","executeCommands","_callback","parseHandler","connection_part","auth_part","query_string_part","hostString","hostPart","urlOptions","authPart","serverOptions","dbOptions","replSetServersOptions","mongosOptions","server_options","rs_options","mongos_options","deduplicatedServers","_host","_port","ipv6match","hostPort","splitOpt","slave_ok","reconnectWait","read_secondary","safe","urlDecodeAuthPart","authMechanismProperties","tagObject","journal","connectionString","connectionStringOptions","defaultDb","deprecationFn","referenceBy","DEFAULT_ROOT_COLLECTION","_getWriteConcern","internalChunkSize","uploadDate","internalMd5","currentChunk","chunkIndexOptions","unique","_open","nthChunk","puts","finalString","GridStoreStream","_writeNormal","_q","writeChunk","chunkSize","deleteChunks","readlines","separator","finalLength","tell","seek","seekLocation","seekLocationFinal","IO_SEEK_SET","finalPosition","targetPosition","IO_SEEK_CUR","IO_SEEK_END","newChunkNumber","aliases","metadata","txtId","DEFAULT_CONTENT_TYPE","lastChunkNumber","writeBuffer","finalClose","previousChunkNumber","leftOverDataSize","firstChunkData","leftOverData","chunksToWrite","numberOfChunksToWrite","md5Command","filemd5","exist","fileIdObject","rootCollection","rootCollectionFinal","byId","readStatic","gridStore","readlinesStatic","finalSeperator","unlinkStatic","tc","_setWriteConcernHash","gs","endCalled","totalBytesToRead","seekPosition","_pipe","Emitter","GridFSBucketReadStream","GridFSBucketWriteStream","DEFAULT_GRIDFS_BUCKET_OPTIONS","bucketName","chunkSizeBytes","_chunksCollection","_filesCollection","checkedIndexes","calledOpenUploadStream","_delete","_rename","_drop","openUploadStream","openUploadStreamWithId","openDownloadStream","openDownloadStreamByName","expectedEnd","throwIfInitialized","__handleError","findOneOptions","bytesToSkip","handleStartOption","$gte","bytesToTrim","handleEndOption","waitForFile","bytesRemaining","expectedN","expectedLength","sliceStart","sliceEnd","ERROR_NAMESPACE_NOT_FOUND","bufToStore","disableMD5","streamEnd","outstandingRequests","errored","background","checkChunksIndex","hasFileIndex","indexOptions","getWriteOptions","checkIndexes","createChunkDoc","filesId","hasChunksIndex","checkDone","filesDoc","createFilesDoc","checkAborted","waitForIndexes","writeRemnant","remnant","inputBuf","inputBufRemaining","spaceRemaining","numToCopy","inputBufPos"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 108);\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"events\");","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {TimeoutError} = require('./Errors');\n\nconst debugError = require('debug')(`puppeteer:error`);\n/** @type {?Map<string, boolean>} */\nlet apiCoverage = null;\n\n/**\n * @param {!Object} classType\n * @param {string=} publicName\n */\nfunction traceAPICoverage(classType, publicName) {\n  if (!apiCoverage)\n    return;\n\n  let className = publicName || classType.prototype.constructor.name;\n  className = className.substring(0, 1).toLowerCase() + className.substring(1);\n  for (const methodName of Reflect.ownKeys(classType.prototype)) {\n    const method = Reflect.get(classType.prototype, methodName);\n    if (methodName === 'constructor' || typeof methodName !== 'string' || methodName.startsWith('_') || typeof method !== 'function')\n      continue;\n    apiCoverage.set(`${className}.${methodName}`, false);\n    Reflect.set(classType.prototype, methodName, function(...args) {\n      apiCoverage.set(`${className}.${methodName}`, true);\n      return method.call(this, ...args);\n    });\n  }\n\n  if (classType.Events) {\n    for (const event of Object.values(classType.Events))\n      apiCoverage.set(`${className}.emit(${JSON.stringify(event)})`, false);\n    const method = Reflect.get(classType.prototype, 'emit');\n    Reflect.set(classType.prototype, 'emit', function(event, ...args) {\n      if (this.listenerCount(event))\n        apiCoverage.set(`${className}.emit(${JSON.stringify(event)})`, true);\n      return method.call(this, event, ...args);\n    });\n  }\n}\n\nclass Helper {\n  /**\n   * @param {Function|string} fun\n   * @param {!Array<*>} args\n   * @return {string}\n   */\n  static evaluationString(fun, ...args) {\n    if (Helper.isString(fun)) {\n      assert(args.length === 0, 'Cannot evaluate a string with arguments');\n      return /** @type {string} */ (fun);\n    }\n    return `(${fun})(${args.map(serializeArgument).join(',')})`;\n\n    /**\n     * @param {*} arg\n     * @return {string}\n     */\n    function serializeArgument(arg) {\n      if (Object.is(arg, undefined))\n        return 'undefined';\n      return JSON.stringify(arg);\n    }\n  }\n\n  /**\n   * @param {!Protocol.Runtime.ExceptionDetails} exceptionDetails\n   * @return {string}\n   */\n  static getExceptionMessage(exceptionDetails) {\n    if (exceptionDetails.exception)\n      return exceptionDetails.exception.description || exceptionDetails.exception.value;\n    let message = exceptionDetails.text;\n    if (exceptionDetails.stackTrace) {\n      for (const callframe of exceptionDetails.stackTrace.callFrames) {\n        const location = callframe.url + ':' + callframe.lineNumber + ':' + callframe.columnNumber;\n        const functionName = callframe.functionName || '<anonymous>';\n        message += `\\n    at ${functionName} (${location})`;\n      }\n    }\n    return message;\n  }\n\n  /**\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   * @return {*}\n   */\n  static valueFromRemoteObject(remoteObject) {\n    assert(!remoteObject.objectId, 'Cannot extract value when objectId is given');\n    if (remoteObject.unserializableValue) {\n      switch (remoteObject.unserializableValue) {\n        case '-0':\n          return -0;\n        case 'NaN':\n          return NaN;\n        case 'Infinity':\n          return Infinity;\n        case '-Infinity':\n          return -Infinity;\n        default:\n          throw new Error('Unsupported unserializable value: ' + remoteObject.unserializableValue);\n      }\n    }\n    return remoteObject.value;\n  }\n\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   */\n  static async releaseObject(client, remoteObject) {\n    if (!remoteObject.objectId)\n      return;\n    await client.send('Runtime.releaseObject', {objectId: remoteObject.objectId}).catch(error => {\n      // Exceptions might happen in case of a page been navigated or closed.\n      // Swallow these since they are harmless and we don't leak anything in this case.\n      debugError(error);\n    });\n  }\n\n  /**\n   * @param {!Object} classType\n   * @param {string=} publicName\n   */\n  static tracePublicAPI(classType, publicName) {\n    for (const methodName of Reflect.ownKeys(classType.prototype)) {\n      const method = Reflect.get(classType.prototype, methodName);\n      if (methodName === 'constructor' || typeof methodName !== 'string' || methodName.startsWith('_') || typeof method !== 'function' || method.constructor.name !== 'AsyncFunction')\n        continue;\n      Reflect.set(classType.prototype, methodName, function(...args) {\n        const syncStack = new Error();\n        return method.call(this, ...args).catch(e => {\n          const stack = syncStack.stack.substring(syncStack.stack.indexOf('\\n') + 1);\n          const clientStack = stack.substring(stack.indexOf('\\n'));\n          if (!e.stack.includes(clientStack))\n            e.stack += '\\n  -- ASYNC --\\n' + stack;\n          throw e;\n        });\n      });\n    }\n\n    traceAPICoverage(classType, publicName);\n  }\n\n  /**\n   * @param {!NodeJS.EventEmitter} emitter\n   * @param {(string|symbol)} eventName\n   * @param {function(?)} handler\n   * @return {{emitter: !NodeJS.EventEmitter, eventName: (string|symbol), handler: function(?)}}\n   */\n  static addEventListener(emitter, eventName, handler) {\n    emitter.on(eventName, handler);\n    return { emitter, eventName, handler };\n  }\n\n  /**\n   * @param {!Array<{emitter: !NodeJS.EventEmitter, eventName: (string|symbol), handler: function(?)}>} listeners\n   */\n  static removeEventListeners(listeners) {\n    for (const listener of listeners)\n      listener.emitter.removeListener(listener.eventName, listener.handler);\n    listeners.splice(0, listeners.length);\n  }\n\n  /**\n   * @return {?Map<string, boolean>}\n   */\n  static publicAPICoverage() {\n    return apiCoverage;\n  }\n\n  static recordPublicAPICoverage() {\n    apiCoverage = new Map();\n  }\n\n  /**\n   * @param {!Object} obj\n   * @return {boolean}\n   */\n  static isString(obj) {\n    return typeof obj === 'string' || obj instanceof String;\n  }\n\n  /**\n   * @param {!Object} obj\n   * @return {boolean}\n   */\n  static isNumber(obj) {\n    return typeof obj === 'number' || obj instanceof Number;\n  }\n\n  static promisify(nodeFunction) {\n    function promisified(...args) {\n      return new Promise((resolve, reject) => {\n        function callback(err, ...result) {\n          if (err)\n            return reject(err);\n          if (result.length === 1)\n            return resolve(result[0]);\n          return resolve(result);\n        }\n        nodeFunction.call(null, ...args, callback);\n      });\n    }\n    return promisified;\n  }\n\n  /**\n   * @param {!NodeJS.EventEmitter} emitter\n   * @param {string} eventName\n   * @param {function} predicate\n   * @return {!Promise}\n   */\n  static waitForEvent(emitter, eventName, predicate, timeout) {\n    let eventTimeout, resolveCallback, rejectCallback;\n    const promise = new Promise((resolve, reject) => {\n      resolveCallback = resolve;\n      rejectCallback = reject;\n    });\n    const listener = Helper.addEventListener(emitter, eventName, event => {\n      if (!predicate(event))\n        return;\n      cleanup();\n      resolveCallback(event);\n    });\n    if (timeout) {\n      eventTimeout = setTimeout(() => {\n        cleanup();\n        rejectCallback(new TimeoutError('Timeout exceeded while waiting for event'));\n      }, timeout);\n    }\n    function cleanup() {\n      Helper.removeEventListeners([listener]);\n      clearTimeout(eventTimeout);\n    }\n    return promise;\n  }\n\n  /**\n   * @template T\n   * @param {!Promise<T>} promise\n   * @param {string} taskName\n   * @param {number} timeout\n   * @return {!Promise<T>}\n   */\n  static async waitWithTimeout(promise, taskName, timeout) {\n    let reject;\n    const timeoutError = new TimeoutError(`waiting for ${taskName} failed: timeout ${timeout}ms exceeded`);\n    const timeoutPromise = new Promise((resolve, x) => reject = x);\n    const timeoutTimer = setTimeout(() => reject(timeoutError), timeout);\n    try {\n      return await Promise.race([promise, timeoutPromise]);\n    } finally {\n      clearTimeout(timeoutTimer);\n    }\n  }\n}\n\n/**\n * @param {*} value\n * @param {string=} message\n */\nfunction assert(value, message) {\n  if (!value)\n    throw new Error(message);\n}\n\nmodule.exports = {\n  helper: Helper,\n  assert,\n  debugError\n};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {TimeoutError} = require('./Errors');\n\nconst debugError = require('debug')(`puppeteer:error`);\n/** @type {?Map<string, boolean>} */\nlet apiCoverage = null;\n\n/**\n * @param {!Object} classType\n * @param {string=} publicName\n */\nfunction traceAPICoverage(classType, publicName) {\n  if (!apiCoverage)\n    return;\n\n  let className = publicName || classType.prototype.constructor.name;\n  className = className.substring(0, 1).toLowerCase() + className.substring(1);\n  for (const methodName of Reflect.ownKeys(classType.prototype)) {\n    const method = Reflect.get(classType.prototype, methodName);\n    if (methodName === 'constructor' || typeof methodName !== 'string' || methodName.startsWith('_') || typeof method !== 'function')\n      continue;\n    apiCoverage.set(`${className}.${methodName}`, false);\n    Reflect.set(classType.prototype, methodName, function(...args) {\n      apiCoverage.set(`${className}.${methodName}`, true);\n      return method.call(this, ...args);\n    });\n  }\n\n  if (classType.Events) {\n    for (const event of Object.values(classType.Events))\n      apiCoverage.set(`${className}.emit(${JSON.stringify(event)})`, false);\n    const method = Reflect.get(classType.prototype, 'emit');\n    Reflect.set(classType.prototype, 'emit', function(event, ...args) {\n      if (this.listenerCount(event))\n        apiCoverage.set(`${className}.emit(${JSON.stringify(event)})`, true);\n      return method.call(this, event, ...args);\n    });\n  }\n}\n\nclass Helper {\n  /**\n   * @param {Function|string} fun\n   * @param {!Array<*>} args\n   * @return {string}\n   */\n  static evaluationString(fun, ...args) {\n    if (Helper.isString(fun)) {\n      assert(args.length === 0, 'Cannot evaluate a string with arguments');\n      return /** @type {string} */ (fun);\n    }\n    return `(${fun})(${args.map(serializeArgument).join(',')})`;\n\n    /**\n     * @param {*} arg\n     * @return {string}\n     */\n    function serializeArgument(arg) {\n      if (Object.is(arg, undefined))\n        return 'undefined';\n      return JSON.stringify(arg);\n    }\n  }\n\n  /**\n   * @param {!Protocol.Runtime.ExceptionDetails} exceptionDetails\n   * @return {string}\n   */\n  static getExceptionMessage(exceptionDetails) {\n    if (exceptionDetails.exception)\n      return exceptionDetails.exception.description || exceptionDetails.exception.value;\n    let message = exceptionDetails.text;\n    if (exceptionDetails.stackTrace) {\n      for (const callframe of exceptionDetails.stackTrace.callFrames) {\n        const location = callframe.url + ':' + callframe.lineNumber + ':' + callframe.columnNumber;\n        const functionName = callframe.functionName || '<anonymous>';\n        message += `\\n    at ${functionName} (${location})`;\n      }\n    }\n    return message;\n  }\n\n  /**\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   * @return {*}\n   */\n  static valueFromRemoteObject(remoteObject) {\n    assert(!remoteObject.objectId, 'Cannot extract value when objectId is given');\n    if (remoteObject.unserializableValue) {\n      switch (remoteObject.unserializableValue) {\n        case '-0':\n          return -0;\n        case 'NaN':\n          return NaN;\n        case 'Infinity':\n          return Infinity;\n        case '-Infinity':\n          return -Infinity;\n        default:\n          throw new Error('Unsupported unserializable value: ' + remoteObject.unserializableValue);\n      }\n    }\n    return remoteObject.value;\n  }\n\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   */\n  static /* async */ releaseObject(client, remoteObject) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (!remoteObject.objectId)\n      return;\n    (yield client.send('Runtime.releaseObject', {objectId: remoteObject.objectId}).catch(error => {\n      // Exceptions might happen in case of a page been navigated or closed.\n      // Swallow these since they are harmless and we don't leak anything in this case.\n      debugError(error);\n    }));\n  });}\n\n  /**\n   * @param {!Object} classType\n   * @param {string=} publicName\n   */\n  static tracePublicAPI(classType, publicName) {\n    for (const methodName of Reflect.ownKeys(classType.prototype)) {\n      const method = Reflect.get(classType.prototype, methodName);\n      if (methodName === 'constructor' || typeof methodName !== 'string' || methodName.startsWith('_') || typeof method !== 'function' || method.constructor.name !== 'AsyncFunction')\n        continue;\n      Reflect.set(classType.prototype, methodName, function(...args) {\n        const syncStack = new Error();\n        return method.call(this, ...args).catch(e => {\n          const stack = syncStack.stack.substring(syncStack.stack.indexOf('\\n') + 1);\n          const clientStack = stack.substring(stack.indexOf('\\n'));\n          if (!e.stack.includes(clientStack))\n            e.stack += '\\n  -- ASYNC --\\n' + stack;\n          throw e;\n        });\n      });\n    }\n\n    traceAPICoverage(classType, publicName);\n  }\n\n  /**\n   * @param {!NodeJS.EventEmitter} emitter\n   * @param {(string|symbol)} eventName\n   * @param {function(?)} handler\n   * @return {{emitter: !NodeJS.EventEmitter, eventName: (string|symbol), handler: function(?)}}\n   */\n  static addEventListener(emitter, eventName, handler) {\n    emitter.on(eventName, handler);\n    return { emitter, eventName, handler };\n  }\n\n  /**\n   * @param {!Array<{emitter: !NodeJS.EventEmitter, eventName: (string|symbol), handler: function(?)}>} listeners\n   */\n  static removeEventListeners(listeners) {\n    for (const listener of listeners)\n      listener.emitter.removeListener(listener.eventName, listener.handler);\n    listeners.splice(0, listeners.length);\n  }\n\n  /**\n   * @return {?Map<string, boolean>}\n   */\n  static publicAPICoverage() {\n    return apiCoverage;\n  }\n\n  static recordPublicAPICoverage() {\n    apiCoverage = new Map();\n  }\n\n  /**\n   * @param {!Object} obj\n   * @return {boolean}\n   */\n  static isString(obj) {\n    return typeof obj === 'string' || obj instanceof String;\n  }\n\n  /**\n   * @param {!Object} obj\n   * @return {boolean}\n   */\n  static isNumber(obj) {\n    return typeof obj === 'number' || obj instanceof Number;\n  }\n\n  static promisify(nodeFunction) {\n    function promisified(...args) {\n      return new Promise((resolve, reject) => {\n        function callback(err, ...result) {\n          if (err)\n            return reject(err);\n          if (result.length === 1)\n            return resolve(result[0]);\n          return resolve(result);\n        }\n        nodeFunction.call(null, ...args, callback);\n      });\n    }\n    return promisified;\n  }\n\n  /**\n   * @param {!NodeJS.EventEmitter} emitter\n   * @param {string} eventName\n   * @param {function} predicate\n   * @return {!Promise}\n   */\n  static waitForEvent(emitter, eventName, predicate, timeout) {\n    let eventTimeout, resolveCallback, rejectCallback;\n    const promise = new Promise((resolve, reject) => {\n      resolveCallback = resolve;\n      rejectCallback = reject;\n    });\n    const listener = Helper.addEventListener(emitter, eventName, event => {\n      if (!predicate(event))\n        return;\n      cleanup();\n      resolveCallback(event);\n    });\n    if (timeout) {\n      eventTimeout = setTimeout(() => {\n        cleanup();\n        rejectCallback(new TimeoutError('Timeout exceeded while waiting for event'));\n      }, timeout);\n    }\n    function cleanup() {\n      Helper.removeEventListeners([listener]);\n      clearTimeout(eventTimeout);\n    }\n    return promise;\n  }\n\n  /**\n   * @template T\n   * @param {!Promise<T>} promise\n   * @param {string} taskName\n   * @param {number} timeout\n   * @return {!Promise<T>}\n   */\n  static /* async */ waitWithTimeout(promise, taskName, timeout) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    let reject;\n    const timeoutError = new TimeoutError(`waiting for ${taskName} failed: timeout ${timeout}ms exceeded`);\n    const timeoutPromise = new Promise((resolve, x) => reject = x);\n    const timeoutTimer = setTimeout(() => reject(timeoutError), timeout);\n    try {\n      return (yield Promise.race([promise, timeoutPromise]));\n    } finally {\n      clearTimeout(timeoutTimer);\n    }\n  });}\n}\n\n/**\n * @param {*} value\n * @param {string=} message\n */\nfunction assert(value, message) {\n  if (!value)\n    throw new Error(message);\n}\n\nmodule.exports = {\n  helper: Helper,\n  assert,\n  debugError\n};\n","module.exports = require(\"util\");","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","module.exports = require(\"stream\");","/*!\n * depd\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar callSiteToString = require('./lib/compat').callSiteToString\nvar eventListenerCount = require('./lib/compat').eventListenerCount\nvar relative = require('path').relative\n\n/**\n * Module exports.\n */\n\nmodule.exports = depd\n\n/**\n * Get the path to base files on.\n */\n\nvar basePath = process.cwd()\n\n/**\n * Determine if namespace is contained in the string.\n */\n\nfunction containsNamespace (str, namespace) {\n  var vals = str.split(/[ ,]+/)\n  var ns = String(namespace).toLowerCase()\n\n  for (var i = 0; i < vals.length; i++) {\n    var val = vals[i]\n\n    // namespace contained\n    if (val && (val === '*' || val.toLowerCase() === ns)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Convert a data descriptor to accessor descriptor.\n */\n\nfunction convertDataDescriptorToAccessor (obj, prop, message) {\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n  var value = descriptor.value\n\n  descriptor.get = function getter () { return value }\n\n  if (descriptor.writable) {\n    descriptor.set = function setter (val) { return (value = val) }\n  }\n\n  delete descriptor.value\n  delete descriptor.writable\n\n  Object.defineProperty(obj, prop, descriptor)\n\n  return descriptor\n}\n\n/**\n * Create arguments string to keep arity.\n */\n\nfunction createArgumentsString (arity) {\n  var str = ''\n\n  for (var i = 0; i < arity; i++) {\n    str += ', arg' + i\n  }\n\n  return str.substr(2)\n}\n\n/**\n * Create stack string from stack.\n */\n\nfunction createStackString (stack) {\n  var str = this.name + ': ' + this.namespace\n\n  if (this.message) {\n    str += ' deprecated ' + this.message\n  }\n\n  for (var i = 0; i < stack.length; i++) {\n    str += '\\n    at ' + callSiteToString(stack[i])\n  }\n\n  return str\n}\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n  var file = site[0]\n\n  function deprecate (message) {\n    // call to self as log\n    log.call(deprecate, message)\n  }\n\n  deprecate._file = file\n  deprecate._ignored = isignored(namespace)\n  deprecate._namespace = namespace\n  deprecate._traced = istraced(namespace)\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Determine if namespace is ignored.\n */\n\nfunction isignored (namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.noDeprecation) {\n    // --no-deprecation support\n    return true\n  }\n\n  var str = process.env.NO_DEPRECATION || ''\n\n  // namespace ignored\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Determine if namespace is traced.\n */\n\nfunction istraced (namespace) {\n  /* istanbul ignore next: tested in a child processs */\n  if (process.traceDeprecation) {\n    // --trace-deprecation support\n    return true\n  }\n\n  var str = process.env.TRACE_DEPRECATION || ''\n\n  // namespace traced\n  return containsNamespace(str, namespace)\n}\n\n/**\n * Display deprecation message.\n */\n\nfunction log (message, site) {\n  var haslisteners = eventListenerCount(process, 'deprecation') !== 0\n\n  // abort early if no destination\n  if (!haslisteners && this._ignored) {\n    return\n  }\n\n  var caller\n  var callFile\n  var callSite\n  var depSite\n  var i = 0\n  var seen = false\n  var stack = getStack()\n  var file = this._file\n\n  if (site) {\n    // provided site\n    depSite = site\n    callSite = callSiteLocation(stack[1])\n    callSite.name = depSite.name\n    file = callSite[0]\n  } else {\n    // get call site\n    i = 2\n    depSite = callSiteLocation(stack[i])\n    callSite = depSite\n  }\n\n  // get caller of deprecated thing in relation to file\n  for (; i < stack.length; i++) {\n    caller = callSiteLocation(stack[i])\n    callFile = caller[0]\n\n    if (callFile === file) {\n      seen = true\n    } else if (callFile === this._file) {\n      file = this._file\n    } else if (seen) {\n      break\n    }\n  }\n\n  var key = caller\n    ? depSite.join(':') + '__' + caller.join(':')\n    : undefined\n\n  if (key !== undefined && key in this._warned) {\n    // already warned\n    return\n  }\n\n  this._warned[key] = true\n\n  // generate automatic message from call site\n  var msg = message\n  if (!msg) {\n    msg = callSite === depSite || !callSite.name\n      ? defaultMessage(depSite)\n      : defaultMessage(callSite)\n  }\n\n  // emit deprecation if listeners exist\n  if (haslisteners) {\n    var err = DeprecationError(this._namespace, msg, stack.slice(i))\n    process.emit('deprecation', err)\n    return\n  }\n\n  // format and write message\n  var format = process.stderr.isTTY\n    ? formatColor\n    : formatPlain\n  var output = format.call(this, msg, caller, stack.slice(i))\n  process.stderr.write(output + '\\n', 'utf8')\n}\n\n/**\n * Get call site location as array.\n */\n\nfunction callSiteLocation (callSite) {\n  var file = callSite.getFileName() || '<anonymous>'\n  var line = callSite.getLineNumber()\n  var colm = callSite.getColumnNumber()\n\n  if (callSite.isEval()) {\n    file = callSite.getEvalOrigin() + ', ' + file\n  }\n\n  var site = [file, line, colm]\n\n  site.callSite = callSite\n  site.name = callSite.getFunctionName()\n\n  return site\n}\n\n/**\n * Generate a default message from the site.\n */\n\nfunction defaultMessage (site) {\n  var callSite = site.callSite\n  var funcName = site.name\n\n  // make useful anonymous name\n  if (!funcName) {\n    funcName = '<anonymous@' + formatLocation(site) + '>'\n  }\n\n  var context = callSite.getThis()\n  var typeName = context && callSite.getTypeName()\n\n  // ignore useless type name\n  if (typeName === 'Object') {\n    typeName = undefined\n  }\n\n  // make useful type name\n  if (typeName === 'Function') {\n    typeName = context.name || typeName\n  }\n\n  return typeName && callSite.getMethodName()\n    ? typeName + '.' + funcName\n    : funcName\n}\n\n/**\n * Format deprecation message without color.\n */\n\nfunction formatPlain (msg, caller, stack) {\n  var timestamp = new Date().toUTCString()\n\n  var formatted = timestamp +\n    ' ' + this._namespace +\n    ' deprecated ' + msg\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    at ' + callSiteToString(stack[i])\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' at ' + formatLocation(caller)\n  }\n\n  return formatted\n}\n\n/**\n * Format deprecation message with color.\n */\n\nfunction formatColor (msg, caller, stack) {\n  var formatted = '\\x1b[36;1m' + this._namespace + '\\x1b[22;39m' + // bold cyan\n    ' \\x1b[33;1mdeprecated\\x1b[22;39m' + // bold yellow\n    ' \\x1b[0m' + msg + '\\x1b[39m' // reset\n\n  // add stack trace\n  if (this._traced) {\n    for (var i = 0; i < stack.length; i++) {\n      formatted += '\\n    \\x1b[36mat ' + callSiteToString(stack[i]) + '\\x1b[39m' // cyan\n    }\n\n    return formatted\n  }\n\n  if (caller) {\n    formatted += ' \\x1b[36m' + formatLocation(caller) + '\\x1b[39m' // cyan\n  }\n\n  return formatted\n}\n\n/**\n * Format call site location.\n */\n\nfunction formatLocation (callSite) {\n  return relative(basePath, callSite[0]) +\n    ':' + callSite[1] +\n    ':' + callSite[2]\n}\n\n/**\n * Get the stack as array of call sites.\n */\n\nfunction getStack () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = Math.max(10, limit)\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice this function off the top\n  var stack = obj.stack.slice(1)\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack\n}\n\n/**\n * Capture call site stack from v8.\n */\n\nfunction prepareObjectStackTrace (obj, stack) {\n  return stack\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  var args = createArgumentsString(fn.length)\n  var deprecate = this // eslint-disable-line no-unused-vars\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  site.name = fn.name\n\n   // eslint-disable-next-line no-eval\n  var deprecatedfn = eval('(function (' + args + ') {\\n' +\n    '\"use strict\"\\n' +\n    'log.call(deprecate, message, site)\\n' +\n    'return fn.apply(this, arguments)\\n' +\n    '})')\n\n  return deprecatedfn\n}\n\n/**\n * Wrap property in a deprecation message.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n\n  var deprecate = this\n  var stack = getStack()\n  var site = callSiteLocation(stack[1])\n\n  // set site name\n  site.name = prop\n\n  // convert data descriptor\n  if ('value' in descriptor) {\n    descriptor = convertDataDescriptorToAccessor(obj, prop, message)\n  }\n\n  var get = descriptor.get\n  var set = descriptor.set\n\n  // wrap getter\n  if (typeof get === 'function') {\n    descriptor.get = function getter () {\n      log.call(deprecate, message, site)\n      return get.apply(this, arguments)\n    }\n  }\n\n  // wrap setter\n  if (typeof set === 'function') {\n    descriptor.set = function setter () {\n      log.call(deprecate, message, site)\n      return set.apply(this, arguments)\n    }\n  }\n\n  Object.defineProperty(obj, prop, descriptor)\n}\n\n/**\n * Create DeprecationError for deprecation\n */\n\nfunction DeprecationError (namespace, message, stack) {\n  var error = new Error()\n  var stackString\n\n  Object.defineProperty(error, 'constructor', {\n    value: DeprecationError\n  })\n\n  Object.defineProperty(error, 'message', {\n    configurable: true,\n    enumerable: false,\n    value: message,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'name', {\n    enumerable: false,\n    configurable: true,\n    value: 'DeprecationError',\n    writable: true\n  })\n\n  Object.defineProperty(error, 'namespace', {\n    configurable: true,\n    enumerable: false,\n    value: namespace,\n    writable: true\n  })\n\n  Object.defineProperty(error, 'stack', {\n    configurable: true,\n    enumerable: false,\n    get: function () {\n      if (stackString !== undefined) {\n        return stackString\n      }\n\n      // prepare stack trace\n      return (stackString = createStackString.call(this, stack))\n    },\n    set: function setter (val) {\n      stackString = val\n    }\n  })\n\n  return error\n}\n","try {\n  var util = require('util');\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  module.exports = require('./inherits_browser.js');\n}\n","module.exports = require(\"url\");","module.exports = require(\"http\");","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(/ *, */);\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","module.exports = require(\"buffer\");","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: ((1 << 30) * 1024)\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.replace(formatThousandsRegExp, thousandsSeparator);\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors')\nvar setPrototypeOf = require('setprototypeof')\nvar statuses = require('statuses')\nvar inherits = require('inherits')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n\n/**\n * Convert a string of words to a JavaScript identifier.\n * @private\n */\n\nfunction toIdentifier (str) {\n  return str.split(' ').map(function (token) {\n    return token.slice(0, 1).toUpperCase() + token.slice(1)\n  }).join('').replace(/[^ _0-9a-z]/gi, '')\n}\n","/*!\n * type-is\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar typer = require('media-typer')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = typeofrequest\nmodule.exports.is = typeis\nmodule.exports.hasBody = hasbody\nmodule.exports.normalize = normalize\nmodule.exports.match = mimeMatch\n\n/**\n * Compare a `value` content-type with `types`.\n * Each `type` can be an extension like `html`,\n * a special shortcut like `multipart` or `urlencoded`,\n * or a mime type.\n *\n * If no types match, `false` is returned.\n * Otherwise, the first `type` that matches is returned.\n *\n * @param {String} value\n * @param {Array} types\n * @public\n */\n\nfunction typeis (value, types_) {\n  var i\n  var types = types_\n\n  // remove parameters and normalize\n  var val = tryNormalizeType(value)\n\n  // no type or invalid\n  if (!val) {\n    return false\n  }\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length - 1)\n    for (i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // no types, return the content type\n  if (!types || !types.length) {\n    return val\n  }\n\n  var type\n  for (i = 0; i < types.length; i++) {\n    if (mimeMatch(normalize(type = types[i]), val)) {\n      return type[0] === '+' || type.indexOf('*') !== -1\n        ? val\n        : type\n    }\n  }\n\n  // no matches\n  return false\n}\n\n/**\n * Check if a request has a request body.\n * A request with a body __must__ either have `transfer-encoding`\n * or `content-length` headers set.\n * http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.3\n *\n * @param {Object} request\n * @return {Boolean}\n * @public\n */\n\nfunction hasbody (req) {\n  return req.headers['transfer-encoding'] !== undefined ||\n    !isNaN(req.headers['content-length'])\n}\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains any of the give mime `type`s.\n * If there is no request body, `null` is returned.\n * If there is no content type, `false` is returned.\n * Otherwise, it returns the first `type` that matches.\n *\n * Examples:\n *\n *     // With Content-Type: text/html; charset=utf-8\n *     this.is('html'); // => 'html'\n *     this.is('text/html'); // => 'text/html'\n *     this.is('text/*', 'application/json'); // => 'text/html'\n *\n *     // When Content-Type is application/json\n *     this.is('json', 'urlencoded'); // => 'json'\n *     this.is('application/json'); // => 'application/json'\n *     this.is('html', 'application/*'); // => 'application/json'\n *\n *     this.is('html'); // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nfunction typeofrequest (req, types_) {\n  var types = types_\n\n  // no body\n  if (!hasbody(req)) {\n    return null\n  }\n\n  // support flattened arguments\n  if (arguments.length > 2) {\n    types = new Array(arguments.length - 1)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i + 1]\n    }\n  }\n\n  // request content type\n  var value = req.headers['content-type']\n\n  return typeis(value, types)\n}\n\n/**\n * Normalize a mime type.\n * If it's a shorthand, expand it to a valid mime type.\n *\n * In general, you probably want:\n *\n *   var type = is(req, ['urlencoded', 'json', 'multipart']);\n *\n * Then use the appropriate body parsers.\n * These three are the most common request body types\n * and are thus ensured to work.\n *\n * @param {String} type\n * @private\n */\n\nfunction normalize (type) {\n  if (typeof type !== 'string') {\n    // invalid type\n    return false\n  }\n\n  switch (type) {\n    case 'urlencoded':\n      return 'application/x-www-form-urlencoded'\n    case 'multipart':\n      return 'multipart/*'\n  }\n\n  if (type[0] === '+') {\n    // \"+json\" -> \"*/*+json\" expando\n    return '*/*' + type\n  }\n\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if `expected` mime type\n * matches `actual` mime type with\n * wildcard and +suffix support.\n *\n * @param {String} expected\n * @param {String} actual\n * @return {Boolean}\n * @private\n */\n\nfunction mimeMatch (expected, actual) {\n  // invalid type\n  if (expected === false) {\n    return false\n  }\n\n  // split types\n  var actualParts = actual.split('/')\n  var expectedParts = expected.split('/')\n\n  // invalid format\n  if (actualParts.length !== 2 || expectedParts.length !== 2) {\n    return false\n  }\n\n  // validate type\n  if (expectedParts[0] !== '*' && expectedParts[0] !== actualParts[0]) {\n    return false\n  }\n\n  // validate suffix wildcard\n  if (expectedParts[1].substr(0, 2) === '*+') {\n    return expectedParts[1].length <= actualParts[1].length + 1 &&\n      expectedParts[1].substr(1) === actualParts[1].substr(1 - expectedParts[1].length)\n  }\n\n  // validate subtype\n  if (expectedParts[1] !== '*' && expectedParts[1] !== actualParts[1]) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction normalizeType (value) {\n  // parse the type\n  var type = typer.parse(value)\n\n  // remove the parameters\n  type.parameters = undefined\n\n  // reformat it\n  return typer.format(type)\n}\n\n/**\n * Try to normalize a type and remove parameters.\n *\n * @param {string} value\n * @return {string}\n * @private\n */\n\nfunction tryNormalizeType (value) {\n  try {\n    return normalizeType(value)\n  } catch (err) {\n    return null\n  }\n}\n","/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedUrl = parsed)\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return (req._parsedOriginalUrl = parsed)\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse(str)\n  }\n\n  var pathname = str\n  var query = null\n  var search = null\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i)\n          query = str.substring(i + 1)\n          search = str.substring(i)\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {}\n  url.path = str\n  url.href = str\n  url.pathname = pathname\n  url.query = query\n  url.search = search\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n","module.exports = require(\"crypto\");","module.exports = require(\"os\");","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  EMPTY_BUFFER: Buffer.alloc(0),\n  NOOP: () => {}\n};\n","/*!\n * content-type\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 7231 sec 3.1.1.1\n *\n * parameter     = token \"=\" ( token / quoted-string )\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n * quoted-string = DQUOTE *( qdtext / quoted-pair ) DQUOTE\n * qdtext        = HTAB / SP / %x21 / %x23-5B / %x5D-7E / obs-text\n * obs-text      = %x80-FF\n * quoted-pair   = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n */\nvar PARAM_REGEXP = /; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *(\"(?:[\\u000b\\u0020\\u0021\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u000b\\u0020-\\u00ff])*\"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g\nvar TEXT_REGEXP = /^[\\u000b\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 7230 sec 3.2.6\n *\n * quoted-pair = \"\\\" ( HTAB / SP / VCHAR / obs-text )\n * obs-text    = %x80-FF\n */\nvar QESC_REGEXP = /\\\\([\\u000b\\u0020-\\u00ff])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 7230 sec 3.2.6\n */\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp to match type in RFC 7231 sec 3.1.1.1\n *\n * media-type = type \"/\" subtype\n * type       = token\n * subtype    = token\n */\nvar TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/\n\n/**\n * Module exports.\n * @public\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @public\n */\n\nfunction format (obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || !TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  var string = type\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!TOKEN_REGEXP.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @public\n */\n\nfunction parse (string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  var header = typeof string === 'object'\n    ? getcontenttype(string)\n    : string\n\n  if (typeof header !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = header.indexOf(';')\n  var type = index !== -1\n    ? header.substr(0, index).trim()\n    : header.trim()\n\n  if (!TYPE_REGEXP.test(type)) {\n    throw new TypeError('invalid media type')\n  }\n\n  var obj = new ContentType(type.toLowerCase())\n\n  // parse parameters\n  if (index !== -1) {\n    var key\n    var match\n    var value\n\n    PARAM_REGEXP.lastIndex = index\n\n    while ((match = PARAM_REGEXP.exec(header))) {\n      if (match.index !== index) {\n        throw new TypeError('invalid parameter format')\n      }\n\n      index += match[0].length\n      key = match[1].toLowerCase()\n      value = match[2]\n\n      if (value[0] === '\"') {\n        // remove quotes and escapes\n        value = value\n          .substr(1, value.length - 2)\n          .replace(QESC_REGEXP, '$1')\n      }\n\n      obj.parameters[key] = value\n    }\n\n    if (index !== header.length) {\n      throw new TypeError('invalid parameter format')\n    }\n  }\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @private\n */\n\nfunction getcontenttype (obj) {\n  var header\n\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    header = obj.getHeader('content-type')\n  } else if (typeof obj.headers === 'object') {\n    // req-like\n    header = obj.headers && obj.headers['content-type']\n  }\n\n  if (typeof header !== 'string') {\n    throw new TypeError('content-type header is missing from object')\n  }\n\n  return header\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (TOKEN_REGEXP.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !TEXT_REGEXP.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Class to represent a content type.\n * @private\n */\nfunction ContentType (type) {\n  this.parameters = Object.create(null)\n  this.type = type\n}\n","module.exports = Object.setPrototypeOf || ({__proto__:[]} instanceof Array ? setProtoOf : mixinProperties);\n\nfunction setProtoOf(obj, proto) {\n\tobj.__proto__ = proto;\n\treturn obj;\n}\n\nfunction mixinProperties(obj, proto) {\n\tfor (var prop in proto) {\n\t\tif (!obj.hasOwnProperty(prop)) {\n\t\t\tobj[prop] = proto[prop];\n\t\t}\n\t}\n\treturn obj;\n}\n","module.exports = require(\"net\");","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar getBody = require('raw-body')\nvar iconv = require('iconv-lite')\nvar onFinished = require('on-finished')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = read\n\n/**\n * Read a request into a buffer and parse.\n *\n * @param {object} req\n * @param {object} res\n * @param {function} next\n * @param {function} parse\n * @param {function} debug\n * @param {object} options\n * @private\n */\n\nfunction read (req, res, next, parse, debug, options) {\n  var length\n  var opts = options\n  var stream\n\n  // flag as parsed\n  req._body = true\n\n  // read options\n  var encoding = opts.encoding !== null\n    ? opts.encoding\n    : null\n  var verify = opts.verify\n\n  try {\n    // get the content stream\n    stream = contentstream(req, debug, opts.inflate)\n    length = stream.length\n    stream.length = undefined\n  } catch (err) {\n    return next(err)\n  }\n\n  // set raw-body options\n  opts.length = length\n  opts.encoding = verify\n    ? null\n    : encoding\n\n  // assert charset is supported\n  if (opts.encoding === null && encoding !== null && !iconv.encodingExists(encoding)) {\n    return next(createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n      charset: encoding.toLowerCase(),\n      type: 'charset.unsupported'\n    }))\n  }\n\n  // read body\n  debug('read body')\n  getBody(stream, opts, function (error, body) {\n    if (error) {\n      var _error\n\n      if (error.type === 'encoding.unsupported') {\n        // echo back charset\n        _error = createError(415, 'unsupported charset \"' + encoding.toUpperCase() + '\"', {\n          charset: encoding.toLowerCase(),\n          type: 'charset.unsupported'\n        })\n      } else {\n        // set status code on error\n        _error = createError(400, error)\n      }\n\n      // read off entire request\n      stream.resume()\n      onFinished(req, function onfinished () {\n        next(createError(400, _error))\n      })\n      return\n    }\n\n    // verify\n    if (verify) {\n      try {\n        debug('verify body')\n        verify(req, res, body, encoding)\n      } catch (err) {\n        next(createError(403, err, {\n          body: body,\n          type: err.type || 'entity.verify.failed'\n        }))\n        return\n      }\n    }\n\n    // parse\n    var str = body\n    try {\n      debug('parse body')\n      str = typeof body !== 'string' && encoding !== null\n        ? iconv.decode(body, encoding)\n        : body\n      req.body = parse(str)\n    } catch (err) {\n      next(createError(400, err, {\n        body: str,\n        type: err.type || 'entity.parse.failed'\n      }))\n      return\n    }\n\n    next()\n  })\n}\n\n/**\n * Get the content stream of the request.\n *\n * @param {object} req\n * @param {function} debug\n * @param {boolean} [inflate=true]\n * @return {object}\n * @api private\n */\n\nfunction contentstream (req, debug, inflate) {\n  var encoding = (req.headers['content-encoding'] || 'identity').toLowerCase()\n  var length = req.headers['content-length']\n  var stream\n\n  debug('content-encoding \"%s\"', encoding)\n\n  if (inflate === false && encoding !== 'identity') {\n    throw createError(415, 'content encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n\n  switch (encoding) {\n    case 'deflate':\n      stream = zlib.createInflate()\n      debug('inflate body')\n      req.pipe(stream)\n      break\n    case 'gzip':\n      stream = zlib.createGunzip()\n      debug('gunzip body')\n      req.pipe(stream)\n      break\n    case 'identity':\n      stream = req\n      stream.length = length\n      break\n    default:\n      throw createError(415, 'unsupported content encoding \"' + encoding + '\"', {\n        encoding: encoding,\n        type: 'encoding.unsupported'\n      })\n  }\n\n  return stream\n}\n","/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = onFinished\nmodule.exports.isFinished = isFinished\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar first = require('ee-first')\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)) }\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished(msg, listener) {\n  if (isFinished(msg) !== false) {\n    defer(listener, null, msg)\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener)\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished(msg) {\n  var socket = msg.socket\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg\n  var eeSocket\n  var finished = false\n\n  function onFinish(error) {\n    eeMsg.cancel()\n    eeSocket.cancel()\n\n    finished = true\n    callback(error)\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish)\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket)\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish)\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket)\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket)\n\n  if (msg.socket === undefined) {\n    // node.js 0.8 patch\n    patchAssignSocket(msg, onSocket)\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg)\n    attachFinishedListener(msg, attached)\n  }\n\n  attached.queue.push(listener)\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null\n    if (!listener.queue) return\n\n    var queue = listener.queue\n    listener.queue = null\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg)\n    }\n  }\n\n  listener.queue = []\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\nfunction patchAssignSocket(res, callback) {\n  var assignSocket = res.assignSocket\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket(socket) {\n    assignSocket.call(this, socket)\n    callback(socket)\n  }\n}\n","/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = encodeUrl\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n","/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n","'use strict'\n\n/**\n * Expose `arrayFlatten`.\n */\nmodule.exports = arrayFlatten\n\n/**\n * Recursive flatten function with depth.\n *\n * @param  {Array}  array\n * @param  {Array}  result\n * @param  {Number} depth\n * @return {Array}\n */\nfunction flattenWithDepth (array, result, depth) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (depth > 0 && Array.isArray(value)) {\n      flattenWithDepth(value, result, depth - 1)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Recursive flatten function. Omitting depth is slightly faster.\n *\n * @param  {Array} array\n * @param  {Array} result\n * @return {Array}\n */\nfunction flattenForever (array, result) {\n  for (var i = 0; i < array.length; i++) {\n    var value = array[i]\n\n    if (Array.isArray(value)) {\n      flattenForever(value, result)\n    } else {\n      result.push(value)\n    }\n  }\n\n  return result\n}\n\n/**\n * Flatten an array, with the ability to define a depth.\n *\n * @param  {Array}  array\n * @param  {Number} depth\n * @return {Array}\n */\nfunction arrayFlatten (array, depth) {\n  if (depth == null) {\n    return flattenForever(array, [])\n  }\n\n  return flattenWithDepth(array, [], depth)\n}\n","/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\nexports = module.exports = function(a, b){\n  if (a && b) {\n    for (var key in b) {\n      a[key] = b[key];\n    }\n  }\n  return a;\n};\n","module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar assert = require(\"assert\")\nvar path = require(\"path\")\nvar fs = require(\"fs\")\nvar glob = require(\"glob\")\nvar _0666 = parseInt('666', 8)\n\nvar defaultGlobOpts = {\n  nosort: true,\n  silent: true\n}\n\n// for EMFILE handling\nvar timeout = 0\n\nvar isWindows = (process.platform === \"win32\")\n\nfunction defaults (options) {\n  var methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(function(m) {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n  options.emfileWait = options.emfileWait || 1000\n  if (options.glob === false) {\n    options.disableGlob = true\n  }\n  options.disableGlob = options.disableGlob || false\n  options.glob = options.glob || defaultGlobOpts\n}\n\nfunction rimraf (p, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert.equal(typeof cb, 'function', 'rimraf: callback function required')\n  assert(options, 'rimraf: invalid options argument provided')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n\n  defaults(options)\n\n  var busyTries = 0\n  var errState = null\n  var n = 0\n\n  if (options.disableGlob || !glob.hasMagic(p))\n    return afterGlob(null, [p])\n\n  options.lstat(p, function (er, stat) {\n    if (!er)\n      return afterGlob(null, [p])\n\n    glob(p, options.glob, afterGlob)\n  })\n\n  function next (er) {\n    errState = errState || er\n    if (--n === 0)\n      cb(errState)\n  }\n\n  function afterGlob (er, results) {\n    if (er)\n      return cb(er)\n\n    n = results.length\n    if (n === 0)\n      return cb()\n\n    results.forEach(function (p) {\n      rimraf_(p, options, function CB (er) {\n        if (er) {\n          if ((er.code === \"EBUSY\" || er.code === \"ENOTEMPTY\" || er.code === \"EPERM\") &&\n              busyTries < options.maxBusyTries) {\n            busyTries ++\n            var time = busyTries * 100\n            // try again, with the same exact callback as this one.\n            return setTimeout(function () {\n              rimraf_(p, options, CB)\n            }, time)\n          }\n\n          // this one won't happen if graceful-fs is used.\n          if (er.code === \"EMFILE\" && timeout < options.emfileWait) {\n            return setTimeout(function () {\n              rimraf_(p, options, CB)\n            }, timeout ++)\n          }\n\n          // already gone\n          if (er.code === \"ENOENT\") er = null\n        }\n\n        timeout = 0\n        next(er)\n      })\n    })\n  }\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, function (er, st) {\n    if (er && er.code === \"ENOENT\")\n      return cb(null)\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er && er.code === \"EPERM\" && isWindows)\n      fixWinEPERM(p, options, er, cb)\n\n    if (st && st.isDirectory())\n      return rmdir(p, options, er, cb)\n\n    options.unlink(p, function (er) {\n      if (er) {\n        if (er.code === \"ENOENT\")\n          return cb(null)\n        if (er.code === \"EPERM\")\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        if (er.code === \"EISDIR\")\n          return rmdir(p, options, er, cb)\n      }\n      return cb(er)\n    })\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n  if (er)\n    assert(er instanceof Error)\n\n  options.chmod(p, _0666, function (er2) {\n    if (er2)\n      cb(er2.code === \"ENOENT\" ? null : er)\n    else\n      options.stat(p, function(er3, stats) {\n        if (er3)\n          cb(er3.code === \"ENOENT\" ? null : er)\n        else if (stats.isDirectory())\n          rmdir(p, options, er, cb)\n        else\n          options.unlink(p, cb)\n      })\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  assert(p)\n  assert(options)\n  if (er)\n    assert(er instanceof Error)\n\n  try {\n    options.chmodSync(p, _0666)\n  } catch (er2) {\n    if (er2.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  try {\n    var stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === \"ENOENT\")\n      return\n    else\n      throw er\n  }\n\n  if (stats.isDirectory())\n    rmdirSync(p, options, er)\n  else\n    options.unlinkSync(p)\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, function (er) {\n    if (er && (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\"))\n      rmkids(p, options, cb)\n    else if (er && er.code === \"ENOTDIR\")\n      cb(originalEr)\n    else\n      cb(er)\n  })\n}\n\nfunction rmkids(p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, function (er, files) {\n    if (er)\n      return cb(er)\n    var n = files.length\n    if (n === 0)\n      return options.rmdir(p, cb)\n    var errState\n    files.forEach(function (f) {\n      rimraf(path.join(p, f), options, function (er) {\n        if (errState)\n          return\n        if (er)\n          return cb(errState = er)\n        if (--n === 0)\n          options.rmdir(p, cb)\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.equal(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.equal(typeof options, 'object', 'rimraf: options should be object')\n\n  var results\n\n  if (options.disableGlob || !glob.hasMagic(p)) {\n    results = [p]\n  } else {\n    try {\n      options.lstatSync(p)\n      results = [p]\n    } catch (er) {\n      results = glob.sync(p, options.glob)\n    }\n  }\n\n  if (!results.length)\n    return\n\n  for (var i = 0; i < results.length; i++) {\n    var p = results[i]\n\n    try {\n      var st = options.lstatSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n\n      // Windows can EPERM on stat.  Life is suffering.\n      if (er.code === \"EPERM\" && isWindows)\n        fixWinEPERMSync(p, options, er)\n    }\n\n    try {\n      // sunos lets the root user unlink directories, which is... weird.\n      if (st && st.isDirectory())\n        rmdirSync(p, options, null)\n      else\n        options.unlinkSync(p)\n    } catch (er) {\n      if (er.code === \"ENOENT\")\n        return\n      if (er.code === \"EPERM\")\n        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n      if (er.code !== \"EISDIR\")\n        throw er\n\n      rmdirSync(p, options, er)\n    }\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n  if (originalEr)\n    assert(originalEr instanceof Error)\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === \"ENOENT\")\n      return\n    if (er.code === \"ENOTDIR\")\n      throw originalEr\n    if (er.code === \"ENOTEMPTY\" || er.code === \"EEXIST\" || er.code === \"EPERM\")\n      rmkidsSync(p, options)\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f), options)\n  })\n\n  // We only end up here once we got ENOTEMPTY at least once, and\n  // at this point, we are guaranteed to have removed all the kids.\n  // So, we know that it won't be ENOENT or ENOTDIR or anything else.\n  // try really hard to delete stuff on windows, because it has a\n  // PROFOUNDLY annoying habit of not closing handles promptly when\n  // files are deleted, resulting in spurious ENOTEMPTY errors.\n  var retries = isWindows ? 100 : 1\n  var i = 0\n  do {\n    var threw = true\n    try {\n      var ret = options.rmdirSync(p, options)\n      threw = false\n      return ret\n    } finally {\n      if (++i < retries && threw)\n        continue\n    }\n  } while (true)\n}\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","module.exports = require(\"https\");","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert, debugError} = require('./helper');\nconst path = require('path');\n\nconst EVALUATION_SCRIPT_URL = '__puppeteer_evaluation_script__';\nconst SOURCE_URL_REGEX = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/m;\n\nfunction createJSHandle(context, remoteObject) {\n  const frame = context.frame();\n  if (remoteObject.subtype === 'node' && frame) {\n    const frameManager = frame._frameManager;\n    return new ElementHandle(context, context._client, remoteObject, frameManager.page(), frameManager);\n  }\n  return new JSHandle(context, context._client, remoteObject);\n}\n\nclass ExecutionContext {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.ExecutionContextDescription} contextPayload\n   * @param {?Puppeteer.Frame} frame\n   */\n  constructor(client, contextPayload, frame) {\n    this._client = client;\n    this._frame = frame;\n    this._contextId = contextPayload.id;\n    this._isDefault = contextPayload.auxData ? !!contextPayload.auxData['isDefault'] : false;\n  }\n\n  /**\n   * @return {?Puppeteer.Frame}\n   */\n  frame() {\n    return this._frame;\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async evaluate(pageFunction, ...args) {\n    const handle = await this.evaluateHandle(pageFunction, ...args);\n    const result = await handle.jsonValue().catch(error => {\n      if (error.message.includes('Object reference chain is too long'))\n        return;\n      if (error.message.includes('Object couldn\\'t be returned by value'))\n        return;\n      throw error;\n    });\n    await handle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<!JSHandle>}\n   */\n  async evaluateHandle(pageFunction, ...args) {\n    const suffix = `//# sourceURL=${EVALUATION_SCRIPT_URL}`;\n\n    if (helper.isString(pageFunction)) {\n      const contextId = this._contextId;\n      const expression = /** @type {string} */ (pageFunction);\n      const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression) ? expression : expression + '\\n' + suffix;\n      const {exceptionDetails, result: remoteObject} = await this._client.send('Runtime.evaluate', {\n        expression: expressionWithSourceUrl,\n        contextId,\n        returnByValue: false,\n        awaitPromise: true,\n        userGesture: true\n      }).catch(rewriteError);\n      if (exceptionDetails)\n        throw new Error('Evaluation failed: ' + helper.getExceptionMessage(exceptionDetails));\n      return createJSHandle(this, remoteObject);\n    }\n\n    if (typeof pageFunction !== 'function')\n      throw new Error('The following is not a function: ' + pageFunction);\n\n    let functionText = pageFunction.toString();\n    try {\n      new Function('(' + functionText + ')');\n    } catch (e1) {\n      // This means we might have a function shorthand. Try another\n      // time prefixing 'function '.\n      if (functionText.startsWith('async '))\n        functionText = 'async function ' + functionText.substring('async '.length);\n      else\n        functionText = 'function ' + functionText;\n      try {\n        new Function('(' + functionText  + ')');\n      } catch (e2) {\n        // We tried hard to serialize, but there's a weird beast here.\n        throw new Error('Passed function is not well-serializable!');\n      }\n    }\n\n    const { exceptionDetails, result: remoteObject } = await this._client.send('Runtime.callFunctionOn', {\n      functionDeclaration: functionText + '\\n' + suffix + '\\n',\n      executionContextId: this._contextId,\n      arguments: args.map(convertArgument.bind(this)),\n      returnByValue: false,\n      awaitPromise: true,\n      userGesture: true\n    }).catch(rewriteError);\n    if (exceptionDetails)\n      throw new Error('Evaluation failed: ' + helper.getExceptionMessage(exceptionDetails));\n    return createJSHandle(this, remoteObject);\n\n    /**\n     * @param {*} arg\n     * @return {*}\n     * @this {ExecutionContext}\n     */\n    function convertArgument(arg) {\n      if (Object.is(arg, -0))\n        return { unserializableValue: '-0' };\n      if (Object.is(arg, Infinity))\n        return { unserializableValue: 'Infinity' };\n      if (Object.is(arg, -Infinity))\n        return { unserializableValue: '-Infinity' };\n      if (Object.is(arg, NaN))\n        return { unserializableValue: 'NaN' };\n      const objectHandle = arg && (arg instanceof JSHandle) ? arg : null;\n      if (objectHandle) {\n        if (objectHandle._context !== this)\n          throw new Error('JSHandles can be evaluated only in the context they were created!');\n        if (objectHandle._disposed)\n          throw new Error('JSHandle is disposed!');\n        if (objectHandle._remoteObject.unserializableValue)\n          return { unserializableValue: objectHandle._remoteObject.unserializableValue };\n        if (!objectHandle._remoteObject.objectId)\n          return { value: objectHandle._remoteObject.value };\n        return { objectId: objectHandle._remoteObject.objectId };\n      }\n      return { value: arg };\n    }\n\n    /**\n     * @param {!Error} error\n     * @return {!Protocol.Runtime.evaluateReturnValue}\n     */\n    function rewriteError(error) {\n      if (error.message.endsWith('Cannot find context with specified id'))\n        throw new Error('Execution context was destroyed, most likely because of a navigation.');\n      throw error;\n    }\n  }\n\n  /**\n   * @param {!JSHandle} prototypeHandle\n   * @return {!Promise<!JSHandle>}\n   */\n  async queryObjects(prototypeHandle) {\n    assert(!prototypeHandle._disposed, 'Prototype JSHandle is disposed!');\n    assert(prototypeHandle._remoteObject.objectId, 'Prototype JSHandle must not be referencing primitive value');\n    const response = await this._client.send('Runtime.queryObjects', {\n      prototypeObjectId: prototypeHandle._remoteObject.objectId\n    });\n    return createJSHandle(this, response.objects);\n  }\n}\n\nclass JSHandle {\n  /**\n   * @param {!ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   */\n  constructor(context, client, remoteObject) {\n    this._context = context;\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._disposed = false;\n  }\n\n  /**\n   * @return {!ExecutionContext}\n   */\n  executionContext() {\n    return this._context;\n  }\n\n  /**\n   * @param {string} propertyName\n   * @return {!Promise<?JSHandle>}\n   */\n  async getProperty(propertyName) {\n    const objectHandle = await this._context.evaluateHandle((object, propertyName) => {\n      const result = {__proto__: null};\n      result[propertyName] = object[propertyName];\n      return result;\n    }, this, propertyName);\n    const properties = await objectHandle.getProperties();\n    const result = properties.get(propertyName) || null;\n    await objectHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @return {!Promise<!Map<string, !JSHandle>>}\n   */\n  async getProperties() {\n    const response = await this._client.send('Runtime.getProperties', {\n      objectId: this._remoteObject.objectId,\n      ownProperties: true\n    });\n    const result = new Map();\n    for (const property of response.result) {\n      if (!property.enumerable)\n        continue;\n      result.set(property.name, createJSHandle(this._context, property.value));\n    }\n    return result;\n  }\n\n  /**\n   * @return {!Promise<?Object>}\n   */\n  async jsonValue() {\n    if (this._remoteObject.objectId) {\n      const response = await this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: 'function() { return this; }',\n        objectId: this._remoteObject.objectId,\n        returnByValue: true,\n        awaitPromise: true,\n      });\n      return helper.valueFromRemoteObject(response.result);\n    }\n    return helper.valueFromRemoteObject(this._remoteObject);\n  }\n\n  /**\n   * @return {?Puppeteer.ElementHandle}\n   */\n  asElement() {\n    return null;\n  }\n\n  async dispose() {\n    if (this._disposed)\n      return;\n    this._disposed = true;\n    await helper.releaseObject(this._client, this._remoteObject);\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  toString() {\n    if (this._remoteObject.objectId) {\n      const type =  this._remoteObject.subtype || this._remoteObject.type;\n      return 'JSHandle@' + type;\n    }\n    return 'JSHandle:' + helper.valueFromRemoteObject(this._remoteObject);\n  }\n}\n\n\nclass ElementHandle extends JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.FrameManager} frameManager\n   */\n  constructor(context, client, remoteObject, page, frameManager) {\n    super(context, client, remoteObject);\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._page = page;\n    this._frameManager = frameManager;\n    this._disposed = false;\n  }\n\n  /**\n   * @override\n   * @return {?ElementHandle}\n   */\n  asElement() {\n    return this;\n  }\n\n  /**\n   * @return {!Promise<?Puppeteer.Frame>}\n   */\n  async contentFrame() {\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: this._remoteObject.objectId\n    });\n    if (typeof nodeInfo.node.frameId !== 'string')\n      return null;\n    return this._frameManager.frame(nodeInfo.node.frameId);\n  }\n\n  async _scrollIntoViewIfNeeded() {\n    const error = await this.executionContext().evaluate(async(element, pageJavascriptEnabled) => {\n      if (!element.isConnected)\n        return 'Node is detached from document';\n      if (element.nodeType !== Node.ELEMENT_NODE)\n        return 'Node is not of type HTMLElement';\n      // force-scroll if page's javascript is disabled.\n      if (!pageJavascriptEnabled) {\n        element.scrollIntoView({block: 'center', inline: 'center', behavior: 'instant'});\n        return false;\n      }\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      if (visibleRatio !== 1.0)\n        element.scrollIntoView({block: 'center', inline: 'center', behavior: 'instant'});\n      return false;\n    }, this, this._page._javascriptEnabled);\n    if (error)\n      throw new Error(error);\n  }\n\n  /**\n   * @return {!Promise<!{x: number, y: number}>}\n   */\n  async _clickablePoint() {\n    const result = await this._client.send('DOM.getContentQuads', {\n      objectId: this._remoteObject.objectId\n    }).catch(debugError);\n    if (!result || !result.quads.length)\n      throw new Error('Node is either not visible or not an HTMLElement');\n    // Filter out quads that have too small area to click into.\n    const quads = result.quads.map(quad => this._fromProtocolQuad(quad)).filter(quad => computeQuadArea(quad) > 1);\n    if (!quads.length)\n      throw new Error('Node is either not visible or not an HTMLElement');\n    // Return the middle point of the first quad.\n    const quad = quads[0];\n    let x = 0;\n    let y = 0;\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  }\n\n  /**\n   * @return {!Promise<void|Protocol.DOM.getBoxModelReturnValue>}\n   */\n  _getBoxModel() {\n    return this._client.send('DOM.getBoxModel', {\n      objectId: this._remoteObject.objectId\n    }).catch(error => debugError(error));\n  }\n\n  /**\n   * @param {!Array<number>} quad\n   * @return {!Array<{x: number, y: number}>}\n   */\n  _fromProtocolQuad(quad) {\n    return [\n      {x: quad[0], y: quad[1]},\n      {x: quad[2], y: quad[3]},\n      {x: quad[4], y: quad[5]},\n      {x: quad[6], y: quad[7]}\n    ];\n  }\n\n  async hover() {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.mouse.move(x, y);\n  }\n\n  /**\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async click(options) {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.mouse.click(x, y, options);\n  }\n\n  /**\n   * @param {!Array<string>} filePaths\n   */\n  async uploadFile(...filePaths) {\n    const files = filePaths.map(filePath => path.resolve(filePath));\n    const objectId = this._remoteObject.objectId;\n    await this._client.send('DOM.setFileInputFiles', { objectId, files });\n  }\n\n  async tap() {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.touchscreen.tap(x, y);\n  }\n\n  async focus() {\n    await this.executionContext().evaluate(element => element.focus(), this);\n  }\n\n  /**\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  async type(text, options) {\n    await this.focus();\n    await this._page.keyboard.type(text, options);\n  }\n\n  /**\n   * @param {string} key\n   * @param {!{delay?: number, text?: string}=} options\n   */\n  async press(key, options) {\n    await this.focus();\n    await this._page.keyboard.press(key, options);\n  }\n\n  /**\n   * @return {!Promise<?{x: number, y: number, width: number, height: number}>}\n   */\n  async boundingBox() {\n    const result = await this._getBoxModel();\n\n    if (!result)\n      return null;\n\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n\n    return {x, y, width, height};\n  }\n\n  /**\n   * @return {!Promise<?BoxModel>}\n   */\n  async boxModel() {\n    const result = await this._getBoxModel();\n\n    if (!result)\n      return null;\n\n    const {content, padding, border, margin, width, height} = result.model;\n    return {\n      content: this._fromProtocolQuad(content),\n      padding: this._fromProtocolQuad(padding),\n      border: this._fromProtocolQuad(border),\n      margin: this._fromProtocolQuad(margin),\n      width,\n      height\n    };\n  }\n\n  /**\n   *\n   * @param {!Object=} options\n   * @returns {!Promise<string|!Buffer>}\n   */\n  async screenshot(options = {}) {\n    let needsViewportReset = false;\n\n    let boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const viewport = this._page.viewport();\n\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height)),\n      };\n      await this._page.setViewport(Object.assign({}, viewport, newViewport));\n\n      needsViewportReset = true;\n    }\n\n    await this._scrollIntoViewIfNeeded();\n\n    boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const { layoutViewport: { pageX, pageY } } = await this._client.send('Page.getLayoutMetrics');\n\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n\n    const imageData = await this._page.screenshot(Object.assign({}, {\n      clip\n    }, options));\n\n    if (needsViewportReset)\n      await this._page.setViewport(viewport);\n\n    return imageData;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?ElementHandle>}\n   */\n  async $(selector) {\n    const handle = await this.executionContext().evaluateHandle(\n        (element, selector) => element.querySelector(selector),\n        this, selector\n    );\n    const element = handle.asElement();\n    if (element)\n      return element;\n    await handle.dispose();\n    return null;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n  async $$(selector) {\n    const arrayHandle = await this.executionContext().evaluateHandle(\n        (element, selector) => element.querySelectorAll(selector),\n        this, selector\n    );\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle)\n        result.push(elementHandle);\n    }\n    return result;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $eval(selector, pageFunction, ...args) {\n    const elementHandle = await this.$(selector);\n    if (!elementHandle)\n      throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n    const result = await this.executionContext().evaluate(pageFunction, elementHandle, ...args);\n    await elementHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $$eval(selector, pageFunction, ...args) {\n    const arrayHandle = await this.executionContext().evaluateHandle(\n        (element, selector) => Array.from(element.querySelectorAll(selector)),\n        this, selector\n    );\n\n    const result = await this.executionContext().evaluate(pageFunction, arrayHandle, ...args);\n    await arrayHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n  async $x(expression) {\n    const arrayHandle = await this.executionContext().evaluateHandle(\n        (element, expression) => {\n          const document = element.ownerDocument || element;\n          const iterator = document.evaluate(expression, element, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n          const array = [];\n          let item;\n          while ((item = iterator.iterateNext()))\n            array.push(item);\n          return array;\n        },\n        this, expression\n    );\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle)\n        result.push(elementHandle);\n    }\n    return result;\n  }\n\n  /**\n   * @returns {!Promise<boolean>}\n   */\n  isIntersectingViewport() {\n    return this.executionContext().evaluate(async element => {\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      return visibleRatio > 0;\n    }, this);\n  }\n}\n\nfunction computeQuadArea(quad) {\n  // Compute sum of all directed areas of adjacent triangles\n  // https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n  let area = 0;\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n  return Math.abs(area);\n}\n\n/**\n * @typedef {Object} BoxModel\n * @property {!Array<!{x: number, y: number}>} content\n * @property {!Array<!{x: number, y: number}>} padding\n * @property {!Array<!{x: number, y: number}>} border\n * @property {!Array<!{x: number, y: number}>} margin\n * @property {number} width\n * @property {number} height\n */\n\nhelper.tracePublicAPI(ElementHandle);\nhelper.tracePublicAPI(JSHandle);\nhelper.tracePublicAPI(ExecutionContext);\n\nmodule.exports = {ExecutionContext, JSHandle, ElementHandle, createJSHandle, EVALUATION_SCRIPT_URL};\n","'use strict';\n\nconst Limiter = require('async-limiter');\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst constants = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst EMPTY_BLOCK = Buffer.from([0x00]);\n\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kWriteInProgress = Symbol('write-in-progress');\nconst kPendingClose = Symbol('pending-close');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate\n   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter({ concurrency });\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      if (this._inflate[kWriteInProgress]) {\n        this._inflate[kPendingClose] = true;\n      } else {\n        this._inflate.close();\n        this._inflate = null;\n      }\n    }\n    if (this._deflate) {\n      if (this._deflate[kWriteInProgress]) {\n        this._deflate[kPendingClose] = true;\n      } else {\n        this._deflate.close();\n        this._deflate = null;\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        var value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited by async-limiter.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.push((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw(\n        Object.assign({}, this._options.zlibInflateOptions, { windowBits })\n      );\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n    this._inflate[kWriteInProgress] = true;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._inflate[kPendingClose]\n      ) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kWriteInProgress] = false;\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    if (!data || data.length === 0) {\n      process.nextTick(callback, null, EMPTY_BLOCK);\n      return;\n    }\n\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw(\n        Object.assign({}, this._options.zlibDeflateOptions, { windowBits })\n      );\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // `zlib.DeflateRaw` emits an `'error'` event only when an attempt to use\n      // it is made after it has already been closed. This cannot happen here,\n      // so we only add a listener for the `'data'` event.\n      //\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kWriteInProgress] = true;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      var data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      if (\n        (fin && this.params[`${endpoint}_no_context_takeover`]) ||\n        this._deflate[kPendingClose]\n      ) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kWriteInProgress] = false;\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError][constants.kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[constants.kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert, debugError} = require('./helper');\nconst path = require('path');\n\nconst EVALUATION_SCRIPT_URL = '__puppeteer_evaluation_script__';\nconst SOURCE_URL_REGEX = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/m;\n\nfunction createJSHandle(context, remoteObject) {\n  const frame = context.frame();\n  if (remoteObject.subtype === 'node' && frame) {\n    const frameManager = frame._frameManager;\n    return new ElementHandle(context, context._client, remoteObject, frameManager.page(), frameManager);\n  }\n  return new JSHandle(context, context._client, remoteObject);\n}\n\nclass ExecutionContext {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.ExecutionContextDescription} contextPayload\n   * @param {?Puppeteer.Frame} frame\n   */\n  constructor(client, contextPayload, frame) {\n    this._client = client;\n    this._frame = frame;\n    this._contextId = contextPayload.id;\n    this._isDefault = contextPayload.auxData ? !!contextPayload.auxData['isDefault'] : false;\n  }\n\n  /**\n   * @return {?Puppeteer.Frame}\n   */\n  frame() {\n    return this._frame;\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  /* async */ evaluate(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const handle = (yield this.evaluateHandle(pageFunction, ...args));\n    const result = (yield handle.jsonValue().catch(error => {\n      if (error.message.includes('Object reference chain is too long'))\n        return;\n      if (error.message.includes('Object couldn\\'t be returned by value'))\n        return;\n      throw error;\n    }));\n    (yield handle.dispose());\n    return result;\n  });}\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<!JSHandle>}\n   */\n  /* async */ evaluateHandle(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const suffix = `//# sourceURL=${EVALUATION_SCRIPT_URL}`;\n\n    if (helper.isString(pageFunction)) {\n      const contextId = this._contextId;\n      const expression = /** @type {string} */ (pageFunction);\n      const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression) ? expression : expression + '\\n' + suffix;\n      const {exceptionDetails, result: remoteObject} = (yield this._client.send('Runtime.evaluate', {\n        expression: expressionWithSourceUrl,\n        contextId,\n        returnByValue: false,\n        awaitPromise: true,\n        userGesture: true\n      }).catch(rewriteError));\n      if (exceptionDetails)\n        throw new Error('Evaluation failed: ' + helper.getExceptionMessage(exceptionDetails));\n      return createJSHandle(this, remoteObject);\n    }\n\n    if (typeof pageFunction !== 'function')\n      throw new Error('The following is not a function: ' + pageFunction);\n\n    let functionText = pageFunction.toString();\n    try {\n      new Function('(' + functionText + ')');\n    } catch (e1) {\n      // This means we might have a function shorthand. Try another\n      // time prefixing 'function '.\n      if (functionText.startsWith('async '))\n        functionText = 'async function ' + functionText.substring('async '.length);\n      else\n        functionText = 'function ' + functionText;\n      try {\n        new Function('(' + functionText  + ')');\n      } catch (e2) {\n        // We tried hard to serialize, but there's a weird beast here.\n        throw new Error('Passed function is not well-serializable!');\n      }\n    }\n\n    const { exceptionDetails, result: remoteObject } = (yield this._client.send('Runtime.callFunctionOn', {\n      functionDeclaration: functionText + '\\n' + suffix + '\\n',\n      executionContextId: this._contextId,\n      arguments: args.map(convertArgument.bind(this)),\n      returnByValue: false,\n      awaitPromise: true,\n      userGesture: true\n    }).catch(rewriteError));\n    if (exceptionDetails)\n      throw new Error('Evaluation failed: ' + helper.getExceptionMessage(exceptionDetails));\n    return createJSHandle(this, remoteObject);\n\n    /**\n     * @param {*} arg\n     * @return {*}\n     * @this {ExecutionContext}\n     */\n    function convertArgument(arg) {\n      if (Object.is(arg, -0))\n        return { unserializableValue: '-0' };\n      if (Object.is(arg, Infinity))\n        return { unserializableValue: 'Infinity' };\n      if (Object.is(arg, -Infinity))\n        return { unserializableValue: '-Infinity' };\n      if (Object.is(arg, NaN))\n        return { unserializableValue: 'NaN' };\n      const objectHandle = arg && (arg instanceof JSHandle) ? arg : null;\n      if (objectHandle) {\n        if (objectHandle._context !== this)\n          throw new Error('JSHandles can be evaluated only in the context they were created!');\n        if (objectHandle._disposed)\n          throw new Error('JSHandle is disposed!');\n        if (objectHandle._remoteObject.unserializableValue)\n          return { unserializableValue: objectHandle._remoteObject.unserializableValue };\n        if (!objectHandle._remoteObject.objectId)\n          return { value: objectHandle._remoteObject.value };\n        return { objectId: objectHandle._remoteObject.objectId };\n      }\n      return { value: arg };\n    }\n\n    /**\n     * @param {!Error} error\n     * @return {!Protocol.Runtime.evaluateReturnValue}\n     */\n    function rewriteError(error) {\n      if (error.message.endsWith('Cannot find context with specified id'))\n        throw new Error('Execution context was destroyed, most likely because of a navigation.');\n      throw error;\n    }\n  });}\n\n  /**\n   * @param {!JSHandle} prototypeHandle\n   * @return {!Promise<!JSHandle>}\n   */\n  /* async */ queryObjects(prototypeHandle) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(!prototypeHandle._disposed, 'Prototype JSHandle is disposed!');\n    assert(prototypeHandle._remoteObject.objectId, 'Prototype JSHandle must not be referencing primitive value');\n    const response = (yield this._client.send('Runtime.queryObjects', {\n      prototypeObjectId: prototypeHandle._remoteObject.objectId\n    }));\n    return createJSHandle(this, response.objects);\n  });}\n}\n\nclass JSHandle {\n  /**\n   * @param {!ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   */\n  constructor(context, client, remoteObject) {\n    this._context = context;\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._disposed = false;\n  }\n\n  /**\n   * @return {!ExecutionContext}\n   */\n  executionContext() {\n    return this._context;\n  }\n\n  /**\n   * @param {string} propertyName\n   * @return {!Promise<?JSHandle>}\n   */\n  /* async */ getProperty(propertyName) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const objectHandle = (yield this._context.evaluateHandle((object, propertyName) => {\n      const result = {__proto__: null};\n      result[propertyName] = object[propertyName];\n      return result;\n    }, this, propertyName));\n    const properties = (yield objectHandle.getProperties());\n    const result = properties.get(propertyName) || null;\n    (yield objectHandle.dispose());\n    return result;\n  });}\n\n  /**\n   * @return {!Promise<!Map<string, !JSHandle>>}\n   */\n  /* async */ getProperties() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const response = (yield this._client.send('Runtime.getProperties', {\n      objectId: this._remoteObject.objectId,\n      ownProperties: true\n    }));\n    const result = new Map();\n    for (const property of response.result) {\n      if (!property.enumerable)\n        continue;\n      result.set(property.name, createJSHandle(this._context, property.value));\n    }\n    return result;\n  });}\n\n  /**\n   * @return {!Promise<?Object>}\n   */\n  /* async */ jsonValue() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (this._remoteObject.objectId) {\n      const response = (yield this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: 'function() { return this; }',\n        objectId: this._remoteObject.objectId,\n        returnByValue: true,\n        awaitPromise: true,\n      }));\n      return helper.valueFromRemoteObject(response.result);\n    }\n    return helper.valueFromRemoteObject(this._remoteObject);\n  });}\n\n  /**\n   * @return {?Puppeteer.ElementHandle}\n   */\n  asElement() {\n    return null;\n  }\n\n  /* async */ dispose() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (this._disposed)\n      return;\n    this._disposed = true;\n    (yield helper.releaseObject(this._client, this._remoteObject));\n  });}\n\n  /**\n   * @override\n   * @return {string}\n   */\n  toString() {\n    if (this._remoteObject.objectId) {\n      const type =  this._remoteObject.subtype || this._remoteObject.type;\n      return 'JSHandle@' + type;\n    }\n    return 'JSHandle:' + helper.valueFromRemoteObject(this._remoteObject);\n  }\n}\n\n\nclass ElementHandle extends JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.FrameManager} frameManager\n   */\n  constructor(context, client, remoteObject, page, frameManager) {\n    super(context, client, remoteObject);\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._page = page;\n    this._frameManager = frameManager;\n    this._disposed = false;\n  }\n\n  /**\n   * @override\n   * @return {?ElementHandle}\n   */\n  asElement() {\n    return this;\n  }\n\n  /**\n   * @return {!Promise<?Puppeteer.Frame>}\n   */\n  /* async */ contentFrame() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const nodeInfo = (yield this._client.send('DOM.describeNode', {\n      objectId: this._remoteObject.objectId\n    }));\n    if (typeof nodeInfo.node.frameId !== 'string')\n      return null;\n    return this._frameManager.frame(nodeInfo.node.frameId);\n  });}\n\n  /* async */ _scrollIntoViewIfNeeded() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const error = (yield this.executionContext().evaluate(/* async */(element, pageJavascriptEnabled) => {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      if (!element.isConnected)\n        return 'Node is detached from document';\n      if (element.nodeType !== Node.ELEMENT_NODE)\n        return 'Node is not of type HTMLElement';\n      // force-scroll if page's javascript is disabled.\n      if (!pageJavascriptEnabled) {\n        element.scrollIntoView({block: 'center', inline: 'center', behavior: 'instant'});\n        return false;\n      }\n      const visibleRatio = (yield new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      }));\n      if (visibleRatio !== 1.0)\n        element.scrollIntoView({block: 'center', inline: 'center', behavior: 'instant'});\n      return false;\n    });}, this, this._page._javascriptEnabled));\n    if (error)\n      throw new Error(error);\n  });}\n\n  /**\n   * @return {!Promise<!{x: number, y: number}>}\n   */\n  /* async */ _clickablePoint() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const result = (yield this._client.send('DOM.getContentQuads', {\n      objectId: this._remoteObject.objectId\n    }).catch(debugError));\n    if (!result || !result.quads.length)\n      throw new Error('Node is either not visible or not an HTMLElement');\n    // Filter out quads that have too small area to click into.\n    const quads = result.quads.map(quad => this._fromProtocolQuad(quad)).filter(quad => computeQuadArea(quad) > 1);\n    if (!quads.length)\n      throw new Error('Node is either not visible or not an HTMLElement');\n    // Return the middle point of the first quad.\n    const quad = quads[0];\n    let x = 0;\n    let y = 0;\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  });}\n\n  /**\n   * @return {!Promise<void|Protocol.DOM.getBoxModelReturnValue>}\n   */\n  _getBoxModel() {\n    return this._client.send('DOM.getBoxModel', {\n      objectId: this._remoteObject.objectId\n    }).catch(error => debugError(error));\n  }\n\n  /**\n   * @param {!Array<number>} quad\n   * @return {!Array<{x: number, y: number}>}\n   */\n  _fromProtocolQuad(quad) {\n    return [\n      {x: quad[0], y: quad[1]},\n      {x: quad[2], y: quad[3]},\n      {x: quad[4], y: quad[5]},\n      {x: quad[6], y: quad[7]}\n    ];\n  }\n\n  /* async */ hover() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._scrollIntoViewIfNeeded());\n    const {x, y} = (yield this._clickablePoint());\n    (yield this._page.mouse.move(x, y));\n  });}\n\n  /**\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  /* async */ click(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._scrollIntoViewIfNeeded());\n    const {x, y} = (yield this._clickablePoint());\n    (yield this._page.mouse.click(x, y, options));\n  });}\n\n  /**\n   * @param {!Array<string>} filePaths\n   */\n  /* async */ uploadFile(...filePaths) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const files = filePaths.map(filePath => path.resolve(filePath));\n    const objectId = this._remoteObject.objectId;\n    (yield this._client.send('DOM.setFileInputFiles', { objectId, files }));\n  });}\n\n  /* async */ tap() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._scrollIntoViewIfNeeded());\n    const {x, y} = (yield this._clickablePoint());\n    (yield this._page.touchscreen.tap(x, y));\n  });}\n\n  /* async */ focus() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this.executionContext().evaluate(element => element.focus(), this));\n  });}\n\n  /**\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  /* async */ type(text, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this.focus());\n    (yield this._page.keyboard.type(text, options));\n  });}\n\n  /**\n   * @param {string} key\n   * @param {!{delay?: number, text?: string}=} options\n   */\n  /* async */ press(key, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this.focus());\n    (yield this._page.keyboard.press(key, options));\n  });}\n\n  /**\n   * @return {!Promise<?{x: number, y: number, width: number, height: number}>}\n   */\n  /* async */ boundingBox() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const result = (yield this._getBoxModel());\n\n    if (!result)\n      return null;\n\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n\n    return {x, y, width, height};\n  });}\n\n  /**\n   * @return {!Promise<?BoxModel>}\n   */\n  /* async */ boxModel() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const result = (yield this._getBoxModel());\n\n    if (!result)\n      return null;\n\n    const {content, padding, border, margin, width, height} = result.model;\n    return {\n      content: this._fromProtocolQuad(content),\n      padding: this._fromProtocolQuad(padding),\n      border: this._fromProtocolQuad(border),\n      margin: this._fromProtocolQuad(margin),\n      width,\n      height\n    };\n  });}\n\n  /**\n   *\n   * @param {!Object=} options\n   * @returns {!Promise<string|!Buffer>}\n   */\n  /* async */ screenshot(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    let needsViewportReset = false;\n\n    let boundingBox = (yield this.boundingBox());\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const viewport = this._page.viewport();\n\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height)),\n      };\n      (yield this._page.setViewport(Object.assign({}, viewport, newViewport)));\n\n      needsViewportReset = true;\n    }\n\n    (yield this._scrollIntoViewIfNeeded());\n\n    boundingBox = (yield this.boundingBox());\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const { layoutViewport: { pageX, pageY } } = (yield this._client.send('Page.getLayoutMetrics'));\n\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n\n    const imageData = (yield this._page.screenshot(Object.assign({}, {\n      clip\n    }, options)));\n\n    if (needsViewportReset)\n      (yield this._page.setViewport(viewport));\n\n    return imageData;\n  });}\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?ElementHandle>}\n   */\n  /* async */ $(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const handle = (yield this.executionContext().evaluateHandle(\n        (element, selector) => element.querySelector(selector),\n        this, selector\n    ));\n    const element = handle.asElement();\n    if (element)\n      return element;\n    (yield handle.dispose());\n    return null;\n  });}\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n  /* async */ $$(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const arrayHandle = (yield this.executionContext().evaluateHandle(\n        (element, selector) => element.querySelectorAll(selector),\n        this, selector\n    ));\n    const properties = (yield arrayHandle.getProperties());\n    (yield arrayHandle.dispose());\n    const result = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle)\n        result.push(elementHandle);\n    }\n    return result;\n  });}\n\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  /* async */ $eval(selector, pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const elementHandle = (yield this.$(selector));\n    if (!elementHandle)\n      throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n    const result = (yield this.executionContext().evaluate(pageFunction, elementHandle, ...args));\n    (yield elementHandle.dispose());\n    return result;\n  });}\n\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  /* async */ $$eval(selector, pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const arrayHandle = (yield this.executionContext().evaluateHandle(\n        (element, selector) => Array.from(element.querySelectorAll(selector)),\n        this, selector\n    ));\n\n    const result = (yield this.executionContext().evaluate(pageFunction, arrayHandle, ...args));\n    (yield arrayHandle.dispose());\n    return result;\n  });}\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n  /* async */ $x(expression) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const arrayHandle = (yield this.executionContext().evaluateHandle(\n        (element, expression) => {\n          const document = element.ownerDocument || element;\n          const iterator = document.evaluate(expression, element, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n          const array = [];\n          let item;\n          while ((item = iterator.iterateNext()))\n            array.push(item);\n          return array;\n        },\n        this, expression\n    ));\n    const properties = (yield arrayHandle.getProperties());\n    (yield arrayHandle.dispose());\n    const result = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle)\n        result.push(elementHandle);\n    }\n    return result;\n  });}\n\n  /**\n   * @returns {!Promise<boolean>}\n   */\n  isIntersectingViewport() {\n    return this.executionContext().evaluate(/* async */ element => {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      const visibleRatio = (yield new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      }));\n      return visibleRatio > 0;\n    });}, this);\n  }\n}\n\nfunction computeQuadArea(quad) {\n  // Compute sum of all directed areas of adjacent triangles\n  // https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n  let area = 0;\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n  return Math.abs(area);\n}\n\n/**\n * @typedef {Object} BoxModel\n * @property {!Array<!{x: number, y: number}>} content\n * @property {!Array<!{x: number, y: number}>} padding\n * @property {!Array<!{x: number, y: number}>} border\n * @property {!Array<!{x: number, y: number}>} margin\n * @property {number} width\n * @property {number} height\n */\n\nhelper.tracePublicAPI(ElementHandle);\nhelper.tracePublicAPI(JSHandle);\nhelper.tracePublicAPI(ExecutionContext);\n\nmodule.exports = {ExecutionContext, JSHandle, ElementHandle, createJSHandle, EVALUATION_SCRIPT_URL};\n","module.exports = require(\"tty\");","module.exports = require(\"zlib\");","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n","/*!\n * send\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar createError = require('http-errors')\nvar debug = require('debug')('send')\nvar deprecate = require('depd')('send')\nvar destroy = require('destroy')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar etag = require('etag')\nvar fresh = require('fresh')\nvar fs = require('fs')\nvar mime = require('mime')\nvar ms = require('ms')\nvar onFinished = require('on-finished')\nvar parseRange = require('range-parser')\nvar path = require('path')\nvar statuses = require('statuses')\nvar Stream = require('stream')\nvar util = require('util')\n\n/**\n * Path function references.\n * @private\n */\n\nvar extname = path.extname\nvar join = path.join\nvar normalize = path.normalize\nvar resolve = path.resolve\nvar sep = path.sep\n\n/**\n * Regular expression for identifying a bytes Range header.\n * @private\n */\n\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\n\n/**\n * Maximum value allowed for the max age.\n * @private\n */\n\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\n\n/**\n * Regular expression to match a path with a directory up component.\n * @private\n */\n\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = send\nmodule.exports.mime = mime\n\n/**\n * Return a `SendStream` for `req` and `path`.\n *\n * @param {object} req\n * @param {string} path\n * @param {object} [options]\n * @return {SendStream}\n * @public\n */\n\nfunction send (req, path, options) {\n  return new SendStream(req, path, options)\n}\n\n/**\n * Initialize a `SendStream` with the given `path`.\n *\n * @param {Request} req\n * @param {String} path\n * @param {object} [options]\n * @private\n */\n\nfunction SendStream (req, path, options) {\n  Stream.call(this)\n\n  var opts = options || {}\n\n  this.options = opts\n  this.path = path\n  this.req = req\n\n  this._acceptRanges = opts.acceptRanges !== undefined\n    ? Boolean(opts.acceptRanges)\n    : true\n\n  this._cacheControl = opts.cacheControl !== undefined\n    ? Boolean(opts.cacheControl)\n    : true\n\n  this._etag = opts.etag !== undefined\n    ? Boolean(opts.etag)\n    : true\n\n  this._dotfiles = opts.dotfiles !== undefined\n    ? opts.dotfiles\n    : 'ignore'\n\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\n  }\n\n  this._hidden = Boolean(opts.hidden)\n\n  if (opts.hidden !== undefined) {\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\n  }\n\n  // legacy support\n  if (opts.dotfiles === undefined) {\n    this._dotfiles = undefined\n  }\n\n  this._extensions = opts.extensions !== undefined\n    ? normalizeList(opts.extensions, 'extensions option')\n    : []\n\n  this._immutable = opts.immutable !== undefined\n    ? Boolean(opts.immutable)\n    : false\n\n  this._index = opts.index !== undefined\n    ? normalizeList(opts.index, 'index option')\n    : ['index.html']\n\n  this._lastModified = opts.lastModified !== undefined\n    ? Boolean(opts.lastModified)\n    : true\n\n  this._maxage = opts.maxAge || opts.maxage\n  this._maxage = typeof this._maxage === 'string'\n    ? ms(this._maxage)\n    : Number(this._maxage)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n\n  this._root = opts.root\n    ? resolve(opts.root)\n    : null\n\n  if (!this._root && opts.from) {\n    this.from(opts.from)\n  }\n}\n\n/**\n * Inherits from `Stream`.\n */\n\nutil.inherits(SendStream, Stream)\n\n/**\n * Enable or disable etag generation.\n *\n * @param {Boolean} val\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.etag = deprecate.function(function etag (val) {\n  this._etag = Boolean(val)\n  debug('etag %s', this._etag)\n  return this\n}, 'send.etag: pass etag as option')\n\n/**\n * Enable or disable \"hidden\" (dot) files.\n *\n * @param {Boolean} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\n  this._hidden = Boolean(val)\n  this._dotfiles = undefined\n  debug('hidden %s', this._hidden)\n  return this\n}, 'send.hidden: use dotfiles option')\n\n/**\n * Set index `paths`, set to a falsy\n * value to disable index support.\n *\n * @param {String|Boolean|Array} paths\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.index = deprecate.function(function index (paths) {\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\n  debug('index %o', paths)\n  this._index = index\n  return this\n}, 'send.index: pass index as option')\n\n/**\n * Set root `path`.\n *\n * @param {String} path\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.root = function root (path) {\n  this._root = resolve(String(path))\n  debug('root %s', this._root)\n  return this\n}\n\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\n  'send.from: pass root as option')\n\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\n  'send.root: pass root as option')\n\n/**\n * Set max-age to `maxAge`.\n *\n * @param {Number} maxAge\n * @return {SendStream}\n * @api public\n */\n\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\n  this._maxage = typeof maxAge === 'string'\n    ? ms(maxAge)\n    : Number(maxAge)\n  this._maxage = !isNaN(this._maxage)\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\n    : 0\n  debug('max-age %d', this._maxage)\n  return this\n}, 'send.maxage: pass maxAge as option')\n\n/**\n * Emit error with `status`.\n *\n * @param {number} status\n * @param {Error} [err]\n * @private\n */\n\nSendStream.prototype.error = function error (status, err) {\n  // emit if listeners instead of responding\n  if (hasListeners(this, 'error')) {\n    return this.emit('error', createError(status, err, {\n      expose: false\n    }))\n  }\n\n  var res = this.res\n  var msg = statuses[status] || String(status)\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\n\n  // clear existing headers\n  clearHeaders(res)\n\n  // add error headers\n  if (err && err.headers) {\n    setHeaders(res, err.headers)\n  }\n\n  // send basic response\n  res.statusCode = status\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'self'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.end(doc)\n}\n\n/**\n * Check if the pathname ends with \"/\".\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\n  return this.path[this.path.length - 1] === '/'\n}\n\n/**\n * Check if this is a conditional GET request.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\n  return this.req.headers['if-match'] ||\n    this.req.headers['if-unmodified-since'] ||\n    this.req.headers['if-none-match'] ||\n    this.req.headers['if-modified-since']\n}\n\n/**\n * Check if the request preconditions failed.\n *\n * @return {boolean}\n * @private\n */\n\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\n  var req = this.req\n  var res = this.res\n\n  // if-match\n  var match = req.headers['if-match']\n  if (match) {\n    var etag = res.getHeader('ETag')\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\n    }))\n  }\n\n  // if-unmodified-since\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\n  if (!isNaN(unmodifiedSince)) {\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\n    return isNaN(lastModified) || lastModified > unmodifiedSince\n  }\n\n  return false\n}\n\n/**\n * Strip content-* header fields.\n *\n * @private\n */\n\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\n  var res = this.res\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    var header = headers[i]\n    if (header.substr(0, 8) === 'content-' && header !== 'content-location') {\n      res.removeHeader(header)\n    }\n  }\n}\n\n/**\n * Respond with 304 not modified.\n *\n * @api private\n */\n\nSendStream.prototype.notModified = function notModified () {\n  var res = this.res\n  debug('not modified')\n  this.removeContentHeaderFields()\n  res.statusCode = 304\n  res.end()\n}\n\n/**\n * Raise error that headers already sent.\n *\n * @api private\n */\n\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\n  var err = new Error('Can\\'t set headers after they are sent.')\n  debug('headers already sent')\n  this.error(500, err)\n}\n\n/**\n * Check if the request is cacheable, aka\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isCachable = function isCachable () {\n  var statusCode = this.res.statusCode\n  return (statusCode >= 200 && statusCode < 300) ||\n    statusCode === 304\n}\n\n/**\n * Handle stat() error.\n *\n * @param {Error} error\n * @private\n */\n\nSendStream.prototype.onStatError = function onStatError (error) {\n  switch (error.code) {\n    case 'ENAMETOOLONG':\n    case 'ENOENT':\n    case 'ENOTDIR':\n      this.error(404, error)\n      break\n    default:\n      this.error(500, error)\n      break\n  }\n}\n\n/**\n * Check if the cache is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isFresh = function isFresh () {\n  return fresh(this.req.headers, {\n    'etag': this.res.getHeader('ETag'),\n    'last-modified': this.res.getHeader('Last-Modified')\n  })\n}\n\n/**\n * Check if the range is fresh.\n *\n * @return {Boolean}\n * @api private\n */\n\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\n  var ifRange = this.req.headers['if-range']\n\n  if (!ifRange) {\n    return true\n  }\n\n  // if-range as etag\n  if (ifRange.indexOf('\"') !== -1) {\n    var etag = this.res.getHeader('ETag')\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\n  }\n\n  // if-range as modified date\n  var lastModified = this.res.getHeader('Last-Modified')\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\n}\n\n/**\n * Redirect to path.\n *\n * @param {string} path\n * @private\n */\n\nSendStream.prototype.redirect = function redirect (path) {\n  var res = this.res\n\n  if (hasListeners(this, 'directory')) {\n    this.emit('directory', res, path)\n    return\n  }\n\n  if (this.hasTrailingSlash()) {\n    this.error(403)\n    return\n  }\n\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n    escapeHtml(loc) + '</a>')\n\n  // redirect\n  res.statusCode = 301\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\n  res.setHeader('Content-Security-Policy', \"default-src 'self'\")\n  res.setHeader('X-Content-Type-Options', 'nosniff')\n  res.setHeader('Location', loc)\n  res.end(doc)\n}\n\n/**\n * Pipe to `res.\n *\n * @param {Stream} res\n * @return {Stream} res\n * @api public\n */\n\nSendStream.prototype.pipe = function pipe (res) {\n  // root path\n  var root = this._root\n\n  // references\n  this.res = res\n\n  // decode the path\n  var path = decode(this.path)\n  if (path === -1) {\n    this.error(400)\n    return res\n  }\n\n  // null byte(s)\n  if (~path.indexOf('\\0')) {\n    this.error(400)\n    return res\n  }\n\n  var parts\n  if (root !== null) {\n    // normalize\n    if (path) {\n      path = normalize('.' + sep + path)\n    }\n\n    // malicious path\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = path.split(sep)\n\n    // join / normalize from optional root dir\n    path = normalize(join(root, path))\n    root = normalize(root + sep)\n  } else {\n    // \"..\" is malicious without \"root\"\n    if (UP_PATH_REGEXP.test(path)) {\n      debug('malicious path \"%s\"', path)\n      this.error(403)\n      return res\n    }\n\n    // explode path parts\n    parts = normalize(path).split(sep)\n\n    // resolve the path\n    path = resolve(path)\n  }\n\n  // dotfile handling\n  if (containsDotFile(parts)) {\n    var access = this._dotfiles\n\n    // legacy support\n    if (access === undefined) {\n      access = parts[parts.length - 1][0] === '.'\n        ? (this._hidden ? 'allow' : 'ignore')\n        : 'allow'\n    }\n\n    debug('%s dotfile \"%s\"', access, path)\n    switch (access) {\n      case 'allow':\n        break\n      case 'deny':\n        this.error(403)\n        return res\n      case 'ignore':\n      default:\n        this.error(404)\n        return res\n    }\n  }\n\n  // index file support\n  if (this._index.length && this.hasTrailingSlash()) {\n    this.sendIndex(path)\n    return res\n  }\n\n  this.sendFile(path)\n  return res\n}\n\n/**\n * Transfer `path`.\n *\n * @param {String} path\n * @api public\n */\n\nSendStream.prototype.send = function send (path, stat) {\n  var len = stat.size\n  var options = this.options\n  var opts = {}\n  var res = this.res\n  var req = this.req\n  var ranges = req.headers.range\n  var offset = options.start || 0\n\n  if (headersSent(res)) {\n    // impossible to send now\n    this.headersAlreadySent()\n    return\n  }\n\n  debug('pipe \"%s\"', path)\n\n  // set header fields\n  this.setHeader(path, stat)\n\n  // set content-type\n  this.type(path)\n\n  // conditional GET support\n  if (this.isConditionalGET()) {\n    if (this.isPreconditionFailure()) {\n      this.error(412)\n      return\n    }\n\n    if (this.isCachable() && this.isFresh()) {\n      this.notModified()\n      return\n    }\n  }\n\n  // adjust len to start/end options\n  len = Math.max(0, len - offset)\n  if (options.end !== undefined) {\n    var bytes = options.end - offset + 1\n    if (len > bytes) len = bytes\n  }\n\n  // Range support\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\n    // parse\n    ranges = parseRange(len, ranges, {\n      combine: true\n    })\n\n    // If-Range support\n    if (!this.isRangeFresh()) {\n      debug('range stale')\n      ranges = -2\n    }\n\n    // unsatisfiable\n    if (ranges === -1) {\n      debug('range unsatisfiable')\n\n      // Content-Range\n      res.setHeader('Content-Range', contentRange('bytes', len))\n\n      // 416 Requested Range Not Satisfiable\n      return this.error(416, {\n        headers: {'Content-Range': res.getHeader('Content-Range')}\n      })\n    }\n\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\n    if (ranges !== -2 && ranges.length === 1) {\n      debug('range %j', ranges)\n\n      // Content-Range\n      res.statusCode = 206\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\n\n      // adjust for requested range\n      offset += ranges[0].start\n      len = ranges[0].end - ranges[0].start + 1\n    }\n  }\n\n  // clone options\n  for (var prop in options) {\n    opts[prop] = options[prop]\n  }\n\n  // set read options\n  opts.start = offset\n  opts.end = Math.max(offset, offset + len - 1)\n\n  // content-length\n  res.setHeader('Content-Length', len)\n\n  // HEAD support\n  if (req.method === 'HEAD') {\n    res.end()\n    return\n  }\n\n  this.stream(path, opts)\n}\n\n/**\n * Transfer file for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendFile = function sendFile (path) {\n  var i = 0\n  var self = this\n\n  debug('stat \"%s\"', path)\n  fs.stat(path, function onstat (err, stat) {\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\n      // not found, check extensions\n      return next(err)\n    }\n    if (err) return self.onStatError(err)\n    if (stat.isDirectory()) return self.redirect(path)\n    self.emit('file', path, stat)\n    self.send(path, stat)\n  })\n\n  function next (err) {\n    if (self._extensions.length <= i) {\n      return err\n        ? self.onStatError(err)\n        : self.error(404)\n    }\n\n    var p = path + '.' + self._extensions[i++]\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n}\n\n/**\n * Transfer index for `path`.\n *\n * @param {String} path\n * @api private\n */\nSendStream.prototype.sendIndex = function sendIndex (path) {\n  var i = -1\n  var self = this\n\n  function next (err) {\n    if (++i >= self._index.length) {\n      if (err) return self.onStatError(err)\n      return self.error(404)\n    }\n\n    var p = join(path, self._index[i])\n\n    debug('stat \"%s\"', p)\n    fs.stat(p, function (err, stat) {\n      if (err) return next(err)\n      if (stat.isDirectory()) return next()\n      self.emit('file', p, stat)\n      self.send(p, stat)\n    })\n  }\n\n  next()\n}\n\n/**\n * Stream `path` to the response.\n *\n * @param {String} path\n * @param {Object} options\n * @api private\n */\n\nSendStream.prototype.stream = function stream (path, options) {\n  // TODO: this is all lame, refactor meeee\n  var finished = false\n  var self = this\n  var res = this.res\n\n  // pipe\n  var stream = fs.createReadStream(path, options)\n  this.emit('stream', stream)\n  stream.pipe(res)\n\n  // response finished, done with the fd\n  onFinished(res, function onfinished () {\n    finished = true\n    destroy(stream)\n  })\n\n  // error handling code-smell\n  stream.on('error', function onerror (err) {\n    // request already finished\n    if (finished) return\n\n    // clean up stream\n    finished = true\n    destroy(stream)\n\n    // error\n    self.onStatError(err)\n  })\n\n  // end\n  stream.on('end', function onend () {\n    self.emit('end')\n  })\n}\n\n/**\n * Set content-type based on `path`\n * if it hasn't been explicitly set.\n *\n * @param {String} path\n * @api private\n */\n\nSendStream.prototype.type = function type (path) {\n  var res = this.res\n\n  if (res.getHeader('Content-Type')) return\n\n  var type = mime.lookup(path)\n\n  if (!type) {\n    debug('no content-type')\n    return\n  }\n\n  var charset = mime.charsets.lookup(type)\n\n  debug('content-type %s', type)\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\n}\n\n/**\n * Set response header fields, most\n * fields may be pre-defined.\n *\n * @param {String} path\n * @param {Object} stat\n * @api private\n */\n\nSendStream.prototype.setHeader = function setHeader (path, stat) {\n  var res = this.res\n\n  this.emit('headers', res, path, stat)\n\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\n    debug('accept ranges')\n    res.setHeader('Accept-Ranges', 'bytes')\n  }\n\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\n\n    if (this._immutable) {\n      cacheControl += ', immutable'\n    }\n\n    debug('cache-control %s', cacheControl)\n    res.setHeader('Cache-Control', cacheControl)\n  }\n\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\n    var modified = stat.mtime.toUTCString()\n    debug('modified %s', modified)\n    res.setHeader('Last-Modified', modified)\n  }\n\n  if (this._etag && !res.getHeader('ETag')) {\n    var val = etag(stat)\n    debug('etag %s', val)\n    res.setHeader('ETag', val)\n  }\n}\n\n/**\n * Clear all headers from a response.\n *\n * @param {object} res\n * @private\n */\n\nfunction clearHeaders (res) {\n  var headers = getHeaderNames(res)\n\n  for (var i = 0; i < headers.length; i++) {\n    res.removeHeader(headers[i])\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n *\n * @param {string} str\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Determine if path parts contain a dotfile.\n *\n * @api private\n */\n\nfunction containsDotFile (parts) {\n  for (var i = 0; i < parts.length; i++) {\n    var part = parts[i]\n    if (part.length > 1 && part[0] === '.') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Create a Content-Range header.\n *\n * @param {string} type\n * @param {number} size\n * @param {array} [range]\n */\n\nfunction contentRange (type, size, range) {\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\n}\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * decodeURIComponent.\n *\n * Allows V8 to only deoptimize this fn instead of all\n * of send().\n *\n * @param {String} path\n * @api private\n */\n\nfunction decode (path) {\n  try {\n    return decodeURIComponent(path)\n  } catch (err) {\n    return -1\n  }\n}\n\n/**\n * Get the header names on a respnse.\n *\n * @param {object} res\n * @returns {array[string]}\n * @private\n */\n\nfunction getHeaderNames (res) {\n  return typeof res.getHeaderNames !== 'function'\n    ? Object.keys(res._headers || {})\n    : res.getHeaderNames()\n}\n\n/**\n * Determine if emitter has listeners of a given type.\n *\n * The way to do this check is done three different ways in Node.js >= 0.8\n * so this consolidates them into a minimal set using instance methods.\n *\n * @param {EventEmitter} emitter\n * @param {string} type\n * @returns {boolean}\n * @private\n */\n\nfunction hasListeners (emitter, type) {\n  var count = typeof emitter.listenerCount !== 'function'\n    ? emitter.listeners(type).length\n    : emitter.listenerCount(type)\n\n  return count > 0\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Normalize the index option into an array.\n *\n * @param {boolean|string|array} val\n * @param {string} name\n * @private\n */\n\nfunction normalizeList (val, name) {\n  var list = [].concat(val || [])\n\n  for (var i = 0; i < list.length; i++) {\n    if (typeof list[i] !== 'string') {\n      throw new TypeError(name + ' must be array of strings or false')\n    }\n  }\n\n  return list\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n\n/**\n * Set an object of headers on a response.\n *\n * @param {object} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  var keys = Object.keys(headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass CustomError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nclass TimeoutError extends CustomError {}\n\nmodule.exports = {\n  TimeoutError,\n};\n","module.exports = require(\"assert\");","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","'use strict';\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\nmodule.exports = process.platform === 'win32' ? win32 : posix;\nmodule.exports.posix = posix;\nmodule.exports.win32 = win32;\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper, assert} = require('./helper');\nconst debugProtocol = require('debug')('puppeteer:protocol');\nconst debugSession = require('debug')('puppeteer:session');\nconst EventEmitter = require('events');\n\nclass Connection extends EventEmitter {\n  /**\n   * @param {string} url\n   * @param {!Puppeteer.ConnectionTransport} transport\n   * @param {number=} delay\n   */\n  constructor(url, transport, delay = 0) {\n    super();\n    this._url = url;\n    this._lastId = 0;\n    /** @type {!Map<number, {resolve: function, reject: function, error: !Error, method: string}>}*/\n    this._callbacks = new Map();\n    this._delay = delay;\n\n    this._transport = transport;\n    this._transport.onmessage = this._onMessage.bind(this);\n    this._transport.onclose = this._onClose.bind(this);\n    /** @type {!Map<string, !CDPSession>}*/\n    this._sessions = new Map();\n    this._closed = false;\n  }\n\n  /**\n   * @param {!CDPSession} session\n   * @return {!Connection}\n   */\n  static fromSession(session) {\n    let connection = session._connection;\n    // TODO(lushnikov): move to flatten protocol to avoid this.\n    while (connection instanceof CDPSession)\n      connection = connection._connection;\n    return connection;\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Object=} params\n   * @return {!Promise<?Object>}\n   */\n  send(method, params = {}) {\n    const id = ++this._lastId;\n    const message = JSON.stringify({id, method, params});\n    debugProtocol('SEND ► ' + message);\n    this._transport.send(message);\n    return new Promise((resolve, reject) => {\n      this._callbacks.set(id, {resolve, reject, error: new Error(), method});\n    });\n  }\n\n  /**\n   * @param {string} message\n   */\n  async _onMessage(message) {\n    if (this._delay)\n      await new Promise(f => setTimeout(f, this._delay));\n    debugProtocol('◀ RECV ' + message);\n    const object = JSON.parse(message);\n    if (object.id) {\n      const callback = this._callbacks.get(object.id);\n      // Callbacks could be all rejected if someone has called `.dispose()`.\n      if (callback) {\n        this._callbacks.delete(object.id);\n        if (object.error)\n          callback.reject(createProtocolError(callback.error, callback.method, object));\n        else\n          callback.resolve(object.result);\n      }\n    } else {\n      if (object.method === 'Target.receivedMessageFromTarget') {\n        const session = this._sessions.get(object.params.sessionId);\n        if (session)\n          session._onMessage(object.params.message);\n      } else if (object.method === 'Target.detachedFromTarget') {\n        const session = this._sessions.get(object.params.sessionId);\n        if (session)\n          session._onClosed();\n        this._sessions.delete(object.params.sessionId);\n      } else {\n        this.emit(object.method, object.params);\n      }\n    }\n  }\n\n  _onClose() {\n    if (this._closed)\n      return;\n    this._closed = true;\n    this._transport.onmessage = null;\n    this._transport.onclose = null;\n    for (const callback of this._callbacks.values())\n      callback.reject(rewriteError(callback.error, `Protocol error (${callback.method}): Target closed.`));\n    this._callbacks.clear();\n    for (const session of this._sessions.values())\n      session._onClosed();\n    this._sessions.clear();\n    this.emit(Connection.Events.Disconnected);\n  }\n\n  dispose() {\n    this._onClose();\n    this._transport.close();\n  }\n\n  /**\n   * @param {Protocol.Target.TargetInfo} targetInfo\n   * @return {!Promise<!CDPSession>}\n   */\n  async createSession(targetInfo) {\n    const {sessionId} = await this.send('Target.attachToTarget', {targetId: targetInfo.targetId});\n    const session = new CDPSession(this, targetInfo.type, sessionId);\n    this._sessions.set(sessionId, session);\n    return session;\n  }\n}\n\nConnection.Events = {\n  Disconnected: Symbol('Connection.Events.Disconnected'),\n};\n\nclass CDPSession extends EventEmitter {\n  /**\n   * @param {!Connection|!CDPSession} connection\n   * @param {string} targetType\n   * @param {string} sessionId\n   */\n  constructor(connection, targetType, sessionId) {\n    super();\n    this._lastId = 0;\n    /** @type {!Map<number, {resolve: function, reject: function, error: !Error, method: string}>}*/\n    this._callbacks = new Map();\n    /** @type {null|Connection|CDPSession} */\n    this._connection = connection;\n    this._targetType = targetType;\n    this._sessionId = sessionId;\n    /** @type {!Map<string, !CDPSession>}*/\n    this._sessions = new Map();\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Object=} params\n   * @return {!Promise<?Object>}\n   */\n  send(method, params = {}) {\n    if (!this._connection)\n      return Promise.reject(new Error(`Protocol error (${method}): Session closed. Most likely the ${this._targetType} has been closed.`));\n    const id = ++this._lastId;\n    const message = JSON.stringify({id, method, params});\n    debugSession('SEND ► ' + message);\n    this._connection.send('Target.sendMessageToTarget', {sessionId: this._sessionId, message}).catch(e => {\n      // The response from target might have been already dispatched.\n      if (!this._callbacks.has(id))\n        return;\n      const callback = this._callbacks.get(id);\n      this._callbacks.delete(id);\n      callback.reject(rewriteError(callback.error, e && e.message));\n    });\n    return new Promise((resolve, reject) => {\n      this._callbacks.set(id, {resolve, reject, error: new Error(), method});\n    });\n  }\n\n  /**\n   * @param {string} message\n   */\n  _onMessage(message) {\n    debugSession('◀ RECV ' + message);\n    const object = JSON.parse(message);\n    if (object.id && this._callbacks.has(object.id)) {\n      const callback = this._callbacks.get(object.id);\n      this._callbacks.delete(object.id);\n      if (object.error)\n        callback.reject(createProtocolError(callback.error, callback.method, object));\n      else\n        callback.resolve(object.result);\n    } else {\n      if (object.method === 'Target.receivedMessageFromTarget') {\n        const session = this._sessions.get(object.params.sessionId);\n        if (session)\n          session._onMessage(object.params.message);\n      } else if (object.method === 'Target.detachedFromTarget') {\n        const session = this._sessions.get(object.params.sessionId);\n        if (session) {\n          session._onClosed();\n          this._sessions.delete(object.params.sessionId);\n        }\n      }\n      assert(!object.id);\n      this.emit(object.method, object.params);\n    }\n  }\n\n  async detach() {\n    if (!this._connection)\n      throw new Error(`Session already detached. Most likely the ${this._targetType} has been closed.`);\n    await this._connection.send('Target.detachFromTarget',  {sessionId: this._sessionId});\n  }\n\n  _onClosed() {\n    for (const callback of this._callbacks.values())\n      callback.reject(rewriteError(callback.error, `Protocol error (${callback.method}): Target closed.`));\n    this._callbacks.clear();\n    this._connection = null;\n    this.emit(CDPSession.Events.Disconnected);\n  }\n\n  /**\n   * @param {string} targetType\n   * @param {string} sessionId\n   */\n  _createSession(targetType, sessionId) {\n    const session = new CDPSession(this, targetType, sessionId);\n    this._sessions.set(sessionId, session);\n    return session;\n  }\n}\n\nCDPSession.Events = {\n  Disconnected: Symbol('CDPSession.Events.Disconnected'),\n};\n\nhelper.tracePublicAPI(CDPSession);\n\n/**\n * @param {!Error} error\n * @param {string} method\n * @param {{error: {message: string, data: any}}} object\n * @return {!Error}\n */\nfunction createProtocolError(error, method, object) {\n  let message = `Protocol error (${method}): ${object.error.message}`;\n  if ('data' in object.error)\n    message += ` ${object.error.data}`;\n  return rewriteError(error, message);\n}\n\n/**\n * @param {!Error} error\n * @param {string} message\n * @return {!Error}\n */\nfunction rewriteError(error, message) {\n  error.message = message;\n  return error;\n}\n\nmodule.exports = {Connection, CDPSession};\n","'use strict';\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  const target = Buffer.allocUnsafe(totalLength);\n  var offset = 0;\n\n  for (var i = 0; i < list.length; i++) {\n    const buf = list[i];\n    buf.copy(target, offset);\n    offset += buf.length;\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    },\n    concat\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = { concat, mask: _mask, unmask: _unmask };\n}\n","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass CustomError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\nclass TimeoutError extends CustomError {}\n\nmodule.exports = {\n  TimeoutError,\n};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper, assert} = require('./helper');\nconst debugProtocol = require('debug')('puppeteer:protocol');\nconst debugSession = require('debug')('puppeteer:session');\nconst EventEmitter = require('events');\n\nclass Connection extends EventEmitter {\n  /**\n   * @param {string} url\n   * @param {!Puppeteer.ConnectionTransport} transport\n   * @param {number=} delay\n   */\n  constructor(url, transport, delay = 0) {\n    super();\n    this._url = url;\n    this._lastId = 0;\n    /** @type {!Map<number, {resolve: function, reject: function, error: !Error, method: string}>}*/\n    this._callbacks = new Map();\n    this._delay = delay;\n\n    this._transport = transport;\n    this._transport.onmessage = this._onMessage.bind(this);\n    this._transport.onclose = this._onClose.bind(this);\n    /** @type {!Map<string, !CDPSession>}*/\n    this._sessions = new Map();\n    this._closed = false;\n  }\n\n  /**\n   * @param {!CDPSession} session\n   * @return {!Connection}\n   */\n  static fromSession(session) {\n    let connection = session._connection;\n    // TODO(lushnikov): move to flatten protocol to avoid this.\n    while (connection instanceof CDPSession)\n      connection = connection._connection;\n    return connection;\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Object=} params\n   * @return {!Promise<?Object>}\n   */\n  send(method, params = {}) {\n    const id = ++this._lastId;\n    const message = JSON.stringify({id, method, params});\n    debugProtocol('SEND ► ' + message);\n    this._transport.send(message);\n    return new Promise((resolve, reject) => {\n      this._callbacks.set(id, {resolve, reject, error: new Error(), method});\n    });\n  }\n\n  /**\n   * @param {string} message\n   */\n  /* async */ _onMessage(message) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (this._delay)\n      (yield new Promise(f => setTimeout(f, this._delay)));\n    debugProtocol('◀ RECV ' + message);\n    const object = JSON.parse(message);\n    if (object.id) {\n      const callback = this._callbacks.get(object.id);\n      // Callbacks could be all rejected if someone has called `.dispose()`.\n      if (callback) {\n        this._callbacks.delete(object.id);\n        if (object.error)\n          callback.reject(createProtocolError(callback.error, callback.method, object));\n        else\n          callback.resolve(object.result);\n      }\n    } else {\n      if (object.method === 'Target.receivedMessageFromTarget') {\n        const session = this._sessions.get(object.params.sessionId);\n        if (session)\n          session._onMessage(object.params.message);\n      } else if (object.method === 'Target.detachedFromTarget') {\n        const session = this._sessions.get(object.params.sessionId);\n        if (session)\n          session._onClosed();\n        this._sessions.delete(object.params.sessionId);\n      } else {\n        this.emit(object.method, object.params);\n      }\n    }\n  });}\n\n  _onClose() {\n    if (this._closed)\n      return;\n    this._closed = true;\n    this._transport.onmessage = null;\n    this._transport.onclose = null;\n    for (const callback of this._callbacks.values())\n      callback.reject(rewriteError(callback.error, `Protocol error (${callback.method}): Target closed.`));\n    this._callbacks.clear();\n    for (const session of this._sessions.values())\n      session._onClosed();\n    this._sessions.clear();\n    this.emit(Connection.Events.Disconnected);\n  }\n\n  dispose() {\n    this._onClose();\n    this._transport.close();\n  }\n\n  /**\n   * @param {Protocol.Target.TargetInfo} targetInfo\n   * @return {!Promise<!CDPSession>}\n   */\n  /* async */ createSession(targetInfo) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {sessionId} = (yield this.send('Target.attachToTarget', {targetId: targetInfo.targetId}));\n    const session = new CDPSession(this, targetInfo.type, sessionId);\n    this._sessions.set(sessionId, session);\n    return session;\n  });}\n}\n\nConnection.Events = {\n  Disconnected: Symbol('Connection.Events.Disconnected'),\n};\n\nclass CDPSession extends EventEmitter {\n  /**\n   * @param {!Connection|!CDPSession} connection\n   * @param {string} targetType\n   * @param {string} sessionId\n   */\n  constructor(connection, targetType, sessionId) {\n    super();\n    this._lastId = 0;\n    /** @type {!Map<number, {resolve: function, reject: function, error: !Error, method: string}>}*/\n    this._callbacks = new Map();\n    /** @type {null|Connection|CDPSession} */\n    this._connection = connection;\n    this._targetType = targetType;\n    this._sessionId = sessionId;\n    /** @type {!Map<string, !CDPSession>}*/\n    this._sessions = new Map();\n  }\n\n  /**\n   * @param {string} method\n   * @param {!Object=} params\n   * @return {!Promise<?Object>}\n   */\n  send(method, params = {}) {\n    if (!this._connection)\n      return Promise.reject(new Error(`Protocol error (${method}): Session closed. Most likely the ${this._targetType} has been closed.`));\n    const id = ++this._lastId;\n    const message = JSON.stringify({id, method, params});\n    debugSession('SEND ► ' + message);\n    this._connection.send('Target.sendMessageToTarget', {sessionId: this._sessionId, message}).catch(e => {\n      // The response from target might have been already dispatched.\n      if (!this._callbacks.has(id))\n        return;\n      const callback = this._callbacks.get(id);\n      this._callbacks.delete(id);\n      callback.reject(rewriteError(callback.error, e && e.message));\n    });\n    return new Promise((resolve, reject) => {\n      this._callbacks.set(id, {resolve, reject, error: new Error(), method});\n    });\n  }\n\n  /**\n   * @param {string} message\n   */\n  _onMessage(message) {\n    debugSession('◀ RECV ' + message);\n    const object = JSON.parse(message);\n    if (object.id && this._callbacks.has(object.id)) {\n      const callback = this._callbacks.get(object.id);\n      this._callbacks.delete(object.id);\n      if (object.error)\n        callback.reject(createProtocolError(callback.error, callback.method, object));\n      else\n        callback.resolve(object.result);\n    } else {\n      if (object.method === 'Target.receivedMessageFromTarget') {\n        const session = this._sessions.get(object.params.sessionId);\n        if (session)\n          session._onMessage(object.params.message);\n      } else if (object.method === 'Target.detachedFromTarget') {\n        const session = this._sessions.get(object.params.sessionId);\n        if (session) {\n          session._onClosed();\n          this._sessions.delete(object.params.sessionId);\n        }\n      }\n      assert(!object.id);\n      this.emit(object.method, object.params);\n    }\n  }\n\n  /* async */ detach() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (!this._connection)\n      throw new Error(`Session already detached. Most likely the ${this._targetType} has been closed.`);\n    (yield this._connection.send('Target.detachFromTarget',  {sessionId: this._sessionId}));\n  });}\n\n  _onClosed() {\n    for (const callback of this._callbacks.values())\n      callback.reject(rewriteError(callback.error, `Protocol error (${callback.method}): Target closed.`));\n    this._callbacks.clear();\n    this._connection = null;\n    this.emit(CDPSession.Events.Disconnected);\n  }\n\n  /**\n   * @param {string} targetType\n   * @param {string} sessionId\n   */\n  _createSession(targetType, sessionId) {\n    const session = new CDPSession(this, targetType, sessionId);\n    this._sessions.set(sessionId, session);\n    return session;\n  }\n}\n\nCDPSession.Events = {\n  Disconnected: Symbol('CDPSession.Events.Disconnected'),\n};\n\nhelper.tracePublicAPI(CDPSession);\n\n/**\n * @param {!Error} error\n * @param {string} method\n * @param {{error: {message: string, data: any}}} object\n * @return {!Error}\n */\nfunction createProtocolError(error, method, object) {\n  let message = `Protocol error (${method}): ${object.error.message}`;\n  if ('data' in object.error)\n    message += ` ${object.error.data}`;\n  return rewriteError(error, message);\n}\n\n/**\n * @param {!Error} error\n * @param {string} message\n * @return {!Error}\n */\nfunction rewriteError(error, message) {\n  error.message = message;\n  return error;\n}\n\nmodule.exports = {Connection, CDPSession};\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*!\n * depd\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar EventEmitter = require('events').EventEmitter\n\n/**\n * Module exports.\n * @public\n */\n\nlazyProperty(module.exports, 'callSiteToString', function callSiteToString () {\n  var limit = Error.stackTraceLimit\n  var obj = {}\n  var prep = Error.prepareStackTrace\n\n  function prepareObjectStackTrace (obj, stack) {\n    return stack\n  }\n\n  Error.prepareStackTrace = prepareObjectStackTrace\n  Error.stackTraceLimit = 2\n\n  // capture the stack\n  Error.captureStackTrace(obj)\n\n  // slice the stack\n  var stack = obj.stack.slice()\n\n  Error.prepareStackTrace = prep\n  Error.stackTraceLimit = limit\n\n  return stack[0].toString ? toString : require('./callsite-tostring')\n})\n\nlazyProperty(module.exports, 'eventListenerCount', function eventListenerCount () {\n  return EventEmitter.listenerCount || require('./event-listener-count')\n})\n\n/**\n * Define a lazy property.\n */\n\nfunction lazyProperty (obj, prop, getter) {\n  function get () {\n    var val = getter()\n\n    Object.defineProperty(obj, prop, {\n      configurable: true,\n      enumerable: true,\n      value: val\n    })\n\n    return val\n  }\n\n  Object.defineProperty(obj, prop, {\n    configurable: true,\n    enumerable: true,\n    get: get\n  })\n}\n\n/**\n * Call toString() on the obj\n */\n\nfunction toString (obj) {\n  return obj.toString()\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\"use strict\";\n\n// Some environments don't have global Buffer (e.g. React Native).\n// Solution would be installing npm modules \"buffer\" and \"stream\" explicitly.\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n\n// Load extensions in Node. All of them are omitted in Browserify build via 'browser' field in package.json.\nvar nodeVer = typeof process !== 'undefined' && process.versions && process.versions.node;\nif (nodeVer) {\n\n    // Load streaming support in Node v0.10+\n    var nodeVerArr = nodeVer.split(\".\").map(Number);\n    if (nodeVerArr[0] > 0 || nodeVerArr[1] >= 10) {\n        require(\"./streams\")(iconv);\n    }\n\n    // Load Node primitive extensions.\n    require(\"./extend-node\")(iconv);\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: javascript files use encoding different from utf-8. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = unpipe\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data')\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe()\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener\n  var listeners = stream.listeners('close')\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i]\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream)\n  }\n}\n","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    var obj;\n\n    while (queue.length) {\n        var item = queue.pop();\n        obj = item.obj[item.prop];\n\n        if (Array.isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n\n    return obj;\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            if (options.plainObjects || options.allowPrototypes || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nvar encode = function encode(str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    return compactQueue(queue);\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    merge: merge\n};\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n","module.exports = require(\"querystring\");","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Route = require('./route');\nvar Layer = require('./layer');\nvar methods = require('methods');\nvar mixin = require('utils-merge');\nvar debug = require('debug')('express:router');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar parseUrl = require('parseurl');\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Module variables.\n * @private\n */\n\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Initialize a new `Router` with the given `options`.\n *\n * @param {Object} [options]\n * @return {Router} which is an callable function\n * @public\n */\n\nvar proto = module.exports = function(options) {\n  var opts = options || {};\n\n  function router(req, res, next) {\n    router.handle(req, res, next);\n  }\n\n  // mixin Router class functions\n  setPrototypeOf(router, proto)\n\n  router.params = {};\n  router._params = [];\n  router.caseSensitive = opts.caseSensitive;\n  router.mergeParams = opts.mergeParams;\n  router.strict = opts.strict;\n  router.stack = [];\n\n  return router;\n};\n\n/**\n * Map the given param placeholder `name`(s) to the given callback.\n *\n * Parameter mapping is used to provide pre-conditions to routes\n * which use normalized placeholders. For example a _:user_id_ parameter\n * could automatically load a user's information from the database without\n * any additional code,\n *\n * The callback uses the same signature as middleware, the only difference\n * being that the value of the placeholder is passed, in this case the _id_\n * of the user. Once the `next()` function is invoked, just like middleware\n * it will continue on to execute the route, or subsequent parameter functions.\n *\n * Just like in middleware, you must either respond to the request or call next\n * to avoid stalling the request.\n *\n *  app.param('user_id', function(req, res, next, id){\n *    User.find(id, function(err, user){\n *      if (err) {\n *        return next(err);\n *      } else if (!user) {\n *        return next(new Error('failed to load user'));\n *      }\n *      req.user = user;\n *      next();\n *    });\n *  });\n *\n * @param {String} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\nproto.param = function param(name, fn) {\n  // param logic\n  if (typeof name === 'function') {\n    deprecate('router.param(fn): Refactor to use path params');\n    this._params.push(name);\n    return;\n  }\n\n  // apply param functions\n  var params = this._params;\n  var len = params.length;\n  var ret;\n\n  if (name[0] === ':') {\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.substr(1)) + ', fn) instead');\n    name = name.substr(1);\n  }\n\n  for (var i = 0; i < len; ++i) {\n    if (ret = params[i](name, fn)) {\n      fn = ret;\n    }\n  }\n\n  // ensure we end up with a\n  // middleware function\n  if ('function' !== typeof fn) {\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\n  }\n\n  (this.params[name] = this.params[name] || []).push(fn);\n  return this;\n};\n\n/**\n * Dispatch a req, res into the router.\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var self = this;\n\n  debug('dispatching %s %s', req.method, req.url);\n\n  var idx = 0;\n  var protohost = getProtohost(req.url) || ''\n  var removed = '';\n  var slashAdded = false;\n  var paramcalled = {};\n\n  // store options for OPTIONS request\n  // only used if OPTIONS request\n  var options = [];\n\n  // middleware and routes\n  var stack = self.stack;\n\n  // manage inter-router variables\n  var parentParams = req.params;\n  var parentUrl = req.baseUrl || '';\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\n\n  // setup next layer\n  req.next = next;\n\n  // for options requests, respond with a default if nothing else responds\n  if (req.method === 'OPTIONS') {\n    done = wrap(done, function(old, err) {\n      if (err || options.length === 0) return old(err);\n      sendOptionsResponse(res, options, old);\n    });\n  }\n\n  // setup basic req values\n  req.baseUrl = parentUrl;\n  req.originalUrl = req.originalUrl || req.url;\n\n  next();\n\n  function next(err) {\n    var layerError = err === 'route'\n      ? null\n      : err;\n\n    // remove added slash\n    if (slashAdded) {\n      req.url = req.url.substr(1);\n      slashAdded = false;\n    }\n\n    // restore altered req.url\n    if (removed.length !== 0) {\n      req.baseUrl = parentUrl;\n      req.url = protohost + removed + req.url.substr(protohost.length);\n      removed = '';\n    }\n\n    // signal to exit router\n    if (layerError === 'router') {\n      setImmediate(done, null)\n      return\n    }\n\n    // no more matching layers\n    if (idx >= stack.length) {\n      setImmediate(done, layerError);\n      return;\n    }\n\n    // get pathname of request\n    var path = getPathname(req);\n\n    if (path == null) {\n      return done(layerError);\n    }\n\n    // find next matching layer\n    var layer;\n    var match;\n    var route;\n\n    while (match !== true && idx < stack.length) {\n      layer = stack[idx++];\n      match = matchLayer(layer, path);\n      route = layer.route;\n\n      if (typeof match !== 'boolean') {\n        // hold on to layerError\n        layerError = layerError || match;\n      }\n\n      if (match !== true) {\n        continue;\n      }\n\n      if (!route) {\n        // process non-route handlers normally\n        continue;\n      }\n\n      if (layerError) {\n        // routes do not match with a pending error\n        match = false;\n        continue;\n      }\n\n      var method = req.method;\n      var has_method = route._handles_method(method);\n\n      // build up automatic options response\n      if (!has_method && method === 'OPTIONS') {\n        appendMethods(options, route._options());\n      }\n\n      // don't even bother matching route\n      if (!has_method && method !== 'HEAD') {\n        match = false;\n        continue;\n      }\n    }\n\n    // no match\n    if (match !== true) {\n      return done(layerError);\n    }\n\n    // store route for dispatch on change\n    if (route) {\n      req.route = route;\n    }\n\n    // Capture one-time layer values\n    req.params = self.mergeParams\n      ? mergeParams(layer.params, parentParams)\n      : layer.params;\n    var layerPath = layer.path;\n\n    // this should be done for the layer\n    self.process_params(layer, paramcalled, req, res, function (err) {\n      if (err) {\n        return next(layerError || err);\n      }\n\n      if (route) {\n        return layer.handle_request(req, res, next);\n      }\n\n      trim_prefix(layer, layerError, layerPath, path);\n    });\n  }\n\n  function trim_prefix(layer, layerError, layerPath, path) {\n    if (layerPath.length !== 0) {\n      // Validate path breaks on a path separator\n      var c = path[layerPath.length]\n      if (c && c !== '/' && c !== '.') return next(layerError)\n\n      // Trim off the part of the url that matches the route\n      // middleware (.use stuff) needs to have the path stripped\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\n      removed = layerPath;\n      req.url = protohost + req.url.substr(protohost.length + removed.length);\n\n      // Ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n\n      // Setup base URL (no trailing slash)\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\n        ? removed.substring(0, removed.length - 1)\n        : removed);\n    }\n\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\n\n    if (layerError) {\n      layer.handle_error(layerError, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Process any parameters for the layer.\n * @private\n */\n\nproto.process_params = function process_params(layer, called, req, res, done) {\n  var params = this.params;\n\n  // captured parameters from the layer, keys and values\n  var keys = layer.keys;\n\n  // fast track\n  if (!keys || keys.length === 0) {\n    return done();\n  }\n\n  var i = 0;\n  var name;\n  var paramIndex = 0;\n  var key;\n  var paramVal;\n  var paramCallbacks;\n  var paramCalled;\n\n  // process params in order\n  // param callbacks can be async\n  function param(err) {\n    if (err) {\n      return done(err);\n    }\n\n    if (i >= keys.length ) {\n      return done();\n    }\n\n    paramIndex = 0;\n    key = keys[i++];\n    name = key.name;\n    paramVal = req.params[name];\n    paramCallbacks = params[name];\n    paramCalled = called[name];\n\n    if (paramVal === undefined || !paramCallbacks) {\n      return param();\n    }\n\n    // param previously called with same value or error occurred\n    if (paramCalled && (paramCalled.match === paramVal\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\n      // restore value\n      req.params[name] = paramCalled.value;\n\n      // next param\n      return param(paramCalled.error);\n    }\n\n    called[name] = paramCalled = {\n      error: null,\n      match: paramVal,\n      value: paramVal\n    };\n\n    paramCallback();\n  }\n\n  // single param callbacks\n  function paramCallback(err) {\n    var fn = paramCallbacks[paramIndex++];\n\n    // store updated value\n    paramCalled.value = req.params[key.name];\n\n    if (err) {\n      // store error\n      paramCalled.error = err;\n      param(err);\n      return;\n    }\n\n    if (!fn) return param();\n\n    try {\n      fn(req, res, paramCallback, paramVal, key.name);\n    } catch (e) {\n      paramCallback(e);\n    }\n  }\n\n  param();\n};\n\n/**\n * Use the given middleware function, with optional path, defaulting to \"/\".\n *\n * Use (like `.all`) will run for any http METHOD, but it will not add\n * handlers for those methods so OPTIONS requests will not consider `.use`\n * functions even if they could respond.\n *\n * The other difference is that _route_ path is stripped and not visible\n * to the handler function. The main effect of this feature is that mounted\n * handlers can operate without any code changes regardless of the \"prefix\"\n * pathname.\n *\n * @public\n */\n\nproto.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate router.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var callbacks = flatten(slice.call(arguments, offset));\n\n  if (callbacks.length === 0) {\n    throw new TypeError('Router.use() requires a middleware function')\n  }\n\n  for (var i = 0; i < callbacks.length; i++) {\n    var fn = callbacks[i];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\n    }\n\n    // add the middleware\n    debug('use %o %s', path, fn.name || '<anonymous>')\n\n    var layer = new Layer(path, {\n      sensitive: this.caseSensitive,\n      strict: false,\n      end: false\n    }, fn);\n\n    layer.route = undefined;\n\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\n/**\n * Create a new Route for the given path.\n *\n * Each route contains a separate middleware stack and VERB handlers.\n *\n * See the Route api documentation for details on adding handlers\n * and middleware to routes.\n *\n * @param {String} path\n * @return {Route}\n * @public\n */\n\nproto.route = function route(path) {\n  var route = new Route(path);\n\n  var layer = new Layer(path, {\n    sensitive: this.caseSensitive,\n    strict: this.strict,\n    end: true\n  }, route.dispatch.bind(route));\n\n  layer.route = route;\n\n  this.stack.push(layer);\n  return route;\n};\n\n// create Router#VERB functions\nmethods.concat('all').forEach(function(method){\n  proto[method] = function(path){\n    var route = this.route(path)\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n// append methods to a list of methods\nfunction appendMethods(list, addition) {\n  for (var i = 0; i < addition.length; i++) {\n    var method = addition[i];\n    if (list.indexOf(method) === -1) {\n      list.push(method);\n    }\n  }\n}\n\n// get pathname of request\nfunction getPathname(req) {\n  try {\n    return parseUrl(req).pathname;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n// Get get protocol + host for a URL\nfunction getProtohost(url) {\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\n    return undefined\n  }\n\n  var searchIndex = url.indexOf('?')\n  var pathLength = searchIndex !== -1\n    ? searchIndex\n    : url.length\n  var fqdnIndex = url.substr(0, pathLength).indexOf('://')\n\n  return fqdnIndex !== -1\n    ? url.substr(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined\n}\n\n// get type for error message\nfunction gettype(obj) {\n  var type = typeof obj;\n\n  if (type !== 'object') {\n    return type;\n  }\n\n  // inspect [[Class]] for objects\n  return toString.call(obj)\n    .replace(objectRegExp, '$1');\n}\n\n/**\n * Match path to a layer.\n *\n * @param {Layer} layer\n * @param {string} path\n * @private\n */\n\nfunction matchLayer(layer, path) {\n  try {\n    return layer.match(path);\n  } catch (err) {\n    return err;\n  }\n}\n\n// merge params with parent params\nfunction mergeParams(params, parent) {\n  if (typeof parent !== 'object' || !parent) {\n    return params;\n  }\n\n  // make copy of parent for base\n  var obj = mixin({}, parent);\n\n  // simple non-numeric merging\n  if (!(0 in params) || !(0 in parent)) {\n    return mixin(obj, params);\n  }\n\n  var i = 0;\n  var o = 0;\n\n  // determine numeric gaps\n  while (i in params) {\n    i++;\n  }\n\n  while (o in parent) {\n    o++;\n  }\n\n  // offset numeric indices in params before merge\n  for (i--; i >= 0; i--) {\n    params[i + o] = params[i];\n\n    // create holes for the merge when necessary\n    if (i < o) {\n      delete params[i];\n    }\n  }\n\n  return mixin(obj, params);\n}\n\n// restore obj props after function\nfunction restore(fn, obj) {\n  var props = new Array(arguments.length - 2);\n  var vals = new Array(arguments.length - 2);\n\n  for (var i = 0; i < props.length; i++) {\n    props[i] = arguments[i + 2];\n    vals[i] = obj[props[i]];\n  }\n\n  return function () {\n    // restore vals\n    for (var i = 0; i < props.length; i++) {\n      obj[props[i]] = vals[i];\n    }\n\n    return fn.apply(this, arguments);\n  };\n}\n\n// send an OPTIONS response\nfunction sendOptionsResponse(res, options, next) {\n  try {\n    var body = options.join(',');\n    res.set('Allow', body);\n    res.send(body);\n  } catch (err) {\n    next(err);\n  }\n}\n\n// wrap a function\nfunction wrap(old, fn) {\n  return function proxy() {\n    var args = new Array(arguments.length + 1);\n\n    args[0] = old;\n    for (var i = 0, len = arguments.length; i < len; i++) {\n      args[i + 1] = arguments[i];\n    }\n\n    fn.apply(this, args);\n  };\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %o', path)\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    // signal to exit route\n    if (err && err === 'route') {\n      return done();\n    }\n\n    // signal to exit router\n    if (err && err === 'router') {\n      return done(err)\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires a callback function but got a ' + type\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\n        throw new Error(msg);\n      }\n\n      debug('%s %o', method, this.path)\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar pathRegexp = require('path-to-regexp');\nvar debug = require('debug')('express:router:layer');\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Layer;\n\nfunction Layer(path, options, fn) {\n  if (!(this instanceof Layer)) {\n    return new Layer(path, options, fn);\n  }\n\n  debug('new %o', path)\n  var opts = options || {};\n\n  this.handle = fn;\n  this.name = fn.name || '<anonymous>';\n  this.params = undefined;\n  this.path = undefined;\n  this.regexp = pathRegexp(path, this.keys = [], opts);\n\n  // set fast path flags\n  this.regexp.fast_star = path === '*'\n  this.regexp.fast_slash = path === '/' && opts.end === false\n}\n\n/**\n * Handle the error for the layer.\n *\n * @param {Error} error\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_error = function handle_error(error, req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length !== 4) {\n    // not a standard error handler\n    return next(error);\n  }\n\n  try {\n    fn(error, req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Handle the request for the layer.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {function} next\n * @api private\n */\n\nLayer.prototype.handle_request = function handle(req, res, next) {\n  var fn = this.handle;\n\n  if (fn.length > 3) {\n    // not a standard request handler\n    return next();\n  }\n\n  try {\n    fn(req, res, next);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Check if this route matches `path`, if so\n * populate `.params`.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nLayer.prototype.match = function match(path) {\n  var match\n\n  if (path != null) {\n    // fast path non-ending match for / (any path matches)\n    if (this.regexp.fast_slash) {\n      this.params = {}\n      this.path = ''\n      return true\n    }\n\n    // fast path for * (everything matched in a param)\n    if (this.regexp.fast_star) {\n      this.params = {'0': decode_param(path)}\n      this.path = path\n      return true\n    }\n\n    // match the path\n    match = this.regexp.exec(path)\n  }\n\n  if (!match) {\n    this.params = undefined;\n    this.path = undefined;\n    return false;\n  }\n\n  // store values\n  this.params = {};\n  this.path = match[0]\n\n  var keys = this.keys;\n  var params = this.params;\n\n  for (var i = 1; i < match.length; i++) {\n    var key = keys[i - 1];\n    var prop = key.name;\n    var val = decode_param(match[i])\n\n    if (val !== undefined || !(hasOwnProperty.call(params, prop))) {\n      params[prop] = val;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Decode param value.\n *\n * @param {string} val\n * @return {string}\n * @private\n */\n\nfunction decode_param(val) {\n  if (typeof val !== 'string' || val.length === 0) {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    if (err instanceof URIError) {\n      err.message = 'Failed to decode param \\'' + val + '\\'';\n      err.status = err.statusCode = 400;\n    }\n\n    throw err;\n  }\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n","/*!\n * content-disposition\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = contentDisposition\nmodule.exports.parse = parse\n\n/**\n * Module dependencies.\n */\n\nvar basename = require('path').basename\n\n/**\n * RegExp to match non attr-char, *after* encodeURIComponent (i.e. not including \"%\")\n */\n\nvar ENCODE_URL_ATTR_CHAR_REGEXP = /[\\x00-\\x20\"'()*,/:;<=>?@[\\\\\\]{}\\x7f]/g // eslint-disable-line no-control-regex\n\n/**\n * RegExp to match percent encoding escape.\n */\n\nvar HEX_ESCAPE_REGEXP = /%[0-9A-Fa-f]{2}/\nvar HEX_ESCAPE_REPLACE_REGEXP = /%([0-9A-Fa-f]{2})/g\n\n/**\n * RegExp to match non-latin1 characters.\n */\n\nvar NON_LATIN1_REGEXP = /[^\\x20-\\x7e\\xa0-\\xff]/g\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\n\nvar QESC_REGEXP = /\\\\([\\u0000-\\u007f])/g\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\n\nvar QUOTE_REGEXP = /([\\\\\"])/g\n\n/**\n * RegExp for various RFC 2616 grammar\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * HT            = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\n\nvar PARAM_REGEXP = /;[\\x09\\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*=[\\x09\\x20]*(\"(?:[\\x20!\\x23-\\x5b\\x5d-\\x7e\\x80-\\xff]|\\\\[\\x20-\\x7e])*\"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*/g // eslint-disable-line no-control-regex\nvar TEXT_REGEXP = /^[\\x20-\\x7e\\x80-\\xff]+$/\nvar TOKEN_REGEXP = /^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/\n\n/**\n * RegExp for various RFC 5987 grammar\n *\n * ext-value     = charset  \"'\" [ language ] \"'\" value-chars\n * charset       = \"UTF-8\" / \"ISO-8859-1\" / mime-charset\n * mime-charset  = 1*mime-charsetc\n * mime-charsetc = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"%\" / \"&\"\n *               / \"+\" / \"-\" / \"^\" / \"_\" / \"`\"\n *               / \"{\" / \"}\" / \"~\"\n * language      = ( 2*3ALPHA [ extlang ] )\n *               / 4ALPHA\n *               / 5*8ALPHA\n * extlang       = *3( \"-\" 3ALPHA )\n * value-chars   = *( pct-encoded / attr-char )\n * pct-encoded   = \"%\" HEXDIG HEXDIG\n * attr-char     = ALPHA / DIGIT\n *               / \"!\" / \"#\" / \"$\" / \"&\" / \"+\" / \"-\" / \".\"\n *               / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n */\n\nvar EXT_VALUE_REGEXP = /^([A-Za-z0-9!#$%&+\\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/\n\n/**\n * RegExp for various RFC 6266 grammar\n *\n * disposition-type = \"inline\" | \"attachment\" | disp-ext-type\n * disp-ext-type    = token\n * disposition-parm = filename-parm | disp-ext-parm\n * filename-parm    = \"filename\" \"=\" value\n *                  | \"filename*\" \"=\" ext-value\n * disp-ext-parm    = token \"=\" value\n *                  | ext-token \"=\" ext-value\n * ext-token        = <the characters in token, followed by \"*\">\n */\n\nvar DISPOSITION_TYPE_REGEXP = /^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\\x09\\x20]*(?:$|;)/ // eslint-disable-line no-control-regex\n\n/**\n * Create an attachment Content-Disposition header.\n *\n * @param {string} [filename]\n * @param {object} [options]\n * @param {string} [options.type=attachment]\n * @param {string|boolean} [options.fallback=true]\n * @return {string}\n * @api public\n */\n\nfunction contentDisposition (filename, options) {\n  var opts = options || {}\n\n  // get type\n  var type = opts.type || 'attachment'\n\n  // get parameters\n  var params = createparams(filename, opts.fallback)\n\n  // format into string\n  return format(new ContentDisposition(type, params))\n}\n\n/**\n * Create parameters object from filename and fallback.\n *\n * @param {string} [filename]\n * @param {string|boolean} [fallback=true]\n * @return {object}\n * @api private\n */\n\nfunction createparams (filename, fallback) {\n  if (filename === undefined) {\n    return\n  }\n\n  var params = {}\n\n  if (typeof filename !== 'string') {\n    throw new TypeError('filename must be a string')\n  }\n\n  // fallback defaults to true\n  if (fallback === undefined) {\n    fallback = true\n  }\n\n  if (typeof fallback !== 'string' && typeof fallback !== 'boolean') {\n    throw new TypeError('fallback must be a string or boolean')\n  }\n\n  if (typeof fallback === 'string' && NON_LATIN1_REGEXP.test(fallback)) {\n    throw new TypeError('fallback must be ISO-8859-1 string')\n  }\n\n  // restrict to file base name\n  var name = basename(filename)\n\n  // determine if name is suitable for quoted string\n  var isQuotedString = TEXT_REGEXP.test(name)\n\n  // generate fallback name\n  var fallbackName = typeof fallback !== 'string'\n    ? fallback && getlatin1(name)\n    : basename(fallback)\n  var hasFallback = typeof fallbackName === 'string' && fallbackName !== name\n\n  // set extended filename parameter\n  if (hasFallback || !isQuotedString || HEX_ESCAPE_REGEXP.test(name)) {\n    params['filename*'] = name\n  }\n\n  // set filename parameter\n  if (isQuotedString || hasFallback) {\n    params.filename = hasFallback\n      ? fallbackName\n      : name\n  }\n\n  return params\n}\n\n/**\n * Format object to Content-Disposition header.\n *\n * @param {object} obj\n * @param {string} obj.type\n * @param {object} [obj.parameters]\n * @return {string}\n * @api private\n */\n\nfunction format (obj) {\n  var parameters = obj.parameters\n  var type = obj.type\n\n  if (!type || typeof type !== 'string' || !TOKEN_REGEXP.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  // start with normalized type\n  var string = String(type).toLowerCase()\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      var val = param.substr(-1) === '*'\n        ? ustring(parameters[param])\n        : qstring(parameters[param])\n\n      string += '; ' + param + '=' + val\n    }\n  }\n\n  return string\n}\n\n/**\n * Decode a RFC 6987 field value (gracefully).\n *\n * @param {string} str\n * @return {string}\n * @api private\n */\n\nfunction decodefield (str) {\n  var match = EXT_VALUE_REGEXP.exec(str)\n\n  if (!match) {\n    throw new TypeError('invalid extended field value')\n  }\n\n  var charset = match[1].toLowerCase()\n  var encoded = match[2]\n  var value\n\n  // to binary string\n  var binary = encoded.replace(HEX_ESCAPE_REPLACE_REGEXP, pdecode)\n\n  switch (charset) {\n    case 'iso-8859-1':\n      value = getlatin1(binary)\n      break\n    case 'utf-8':\n      value = new Buffer(binary, 'binary').toString('utf8')\n      break\n    default:\n      throw new TypeError('unsupported charset in extended field')\n  }\n\n  return value\n}\n\n/**\n * Get ISO-8859-1 version of string.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction getlatin1 (val) {\n  // simple Unicode -> ISO-8859-1 transformation\n  return String(val).replace(NON_LATIN1_REGEXP, '?')\n}\n\n/**\n * Parse Content-Disposition header string.\n *\n * @param {string} string\n * @return {object}\n * @api private\n */\n\nfunction parse (string) {\n  if (!string || typeof string !== 'string') {\n    throw new TypeError('argument string is required')\n  }\n\n  var match = DISPOSITION_TYPE_REGEXP.exec(string)\n\n  if (!match) {\n    throw new TypeError('invalid type format')\n  }\n\n  // normalize type\n  var index = match[0].length\n  var type = match[1].toLowerCase()\n\n  var key\n  var names = []\n  var params = {}\n  var value\n\n  // calculate index to start at\n  index = PARAM_REGEXP.lastIndex = match[0].substr(-1) === ';'\n    ? index - 1\n    : index\n\n  // match parameters\n  while ((match = PARAM_REGEXP.exec(string))) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (names.indexOf(key) !== -1) {\n      throw new TypeError('invalid duplicate parameter')\n    }\n\n    names.push(key)\n\n    if (key.indexOf('*') + 1 === key.length) {\n      // decode extended value\n      key = key.slice(0, -1)\n      value = decodefield(value)\n\n      // overwrite existing value\n      params[key] = value\n      continue\n    }\n\n    if (typeof params[key] === 'string') {\n      continue\n    }\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(QESC_REGEXP, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  return new ContentDisposition(type, params)\n}\n\n/**\n * Percent decode a single character.\n *\n * @param {string} str\n * @param {string} hex\n * @return {string}\n * @api private\n */\n\nfunction pdecode (str, hex) {\n  return String.fromCharCode(parseInt(hex, 16))\n}\n\n/**\n * Percent encode a single character.\n *\n * @param {string} char\n * @return {string}\n * @api private\n */\n\nfunction pencode (char) {\n  var hex = String(char)\n    .charCodeAt(0)\n    .toString(16)\n    .toUpperCase()\n  return hex.length === 1\n    ? '%0' + hex\n    : '%' + hex\n}\n\n/**\n * Quote a string for HTTP.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring (val) {\n  var str = String(val)\n\n  return '\"' + str.replace(QUOTE_REGEXP, '\\\\$1') + '\"'\n}\n\n/**\n * Encode a Unicode string for HTTP (RFC 5987).\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction ustring (val) {\n  var str = String(val)\n\n  // percent encode as UTF-8\n  var encoded = encodeURIComponent(str)\n    .replace(ENCODE_URL_ATTR_CHAR_REGEXP, pencode)\n\n  return 'UTF-8\\'\\'' + encoded\n}\n\n/**\n * Class for parsed Content-Disposition header for v8 optimization\n */\n\nfunction ContentDisposition (type, parameters) {\n  this.type = type\n  this.parameters = parameters\n}\n","/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = etag\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require('crypto')\nvar Stats = require('fs').Stats\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27)\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity)\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity)\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16)\n  var size = stat.size.toString(16)\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n","/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n","/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @param {Object} [options]\n * @return {Array}\n * @public\n */\n\nfunction rangeParser (size, str, options) {\n  var index = str.indexOf('=')\n\n  if (index === -1) {\n    return -2\n  }\n\n  // split the range string\n  var arr = str.slice(index + 1).split(',')\n  var ranges = []\n\n  // add ranges type\n  ranges.type = str.slice(0, index)\n\n  // parse all ranges\n  for (var i = 0; i < arr.length; i++) {\n    var range = arr[i].split('-')\n    var start = parseInt(range[0], 10)\n    var end = parseInt(range[1], 10)\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end\n      end = size - 1\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) {\n      end = size - 1\n    }\n\n    // invalid or unsatisifiable\n    if (isNaN(start) || isNaN(end) || start > end || start < 0) {\n      continue\n    }\n\n    // add range\n    ranges.push({\n      start: start,\n      end: end\n    })\n  }\n\n  if (ranges.length < 1) {\n    // unsatisifiable\n    return -1\n  }\n\n  return options && options.combine\n    ? combineRanges(ranges)\n    : ranges\n}\n\n/**\n * Combine overlapping & adjacent ranges.\n * @private\n */\n\nfunction combineRanges (ranges) {\n  var ordered = ranges.map(mapWithIndex).sort(sortByRangeStart)\n\n  for (var j = 0, i = 1; i < ordered.length; i++) {\n    var range = ordered[i]\n    var current = ordered[j]\n\n    if (range.start > current.end + 1) {\n      // next range\n      ordered[++j] = range\n    } else if (range.end > current.end) {\n      // extend range\n      current.end = range.end\n      current.index = Math.min(current.index, range.index)\n    }\n  }\n\n  // trim ordered array\n  ordered.length = j + 1\n\n  // generate combined range\n  var combined = ordered.sort(sortByRangeIndex).map(mapWithoutIndex)\n\n  // copy ranges type\n  combined.type = ranges.type\n\n  return combined\n}\n\n/**\n * Map function to add index value to ranges.\n * @private\n */\n\nfunction mapWithIndex (range, index) {\n  return {\n    start: range.start,\n    end: range.end,\n    index: index\n  }\n}\n\n/**\n * Map function to remove index value from ranges.\n * @private\n */\n\nfunction mapWithoutIndex (range) {\n  return {\n    start: range.start,\n    end: range.end\n  }\n}\n\n/**\n * Sort function to sort ranges by index.\n * @private\n */\n\nfunction sortByRangeIndex (a, b) {\n  return a.index - b.index\n}\n\n/**\n * Sort function to sort ranges by start position.\n * @private\n */\n\nfunction sortByRangeStart (a, b) {\n  return a.start - b.start\n}\n","/*!\n * proxy-addr\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = proxyaddr\nmodule.exports.all = alladdrs\nmodule.exports.compile = compile\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar forwarded = require('forwarded')\nvar ipaddr = require('ipaddr.js')\n\n/**\n * Variables.\n * @private\n */\n\nvar DIGIT_REGEXP = /^[0-9]+$/\nvar isip = ipaddr.isValid\nvar parseip = ipaddr.parse\n\n/**\n * Pre-defined IP ranges.\n * @private\n */\n\nvar IP_RANGES = {\n  linklocal: ['169.254.0.0/16', 'fe80::/10'],\n  loopback: ['127.0.0.1/8', '::1/128'],\n  uniquelocal: ['10.0.0.0/8', '172.16.0.0/12', '192.168.0.0/16', 'fc00::/7']\n}\n\n/**\n * Get all addresses in the request, optionally stopping\n * at the first untrusted.\n *\n * @param {Object} request\n * @param {Function|Array|String} [trust]\n * @public\n */\n\nfunction alladdrs (req, trust) {\n  // get addresses\n  var addrs = forwarded(req)\n\n  if (!trust) {\n    // Return all addresses\n    return addrs\n  }\n\n  if (typeof trust !== 'function') {\n    trust = compile(trust)\n  }\n\n  for (var i = 0; i < addrs.length - 1; i++) {\n    if (trust(addrs[i], i)) continue\n\n    addrs.length = i + 1\n  }\n\n  return addrs\n}\n\n/**\n * Compile argument into trust function.\n *\n * @param {Array|String} val\n * @private\n */\n\nfunction compile (val) {\n  if (!val) {\n    throw new TypeError('argument is required')\n  }\n\n  var trust\n\n  if (typeof val === 'string') {\n    trust = [val]\n  } else if (Array.isArray(val)) {\n    trust = val.slice()\n  } else {\n    throw new TypeError('unsupported trust argument')\n  }\n\n  for (var i = 0; i < trust.length; i++) {\n    val = trust[i]\n\n    if (!IP_RANGES.hasOwnProperty(val)) {\n      continue\n    }\n\n    // Splice in pre-defined range\n    val = IP_RANGES[val]\n    trust.splice.apply(trust, [i, 1].concat(val))\n    i += val.length - 1\n  }\n\n  return compileTrust(compileRangeSubnets(trust))\n}\n\n/**\n * Compile `arr` elements into range subnets.\n *\n * @param {Array} arr\n * @private\n */\n\nfunction compileRangeSubnets (arr) {\n  var rangeSubnets = new Array(arr.length)\n\n  for (var i = 0; i < arr.length; i++) {\n    rangeSubnets[i] = parseipNotation(arr[i])\n  }\n\n  return rangeSubnets\n}\n\n/**\n * Compile range subnet array into trust function.\n *\n * @param {Array} rangeSubnets\n * @private\n */\n\nfunction compileTrust (rangeSubnets) {\n  // Return optimized function based on length\n  var len = rangeSubnets.length\n  return len === 0\n    ? trustNone\n    : len === 1\n      ? trustSingle(rangeSubnets[0])\n      : trustMulti(rangeSubnets)\n}\n\n/**\n * Parse IP notation string into range subnet.\n *\n * @param {String} note\n * @private\n */\n\nfunction parseipNotation (note) {\n  var pos = note.lastIndexOf('/')\n  var str = pos !== -1\n    ? note.substring(0, pos)\n    : note\n\n  if (!isip(str)) {\n    throw new TypeError('invalid IP address: ' + str)\n  }\n\n  var ip = parseip(str)\n\n  if (pos === -1 && ip.kind() === 'ipv6' && ip.isIPv4MappedAddress()) {\n    // Store as IPv4\n    ip = ip.toIPv4Address()\n  }\n\n  var max = ip.kind() === 'ipv6'\n    ? 128\n    : 32\n\n  var range = pos !== -1\n    ? note.substring(pos + 1, note.length)\n    : null\n\n  if (range === null) {\n    range = max\n  } else if (DIGIT_REGEXP.test(range)) {\n    range = parseInt(range, 10)\n  } else if (ip.kind() === 'ipv4' && isip(range)) {\n    range = parseNetmask(range)\n  } else {\n    range = null\n  }\n\n  if (range <= 0 || range > max) {\n    throw new TypeError('invalid range on address: ' + note)\n  }\n\n  return [ip, range]\n}\n\n/**\n * Parse netmask string into CIDR range.\n *\n * @param {String} netmask\n * @private\n */\n\nfunction parseNetmask (netmask) {\n  var ip = parseip(netmask)\n  var kind = ip.kind()\n\n  return kind === 'ipv4'\n    ? ip.prefixLengthFromSubnetMask()\n    : null\n}\n\n/**\n * Determine address of proxied request.\n *\n * @param {Object} request\n * @param {Function|Array|String} trust\n * @public\n */\n\nfunction proxyaddr (req, trust) {\n  if (!req) {\n    throw new TypeError('req argument is required')\n  }\n\n  if (!trust) {\n    throw new TypeError('trust argument is required')\n  }\n\n  var addrs = alladdrs(req, trust)\n  var addr = addrs[addrs.length - 1]\n\n  return addr\n}\n\n/**\n * Static trust function to trust nothing.\n *\n * @private\n */\n\nfunction trustNone () {\n  return false\n}\n\n/**\n * Compile trust function for multiple subnets.\n *\n * @param {Array} subnets\n * @private\n */\n\nfunction trustMulti (subnets) {\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var ipconv\n    var kind = ip.kind()\n\n    for (var i = 0; i < subnets.length; i++) {\n      var subnet = subnets[i]\n      var subnetip = subnet[0]\n      var subnetkind = subnetip.kind()\n      var subnetrange = subnet[1]\n      var trusted = ip\n\n      if (kind !== subnetkind) {\n        if (subnetkind === 'ipv4' && !ip.isIPv4MappedAddress()) {\n          // Incompatible IP addresses\n          continue\n        }\n\n        if (!ipconv) {\n          // Convert IP to match subnet IP kind\n          ipconv = subnetkind === 'ipv4'\n            ? ip.toIPv4Address()\n            : ip.toIPv4MappedAddress()\n        }\n\n        trusted = ipconv\n      }\n\n      if (trusted.match(subnetip, subnetrange)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Compile trust function for single subnet.\n *\n * @param {Object} subnet\n * @private\n */\n\nfunction trustSingle (subnet) {\n  var subnetip = subnet[0]\n  var subnetkind = subnetip.kind()\n  var subnetisipv4 = subnetkind === 'ipv4'\n  var subnetrange = subnet[1]\n\n  return function trust (addr) {\n    if (!isip(addr)) return false\n\n    var ip = parseip(addr)\n    var kind = ip.kind()\n\n    if (kind !== subnetkind) {\n      if (subnetisipv4 && !ip.isIPv4MappedAddress()) {\n        // Incompatible IP addresses\n        return false\n      }\n\n      // Convert IP to match subnet IP kind\n      ip = subnetisipv4\n        ? ip.toIPv4Address()\n        : ip.toIPv4MappedAddress()\n    }\n\n    return ip.match(subnetip, subnetrange)\n  }\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\treturn createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n","exports.alphasort = alphasort\nexports.alphasorti = alphasorti\nexports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path-is-absolute\")\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasorti (a, b) {\n  return a.toLowerCase().localeCompare(b.toLowerCase())\n}\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b)\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\")\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  self.nomount = !!options.nomount\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(self.nocase ? alphasorti : alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","module.exports = require(\"child_process\");","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst extract = require('extract-zip');\nconst util = require('util');\nconst URL = require('url');\nconst {helper, assert} = require('./helper');\nconst removeRecursive = require('rimraf');\n// @ts-ignore\nconst ProxyAgent = require('https-proxy-agent');\n// @ts-ignore\nconst getProxyForUrl = require('proxy-from-env').getProxyForUrl;\n\nconst DEFAULT_DOWNLOAD_HOST = 'https://storage.googleapis.com';\n\nconst supportedPlatforms = ['mac', 'linux', 'win32', 'win64'];\nconst downloadURLs = {\n  linux: '%s/chromium-browser-snapshots/Linux_x64/%d/%s.zip',\n  mac: '%s/chromium-browser-snapshots/Mac/%d/%s.zip',\n  win32: '%s/chromium-browser-snapshots/Win/%d/%s.zip',\n  win64: '%s/chromium-browser-snapshots/Win_x64/%d/%s.zip',\n};\n\n/**\n * @param {string} platform\n * @param {string} revision\n * @return {string}\n */\nfunction archiveName(platform, revision) {\n  if (platform === 'linux')\n    return 'chrome-linux';\n  if (platform === 'mac')\n    return 'chrome-mac';\n  if (platform === 'win32' || platform === 'win64') {\n    // Windows archive name changed at r591479.\n    return parseInt(revision, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n  }\n  return null;\n}\n\n/**\n * @param {string} platform\n * @param {string} host\n * @param {string} revision\n * @return {string}\n */\nfunction downloadURL(platform, host, revision) {\n  return util.format(downloadURLs[platform], host, revision, archiveName(platform, revision));\n}\n\nconst readdirAsync = helper.promisify(fs.readdir.bind(fs));\nconst mkdirAsync = helper.promisify(fs.mkdir.bind(fs));\nconst unlinkAsync = helper.promisify(fs.unlink.bind(fs));\nconst chmodAsync = helper.promisify(fs.chmod.bind(fs));\n\nfunction existsAsync(filePath) {\n  let fulfill = null;\n  const promise = new Promise(x => fulfill = x);\n  fs.access(filePath, err => fulfill(!err));\n  return promise;\n}\n\nclass BrowserFetcher {\n  /**\n   * @param {string} projectRoot\n   * @param {!BrowserFetcher.Options=} options\n   */\n  constructor(projectRoot, options = {}) {\n    this._downloadsFolder = options.path || path.join(projectRoot, '.local-chromium');\n    this._downloadHost = options.host || DEFAULT_DOWNLOAD_HOST;\n    this._platform = options.platform || '';\n    if (!this._platform) {\n      const platform = os.platform();\n      if (platform === 'darwin')\n        this._platform = 'mac';\n      else if (platform === 'linux')\n        this._platform = 'linux';\n      else if (platform === 'win32')\n        this._platform = os.arch() === 'x64' ? 'win64' : 'win32';\n      assert(this._platform, 'Unsupported platform: ' + os.platform());\n    }\n    assert(supportedPlatforms.includes(this._platform), 'Unsupported platform: ' + this._platform);\n  }\n\n  /**\n   * @return {string}\n   */\n  platform() {\n    return this._platform;\n  }\n\n  /**\n   * @param {string} revision\n   * @return {!Promise<boolean>}\n   */\n  canDownload(revision) {\n    const url = downloadURL(this._platform, this._downloadHost, revision);\n    let resolve;\n    const promise = new Promise(x => resolve = x);\n    const request = httpRequest(url, 'HEAD', response => {\n      resolve(response.statusCode === 200);\n    });\n    request.on('error', error => {\n      console.error(error);\n      resolve(false);\n    });\n    return promise;\n  }\n\n  /**\n   * @param {string} revision\n   * @param {?function(number, number)} progressCallback\n   * @return {!Promise<!BrowserFetcher.RevisionInfo>}\n   */\n  async download(revision, progressCallback) {\n    const url = downloadURL(this._platform, this._downloadHost, revision);\n    const zipPath = path.join(this._downloadsFolder, `download-${this._platform}-${revision}.zip`);\n    const folderPath = this._getFolderPath(revision);\n    if (await existsAsync(folderPath))\n      return this.revisionInfo(revision);\n    if (!(await existsAsync(this._downloadsFolder)))\n      await mkdirAsync(this._downloadsFolder);\n    try {\n      await downloadFile(url, zipPath, progressCallback);\n      await extractZip(zipPath, folderPath);\n    } finally {\n      if (await existsAsync(zipPath))\n        await unlinkAsync(zipPath);\n    }\n    const revisionInfo = this.revisionInfo(revision);\n    if (revisionInfo)\n      await chmodAsync(revisionInfo.executablePath, 0o755);\n    return revisionInfo;\n  }\n\n  /**\n   * @return {!Promise<!Array<string>>}\n   */\n  async localRevisions() {\n    if (!await existsAsync(this._downloadsFolder))\n      return [];\n    const fileNames = await readdirAsync(this._downloadsFolder);\n    return fileNames.map(fileName => parseFolderPath(fileName)).filter(entry => entry && entry.platform === this._platform).map(entry => entry.revision);\n  }\n\n  /**\n   * @param {string} revision\n   */\n  async remove(revision) {\n    const folderPath = this._getFolderPath(revision);\n    assert(await existsAsync(folderPath), `Failed to remove: revision ${revision} is not downloaded`);\n    await new Promise(fulfill => removeRecursive(folderPath, fulfill));\n  }\n\n  /**\n   * @param {string} revision\n   * @return {!BrowserFetcher.RevisionInfo}\n   */\n  revisionInfo(revision) {\n    const folderPath = this._getFolderPath(revision);\n    let executablePath = '';\n    if (this._platform === 'mac')\n      executablePath = path.join(folderPath, archiveName(this._platform, revision), 'Chromium.app', 'Contents', 'MacOS', 'Chromium');\n    else if (this._platform === 'linux')\n      executablePath = path.join(folderPath, archiveName(this._platform, revision), 'chrome');\n    else if (this._platform === 'win32' || this._platform === 'win64')\n      executablePath = path.join(folderPath, archiveName(this._platform, revision), 'chrome.exe');\n    else\n      throw new Error('Unsupported platform: ' + this._platform);\n    const url = downloadURL(this._platform, this._downloadHost, revision);\n    const local = fs.existsSync(folderPath);\n    return {revision, executablePath, folderPath, local, url};\n  }\n\n  /**\n   * @param {string} revision\n   * @return {string}\n   */\n  _getFolderPath(revision) {\n    return path.join(this._downloadsFolder, this._platform + '-' + revision);\n  }\n}\n\nmodule.exports = BrowserFetcher;\n\n/**\n * @param {string} folderPath\n * @return {?{platform: string, revision: string}}\n */\nfunction parseFolderPath(folderPath) {\n  const name = path.basename(folderPath);\n  const splits = name.split('-');\n  if (splits.length !== 2)\n    return null;\n  const [platform, revision] = splits;\n  if (!supportedPlatforms.includes(platform))\n    return null;\n  return {platform, revision};\n}\n\n/**\n * @param {string} url\n * @param {string} destinationPath\n * @param {?function(number, number)} progressCallback\n * @return {!Promise}\n */\nfunction downloadFile(url, destinationPath, progressCallback) {\n  let fulfill, reject;\n  let downloadedBytes = 0;\n  let totalBytes = 0;\n\n  const promise = new Promise((x, y) => { fulfill = x; reject = y; });\n\n  const request = httpRequest(url, 'GET', response => {\n    if (response.statusCode !== 200) {\n      const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`);\n      // consume response data to free up memory\n      response.resume();\n      reject(error);\n      return;\n    }\n    const file = fs.createWriteStream(destinationPath);\n    file.on('finish', () => fulfill());\n    file.on('error', error => reject(error));\n    response.pipe(file);\n    totalBytes = parseInt(/** @type {string} */ (response.headers['content-length']), 10);\n    if (progressCallback)\n      response.on('data', onData);\n  });\n  request.on('error', error => reject(error));\n  return promise;\n\n  function onData(chunk) {\n    downloadedBytes += chunk.length;\n    progressCallback(downloadedBytes, totalBytes);\n  }\n}\n\n/**\n * @param {string} zipPath\n * @param {string} folderPath\n * @return {!Promise<?Error>}\n */\nfunction extractZip(zipPath, folderPath) {\n  return new Promise((fulfill, reject) => extract(zipPath, {dir: folderPath}, err => {\n    if (err)\n      reject(err);\n    else\n      fulfill();\n  }));\n}\n\nfunction httpRequest(url, method, response) {\n  /** @type {Object} */\n  const options = URL.parse(url);\n  options.method = method;\n\n  const proxyURL = getProxyForUrl(url);\n  if (proxyURL) {\n    /** @type {Object} */\n    const parsedProxyURL = URL.parse(proxyURL);\n    parsedProxyURL.secureProxy = parsedProxyURL.protocol === 'https:';\n\n    options.agent = new ProxyAgent(parsedProxyURL);\n    options.rejectUnauthorized = false;\n  }\n\n  const requestCallback = res => {\n    if (res.statusCode >= 300 && res.statusCode < 400 && res.headers.location)\n      httpRequest(res.headers.location, method, response);\n    else\n      response(res);\n  };\n  const request = options.protocol === 'https:' ?\n    require('https').request(options, requestCallback) :\n    require('http').request(options, requestCallback);\n  request.end();\n  return request;\n}\n\n/**\n * @typedef {Object} BrowserFetcher.Options\n * @property {string=} platform\n * @property {string=} path\n * @property {string=} host\n */\n\n/**\n * @typedef {Object} BrowserFetcher.RevisionInfo\n * @property {string} folderPath\n * @property {string} executablePath\n * @property {string} url\n * @property {boolean} local\n * @property {string} revision\n */\n","var fs = require('fs')\nvar path = require('path')\nvar yauzl = require('yauzl')\nvar mkdirp = require('mkdirp')\nvar concat = require('concat-stream')\nvar debug = require('debug')('extract-zip')\n\nmodule.exports = function (zipPath, opts, cb) {\n  debug('creating target directory', opts.dir)\n\n  if (path.isAbsolute(opts.dir) === false) {\n    return cb(new Error('Target directory is expected to be absolute'))\n  }\n\n  mkdirp(opts.dir, function (err) {\n    if (err) return cb(err)\n\n    fs.realpath(opts.dir, function (err, canonicalDir) {\n      if (err) return cb(err)\n\n      opts.dir = canonicalDir\n\n      openZip(opts)\n    })\n  })\n\n  function openZip () {\n    debug('opening', zipPath, 'with opts', opts)\n\n    yauzl.open(zipPath, {lazyEntries: true}, function (err, zipfile) {\n      if (err) return cb(err)\n\n      var cancelled = false\n\n      zipfile.readEntry()\n\n      zipfile.on('close', function () {\n        if (!cancelled) {\n          debug('zip extraction complete')\n          cb()\n        }\n      })\n\n      zipfile.on('entry', function (entry) {\n        if (cancelled) {\n          debug('skipping entry', entry.fileName, {cancelled: cancelled})\n          return\n        }\n\n        debug('zipfile entry', entry.fileName)\n\n        if (/^__MACOSX\\//.test(entry.fileName)) {\n          // dir name starts with __MACOSX/\n          zipfile.readEntry()\n          return\n        }\n\n        var destDir = path.dirname(path.join(opts.dir, entry.fileName))\n\n        mkdirp(destDir, function (err) {\n          if (err) {\n            cancelled = true\n            zipfile.close()\n            return cb(err)\n          }\n\n          fs.realpath(destDir, function (err, canonicalDestDir) {\n            if (err) {\n              cancelled = true\n              zipfile.close()\n              return cb(err)\n            }\n\n            var relativeDestDir = path.relative(opts.dir, canonicalDestDir)\n\n            if (relativeDestDir.split(path.sep).indexOf('..') !== -1) {\n              cancelled = true\n              zipfile.close()\n              return cb(new Error('Out of bound path \"' + canonicalDestDir + '\" found while processing file ' + entry.fileName))\n            }\n\n            extractEntry(entry, function (err) {\n              // if any extraction fails then abort everything\n              if (err) {\n                cancelled = true\n                zipfile.close()\n                return cb(err)\n              }\n              debug('finished processing', entry.fileName)\n              zipfile.readEntry()\n            })\n          })\n        })\n      })\n\n      function extractEntry (entry, done) {\n        if (cancelled) {\n          debug('skipping entry extraction', entry.fileName, {cancelled: cancelled})\n          return setImmediate(done)\n        }\n\n        if (opts.onEntry) {\n          opts.onEntry(entry, zipfile)\n        }\n\n        var dest = path.join(opts.dir, entry.fileName)\n\n        // convert external file attr int into a fs stat mode int\n        var mode = (entry.externalFileAttributes >> 16) & 0xFFFF\n        // check if it's a symlink or dir (using stat mode constants)\n        var IFMT = 61440\n        var IFDIR = 16384\n        var IFLNK = 40960\n        var symlink = (mode & IFMT) === IFLNK\n        var isDir = (mode & IFMT) === IFDIR\n\n        // Failsafe, borrowed from jsZip\n        if (!isDir && entry.fileName.slice(-1) === '/') {\n          isDir = true\n        }\n\n        // check for windows weird way of specifying a directory\n        // https://github.com/maxogden/extract-zip/issues/13#issuecomment-154494566\n        var madeBy = entry.versionMadeBy >> 8\n        if (!isDir) isDir = (madeBy === 0 && entry.externalFileAttributes === 16)\n\n        // if no mode then default to default modes\n        if (mode === 0) {\n          if (isDir) {\n            if (opts.defaultDirMode) mode = parseInt(opts.defaultDirMode, 10)\n            if (!mode) mode = 493 // Default to 0755\n          } else {\n            if (opts.defaultFileMode) mode = parseInt(opts.defaultFileMode, 10)\n            if (!mode) mode = 420 // Default to 0644\n          }\n        }\n\n        debug('extracting entry', { filename: entry.fileName, isDir: isDir, isSymlink: symlink })\n\n        // reverse umask first (~)\n        var umask = ~process.umask()\n        // & with processes umask to override invalid perms\n        var procMode = mode & umask\n\n        // always ensure folders are created\n        var destDir = dest\n        if (!isDir) destDir = path.dirname(dest)\n\n        debug('mkdirp', {dir: destDir})\n        mkdirp(destDir, function (err) {\n          if (err) {\n            debug('mkdirp error', destDir, {error: err})\n            cancelled = true\n            return done(err)\n          }\n\n          if (isDir) return done()\n\n          debug('opening read stream', dest)\n          zipfile.openReadStream(entry, function (err, readStream) {\n            if (err) {\n              debug('openReadStream error', err)\n              cancelled = true\n              return done(err)\n            }\n\n            readStream.on('error', function (err) {\n              console.log('read err', err)\n            })\n\n            if (symlink) writeSymlink()\n            else writeStream()\n\n            function writeStream () {\n              var writeStream = fs.createWriteStream(dest, {mode: procMode})\n              readStream.pipe(writeStream)\n\n              writeStream.on('finish', function () {\n                done()\n              })\n\n              writeStream.on('error', function (err) {\n                debug('write error', {error: err})\n                cancelled = true\n                return done(err)\n              })\n            }\n\n            // AFAICT the content of the symlink file itself is the symlink target filename string\n            function writeSymlink () {\n              readStream.pipe(concat(function (data) {\n                var link = data.toString()\n                debug('creating symlink', link, dest)\n                fs.symlink(link, dest, function (err) {\n                  if (err) cancelled = true\n                  done(err)\n                })\n              }))\n            }\n          })\n        })\n      }\n    })\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","module.exports = require('stream');\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","/**\n * Module dependencies.\n */\n\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar Agent = require('agent-base');\nvar inherits = require('util').inherits;\nvar debug = require('debug')('https-proxy-agent');\n\n/**\n * Module exports.\n */\n\nmodule.exports = HttpsProxyAgent;\n\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to the\n * specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * @api public\n */\n\nfunction HttpsProxyAgent(opts) {\n  if (!(this instanceof HttpsProxyAgent)) return new HttpsProxyAgent(opts);\n  if ('string' == typeof opts) opts = url.parse(opts);\n  if (!opts)\n    throw new Error(\n      'an HTTP(S) proxy server `host` and `port` must be specified!'\n    );\n  debug('creating new HttpsProxyAgent instance: %o', opts);\n  Agent.call(this, opts);\n\n  var proxy = Object.assign({}, opts);\n\n  // if `true`, then connect to the proxy server over TLS. defaults to `false`.\n  this.secureProxy = proxy.protocol ? /^https:?$/i.test(proxy.protocol) : false;\n\n  // prefer `hostname` over `host`, and set the `port` if needed\n  proxy.host = proxy.hostname || proxy.host;\n  proxy.port = +proxy.port || (this.secureProxy ? 443 : 80);\n\n  // ALPN is supported by Node.js >= v5.\n  // attempt to negotiate http/1.1 for proxy servers that support http/2\n  if (this.secureProxy && !('ALPNProtocols' in proxy)) {\n    proxy.ALPNProtocols = ['http 1.1']\n  }\n\n  if (proxy.host && proxy.path) {\n    // if both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete proxy.path;\n    delete proxy.pathname;\n  }\n\n  this.proxy = proxy;\n  this.defaultPort = 443;\n}\ninherits(HttpsProxyAgent, Agent);\n\n/**\n * Called when the node-core HTTP client library is creating a new HTTP request.\n *\n * @api public\n */\n\nHttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\n  var proxy = this.proxy;\n\n  // create a socket connection to the proxy server\n  var socket;\n  if (this.secureProxy) {\n    socket = tls.connect(proxy);\n  } else {\n    socket = net.connect(proxy);\n  }\n\n  // we need to buffer any HTTP traffic that happens with the proxy before we get\n  // the CONNECT response, so that if the response is anything other than an \"200\"\n  // response code, then we can re-play the \"data\" events on the socket once the\n  // HTTP parser is hooked up...\n  var buffers = [];\n  var buffersLength = 0;\n\n  function read() {\n    var b = socket.read();\n    if (b) ondata(b);\n    else socket.once('readable', read);\n  }\n\n  function cleanup() {\n    socket.removeListener('data', ondata);\n    socket.removeListener('end', onend);\n    socket.removeListener('error', onerror);\n    socket.removeListener('close', onclose);\n    socket.removeListener('readable', read);\n  }\n\n  function onclose(err) {\n    debug('onclose had error %o', err);\n  }\n\n  function onend() {\n    debug('onend');\n  }\n\n  function onerror(err) {\n    cleanup();\n    fn(err);\n  }\n\n  function ondata(b) {\n    buffers.push(b);\n    buffersLength += b.length;\n    var buffered = Buffer.concat(buffers, buffersLength);\n    var str = buffered.toString('ascii');\n\n    if (!~str.indexOf('\\r\\n\\r\\n')) {\n      // keep buffering\n      debug('have not received end of HTTP headers yet...');\n      if (socket.read) {\n        read();\n      } else {\n        socket.once('data', ondata);\n      }\n      return;\n    }\n\n    var firstLine = str.substring(0, str.indexOf('\\r\\n'));\n    var statusCode = +firstLine.split(' ')[1];\n    debug('got proxy server response: %o', firstLine);\n\n    if (200 == statusCode) {\n      // 200 Connected status code!\n      var sock = socket;\n\n      // nullify the buffered data since we won't be needing it\n      buffers = buffered = null;\n\n      if (opts.secureEndpoint) {\n        // since the proxy is connecting to an SSL server, we have\n        // to upgrade this socket connection to an SSL connection\n        debug(\n          'upgrading proxy-connected socket to TLS connection: %o',\n          opts.host\n        );\n        opts.socket = socket;\n        opts.servername = opts.servername || opts.host;\n        opts.host = null;\n        opts.hostname = null;\n        opts.port = null;\n        sock = tls.connect(opts);\n      }\n\n      cleanup();\n      fn(null, sock);\n    } else {\n      // some other status code that's not 200... need to re-play the HTTP header\n      // \"data\" events onto the socket once the HTTP machinery is attached so that\n      // the user can parse and handle the error status code\n      cleanup();\n\n      // save a reference to the concat'd Buffer for the `onsocket` callback\n      buffers = buffered;\n\n      // need to wait for the \"socket\" event to re-play the \"data\" events\n      req.once('socket', onsocket);\n      fn(null, socket);\n    }\n  }\n\n  function onsocket(socket) {\n    // replay the \"buffers\" Buffer onto the `socket`, since at this point\n    // the HTTP module machinery has been hooked up for the user\n    if ('function' == typeof socket.ondata) {\n      // node <= v0.11.3, the `ondata` function is set on the socket\n      socket.ondata(buffers, 0, buffers.length);\n    } else if (socket.listeners('data').length > 0) {\n      // node > v0.11.3, the \"data\" event is listened for directly\n      socket.emit('data', buffers);\n    } else {\n      // never?\n      throw new Error('should not happen...');\n    }\n\n    // nullify the cached Buffer instance\n    buffers = null;\n  }\n\n  socket.on('error', onerror);\n  socket.on('close', onclose);\n  socket.on('end', onend);\n\n  if (socket.read) {\n    read();\n  } else {\n    socket.once('data', ondata);\n  }\n\n  var hostname = opts.host + ':' + opts.port;\n  var msg = 'CONNECT ' + hostname + ' HTTP/1.1\\r\\n';\n\n  var headers = Object.assign({}, proxy.headers);\n  if (proxy.auth) {\n    headers['Proxy-Authorization'] =\n      'Basic ' + Buffer.from(proxy.auth).toString('base64');\n  }\n\n  // the Host header should only include the port\n  // number when it is a non-standard port\n  var host = opts.host;\n  if (!isDefaultPort(opts.port, opts.secureEndpoint)) {\n    host += ':' + opts.port;\n  }\n  headers['Host'] = host;\n\n  headers['Connection'] = 'close';\n  Object.keys(headers).forEach(function(name) {\n    msg += name + ': ' + headers[name] + '\\r\\n';\n  });\n\n  socket.write(msg + '\\r\\n');\n};\n\nfunction isDefaultPort(port, secure) {\n  return Boolean((!secure && port === 80) || (secure && port === 443));\n}\n","module.exports = require(\"tls\");","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","'use strict';\n\nvar parseUrl = require('url').parse;\n\nvar DEFAULT_PORTS = {\n  ftp: 21,\n  gopher: 70,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443,\n};\n\nvar stringEndsWith = String.prototype.endsWith || function(s) {\n  return s.length <= this.length &&\n    this.indexOf(s, this.length - s.length) !== -1;\n};\n\n/**\n * @param {string|object} url - The URL, or the result from url.parse.\n * @return {string} The URL of the proxy that should handle the request to the\n *  given URL. If no proxy is set, this will be an empty string.\n */\nfunction getProxyForUrl(url) {\n  var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};\n  var proto = parsedUrl.protocol;\n  var hostname = parsedUrl.host;\n  var port = parsedUrl.port;\n  if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {\n    return '';  // Don't proxy URLs without a valid scheme or host.\n  }\n\n  proto = proto.split(':', 1)[0];\n  // Stripping ports in this way instead of using parsedUrl.hostname to make\n  // sure that the brackets around IPv6 addresses are kept.\n  hostname = hostname.replace(/:\\d*$/, '');\n  port = parseInt(port) || DEFAULT_PORTS[proto] || 0;\n  if (!shouldProxy(hostname, port)) {\n    return '';  // Don't proxy URLs that match NO_PROXY.\n  }\n\n  var proxy = getEnv(proto + '_proxy') || getEnv('all_proxy');\n  if (proxy && proxy.indexOf('://') === -1) {\n    // Missing scheme in proxy, default to the requested URL's scheme.\n    proxy = proto + '://' + proxy;\n  }\n  return proxy;\n}\n\n/**\n * Determines whether a given URL should be proxied.\n *\n * @param {string} hostname - The host name of the URL.\n * @param {number} port - The effective port of the URL.\n * @returns {boolean} Whether the given URL should be proxied.\n * @private\n */\nfunction shouldProxy(hostname, port) {\n  var NO_PROXY = getEnv('no_proxy').toLowerCase();\n  if (!NO_PROXY) {\n    return true;  // Always proxy if NO_PROXY is not set.\n  }\n  if (NO_PROXY === '*') {\n    return false;  // Never proxy if wildcard is set.\n  }\n\n  return NO_PROXY.split(/[,\\s]/).every(function(proxy) {\n    if (!proxy) {\n      return true;  // Skip zero-length hosts.\n    }\n    var parsedProxy = proxy.match(/^(.+):(\\d+)$/);\n    var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;\n    var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;\n    if (parsedProxyPort && parsedProxyPort !== port) {\n      return true;  // Skip if ports don't match.\n    }\n\n    if (!/^[.*]/.test(parsedProxyHostname)) {\n      // No wildcards, so stop proxying if there is an exact match.\n      return hostname !== parsedProxyHostname;\n    }\n\n    if (parsedProxyHostname.charAt(0) === '*') {\n      // Remove leading wildcard.\n      parsedProxyHostname = parsedProxyHostname.slice(1);\n    }\n    // Stop proxying if the hostname ends with the no_proxy host.\n    return !stringEndsWith.call(hostname, parsedProxyHostname);\n  });\n}\n\n/**\n * Get the value for an environment variable.\n *\n * @param {string} key - The name of the environment variable.\n * @return {string} The value of the environment variable.\n * @private\n */\nfunction getEnv(key) {\n  return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';\n}\n\nexports.getProxyForUrl = getProxyForUrl;\n","'use strict';\n\nvar Mime = require('./Mime');\nmodule.exports = new Mime(require('./types/standard'), require('./types/other'));\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst EventEmitter = require('events');\nconst {helper, assert, debugError} = require('./helper');\nconst Multimap = require('./Multimap');\n\nclass NetworkManager extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    super();\n    this._client = client;\n    this._frameManager = null;\n    /** @type {!Map<string, !Request>} */\n    this._requestIdToRequest = new Map();\n    /** @type {!Map<string, !Protocol.Network.requestWillBeSentPayload>} */\n    this._requestIdToRequestWillBeSentEvent = new Map();\n    /** @type {!Object<string, string>} */\n    this._extraHTTPHeaders = {};\n\n    this._offline = false;\n\n    /** @type {?{username: string, password: string}} */\n    this._credentials = null;\n    /** @type {!Set<string>} */\n    this._attemptedAuthentications = new Set();\n    this._userRequestInterceptionEnabled = false;\n    this._protocolRequestInterceptionEnabled = false;\n    /** @type {!Multimap<string, string>} */\n    this._requestHashToRequestIds = new Multimap();\n    /** @type {!Multimap<string, string>} */\n    this._requestHashToInterceptionIds = new Multimap();\n\n    this._client.on('Network.requestWillBeSent', this._onRequestWillBeSent.bind(this));\n    this._client.on('Network.requestIntercepted', this._onRequestIntercepted.bind(this));\n    this._client.on('Network.requestServedFromCache', this._onRequestServedFromCache.bind(this));\n    this._client.on('Network.responseReceived', this._onResponseReceived.bind(this));\n    this._client.on('Network.loadingFinished', this._onLoadingFinished.bind(this));\n    this._client.on('Network.loadingFailed', this._onLoadingFailed.bind(this));\n  }\n\n  /**\n   * @param {!Puppeteer.FrameManager} frameManager\n   */\n  setFrameManager(frameManager) {\n    this._frameManager = frameManager;\n  }\n\n  /**\n   * @param {?{username: string, password: string}} credentials\n   */\n  async authenticate(credentials) {\n    this._credentials = credentials;\n    await this._updateProtocolRequestInterception();\n  }\n\n  /**\n   * @param {!Object<string, string>} extraHTTPHeaders\n   */\n  async setExtraHTTPHeaders(extraHTTPHeaders) {\n    this._extraHTTPHeaders = {};\n    for (const key of Object.keys(extraHTTPHeaders)) {\n      const value = extraHTTPHeaders[key];\n      assert(helper.isString(value), `Expected value of header \"${key}\" to be String, but \"${typeof value}\" is found.`);\n      this._extraHTTPHeaders[key.toLowerCase()] = value;\n    }\n    await this._client.send('Network.setExtraHTTPHeaders', { headers: this._extraHTTPHeaders });\n  }\n\n  /**\n   * @return {!Object<string, string>}\n   */\n  extraHTTPHeaders() {\n    return Object.assign({}, this._extraHTTPHeaders);\n  }\n\n  /**\n   * @param {boolean} value\n   */\n  async setOfflineMode(value) {\n    if (this._offline === value)\n      return;\n    this._offline = value;\n    await this._client.send('Network.emulateNetworkConditions', {\n      offline: this._offline,\n      // values of 0 remove any active throttling. crbug.com/456324#c9\n      latency: 0,\n      downloadThroughput: -1,\n      uploadThroughput: -1\n    });\n  }\n\n  /**\n   * @param {string} userAgent\n   */\n  async setUserAgent(userAgent) {\n    await this._client.send('Network.setUserAgentOverride', { userAgent });\n  }\n\n  /**\n   * @param {boolean} value\n   */\n  async setRequestInterception(value) {\n    this._userRequestInterceptionEnabled = value;\n    await this._updateProtocolRequestInterception();\n  }\n\n  async _updateProtocolRequestInterception() {\n    const enabled = this._userRequestInterceptionEnabled || !!this._credentials;\n    if (enabled === this._protocolRequestInterceptionEnabled)\n      return;\n    this._protocolRequestInterceptionEnabled = enabled;\n    const patterns = enabled ? [{urlPattern: '*'}] : [];\n    await Promise.all([\n      this._client.send('Network.setCacheDisabled', {cacheDisabled: enabled}),\n      this._client.send('Network.setRequestInterception', {patterns})\n    ]);\n  }\n\n  /**\n   * @param {!Protocol.Network.requestWillBeSentPayload} event\n   */\n  _onRequestWillBeSent(event) {\n    if (this._protocolRequestInterceptionEnabled) {\n      const requestHash = generateRequestHash(event.request);\n      const interceptionId = this._requestHashToInterceptionIds.firstValue(requestHash);\n      if (interceptionId) {\n        this._onRequest(event, interceptionId);\n        this._requestHashToInterceptionIds.delete(requestHash, interceptionId);\n      } else {\n        this._requestHashToRequestIds.set(requestHash, event.requestId);\n        this._requestIdToRequestWillBeSentEvent.set(event.requestId, event);\n      }\n      return;\n    }\n    this._onRequest(event, null);\n  }\n\n  /**\n   * @param {!Protocol.Network.requestInterceptedPayload} event\n   */\n  _onRequestIntercepted(event) {\n    if (event.authChallenge) {\n      /** @type {\"Default\"|\"CancelAuth\"|\"ProvideCredentials\"} */\n      let response = 'Default';\n      if (this._attemptedAuthentications.has(event.interceptionId)) {\n        response = 'CancelAuth';\n      } else if (this._credentials) {\n        response = 'ProvideCredentials';\n        this._attemptedAuthentications.add(event.interceptionId);\n      }\n      const {username, password} = this._credentials || {username: undefined, password: undefined};\n      this._client.send('Network.continueInterceptedRequest', {\n        interceptionId: event.interceptionId,\n        authChallengeResponse: { response, username, password }\n      }).catch(debugError);\n      return;\n    }\n    if (!this._userRequestInterceptionEnabled && this._protocolRequestInterceptionEnabled) {\n      this._client.send('Network.continueInterceptedRequest', {\n        interceptionId: event.interceptionId\n      }).catch(debugError);\n    }\n\n    const requestHash = generateRequestHash(event.request);\n    const requestId = this._requestHashToRequestIds.firstValue(requestHash);\n    if (requestId) {\n      const requestWillBeSentEvent = this._requestIdToRequestWillBeSentEvent.get(requestId);\n      this._onRequest(requestWillBeSentEvent, event.interceptionId);\n      this._requestHashToRequestIds.delete(requestHash, requestId);\n      this._requestIdToRequestWillBeSentEvent.delete(requestId);\n    } else {\n      this._requestHashToInterceptionIds.set(requestHash, event.interceptionId);\n    }\n  }\n\n  /**\n   * @param {!Protocol.Network.requestWillBeSentPayload} event\n   * @param {?string} interceptionId\n   */\n  _onRequest(event, interceptionId) {\n    let redirectChain = [];\n    if (event.redirectResponse) {\n      const request = this._requestIdToRequest.get(event.requestId);\n      // If we connect late to the target, we could have missed the requestWillBeSent event.\n      if (request) {\n        this._handleRequestRedirect(request, event.redirectResponse);\n        redirectChain = request._redirectChain;\n      }\n    }\n    const frame = event.frameId && this._frameManager ? this._frameManager.frame(event.frameId) : null;\n    const request = new Request(this._client, frame, interceptionId, this._userRequestInterceptionEnabled, event, redirectChain);\n    this._requestIdToRequest.set(event.requestId, request);\n    this.emit(NetworkManager.Events.Request, request);\n  }\n\n\n  /**\n   * @param {!Protocol.Network.requestServedFromCachePayload} event\n   */\n  _onRequestServedFromCache(event) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    if (request)\n      request._fromMemoryCache = true;\n  }\n\n  /**\n   * @param {!Request} request\n   * @param {!Protocol.Network.Response} responsePayload\n   */\n  _handleRequestRedirect(request, responsePayload) {\n    const response = new Response(this._client, request, responsePayload);\n    request._response = response;\n    request._redirectChain.push(request);\n    response._bodyLoadedPromiseFulfill.call(null, new Error('Response body is unavailable for redirect responses'));\n    this._requestIdToRequest.delete(request._requestId);\n    this._attemptedAuthentications.delete(request._interceptionId);\n    this.emit(NetworkManager.Events.Response, response);\n    this.emit(NetworkManager.Events.RequestFinished, request);\n  }\n\n  /**\n   * @param {!Protocol.Network.responseReceivedPayload} event\n   */\n  _onResponseReceived(event) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    // FileUpload sends a response without a matching request.\n    if (!request)\n      return;\n    const response = new Response(this._client, request, event.response);\n    request._response = response;\n    this.emit(NetworkManager.Events.Response, response);\n  }\n\n  /**\n   * @param {!Protocol.Network.loadingFinishedPayload} event\n   */\n  _onLoadingFinished(event) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    // For certain requestIds we never receive requestWillBeSent event.\n    // @see https://crbug.com/750469\n    if (!request)\n      return;\n\n    // Under certain conditions we never get the Network.responseReceived\n    // event from protocol. @see https://crbug.com/883475\n    if (request.response())\n      request.response()._bodyLoadedPromiseFulfill.call(null);\n    this._requestIdToRequest.delete(request._requestId);\n    this._attemptedAuthentications.delete(request._interceptionId);\n    this.emit(NetworkManager.Events.RequestFinished, request);\n  }\n\n  /**\n   * @param {!Protocol.Network.loadingFailedPayload} event\n   */\n  _onLoadingFailed(event) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    // For certain requestIds we never receive requestWillBeSent event.\n    // @see https://crbug.com/750469\n    if (!request)\n      return;\n    request._failureText = event.errorText;\n    const response = request.response();\n    if (response)\n      response._bodyLoadedPromiseFulfill.call(null);\n    this._requestIdToRequest.delete(request._requestId);\n    this._attemptedAuthentications.delete(request._interceptionId);\n    this.emit(NetworkManager.Events.RequestFailed, request);\n  }\n}\n\nclass Request {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {?Puppeteer.Frame} frame\n   * @param {string} interceptionId\n   * @param {boolean} allowInterception\n   * @param {!Protocol.Network.requestWillBeSentPayload} event\n   * @param {!Array<!Request>} redirectChain\n   */\n  constructor(client, frame, interceptionId, allowInterception, event, redirectChain) {\n    this._client = client;\n    this._requestId = event.requestId;\n    this._isNavigationRequest = event.requestId === event.loaderId && event.type === 'Document';\n    this._interceptionId = interceptionId;\n    this._allowInterception = allowInterception;\n    this._interceptionHandled = false;\n    this._response = null;\n    this._failureText = null;\n\n    this._url = event.request.url;\n    this._resourceType = event.type.toLowerCase();\n    this._method = event.request.method;\n    this._postData = event.request.postData;\n    this._headers = {};\n    this._frame = frame;\n    this._redirectChain = redirectChain;\n    for (const key of Object.keys(event.request.headers))\n      this._headers[key.toLowerCase()] = event.request.headers[key];\n\n    this._fromMemoryCache = false;\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {string}\n   */\n  resourceType() {\n    return this._resourceType;\n  }\n\n  /**\n   * @return {string}\n   */\n  method() {\n    return this._method;\n  }\n\n  /**\n   * @return {string|undefined}\n   */\n  postData() {\n    return this._postData;\n  }\n\n  /**\n   * @return {!Object}\n   */\n  headers() {\n    return this._headers;\n  }\n\n  /**\n   * @return {?Response}\n   */\n  response() {\n    return this._response;\n  }\n\n  /**\n   * @return {?Puppeteer.Frame}\n   */\n  frame() {\n    return this._frame;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isNavigationRequest() {\n    return this._isNavigationRequest;\n  }\n\n  /**\n   * @return {!Array<!Request>}\n   */\n  redirectChain() {\n    return this._redirectChain.slice();\n  }\n\n  /**\n   * @return {?{errorText: string}}\n   */\n  failure() {\n    if (!this._failureText)\n      return null;\n    return {\n      errorText: this._failureText\n    };\n  }\n\n  /**\n   * @param {!{url?: string, method?:string, postData?: string, headers?: !Object}} overrides\n   */\n  async continue(overrides = {}) {\n    assert(this._allowInterception, 'Request Interception is not enabled!');\n    assert(!this._interceptionHandled, 'Request is already handled!');\n    const {\n      url,\n      method,\n      postData,\n      headers\n    } = overrides;\n    this._interceptionHandled = true;\n    await this._client.send('Network.continueInterceptedRequest', {\n      interceptionId: this._interceptionId,\n      url,\n      method,\n      postData,\n      headers,\n    }).catch(error => {\n      // In certain cases, protocol will return error if the request was already canceled\n      // or the page was closed. We should tolerate these errors.\n      debugError(error);\n    });\n  }\n\n  /**\n   * @param {!{status: number, headers: Object, contentType: string, body: (string|Buffer)}} response\n   */\n  async respond(response) {\n    // Mocking responses for dataURL requests is not currently supported.\n    if (this._url.startsWith('data:'))\n      return;\n    assert(this._allowInterception, 'Request Interception is not enabled!');\n    assert(!this._interceptionHandled, 'Request is already handled!');\n    this._interceptionHandled = true;\n\n    const responseBody = response.body && helper.isString(response.body) ? Buffer.from(/** @type {string} */(response.body)) : /** @type {?Buffer} */(response.body || null);\n\n    const responseHeaders = {};\n    if (response.headers) {\n      for (const header of Object.keys(response.headers))\n        responseHeaders[header.toLowerCase()] = response.headers[header];\n    }\n    if (response.contentType)\n      responseHeaders['content-type'] = response.contentType;\n    if (responseBody && !('content-length' in responseHeaders))\n      responseHeaders['content-length'] = Buffer.byteLength(responseBody);\n\n    const statusCode = response.status || 200;\n    const statusText = statusTexts[statusCode] || '';\n    const statusLine = `HTTP/1.1 ${statusCode} ${statusText}`;\n\n    const CRLF = '\\r\\n';\n    let text = statusLine + CRLF;\n    for (const header of Object.keys(responseHeaders))\n      text += header + ': ' + responseHeaders[header] + CRLF;\n    text += CRLF;\n    let responseBuffer = Buffer.from(text, 'utf8');\n    if (responseBody)\n      responseBuffer = Buffer.concat([responseBuffer, responseBody]);\n\n    await this._client.send('Network.continueInterceptedRequest', {\n      interceptionId: this._interceptionId,\n      rawResponse: responseBuffer.toString('base64')\n    }).catch(error => {\n      // In certain cases, protocol will return error if the request was already canceled\n      // or the page was closed. We should tolerate these errors.\n      debugError(error);\n    });\n  }\n\n  /**\n   * @param {string=} errorCode\n   */\n  async abort(errorCode = 'failed') {\n    const errorReason = errorReasons[errorCode];\n    assert(errorReason, 'Unknown error code: ' + errorCode);\n    assert(this._allowInterception, 'Request Interception is not enabled!');\n    assert(!this._interceptionHandled, 'Request is already handled!');\n    this._interceptionHandled = true;\n    await this._client.send('Network.continueInterceptedRequest', {\n      interceptionId: this._interceptionId,\n      errorReason\n    }).catch(error => {\n      // In certain cases, protocol will return error if the request was already canceled\n      // or the page was closed. We should tolerate these errors.\n      debugError(error);\n    });\n  }\n}\n\nconst errorReasons = {\n  'aborted': 'Aborted',\n  'accessdenied': 'AccessDenied',\n  'addressunreachable': 'AddressUnreachable',\n  'blockedbyclient': 'BlockedByClient',\n  'blockedbyresponse': 'BlockedByResponse',\n  'connectionaborted': 'ConnectionAborted',\n  'connectionclosed': 'ConnectionClosed',\n  'connectionfailed': 'ConnectionFailed',\n  'connectionrefused': 'ConnectionRefused',\n  'connectionreset': 'ConnectionReset',\n  'internetdisconnected': 'InternetDisconnected',\n  'namenotresolved': 'NameNotResolved',\n  'timedout': 'TimedOut',\n  'failed': 'Failed',\n};\n\nhelper.tracePublicAPI(Request);\n\nclass Response {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Request} request\n   * @param {!Protocol.Network.Response} responsePayload\n   */\n  constructor(client, request, responsePayload) {\n    this._client = client;\n    this._request = request;\n    this._contentPromise = null;\n\n    this._bodyLoadedPromise = new Promise(fulfill => {\n      this._bodyLoadedPromiseFulfill = fulfill;\n    });\n\n    this._remoteAddress = {\n      ip: responsePayload.remoteIPAddress,\n      port: responsePayload.remotePort,\n    };\n    this._status = responsePayload.status;\n    this._statusText = responsePayload.statusText;\n    this._url = request.url();\n    this._fromDiskCache = !!responsePayload.fromDiskCache;\n    this._fromServiceWorker = !!responsePayload.fromServiceWorker;\n    this._headers = {};\n    for (const key of Object.keys(responsePayload.headers))\n      this._headers[key.toLowerCase()] = responsePayload.headers[key];\n    this._securityDetails = responsePayload.securityDetails ? new SecurityDetails(responsePayload.securityDetails) : null;\n  }\n\n  /**\n   * @return {{ip: string, port: number}}\n   */\n  remoteAddress() {\n    return this._remoteAddress;\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  ok() {\n    return this._status === 0 || (this._status >= 200 && this._status <= 299);\n  }\n\n  /**\n   * @return {number}\n   */\n  status() {\n    return this._status;\n  }\n\n  /**\n   * @return {string}\n   */\n  statusText() {\n    return this._statusText;\n  }\n\n  /**\n   * @return {!Object}\n   */\n  headers() {\n    return this._headers;\n  }\n\n  /**\n   * @return {?SecurityDetails}\n   */\n  securityDetails() {\n    return this._securityDetails;\n  }\n\n  /**\n   * @return {!Promise<!Buffer>}\n   */\n  buffer() {\n    if (!this._contentPromise) {\n      this._contentPromise = this._bodyLoadedPromise.then(async error => {\n        if (error)\n          throw error;\n        const response = await this._client.send('Network.getResponseBody', {\n          requestId: this._request._requestId\n        });\n        return Buffer.from(response.body, response.base64Encoded ? 'base64' : 'utf8');\n      });\n    }\n    return this._contentPromise;\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async text() {\n    const content = await this.buffer();\n    return content.toString('utf8');\n  }\n\n  /**\n   * @return {!Promise<!Object>}\n   */\n  async json() {\n    const content = await this.text();\n    return JSON.parse(content);\n  }\n\n  /**\n   * @return {!Request}\n   */\n  request() {\n    return this._request;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  fromCache() {\n    return this._fromDiskCache || this._request._fromMemoryCache;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  fromServiceWorker() {\n    return this._fromServiceWorker;\n  }\n\n  /**\n   * @return {?Puppeteer.Frame}\n   */\n  frame() {\n    return this._request.frame();\n  }\n}\nhelper.tracePublicAPI(Response);\n\n/**\n * @param {!Protocol.Network.Request} request\n * @return {string}\n */\nfunction generateRequestHash(request) {\n  let normalizedURL = request.url;\n  try {\n    // Decoding is necessary to normalize URLs. @see crbug.com/759388\n    // The method will throw if the URL is malformed. In this case,\n    // consider URL to be normalized as-is.\n    normalizedURL = decodeURI(request.url);\n  } catch (e) {\n  }\n  const hash = {\n    url: normalizedURL,\n    method: request.method,\n    postData: request.postData,\n    headers: {},\n  };\n\n  if (!normalizedURL.startsWith('data:')) {\n    const headers = Object.keys(request.headers);\n    headers.sort();\n    for (let header of headers) {\n      const headerValue = request.headers[header];\n      header = header.toLowerCase();\n      if (header === 'accept' || header === 'referer' || header === 'x-devtools-emulate-network-conditions-client-id' || header === 'cookie')\n        continue;\n      hash.headers[header] = headerValue;\n    }\n  }\n  return JSON.stringify(hash);\n}\n\nclass SecurityDetails {\n  /**\n   * @param {!Protocol.Network.SecurityDetails} securityPayload\n   */\n  constructor(securityPayload) {\n    this._subjectName = securityPayload['subjectName'];\n    this._issuer = securityPayload['issuer'];\n    this._validFrom = securityPayload['validFrom'];\n    this._validTo = securityPayload['validTo'];\n    this._protocol = securityPayload['protocol'];\n  }\n\n  /**\n   * @return {string}\n   */\n  subjectName() {\n    return this._subjectName;\n  }\n\n  /**\n   * @return {string}\n   */\n  issuer() {\n    return this._issuer;\n  }\n\n  /**\n   * @return {number}\n   */\n  validFrom() {\n    return this._validFrom;\n  }\n\n  /**\n   * @return {number}\n   */\n  validTo() {\n    return this._validTo;\n  }\n\n  /**\n   * @return {string}\n   */\n  protocol() {\n    return this._protocol;\n  }\n}\n\nNetworkManager.Events = {\n  Request: 'request',\n  Response: 'response',\n  RequestFailed: 'requestfailed',\n  RequestFinished: 'requestfinished',\n};\n\nconst statusTexts = {\n  '100': 'Continue',\n  '101': 'Switching Protocols',\n  '102': 'Processing',\n  '200': 'OK',\n  '201': 'Created',\n  '202': 'Accepted',\n  '203': 'Non-Authoritative Information',\n  '204': 'No Content',\n  '206': 'Partial Content',\n  '207': 'Multi-Status',\n  '208': 'Already Reported',\n  '209': 'IM Used',\n  '300': 'Multiple Choices',\n  '301': 'Moved Permanently',\n  '302': 'Found',\n  '303': 'See Other',\n  '304': 'Not Modified',\n  '305': 'Use Proxy',\n  '306': 'Switch Proxy',\n  '307': 'Temporary Redirect',\n  '308': 'Permanent Redirect',\n  '400': 'Bad Request',\n  '401': 'Unauthorized',\n  '402': 'Payment Required',\n  '403': 'Forbidden',\n  '404': 'Not Found',\n  '405': 'Method Not Allowed',\n  '406': 'Not Acceptable',\n  '407': 'Proxy Authentication Required',\n  '408': 'Request Timeout',\n  '409': 'Conflict',\n  '410': 'Gone',\n  '411': 'Length Required',\n  '412': 'Precondition Failed',\n  '413': 'Payload Too Large',\n  '414': 'URI Too Long',\n  '415': 'Unsupported Media Type',\n  '416': 'Range Not Satisfiable',\n  '417': 'Expectation Failed',\n  '418': 'I\\'m a teapot',\n  '421': 'Misdirected Request',\n  '422': 'Unprocessable Entity',\n  '423': 'Locked',\n  '424': 'Failed Dependency',\n  '426': 'Upgrade Required',\n  '428': 'Precondition Required',\n  '429': 'Too Many Requests',\n  '431': 'Request Header Fields Too Large',\n  '451': 'Unavailable For Legal Reasons',\n  '500': 'Internal Server Error',\n  '501': 'Not Implemented',\n  '502': 'Bad Gateway',\n  '503': 'Service Unavailable',\n  '504': 'Gateway Timeout',\n  '505': 'HTTP Version Not Supported',\n  '506': 'Variant Also Negotiates',\n  '507': 'Insufficient Storage',\n  '508': 'Loop Detected',\n  '510': 'Not Extended',\n  '511': 'Network Authentication Required',\n};\n\nmodule.exports = {Request, Response, NetworkManager};\n","module.exports = require(\"readline\");","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nmodule.exports = WebSocket;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst url = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst EventTarget = require('./event-target');\nconst extension = require('./extension');\nconst constants = require('./constants');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst kWebSocket = constants.kWebSocket;\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly.\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|url.Url|url.URL)} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this.readyState = WebSocket.CONNECTING;\n    this.protocol = '';\n\n    this._binaryType = constants.BINARY_TYPES[0];\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._closeCode = 1006;\n    this._extensions = {};\n    this._isServer = true;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient.call(this, address, protocols, options);\n    }\n  }\n\n  get CONNECTING() {\n    return WebSocket.CONNECTING;\n  }\n  get CLOSING() {\n    return WebSocket.CLOSING;\n  }\n  get CLOSED() {\n    return WebSocket.CLOSED;\n  }\n  get OPEN() {\n    return WebSocket.OPEN;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the required\n   * default \"blob\" type (instead we define a custom \"nodebuffer\" type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (constants.BINARY_TYPES.indexOf(type) < 0) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return 0;\n\n    //\n    // `socket.bufferSize` is `undefined` if the socket is closed.\n    //\n    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} maxPayload The maximum allowed message size\n   * @private\n   */\n  setSocket(socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this._binaryType,\n      this._extensions,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    this.readyState = WebSocket.CLOSED;\n\n    if (!this._socket) {\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (this._socket.writable) {\n        if (this._closeFrameReceived) this._socket.end();\n\n        //\n        // Ensure that the connection is closed even if the closing handshake\n        // fails.\n        //\n        this._closeTimer = setTimeout(\n          this._socket.destroy.bind(this._socket),\n          closeTimeout\n        );\n      }\n    });\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || constants.EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || constants.EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (this.readyState !== WebSocket.OPEN) {\n      const err = new Error(\n        `WebSocket is not open: readyState ${this.readyState} ` +\n          `(${readyStates[this.readyState]})`\n      );\n\n      if (cb) return cb(err);\n      throw err;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    const opts = Object.assign(\n      {\n        binary: typeof data !== 'string',\n        mask: !this._isServer,\n        compress: true,\n        fin: true\n      },\n      options\n    );\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || constants.EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this.readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\nreadyStates.forEach((readyState, i) => {\n  WebSocket[readyStates[i]] = i;\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get() {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n\n      return undefined;\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set(listener) {\n      const listeners = this.listeners(method);\n      for (var i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = EventTarget.addEventListener;\nWebSocket.prototype.removeEventListener = EventTarget.removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {(String|url.Url|url.URL)} address The URL to which to connect\n * @param {String} protocols The subprotocols\n * @param {Object} options Connection options\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the handshake request\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version` header\n * @param {String} options.origin Value of the `Origin` or `Sec-WebSocket-Origin` header\n * @param {Number} options.maxPayload The maximum allowed message size\n * @private\n */\nfunction initAsClient(address, protocols, options) {\n  options = Object.assign(\n    {\n      protocolVersion: protocolVersions[1],\n      perMessageDeflate: true,\n      maxPayload: 100 * 1024 * 1024\n    },\n    options,\n    {\n      createConnection: undefined,\n      socketPath: undefined,\n      hostname: undefined,\n      protocol: undefined,\n      timeout: undefined,\n      method: undefined,\n      auth: undefined,\n      host: undefined,\n      path: undefined,\n      port: undefined\n    }\n  );\n\n  if (protocolVersions.indexOf(options.protocolVersion) === -1) {\n    throw new RangeError(\n      `Unsupported protocol version: ${options.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  this._isServer = false;\n\n  var parsedUrl;\n\n  if (typeof address === 'object' && address.href !== undefined) {\n    parsedUrl = address;\n    this.url = address.href;\n  } else {\n    //\n    // The WHATWG URL constructor is not available on Node.js < 6.13.0\n    //\n    parsedUrl = url.URL ? new url.URL(address) : url.parse(address);\n    this.url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${this.url}`);\n  }\n\n  const isSecure =\n    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const key = crypto.randomBytes(16).toString('base64');\n  const httpObj = isSecure ? https : http;\n  const path = parsedUrl.search\n    ? `${parsedUrl.pathname || '/'}${parsedUrl.search}`\n    : parsedUrl.pathname || '/';\n  var perMessageDeflate;\n\n  options.createConnection = isSecure ? tlsConnect : netConnect;\n  options.port = parsedUrl.port || (isSecure ? 443 : 80);\n  options.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  options.headers = Object.assign(\n    {\n      'Sec-WebSocket-Version': options.protocolVersion,\n      'Sec-WebSocket-Key': key,\n      Connection: 'Upgrade',\n      Upgrade: 'websocket'\n    },\n    options.headers\n  );\n  options.path = path;\n\n  if (options.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      options.perMessageDeflate !== true ? options.perMessageDeflate : {},\n      false,\n      options.maxPayload\n    );\n    options.headers['Sec-WebSocket-Extensions'] = extension.format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    options.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (options.origin) {\n    if (options.protocolVersion < 13) {\n      options.headers['Sec-WebSocket-Origin'] = options.origin;\n    } else {\n      options.headers.Origin = options.origin;\n    }\n  }\n  if (parsedUrl.auth) {\n    options.auth = parsedUrl.auth;\n  } else if (parsedUrl.username || parsedUrl.password) {\n    options.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = path.split(':');\n\n    options.socketPath = parts[0];\n    options.path = parts[1];\n  }\n\n  var req = (this._req = httpObj.get(options));\n\n  if (options.handshakeTimeout) {\n    req.setTimeout(options.handshakeTimeout, () =>\n      abortHandshake(this, req, 'Opening handshake has timed out')\n    );\n  }\n\n  req.on('error', (err) => {\n    if (this._req.aborted) return;\n\n    req = this._req = null;\n    this.readyState = WebSocket.CLOSING;\n    this.emit('error', err);\n    this.emitClose();\n  });\n\n  req.on('response', (res) => {\n    if (this.emit('unexpected-response', req, res)) return;\n\n    abortHandshake(this, req, `Unexpected server response: ${res.statusCode}`);\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    this.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (this.readyState !== WebSocket.CONNECTING) return;\n\n    req = this._req = null;\n\n    const digest = crypto\n      .createHash('sha1')\n      .update(key + constants.GUID, 'binary')\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(this, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    var protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(this, socket, protError);\n      return;\n    }\n\n    if (serverProt) this.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const extensions = extension.parse(\n          res.headers['sec-websocket-extensions']\n        );\n\n        if (extensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n          this._extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        abortHandshake(this, socket, 'Invalid Sec-WebSocket-Extensions header');\n        return;\n      }\n    }\n\n    this.setSocket(socket, head, options.maxPayload);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  //\n  // Override `options.path` only if `options` is a copy of the original options\n  // object. This is always true on Node.js >= 8 but not on Node.js 6 where\n  // `options.socketPath` might be `undefined` even if the `socketPath` option\n  // was originally set.\n  //\n  if (options.protocolVersion) options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n  options.servername = options.servername || options.host;\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the\n *     socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket.readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n  websocket._socket.resume();\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._closeCode = err[constants.kStatusCode];\n  websocket.emit('error', err);\n  websocket._socket.destroy();\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage(data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, constants.NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('end', socketOnEnd);\n\n  websocket.readyState = WebSocket.CLOSING;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk and emitted synchronously in a single\n  // `'data'` event.\n  //\n  websocket._socket.read();\n  websocket._receiver.end();\n\n  this.removeListener('data', socketOnData);\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', constants.NOOP);\n\n  if (websocket) {\n    websocket.readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (Object.prototype.hasOwnProperty.call(dest, name)) dest[name].push(elem);\n  else dest[name] = [elem];\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = {};\n\n  if (header === undefined || header === '') return offers;\n\n  var params = {};\n  var mustUnescape = false;\n  var isEscaping = false;\n  var inQuotes = false;\n  var extensionName;\n  var paramName;\n  var start = -1;\n  var end = -1;\n\n  for (var i = 0; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = {};\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        var value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = {};\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, {});\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      var configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                var values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst stream = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends stream.Writable\n */\nclass Receiver extends stream.Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} binaryType The type for binary data\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(binaryType, extensions, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || constants.BINARY_TYPES[0];\n    this[constants.kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n\n      if (n >= buf.length) {\n        this._buffers.shift().copy(dst, dst.length - n);\n      } else {\n        buf.copy(dst, dst.length - n, 0, n);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    var err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002);\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002);\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002);\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009);\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    var data = constants.EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) bufferUtil.unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(RangeError, 'Max payload size exceeded', false, 1009)\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        var data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = toBuffer(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(toBuffer(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = toBuffer(fragments, messageLength);\n\n        if (!validation.isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(RangeError, 'invalid payload length 1', true, 1002);\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!validation.isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002);\n        }\n\n        const buf = data.slice(2);\n\n        if (!validation.isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n\n      return;\n    }\n\n    if (this._opcode === 0x09) this.emit('ping', data);\n    else this.emit('pong', data);\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {(Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err[constants.kStatusCode] = statusCode;\n  return err;\n}\n\n/**\n * Makes a buffer from a list of fragments.\n *\n * @param {Buffer[]} fragments The list of fragments composing the message\n * @param {Number} messageLength The length of the message\n * @return {Buffer}\n * @private\n */\nfunction toBuffer(fragments, messageLength) {\n  if (fragments.length === 1) return fragments[0];\n  if (fragments.length > 1) return bufferUtil.concat(fragments, messageLength);\n  return constants.EMPTY_BUFFER;\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n","'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  exports.isValidUTF8 =\n    typeof isValidUTF8 === 'object'\n      ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n      : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  exports.isValidUTF8 = () => true;\n}\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nexports.isValidStatusCode = (code) => {\n  return (\n    (code >= 1000 &&\n      code <= 1013 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n};\n","'use strict';\n\nconst crypto = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst bufferUtil = require('./buffer-util');\nconst validation = require('./validation');\nconst constants = require('./constants');\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor(socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame(data, options) {\n    const merge = data.length < 1024 || (options.mask && options.readOnly);\n    var offset = options.mask ? 6 : 2;\n    var payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) {\n      target[1] = payloadLength;\n      if (merge) {\n        data.copy(target, offset);\n        return [target];\n      }\n\n      return [target, data];\n    }\n\n    const mask = crypto.randomBytes(4);\n\n    target[1] = payloadLength | 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      bufferUtil.mask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    bufferUtil.mask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    var buf;\n\n    if (code === undefined) {\n      buf = constants.EMPTY_BUFFER;\n    } else if (\n      typeof code !== 'number' ||\n      !validation.isValidStatusCode(code)\n    ) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose(data, mask, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x08,\n        mask,\n        readOnly: false\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, data, mask, readOnly, cb]);\n    } else {\n      this.doPing(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPing(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x09,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, data, mask, readOnly, cb]);\n    } else {\n      this.doPong(data, mask, readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPong(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x0a,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send(data, options, cb) {\n    var opcode = options.binary ? 2 : 1;\n    var rsv1 = options.compress;\n    var readOnly = true;\n\n    if (!Buffer.isBuffer(data)) {\n      if (data instanceof ArrayBuffer) {\n        data = Buffer.from(data);\n      } else if (ArrayBuffer.isView(data)) {\n        data = viewToBuffer(data);\n      } else {\n        data = Buffer.from(data);\n        readOnly = false;\n      }\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = data.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          fin: options.fin,\n          rsv1: false,\n          opcode,\n          mask: options.mask,\n          readOnly\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      this._deflating = false;\n\n      if (!this._socket.readable && !this._socket.writable) {\n        //\n        // The socket is closed. Clear the queue and bail out.\n        //\n        this._bufferedBytes = 0;\n        this._queue.length = 0;\n        return;\n      }\n\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      params[0].apply(this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer(view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst extract = require('extract-zip');\nconst util = require('util');\nconst URL = require('url');\nconst {helper, assert} = require('./helper');\nconst removeRecursive = require('rimraf');\n// @ts-ignore\nconst ProxyAgent = require('https-proxy-agent');\n// @ts-ignore\nconst getProxyForUrl = require('proxy-from-env').getProxyForUrl;\n\nconst DEFAULT_DOWNLOAD_HOST = 'https://storage.googleapis.com';\n\nconst supportedPlatforms = ['mac', 'linux', 'win32', 'win64'];\nconst downloadURLs = {\n  linux: '%s/chromium-browser-snapshots/Linux_x64/%d/%s.zip',\n  mac: '%s/chromium-browser-snapshots/Mac/%d/%s.zip',\n  win32: '%s/chromium-browser-snapshots/Win/%d/%s.zip',\n  win64: '%s/chromium-browser-snapshots/Win_x64/%d/%s.zip',\n};\n\n/**\n * @param {string} platform\n * @param {string} revision\n * @return {string}\n */\nfunction archiveName(platform, revision) {\n  if (platform === 'linux')\n    return 'chrome-linux';\n  if (platform === 'mac')\n    return 'chrome-mac';\n  if (platform === 'win32' || platform === 'win64') {\n    // Windows archive name changed at r591479.\n    return parseInt(revision, 10) > 591479 ? 'chrome-win' : 'chrome-win32';\n  }\n  return null;\n}\n\n/**\n * @param {string} platform\n * @param {string} host\n * @param {string} revision\n * @return {string}\n */\nfunction downloadURL(platform, host, revision) {\n  return util.format(downloadURLs[platform], host, revision, archiveName(platform, revision));\n}\n\nconst readdirAsync = helper.promisify(fs.readdir.bind(fs));\nconst mkdirAsync = helper.promisify(fs.mkdir.bind(fs));\nconst unlinkAsync = helper.promisify(fs.unlink.bind(fs));\nconst chmodAsync = helper.promisify(fs.chmod.bind(fs));\n\nfunction existsAsync(filePath) {\n  let fulfill = null;\n  const promise = new Promise(x => fulfill = x);\n  fs.access(filePath, err => fulfill(!err));\n  return promise;\n}\n\nclass BrowserFetcher {\n  /**\n   * @param {string} projectRoot\n   * @param {!BrowserFetcher.Options=} options\n   */\n  constructor(projectRoot, options = {}) {\n    this._downloadsFolder = options.path || path.join(projectRoot, '.local-chromium');\n    this._downloadHost = options.host || DEFAULT_DOWNLOAD_HOST;\n    this._platform = options.platform || '';\n    if (!this._platform) {\n      const platform = os.platform();\n      if (platform === 'darwin')\n        this._platform = 'mac';\n      else if (platform === 'linux')\n        this._platform = 'linux';\n      else if (platform === 'win32')\n        this._platform = os.arch() === 'x64' ? 'win64' : 'win32';\n      assert(this._platform, 'Unsupported platform: ' + os.platform());\n    }\n    assert(supportedPlatforms.includes(this._platform), 'Unsupported platform: ' + this._platform);\n  }\n\n  /**\n   * @return {string}\n   */\n  platform() {\n    return this._platform;\n  }\n\n  /**\n   * @param {string} revision\n   * @return {!Promise<boolean>}\n   */\n  canDownload(revision) {\n    const url = downloadURL(this._platform, this._downloadHost, revision);\n    let resolve;\n    const promise = new Promise(x => resolve = x);\n    const request = httpRequest(url, 'HEAD', response => {\n      resolve(response.statusCode === 200);\n    });\n    request.on('error', error => {\n      console.error(error);\n      resolve(false);\n    });\n    return promise;\n  }\n\n  /**\n   * @param {string} revision\n   * @param {?function(number, number)} progressCallback\n   * @return {!Promise<!BrowserFetcher.RevisionInfo>}\n   */\n  /* async */ download(revision, progressCallback) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const url = downloadURL(this._platform, this._downloadHost, revision);\n    const zipPath = path.join(this._downloadsFolder, `download-${this._platform}-${revision}.zip`);\n    const folderPath = this._getFolderPath(revision);\n    if ((yield existsAsync(folderPath)))\n      return this.revisionInfo(revision);\n    if (!((yield existsAsync(this._downloadsFolder))))\n      (yield mkdirAsync(this._downloadsFolder));\n    try {\n      (yield downloadFile(url, zipPath, progressCallback));\n      (yield extractZip(zipPath, folderPath));\n    } finally {\n      if ((yield existsAsync(zipPath)))\n        (yield unlinkAsync(zipPath));\n    }\n    const revisionInfo = this.revisionInfo(revision);\n    if (revisionInfo)\n      (yield chmodAsync(revisionInfo.executablePath, 0o755));\n    return revisionInfo;\n  });}\n\n  /**\n   * @return {!Promise<!Array<string>>}\n   */\n  /* async */ localRevisions() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (!(yield existsAsync(this._downloadsFolder)))\n      return [];\n    const fileNames = (yield readdirAsync(this._downloadsFolder));\n    return fileNames.map(fileName => parseFolderPath(fileName)).filter(entry => entry && entry.platform === this._platform).map(entry => entry.revision);\n  });}\n\n  /**\n   * @param {string} revision\n   */\n  /* async */ remove(revision) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const folderPath = this._getFolderPath(revision);\n    assert((yield existsAsync(folderPath)), `Failed to remove: revision ${revision} is not downloaded`);\n    (yield new Promise(fulfill => removeRecursive(folderPath, fulfill)));\n  });}\n\n  /**\n   * @param {string} revision\n   * @return {!BrowserFetcher.RevisionInfo}\n   */\n  revisionInfo(revision) {\n    const folderPath = this._getFolderPath(revision);\n    let executablePath = '';\n    if (this._platform === 'mac')\n      executablePath = path.join(folderPath, archiveName(this._platform, revision), 'Chromium.app', 'Contents', 'MacOS', 'Chromium');\n    else if (this._platform === 'linux')\n      executablePath = path.join(folderPath, archiveName(this._platform, revision), 'chrome');\n    else if (this._platform === 'win32' || this._platform === 'win64')\n      executablePath = path.join(folderPath, archiveName(this._platform, revision), 'chrome.exe');\n    else\n      throw new Error('Unsupported platform: ' + this._platform);\n    const url = downloadURL(this._platform, this._downloadHost, revision);\n    const local = fs.existsSync(folderPath);\n    return {revision, executablePath, folderPath, local, url};\n  }\n\n  /**\n   * @param {string} revision\n   * @return {string}\n   */\n  _getFolderPath(revision) {\n    return path.join(this._downloadsFolder, this._platform + '-' + revision);\n  }\n}\n\nmodule.exports = BrowserFetcher;\n\n/**\n * @param {string} folderPath\n * @return {?{platform: string, revision: string}}\n */\nfunction parseFolderPath(folderPath) {\n  const name = path.basename(folderPath);\n  const splits = name.split('-');\n  if (splits.length !== 2)\n    return null;\n  const [platform, revision] = splits;\n  if (!supportedPlatforms.includes(platform))\n    return null;\n  return {platform, revision};\n}\n\n/**\n * @param {string} url\n * @param {string} destinationPath\n * @param {?function(number, number)} progressCallback\n * @return {!Promise}\n */\nfunction downloadFile(url, destinationPath, progressCallback) {\n  let fulfill, reject;\n  let downloadedBytes = 0;\n  let totalBytes = 0;\n\n  const promise = new Promise((x, y) => { fulfill = x; reject = y; });\n\n  const request = httpRequest(url, 'GET', response => {\n    if (response.statusCode !== 200) {\n      const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`);\n      // consume response data to free up memory\n      response.resume();\n      reject(error);\n      return;\n    }\n    const file = fs.createWriteStream(destinationPath);\n    file.on('finish', () => fulfill());\n    file.on('error', error => reject(error));\n    response.pipe(file);\n    totalBytes = parseInt(/** @type {string} */ (response.headers['content-length']), 10);\n    if (progressCallback)\n      response.on('data', onData);\n  });\n  request.on('error', error => reject(error));\n  return promise;\n\n  function onData(chunk) {\n    downloadedBytes += chunk.length;\n    progressCallback(downloadedBytes, totalBytes);\n  }\n}\n\n/**\n * @param {string} zipPath\n * @param {string} folderPath\n * @return {!Promise<?Error>}\n */\nfunction extractZip(zipPath, folderPath) {\n  return new Promise((fulfill, reject) => extract(zipPath, {dir: folderPath}, err => {\n    if (err)\n      reject(err);\n    else\n      fulfill();\n  }));\n}\n\nfunction httpRequest(url, method, response) {\n  /** @type {Object} */\n  const options = URL.parse(url);\n  options.method = method;\n\n  const proxyURL = getProxyForUrl(url);\n  if (proxyURL) {\n    /** @type {Object} */\n    const parsedProxyURL = URL.parse(proxyURL);\n    parsedProxyURL.secureProxy = parsedProxyURL.protocol === 'https:';\n\n    options.agent = new ProxyAgent(parsedProxyURL);\n    options.rejectUnauthorized = false;\n  }\n\n  const requestCallback = res => {\n    if (res.statusCode >= 300 && res.statusCode < 400 && res.headers.location)\n      httpRequest(res.headers.location, method, response);\n    else\n      response(res);\n  };\n  const request = options.protocol === 'https:' ?\n    require('https').request(options, requestCallback) :\n    require('http').request(options, requestCallback);\n  request.end();\n  return request;\n}\n\n/**\n * @typedef {Object} BrowserFetcher.Options\n * @property {string=} platform\n * @property {string=} path\n * @property {string=} host\n */\n\n/**\n * @typedef {Object} BrowserFetcher.RevisionInfo\n * @property {string} folderPath\n * @property {string} executablePath\n * @property {string} url\n * @property {boolean} local\n * @property {string} revision\n */\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst EventEmitter = require('events');\nconst {helper, assert, debugError} = require('./helper');\nconst Multimap = require('./Multimap');\n\nclass NetworkManager extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    super();\n    this._client = client;\n    this._frameManager = null;\n    /** @type {!Map<string, !Request>} */\n    this._requestIdToRequest = new Map();\n    /** @type {!Map<string, !Protocol.Network.requestWillBeSentPayload>} */\n    this._requestIdToRequestWillBeSentEvent = new Map();\n    /** @type {!Object<string, string>} */\n    this._extraHTTPHeaders = {};\n\n    this._offline = false;\n\n    /** @type {?{username: string, password: string}} */\n    this._credentials = null;\n    /** @type {!Set<string>} */\n    this._attemptedAuthentications = new Set();\n    this._userRequestInterceptionEnabled = false;\n    this._protocolRequestInterceptionEnabled = false;\n    /** @type {!Multimap<string, string>} */\n    this._requestHashToRequestIds = new Multimap();\n    /** @type {!Multimap<string, string>} */\n    this._requestHashToInterceptionIds = new Multimap();\n\n    this._client.on('Network.requestWillBeSent', this._onRequestWillBeSent.bind(this));\n    this._client.on('Network.requestIntercepted', this._onRequestIntercepted.bind(this));\n    this._client.on('Network.requestServedFromCache', this._onRequestServedFromCache.bind(this));\n    this._client.on('Network.responseReceived', this._onResponseReceived.bind(this));\n    this._client.on('Network.loadingFinished', this._onLoadingFinished.bind(this));\n    this._client.on('Network.loadingFailed', this._onLoadingFailed.bind(this));\n  }\n\n  /**\n   * @param {!Puppeteer.FrameManager} frameManager\n   */\n  setFrameManager(frameManager) {\n    this._frameManager = frameManager;\n  }\n\n  /**\n   * @param {?{username: string, password: string}} credentials\n   */\n  /* async */ authenticate(credentials) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    this._credentials = credentials;\n    (yield this._updateProtocolRequestInterception());\n  });}\n\n  /**\n   * @param {!Object<string, string>} extraHTTPHeaders\n   */\n  /* async */ setExtraHTTPHeaders(extraHTTPHeaders) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    this._extraHTTPHeaders = {};\n    for (const key of Object.keys(extraHTTPHeaders)) {\n      const value = extraHTTPHeaders[key];\n      assert(helper.isString(value), `Expected value of header \"${key}\" to be String, but \"${typeof value}\" is found.`);\n      this._extraHTTPHeaders[key.toLowerCase()] = value;\n    }\n    (yield this._client.send('Network.setExtraHTTPHeaders', { headers: this._extraHTTPHeaders }));\n  });}\n\n  /**\n   * @return {!Object<string, string>}\n   */\n  extraHTTPHeaders() {\n    return Object.assign({}, this._extraHTTPHeaders);\n  }\n\n  /**\n   * @param {boolean} value\n   */\n  /* async */ setOfflineMode(value) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (this._offline === value)\n      return;\n    this._offline = value;\n    (yield this._client.send('Network.emulateNetworkConditions', {\n      offline: this._offline,\n      // values of 0 remove any active throttling. crbug.com/456324#c9\n      latency: 0,\n      downloadThroughput: -1,\n      uploadThroughput: -1\n    }));\n  });}\n\n  /**\n   * @param {string} userAgent\n   */\n  /* async */ setUserAgent(userAgent) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._client.send('Network.setUserAgentOverride', { userAgent }));\n  });}\n\n  /**\n   * @param {boolean} value\n   */\n  /* async */ setRequestInterception(value) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    this._userRequestInterceptionEnabled = value;\n    (yield this._updateProtocolRequestInterception());\n  });}\n\n  /* async */ _updateProtocolRequestInterception() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const enabled = this._userRequestInterceptionEnabled || !!this._credentials;\n    if (enabled === this._protocolRequestInterceptionEnabled)\n      return;\n    this._protocolRequestInterceptionEnabled = enabled;\n    const patterns = enabled ? [{urlPattern: '*'}] : [];\n    (yield Promise.all([\n      this._client.send('Network.setCacheDisabled', {cacheDisabled: enabled}),\n      this._client.send('Network.setRequestInterception', {patterns})\n    ]));\n  });}\n\n  /**\n   * @param {!Protocol.Network.requestWillBeSentPayload} event\n   */\n  _onRequestWillBeSent(event) {\n    if (this._protocolRequestInterceptionEnabled) {\n      const requestHash = generateRequestHash(event.request);\n      const interceptionId = this._requestHashToInterceptionIds.firstValue(requestHash);\n      if (interceptionId) {\n        this._onRequest(event, interceptionId);\n        this._requestHashToInterceptionIds.delete(requestHash, interceptionId);\n      } else {\n        this._requestHashToRequestIds.set(requestHash, event.requestId);\n        this._requestIdToRequestWillBeSentEvent.set(event.requestId, event);\n      }\n      return;\n    }\n    this._onRequest(event, null);\n  }\n\n  /**\n   * @param {!Protocol.Network.requestInterceptedPayload} event\n   */\n  _onRequestIntercepted(event) {\n    if (event.authChallenge) {\n      /** @type {\"Default\"|\"CancelAuth\"|\"ProvideCredentials\"} */\n      let response = 'Default';\n      if (this._attemptedAuthentications.has(event.interceptionId)) {\n        response = 'CancelAuth';\n      } else if (this._credentials) {\n        response = 'ProvideCredentials';\n        this._attemptedAuthentications.add(event.interceptionId);\n      }\n      const {username, password} = this._credentials || {username: undefined, password: undefined};\n      this._client.send('Network.continueInterceptedRequest', {\n        interceptionId: event.interceptionId,\n        authChallengeResponse: { response, username, password }\n      }).catch(debugError);\n      return;\n    }\n    if (!this._userRequestInterceptionEnabled && this._protocolRequestInterceptionEnabled) {\n      this._client.send('Network.continueInterceptedRequest', {\n        interceptionId: event.interceptionId\n      }).catch(debugError);\n    }\n\n    const requestHash = generateRequestHash(event.request);\n    const requestId = this._requestHashToRequestIds.firstValue(requestHash);\n    if (requestId) {\n      const requestWillBeSentEvent = this._requestIdToRequestWillBeSentEvent.get(requestId);\n      this._onRequest(requestWillBeSentEvent, event.interceptionId);\n      this._requestHashToRequestIds.delete(requestHash, requestId);\n      this._requestIdToRequestWillBeSentEvent.delete(requestId);\n    } else {\n      this._requestHashToInterceptionIds.set(requestHash, event.interceptionId);\n    }\n  }\n\n  /**\n   * @param {!Protocol.Network.requestWillBeSentPayload} event\n   * @param {?string} interceptionId\n   */\n  _onRequest(event, interceptionId) {\n    let redirectChain = [];\n    if (event.redirectResponse) {\n      const request = this._requestIdToRequest.get(event.requestId);\n      // If we connect late to the target, we could have missed the requestWillBeSent event.\n      if (request) {\n        this._handleRequestRedirect(request, event.redirectResponse);\n        redirectChain = request._redirectChain;\n      }\n    }\n    const frame = event.frameId && this._frameManager ? this._frameManager.frame(event.frameId) : null;\n    const request = new Request(this._client, frame, interceptionId, this._userRequestInterceptionEnabled, event, redirectChain);\n    this._requestIdToRequest.set(event.requestId, request);\n    this.emit(NetworkManager.Events.Request, request);\n  }\n\n\n  /**\n   * @param {!Protocol.Network.requestServedFromCachePayload} event\n   */\n  _onRequestServedFromCache(event) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    if (request)\n      request._fromMemoryCache = true;\n  }\n\n  /**\n   * @param {!Request} request\n   * @param {!Protocol.Network.Response} responsePayload\n   */\n  _handleRequestRedirect(request, responsePayload) {\n    const response = new Response(this._client, request, responsePayload);\n    request._response = response;\n    request._redirectChain.push(request);\n    response._bodyLoadedPromiseFulfill.call(null, new Error('Response body is unavailable for redirect responses'));\n    this._requestIdToRequest.delete(request._requestId);\n    this._attemptedAuthentications.delete(request._interceptionId);\n    this.emit(NetworkManager.Events.Response, response);\n    this.emit(NetworkManager.Events.RequestFinished, request);\n  }\n\n  /**\n   * @param {!Protocol.Network.responseReceivedPayload} event\n   */\n  _onResponseReceived(event) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    // FileUpload sends a response without a matching request.\n    if (!request)\n      return;\n    const response = new Response(this._client, request, event.response);\n    request._response = response;\n    this.emit(NetworkManager.Events.Response, response);\n  }\n\n  /**\n   * @param {!Protocol.Network.loadingFinishedPayload} event\n   */\n  _onLoadingFinished(event) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    // For certain requestIds we never receive requestWillBeSent event.\n    // @see https://crbug.com/750469\n    if (!request)\n      return;\n\n    // Under certain conditions we never get the Network.responseReceived\n    // event from protocol. @see https://crbug.com/883475\n    if (request.response())\n      request.response()._bodyLoadedPromiseFulfill.call(null);\n    this._requestIdToRequest.delete(request._requestId);\n    this._attemptedAuthentications.delete(request._interceptionId);\n    this.emit(NetworkManager.Events.RequestFinished, request);\n  }\n\n  /**\n   * @param {!Protocol.Network.loadingFailedPayload} event\n   */\n  _onLoadingFailed(event) {\n    const request = this._requestIdToRequest.get(event.requestId);\n    // For certain requestIds we never receive requestWillBeSent event.\n    // @see https://crbug.com/750469\n    if (!request)\n      return;\n    request._failureText = event.errorText;\n    const response = request.response();\n    if (response)\n      response._bodyLoadedPromiseFulfill.call(null);\n    this._requestIdToRequest.delete(request._requestId);\n    this._attemptedAuthentications.delete(request._interceptionId);\n    this.emit(NetworkManager.Events.RequestFailed, request);\n  }\n}\n\nclass Request {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {?Puppeteer.Frame} frame\n   * @param {string} interceptionId\n   * @param {boolean} allowInterception\n   * @param {!Protocol.Network.requestWillBeSentPayload} event\n   * @param {!Array<!Request>} redirectChain\n   */\n  constructor(client, frame, interceptionId, allowInterception, event, redirectChain) {\n    this._client = client;\n    this._requestId = event.requestId;\n    this._isNavigationRequest = event.requestId === event.loaderId && event.type === 'Document';\n    this._interceptionId = interceptionId;\n    this._allowInterception = allowInterception;\n    this._interceptionHandled = false;\n    this._response = null;\n    this._failureText = null;\n\n    this._url = event.request.url;\n    this._resourceType = event.type.toLowerCase();\n    this._method = event.request.method;\n    this._postData = event.request.postData;\n    this._headers = {};\n    this._frame = frame;\n    this._redirectChain = redirectChain;\n    for (const key of Object.keys(event.request.headers))\n      this._headers[key.toLowerCase()] = event.request.headers[key];\n\n    this._fromMemoryCache = false;\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {string}\n   */\n  resourceType() {\n    return this._resourceType;\n  }\n\n  /**\n   * @return {string}\n   */\n  method() {\n    return this._method;\n  }\n\n  /**\n   * @return {string|undefined}\n   */\n  postData() {\n    return this._postData;\n  }\n\n  /**\n   * @return {!Object}\n   */\n  headers() {\n    return this._headers;\n  }\n\n  /**\n   * @return {?Response}\n   */\n  response() {\n    return this._response;\n  }\n\n  /**\n   * @return {?Puppeteer.Frame}\n   */\n  frame() {\n    return this._frame;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isNavigationRequest() {\n    return this._isNavigationRequest;\n  }\n\n  /**\n   * @return {!Array<!Request>}\n   */\n  redirectChain() {\n    return this._redirectChain.slice();\n  }\n\n  /**\n   * @return {?{errorText: string}}\n   */\n  failure() {\n    if (!this._failureText)\n      return null;\n    return {\n      errorText: this._failureText\n    };\n  }\n\n  /**\n   * @param {!{url?: string, method?:string, postData?: string, headers?: !Object}} overrides\n   */\n  /* async */ continue(overrides = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(this._allowInterception, 'Request Interception is not enabled!');\n    assert(!this._interceptionHandled, 'Request is already handled!');\n    const {\n      url,\n      method,\n      postData,\n      headers\n    } = overrides;\n    this._interceptionHandled = true;\n    (yield this._client.send('Network.continueInterceptedRequest', {\n      interceptionId: this._interceptionId,\n      url,\n      method,\n      postData,\n      headers,\n    }).catch(error => {\n      // In certain cases, protocol will return error if the request was already canceled\n      // or the page was closed. We should tolerate these errors.\n      debugError(error);\n    }));\n  });}\n\n  /**\n   * @param {!{status: number, headers: Object, contentType: string, body: (string|Buffer)}} response\n   */\n  /* async */ respond(response) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    // Mocking responses for dataURL requests is not currently supported.\n    if (this._url.startsWith('data:'))\n      return;\n    assert(this._allowInterception, 'Request Interception is not enabled!');\n    assert(!this._interceptionHandled, 'Request is already handled!');\n    this._interceptionHandled = true;\n\n    const responseBody = response.body && helper.isString(response.body) ? Buffer.from(/** @type {string} */(response.body)) : /** @type {?Buffer} */(response.body || null);\n\n    const responseHeaders = {};\n    if (response.headers) {\n      for (const header of Object.keys(response.headers))\n        responseHeaders[header.toLowerCase()] = response.headers[header];\n    }\n    if (response.contentType)\n      responseHeaders['content-type'] = response.contentType;\n    if (responseBody && !('content-length' in responseHeaders))\n      responseHeaders['content-length'] = Buffer.byteLength(responseBody);\n\n    const statusCode = response.status || 200;\n    const statusText = statusTexts[statusCode] || '';\n    const statusLine = `HTTP/1.1 ${statusCode} ${statusText}`;\n\n    const CRLF = '\\r\\n';\n    let text = statusLine + CRLF;\n    for (const header of Object.keys(responseHeaders))\n      text += header + ': ' + responseHeaders[header] + CRLF;\n    text += CRLF;\n    let responseBuffer = Buffer.from(text, 'utf8');\n    if (responseBody)\n      responseBuffer = Buffer.concat([responseBuffer, responseBody]);\n\n    (yield this._client.send('Network.continueInterceptedRequest', {\n      interceptionId: this._interceptionId,\n      rawResponse: responseBuffer.toString('base64')\n    }).catch(error => {\n      // In certain cases, protocol will return error if the request was already canceled\n      // or the page was closed. We should tolerate these errors.\n      debugError(error);\n    }));\n  });}\n\n  /**\n   * @param {string=} errorCode\n   */\n  /* async */ abort(errorCode = 'failed') {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const errorReason = errorReasons[errorCode];\n    assert(errorReason, 'Unknown error code: ' + errorCode);\n    assert(this._allowInterception, 'Request Interception is not enabled!');\n    assert(!this._interceptionHandled, 'Request is already handled!');\n    this._interceptionHandled = true;\n    (yield this._client.send('Network.continueInterceptedRequest', {\n      interceptionId: this._interceptionId,\n      errorReason\n    }).catch(error => {\n      // In certain cases, protocol will return error if the request was already canceled\n      // or the page was closed. We should tolerate these errors.\n      debugError(error);\n    }));\n  });}\n}\n\nconst errorReasons = {\n  'aborted': 'Aborted',\n  'accessdenied': 'AccessDenied',\n  'addressunreachable': 'AddressUnreachable',\n  'blockedbyclient': 'BlockedByClient',\n  'blockedbyresponse': 'BlockedByResponse',\n  'connectionaborted': 'ConnectionAborted',\n  'connectionclosed': 'ConnectionClosed',\n  'connectionfailed': 'ConnectionFailed',\n  'connectionrefused': 'ConnectionRefused',\n  'connectionreset': 'ConnectionReset',\n  'internetdisconnected': 'InternetDisconnected',\n  'namenotresolved': 'NameNotResolved',\n  'timedout': 'TimedOut',\n  'failed': 'Failed',\n};\n\nhelper.tracePublicAPI(Request);\n\nclass Response {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Request} request\n   * @param {!Protocol.Network.Response} responsePayload\n   */\n  constructor(client, request, responsePayload) {\n    this._client = client;\n    this._request = request;\n    this._contentPromise = null;\n\n    this._bodyLoadedPromise = new Promise(fulfill => {\n      this._bodyLoadedPromiseFulfill = fulfill;\n    });\n\n    this._remoteAddress = {\n      ip: responsePayload.remoteIPAddress,\n      port: responsePayload.remotePort,\n    };\n    this._status = responsePayload.status;\n    this._statusText = responsePayload.statusText;\n    this._url = request.url();\n    this._fromDiskCache = !!responsePayload.fromDiskCache;\n    this._fromServiceWorker = !!responsePayload.fromServiceWorker;\n    this._headers = {};\n    for (const key of Object.keys(responsePayload.headers))\n      this._headers[key.toLowerCase()] = responsePayload.headers[key];\n    this._securityDetails = responsePayload.securityDetails ? new SecurityDetails(responsePayload.securityDetails) : null;\n  }\n\n  /**\n   * @return {{ip: string, port: number}}\n   */\n  remoteAddress() {\n    return this._remoteAddress;\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  ok() {\n    return this._status === 0 || (this._status >= 200 && this._status <= 299);\n  }\n\n  /**\n   * @return {number}\n   */\n  status() {\n    return this._status;\n  }\n\n  /**\n   * @return {string}\n   */\n  statusText() {\n    return this._statusText;\n  }\n\n  /**\n   * @return {!Object}\n   */\n  headers() {\n    return this._headers;\n  }\n\n  /**\n   * @return {?SecurityDetails}\n   */\n  securityDetails() {\n    return this._securityDetails;\n  }\n\n  /**\n   * @return {!Promise<!Buffer>}\n   */\n  buffer() {\n    if (!this._contentPromise) {\n      this._contentPromise = this._bodyLoadedPromise.then(/* async */ error => {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n        if (error)\n          throw error;\n        const response = (yield this._client.send('Network.getResponseBody', {\n          requestId: this._request._requestId\n        }));\n        return Buffer.from(response.body, response.base64Encoded ? 'base64' : 'utf8');\n      });});\n    }\n    return this._contentPromise;\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  /* async */ text() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const content = (yield this.buffer());\n    return content.toString('utf8');\n  });}\n\n  /**\n   * @return {!Promise<!Object>}\n   */\n  /* async */ json() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const content = (yield this.text());\n    return JSON.parse(content);\n  });}\n\n  /**\n   * @return {!Request}\n   */\n  request() {\n    return this._request;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  fromCache() {\n    return this._fromDiskCache || this._request._fromMemoryCache;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  fromServiceWorker() {\n    return this._fromServiceWorker;\n  }\n\n  /**\n   * @return {?Puppeteer.Frame}\n   */\n  frame() {\n    return this._request.frame();\n  }\n}\nhelper.tracePublicAPI(Response);\n\n/**\n * @param {!Protocol.Network.Request} request\n * @return {string}\n */\nfunction generateRequestHash(request) {\n  let normalizedURL = request.url;\n  try {\n    // Decoding is necessary to normalize URLs. @see crbug.com/759388\n    // The method will throw if the URL is malformed. In this case,\n    // consider URL to be normalized as-is.\n    normalizedURL = decodeURI(request.url);\n  } catch (e) {\n  }\n  const hash = {\n    url: normalizedURL,\n    method: request.method,\n    postData: request.postData,\n    headers: {},\n  };\n\n  if (!normalizedURL.startsWith('data:')) {\n    const headers = Object.keys(request.headers);\n    headers.sort();\n    for (let header of headers) {\n      const headerValue = request.headers[header];\n      header = header.toLowerCase();\n      if (header === 'accept' || header === 'referer' || header === 'x-devtools-emulate-network-conditions-client-id' || header === 'cookie')\n        continue;\n      hash.headers[header] = headerValue;\n    }\n  }\n  return JSON.stringify(hash);\n}\n\nclass SecurityDetails {\n  /**\n   * @param {!Protocol.Network.SecurityDetails} securityPayload\n   */\n  constructor(securityPayload) {\n    this._subjectName = securityPayload['subjectName'];\n    this._issuer = securityPayload['issuer'];\n    this._validFrom = securityPayload['validFrom'];\n    this._validTo = securityPayload['validTo'];\n    this._protocol = securityPayload['protocol'];\n  }\n\n  /**\n   * @return {string}\n   */\n  subjectName() {\n    return this._subjectName;\n  }\n\n  /**\n   * @return {string}\n   */\n  issuer() {\n    return this._issuer;\n  }\n\n  /**\n   * @return {number}\n   */\n  validFrom() {\n    return this._validFrom;\n  }\n\n  /**\n   * @return {number}\n   */\n  validTo() {\n    return this._validTo;\n  }\n\n  /**\n   * @return {string}\n   */\n  protocol() {\n    return this._protocol;\n  }\n}\n\nNetworkManager.Events = {\n  Request: 'request',\n  Response: 'response',\n  RequestFailed: 'requestfailed',\n  RequestFinished: 'requestfinished',\n};\n\nconst statusTexts = {\n  '100': 'Continue',\n  '101': 'Switching Protocols',\n  '102': 'Processing',\n  '200': 'OK',\n  '201': 'Created',\n  '202': 'Accepted',\n  '203': 'Non-Authoritative Information',\n  '204': 'No Content',\n  '206': 'Partial Content',\n  '207': 'Multi-Status',\n  '208': 'Already Reported',\n  '209': 'IM Used',\n  '300': 'Multiple Choices',\n  '301': 'Moved Permanently',\n  '302': 'Found',\n  '303': 'See Other',\n  '304': 'Not Modified',\n  '305': 'Use Proxy',\n  '306': 'Switch Proxy',\n  '307': 'Temporary Redirect',\n  '308': 'Permanent Redirect',\n  '400': 'Bad Request',\n  '401': 'Unauthorized',\n  '402': 'Payment Required',\n  '403': 'Forbidden',\n  '404': 'Not Found',\n  '405': 'Method Not Allowed',\n  '406': 'Not Acceptable',\n  '407': 'Proxy Authentication Required',\n  '408': 'Request Timeout',\n  '409': 'Conflict',\n  '410': 'Gone',\n  '411': 'Length Required',\n  '412': 'Precondition Failed',\n  '413': 'Payload Too Large',\n  '414': 'URI Too Long',\n  '415': 'Unsupported Media Type',\n  '416': 'Range Not Satisfiable',\n  '417': 'Expectation Failed',\n  '418': 'I\\'m a teapot',\n  '421': 'Misdirected Request',\n  '422': 'Unprocessable Entity',\n  '423': 'Locked',\n  '424': 'Failed Dependency',\n  '426': 'Upgrade Required',\n  '428': 'Precondition Required',\n  '429': 'Too Many Requests',\n  '431': 'Request Header Fields Too Large',\n  '451': 'Unavailable For Legal Reasons',\n  '500': 'Internal Server Error',\n  '501': 'Not Implemented',\n  '502': 'Bad Gateway',\n  '503': 'Service Unavailable',\n  '504': 'Gateway Timeout',\n  '505': 'HTTP Version Not Supported',\n  '506': 'Variant Also Negotiates',\n  '507': 'Insufficient Storage',\n  '508': 'Loop Detected',\n  '510': 'Not Extended',\n  '511': 'Network Authentication Required',\n};\n\nmodule.exports = {Request, Response, NetworkManager};\n","import * as express from 'express';\nimport * as puppeteer from 'puppeteer';\nimport * as path from 'path';\nimport * as querystring from 'querystring';\nimport { findGeolocation } from './geolocation';\n\nconst CLIENT_PATH = path.resolve(__dirname, '../client/dist/index.html');\n\nexport const createApp = () => {\n    const app = express();\n\n    app.get('/', async (req, res) => {\n        const browser = await puppeteer.launch();\n        const page = await browser.newPage();\n        const geolocation = findGeolocation(req.ip) || {};\n        const qs = querystring.stringify(geolocation);\n        await page.goto(`file://${CLIENT_PATH}?${qs}`);\n        const screenshot = await page.screenshot()\n        res.setHeader('Content-Type', 'image/png');\n        res.send(screenshot);\n    });\n\n    return app;\n}\n\nexport const app = createApp();\n\nif (require.main === module) {\n    app.listen(4413, () => {\n        console.log('server is running.');\n    });\n}","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\nmodule.exports = require('./lib/express');\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar bodyParser = require('body-parser')\nvar EventEmitter = require('events').EventEmitter;\nvar mixin = require('merge-descriptors');\nvar proto = require('./application');\nvar Route = require('./router/route');\nvar Router = require('./router');\nvar req = require('./request');\nvar res = require('./response');\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = function(req, res, next) {\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, false);\n  mixin(app, proto, false);\n\n  // expose the prototype that will get set on requests\n  app.request = Object.create(req, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  // expose the prototype that will get set on responses\n  app.response = Object.create(res, {\n    app: { configurable: true, enumerable: true, writable: true, value: app }\n  })\n\n  app.init();\n  return app;\n}\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n/**\n * Expose middleware\n */\n\nexports.json = bodyParser.json\nexports.query = require('./middleware/query');\nexports.static = require('serve-static');\nexports.urlencoded = bodyParser.urlencoded\n\n/**\n * Replace removed middleware with an appropriate error message.\n */\n\nvar removedMiddlewares = [\n  'bodyParser',\n  'compress',\n  'cookieSession',\n  'session',\n  'logger',\n  'cookieParser',\n  'favicon',\n  'responseTime',\n  'errorHandler',\n  'timeout',\n  'methodOverride',\n  'vhost',\n  'csrf',\n  'directory',\n  'limit',\n  'multipart',\n  'staticCache'\n]\n\nremovedMiddlewares.forEach(function (name) {\n  Object.defineProperty(exports, name, {\n    get: function () {\n      throw new Error('Most middleware (like ' + name + ') is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.');\n    },\n    configurable: true\n  });\n});\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('body-parser')\n\n/**\n * Cache of loaded parsers.\n * @private\n */\n\nvar parsers = Object.create(null)\n\n/**\n * @typedef Parsers\n * @type {function}\n * @property {function} json\n * @property {function} raw\n * @property {function} text\n * @property {function} urlencoded\n */\n\n/**\n * Module exports.\n * @type {Parsers}\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * JSON parser.\n * @public\n */\n\nObject.defineProperty(exports, 'json', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('json')\n})\n\n/**\n * Raw parser.\n * @public\n */\n\nObject.defineProperty(exports, 'raw', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('raw')\n})\n\n/**\n * Text parser.\n * @public\n */\n\nObject.defineProperty(exports, 'text', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('text')\n})\n\n/**\n * URL-encoded parser.\n * @public\n */\n\nObject.defineProperty(exports, 'urlencoded', {\n  configurable: true,\n  enumerable: true,\n  get: createParserGetter('urlencoded')\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @public\n */\n\nfunction bodyParser (options) {\n  var opts = {}\n\n  // exclude type option\n  if (options) {\n    for (var prop in options) {\n      if (prop !== 'type') {\n        opts[prop] = options[prop]\n      }\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser (req, res, next) {\n    _json(req, res, function (err) {\n      if (err) return next(err)\n      _urlencoded(req, res, next)\n    })\n  }\n}\n\n/**\n * Create a getter for loading a parser.\n * @private\n */\n\nfunction createParserGetter (name) {\n  return function get () {\n    return loadParser(name)\n  }\n}\n\n/**\n * Load a parser module.\n * @private\n */\n\nfunction loadParser (parserName) {\n  var parser = parsers[parserName]\n\n  if (parser !== undefined) {\n    return parser\n  }\n\n  // this uses a switch for static require analysis\n  switch (parserName) {\n    case 'json':\n      parser = require('./lib/types/json')\n      break\n    case 'raw':\n      parser = require('./lib/types/raw')\n      break\n    case 'text':\n      parser = require('./lib/types/text')\n      break\n    case 'urlencoded':\n      parser = require('./lib/types/urlencoded')\n      break\n  }\n\n  // store to prevent invoking require()\n  return (parsers[parserName] = parser)\n}\n","/*!\n * depd\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = callSiteToString\n\n/**\n * Format a CallSite file location to a string.\n */\n\nfunction callSiteFileLocation (callSite) {\n  var fileName\n  var fileLocation = ''\n\n  if (callSite.isNative()) {\n    fileLocation = 'native'\n  } else if (callSite.isEval()) {\n    fileName = callSite.getScriptNameOrSourceURL()\n    if (!fileName) {\n      fileLocation = callSite.getEvalOrigin()\n    }\n  } else {\n    fileName = callSite.getFileName()\n  }\n\n  if (fileName) {\n    fileLocation += fileName\n\n    var lineNumber = callSite.getLineNumber()\n    if (lineNumber != null) {\n      fileLocation += ':' + lineNumber\n\n      var columnNumber = callSite.getColumnNumber()\n      if (columnNumber) {\n        fileLocation += ':' + columnNumber\n      }\n    }\n  }\n\n  return fileLocation || 'unknown source'\n}\n\n/**\n * Format a CallSite to a string.\n */\n\nfunction callSiteToString (callSite) {\n  var addSuffix = true\n  var fileLocation = callSiteFileLocation(callSite)\n  var functionName = callSite.getFunctionName()\n  var isConstructor = callSite.isConstructor()\n  var isMethodCall = !(callSite.isToplevel() || isConstructor)\n  var line = ''\n\n  if (isMethodCall) {\n    var methodName = callSite.getMethodName()\n    var typeName = getConstructorName(callSite)\n\n    if (functionName) {\n      if (typeName && functionName.indexOf(typeName) !== 0) {\n        line += typeName + '.'\n      }\n\n      line += functionName\n\n      if (methodName && functionName.lastIndexOf('.' + methodName) !== functionName.length - methodName.length - 1) {\n        line += ' [as ' + methodName + ']'\n      }\n    } else {\n      line += typeName + '.' + (methodName || '<anonymous>')\n    }\n  } else if (isConstructor) {\n    line += 'new ' + (functionName || '<anonymous>')\n  } else if (functionName) {\n    line += functionName\n  } else {\n    addSuffix = false\n    line += fileLocation\n  }\n\n  if (addSuffix) {\n    line += ' (' + fileLocation + ')'\n  }\n\n  return line\n}\n\n/**\n * Get constructor name of reviver.\n */\n\nfunction getConstructorName (obj) {\n  var receiver = obj.receiver\n  return (receiver.constructor && receiver.constructor.name) || null\n}\n","/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = eventListenerCount\n\n/**\n * Get the count of listeners on an event emitter of a specific type.\n */\n\nfunction eventListenerCount (emitter, type) {\n  return emitter.listeners(type).length\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:json')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = json\n\n/**\n * RegExp to match the first non-space in a string.\n *\n * Allowed whitespace is defined in RFC 7159:\n *\n *    ws = *(\n *            %x20 /              ; Space\n *            %x09 /              ; Horizontal tab\n *            %x0A /              ; Line feed or New line\n *            %x0D )              ; Carriage return\n */\n\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*(.)/ // eslint-disable-line no-control-regex\n\n/**\n * Create a middleware to parse JSON bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction json (options) {\n  var opts = options || {}\n\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var inflate = opts.inflate !== false\n  var reviver = opts.reviver\n  var strict = opts.strict !== false\n  var type = opts.type || 'application/json'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    if (body.length === 0) {\n      // special-case empty json body, as it's a common client-side mistake\n      // TODO: maybe make this configurable or part of \"strict\" option\n      return {}\n    }\n\n    if (strict) {\n      var first = firstchar(body)\n\n      if (first !== '{' && first !== '[') {\n        debug('strict violation')\n        throw createStrictSyntaxError(body, first)\n      }\n    }\n\n    try {\n      debug('parse json')\n      return JSON.parse(body, reviver)\n    } catch (e) {\n      throw normalizeJsonSyntaxError(e, {\n        message: e.message,\n        stack: e.stack\n      })\n    }\n  }\n\n  return function jsonParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset per RFC 7159 sec 8.1\n    var charset = getCharset(req) || 'utf-8'\n    if (charset.substr(0, 4) !== 'utf-') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Create strict violation syntax error matching native error.\n *\n * @param {string} str\n * @param {string} char\n * @return {Error}\n * @private\n */\n\nfunction createStrictSyntaxError (str, char) {\n  var index = str.indexOf(char)\n  var partial = str.substring(0, index) + '#'\n\n  try {\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\n  } catch (e) {\n    return normalizeJsonSyntaxError(e, {\n      message: e.message.replace('#', char),\n      stack: e.stack\n    })\n  }\n}\n\n/**\n * Get the first non-whitespace character in a string.\n *\n * @param {string} str\n * @return {function}\n * @private\n */\n\nfunction firstchar (str) {\n  return FIRST_CHAR_REGEXP.exec(str)[1]\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Normalize a SyntaxError for JSON.parse.\n *\n * @param {SyntaxError} error\n * @param {object} obj\n * @return {SyntaxError}\n */\n\nfunction normalizeJsonSyntaxError (error, obj) {\n  var keys = Object.getOwnPropertyNames(error)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    if (key !== 'stack' && key !== 'message') {\n      delete error[key]\n    }\n  }\n\n  // replace stack before message for Node.js 0.10 and below\n  error.stack = obj.stack.replace(error.message, obj.message)\n  error.message = obj.message\n\n  return error\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require('./codes.json')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/*!\n * raw-body\n * Copyright(c) 2013-2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar createError = require('http-errors')\nvar iconv = require('iconv-lite')\nvar unpipe = require('unpipe')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getRawBody\n\n/**\n * Module variables.\n * @private\n */\n\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\n\n/**\n * Get the decoder for a given encoding.\n *\n * @param {string} encoding\n * @private\n */\n\nfunction getDecoder (encoding) {\n  if (!encoding) return null\n\n  try {\n    return iconv.getDecoder(encoding)\n  } catch (e) {\n    // error getting decoder\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\n\n    // the encoding was not found\n    throw createError(415, 'specified encoding unsupported', {\n      encoding: encoding,\n      type: 'encoding.unsupported'\n    })\n  }\n}\n\n/**\n * Get the raw body of a stream (typically HTTP).\n *\n * @param {object} stream\n * @param {object|string|function} [options]\n * @param {function} [callback]\n * @public\n */\n\nfunction getRawBody (stream, options, callback) {\n  var done = callback\n  var opts = options || {}\n\n  if (options === true || typeof options === 'string') {\n    // short cut for encoding\n    opts = {\n      encoding: options\n    }\n  }\n\n  if (typeof options === 'function') {\n    done = options\n    opts = {}\n  }\n\n  // validate callback is a function, if provided\n  if (done !== undefined && typeof done !== 'function') {\n    throw new TypeError('argument callback must be a function')\n  }\n\n  // require the callback without promises\n  if (!done && !global.Promise) {\n    throw new TypeError('argument callback is required')\n  }\n\n  // get encoding\n  var encoding = opts.encoding !== true\n    ? opts.encoding\n    : 'utf-8'\n\n  // convert the limit to an integer\n  var limit = bytes.parse(opts.limit)\n\n  // convert the expected length to an integer\n  var length = opts.length != null && !isNaN(opts.length)\n    ? parseInt(opts.length, 10)\n    : null\n\n  if (done) {\n    // classic callback style\n    return readStream(stream, encoding, length, limit, done)\n  }\n\n  return new Promise(function executor (resolve, reject) {\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\n      if (err) return reject(err)\n      resolve(buf)\n    })\n  })\n}\n\n/**\n * Halt a stream.\n *\n * @param {Object} stream\n * @private\n */\n\nfunction halt (stream) {\n  // unpipe everything from the stream\n  unpipe(stream)\n\n  // pause stream\n  if (typeof stream.pause === 'function') {\n    stream.pause()\n  }\n}\n\n/**\n * Read the data from the stream.\n *\n * @param {object} stream\n * @param {string} encoding\n * @param {number} length\n * @param {number} limit\n * @param {function} callback\n * @public\n */\n\nfunction readStream (stream, encoding, length, limit, callback) {\n  var complete = false\n  var sync = true\n\n  // check the length and limit options.\n  // note: we intentionally leave the stream paused,\n  // so users should handle the stream themselves.\n  if (limit !== null && length !== null && length > limit) {\n    return done(createError(413, 'request entity too large', {\n      expected: length,\n      length: length,\n      limit: limit,\n      type: 'entity.too.large'\n    }))\n  }\n\n  // streams1: assert request encoding is buffer.\n  // streams2+: assert the stream encoding is buffer.\n  //   stream._decoder: streams1\n  //   state.encoding: streams2\n  //   state.decoder: streams2, specifically < 0.10.6\n  var state = stream._readableState\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\n    // developer error\n    return done(createError(500, 'stream encoding should not be set', {\n      type: 'stream.encoding.set'\n    }))\n  }\n\n  var received = 0\n  var decoder\n\n  try {\n    decoder = getDecoder(encoding)\n  } catch (err) {\n    return done(err)\n  }\n\n  var buffer = decoder\n    ? ''\n    : []\n\n  // attach listeners\n  stream.on('aborted', onAborted)\n  stream.on('close', cleanup)\n  stream.on('data', onData)\n  stream.on('end', onEnd)\n  stream.on('error', onEnd)\n\n  // mark sync section complete\n  sync = false\n\n  function done () {\n    var args = new Array(arguments.length)\n\n    // copy arguments\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    // mark complete\n    complete = true\n\n    if (sync) {\n      process.nextTick(invokeCallback)\n    } else {\n      invokeCallback()\n    }\n\n    function invokeCallback () {\n      cleanup()\n\n      if (args[0]) {\n        // halt the stream on error\n        halt(stream)\n      }\n\n      callback.apply(null, args)\n    }\n  }\n\n  function onAborted () {\n    if (complete) return\n\n    done(createError(400, 'request aborted', {\n      code: 'ECONNABORTED',\n      expected: length,\n      length: length,\n      received: received,\n      type: 'request.aborted'\n    }))\n  }\n\n  function onData (chunk) {\n    if (complete) return\n\n    received += chunk.length\n\n    if (limit !== null && received > limit) {\n      done(createError(413, 'request entity too large', {\n        limit: limit,\n        received: received,\n        type: 'entity.too.large'\n      }))\n    } else if (decoder) {\n      buffer += decoder.write(chunk)\n    } else {\n      buffer.push(chunk)\n    }\n  }\n\n  function onEnd (err) {\n    if (complete) return\n    if (err) return done(err)\n\n    if (length !== null && received !== length) {\n      done(createError(400, 'request size did not match content length', {\n        expected: length,\n        length: length,\n        received: received,\n        type: 'request.size.invalid'\n      }))\n    } else {\n      var string = decoder\n        ? buffer + (decoder.end() || '')\n        : Buffer.concat(buffer)\n      done(null, string)\n    }\n  }\n\n  function cleanup () {\n    buffer = null\n\n    stream.removeListener('aborted', onAborted)\n    stream.removeListener('data', onData)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('error', onEnd)\n    stream.removeListener('close', cleanup)\n  }\n}\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it. \nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","module.exports = require(\"string_decoder\");","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBytes = [];\n    this.initialBytesLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBytes.push(buf);\n        this.initialBytesLen += buf.length;\n        \n        if (this.initialBytesLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n        this.initialBytes.length = this.initialBytesLen = 0;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var buf = Buffer.concat(this.initialBytes),\n            encoding = detectEncoding(buf, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var res = this.decoder.write(buf),\n            trail = this.decoder.end();\n\n        return trail ? (res + trail) : res;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(buf, defaultEncoding) {\n    var enc = defaultEncoding || 'utf-16le';\n\n    if (buf.length >= 2) {\n        // Check BOM.\n        if (buf[0] == 0xFE && buf[1] == 0xFF) // UTF-16BE BOM\n            enc = 'utf-16be';\n        else if (buf[0] == 0xFF && buf[1] == 0xFE) // UTF-16LE BOM\n            enc = 'utf-16le';\n        else {\n            // No BOM found. Try to deduce encoding from initial content.\n            // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n            // So, we count ASCII as if it was LE or BE, and decide from that.\n            var asciiCharsLE = 0, asciiCharsBE = 0, // Counts of chars in both positions\n                _len = Math.min(buf.length - (buf.length % 2), 64); // Len is always even.\n\n            for (var i = 0; i < _len; i += 2) {\n                if (buf[i] === 0 && buf[i+1] !== 0) asciiCharsBE++;\n                if (buf[i] !== 0 && buf[i+1] === 0) asciiCharsLE++;\n            }\n\n            if (asciiCharsBE > asciiCharsLE)\n                enc = 'utf-16be';\n            else if (asciiCharsBE < asciiCharsLE)\n                enc = 'utf-16le';\n        }\n    }\n\n    return enc;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString();\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString();\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + buf.slice(lastI, i).toString().replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + buf.slice(lastI).toString().replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = new Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = new Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 decode tables.\n        var thirdByteNodeIdx = this.decodeTables.length;\n        var thirdByteNode = this.decodeTables[thirdByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        var fourthByteNodeIdx = this.decodeTables.length;\n        var fourthByteNode = this.decodeTables[fourthByteNodeIdx] = UNASSIGNED_NODE.slice(0);\n\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNodeIdx = NODE_START - this.decodeTables[0][i];\n            var secondByteNode = this.decodeTables[secondByteNodeIdx];\n            for (var j = 0x30; j <= 0x39; j++)\n                secondByteNode[j] = NODE_START - thirdByteNodeIdx;\n        }\n        for (var i = 0x81; i <= 0xFE; i++)\n            thirdByteNode[i] = NODE_START - fourthByteNodeIdx;\n        for (var i = 0x30; i <= 0x39; i++)\n            fourthByteNode[i] = GB18030_CODE\n    }        \n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0)\n            this._setEncodeChar(uCode, mbCode);\n        else if (uCode <= NODE_START)\n            this._fillEncodeTable(NODE_START - uCode, mbCode << 8, skipEncodeChars);\n        else if (uCode <= SEQ_START)\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n    }\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBuf = Buffer.alloc(0);\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBuf = this.prevBuf, prevBufOffset = this.prevBuf.length,\n        seqStart = -this.prevBuf.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    if (prevBufOffset > 0) // Make prev buf overlap a little to make it easier to slice later.\n        prevBuf = Buffer.concat([prevBuf, buf.slice(0, 10)]);\n    \n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBuf[i + prevBufOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            //var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            i = seqStart; // Try to parse again, after skipping first byte of the sequence ('i' will be incremented by 'for' cycle).\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n        }\n        else if (uCode === GB18030_CODE) {\n            var curSeq = (seqStart >= 0) ? buf.slice(seqStart, i+1) : prevBuf.slice(seqStart + prevBufOffset, i+1 + prevBufOffset);\n            var ptr = (curSeq[0]-0x81)*12600 + (curSeq[1]-0x30)*1260 + (curSeq[2]-0x81)*10 + (curSeq[3]-0x30);\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode > 0xFFFF) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 + Math.floor(uCode / 0x400);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 + uCode % 0x400;\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBuf = (seqStart >= 0) ? buf.slice(seqStart) : prevBuf.slice(seqStart + prevBufOffset);\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBuf.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var buf = this.prevBuf.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBuf = Buffer.alloc(0);\n        this.nodeIdx = 0;\n        if (buf.length > 0)\n            ret += this.write(buf);\n    }\n\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + Math.floor((r-l+1)/2);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\nvar Buffer = require(\"buffer\").Buffer,\n    Transform = require(\"stream\").Transform;\n\n\n// == Exports ==================================================================\nmodule.exports = function(iconv) {\n    \n    // Additional Public API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n\n\n    // Not published yet.\n    iconv.IconvLiteEncoderStream = IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = IconvLiteDecoderStream;\n    iconv._collect = IconvLiteDecoderStream.prototype.collect;\n};\n\n\n// == Encoder stream =======================================================\nfunction IconvLiteEncoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n    Transform.call(this, options);\n}\n\nIconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteEncoderStream }\n});\n\nIconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (typeof chunk != 'string')\n        return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteEncoderStream.prototype.collect = function(cb) {\n    var chunks = [];\n    this.on('error', cb);\n    this.on('data', function(chunk) { chunks.push(chunk); });\n    this.on('end', function() {\n        cb(null, Buffer.concat(chunks));\n    });\n    return this;\n}\n\n\n// == Decoder stream =======================================================\nfunction IconvLiteDecoderStream(conv, options) {\n    this.conv = conv;\n    options = options || {};\n    options.encoding = this.encoding = 'utf8'; // We output strings.\n    Transform.call(this, options);\n}\n\nIconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n    constructor: { value: IconvLiteDecoderStream }\n});\n\nIconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n    if (!Buffer.isBuffer(chunk))\n        return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n    try {\n        var res = this.conv.write(chunk);\n        if (res && res.length) this.push(res, this.encoding);\n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype._flush = function(done) {\n    try {\n        var res = this.conv.end();\n        if (res && res.length) this.push(res, this.encoding);                \n        done();\n    }\n    catch (e) {\n        done(e);\n    }\n}\n\nIconvLiteDecoderStream.prototype.collect = function(cb) {\n    var res = '';\n    this.on('error', cb);\n    this.on('data', function(chunk) { res += chunk; });\n    this.on('end', function() {\n        cb(null, res);\n    });\n    return this;\n}\n\n","\"use strict\";\nvar Buffer = require(\"buffer\").Buffer;\n// Note: not polyfilled with safer-buffer on a purpose, as overrides Buffer\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    // Note: this does use older Buffer API on a purpose\n    iconv.supportsNodeEncodingsExtension = !(Buffer.from || new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n","/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = first\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = []\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i]\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0]\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j]\n      var fn = listener(event, callback)\n\n      // listen to the event\n      ee.on(event, fn)\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      })\n    }\n  }\n\n  function callback() {\n    cleanup()\n    done.apply(null, arguments)\n  }\n\n  function cleanup() {\n    var x\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i]\n      x.ee.removeListener(x.event, x.fn)\n    }\n  }\n\n  function thunk(fn) {\n    done = fn\n  }\n\n  thunk.cancel = cleanup\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length)\n    var ee = this\n    var err = event === 'error'\n      ? arg1\n      : null\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n\n    done(err, ee, event, args)\n  }\n}\n","/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    if (match.index !== index) {\n      throw new TypeError('invalid parameter format')\n    }\n\n    index += match[0].length\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  if (index !== -1 && index !== string.length) {\n    throw new TypeError('invalid parameter format')\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar debug = require('debug')('body-parser:raw')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = raw\n\n/**\n * Create a middleware to parse raw bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction raw (options) {\n  var opts = options || {}\n\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/octet-stream'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function rawParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: null,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar debug = require('debug')('body-parser:text')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = text\n\n/**\n * Create a middleware to parse text bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @api public\n */\n\nfunction text (options) {\n  var opts = options || {}\n\n  var defaultCharset = opts.defaultCharset || 'utf-8'\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'text/plain'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (buf) {\n    return buf\n  }\n\n  return function textParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // get charset\n    var charset = getCharset(req) || defaultCharset\n\n    // read\n    read(req, res, next, parse, debug, {\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","/*!\n * body-parser\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar bytes = require('bytes')\nvar contentType = require('content-type')\nvar createError = require('http-errors')\nvar debug = require('debug')('body-parser:urlencoded')\nvar deprecate = require('depd')('body-parser')\nvar read = require('../read')\nvar typeis = require('type-is')\n\n/**\n * Module exports.\n */\n\nmodule.exports = urlencoded\n\n/**\n * Cache of parser modules.\n */\n\nvar parsers = Object.create(null)\n\n/**\n * Create a middleware to parse urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction urlencoded (options) {\n  var opts = options || {}\n\n  // notice because option default will flip in next major\n  if (opts.extended === undefined) {\n    deprecate('undefined extended: provide extended option')\n  }\n\n  var extended = opts.extended !== false\n  var inflate = opts.inflate !== false\n  var limit = typeof opts.limit !== 'number'\n    ? bytes.parse(opts.limit || '100kb')\n    : opts.limit\n  var type = opts.type || 'application/x-www-form-urlencoded'\n  var verify = opts.verify || false\n\n  if (verify !== false && typeof verify !== 'function') {\n    throw new TypeError('option verify must be function')\n  }\n\n  // create the appropriate query parser\n  var queryparse = extended\n    ? extendedparser(opts)\n    : simpleparser(opts)\n\n  // create the appropriate type checking function\n  var shouldParse = typeof type !== 'function'\n    ? typeChecker(type)\n    : type\n\n  function parse (body) {\n    return body.length\n      ? queryparse(body)\n      : {}\n  }\n\n  return function urlencodedParser (req, res, next) {\n    if (req._body) {\n      debug('body already parsed')\n      next()\n      return\n    }\n\n    req.body = req.body || {}\n\n    // skip requests without bodies\n    if (!typeis.hasBody(req)) {\n      debug('skip empty body')\n      next()\n      return\n    }\n\n    debug('content-type %j', req.headers['content-type'])\n\n    // determine if request should be parsed\n    if (!shouldParse(req)) {\n      debug('skip parsing')\n      next()\n      return\n    }\n\n    // assert charset\n    var charset = getCharset(req) || 'utf-8'\n    if (charset !== 'utf-8') {\n      debug('invalid charset')\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\n        charset: charset,\n        type: 'charset.unsupported'\n      }))\n      return\n    }\n\n    // read\n    read(req, res, next, parse, debug, {\n      debug: debug,\n      encoding: charset,\n      inflate: inflate,\n      limit: limit,\n      verify: verify\n    })\n  }\n}\n\n/**\n * Get the extended query parser.\n *\n * @param {object} options\n */\n\nfunction extendedparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('qs')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    var arrayLimit = Math.max(100, paramCount)\n\n    debug('parse extended urlencoding')\n    return parse(body, {\n      allowPrototypes: true,\n      arrayLimit: arrayLimit,\n      depth: Infinity,\n      parameterLimit: parameterLimit\n    })\n  }\n}\n\n/**\n * Get the charset of a request.\n *\n * @param {object} req\n * @api private\n */\n\nfunction getCharset (req) {\n  try {\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Count the number of parameters, stopping once limit reached\n *\n * @param {string} body\n * @param {number} limit\n * @api private\n */\n\nfunction parameterCount (body, limit) {\n  var count = 0\n  var index = 0\n\n  while ((index = body.indexOf('&', index)) !== -1) {\n    count++\n    index++\n\n    if (count === limit) {\n      return undefined\n    }\n  }\n\n  return count\n}\n\n/**\n * Get parser for module name dynamically.\n *\n * @param {string} name\n * @return {function}\n * @api private\n */\n\nfunction parser (name) {\n  var mod = parsers[name]\n\n  if (mod !== undefined) {\n    return mod.parse\n  }\n\n  // this uses a switch for static require analysis\n  switch (name) {\n    case 'qs':\n      mod = require('qs')\n      break\n    case 'querystring':\n      mod = require('querystring')\n      break\n  }\n\n  // store to prevent invoking require()\n  parsers[name] = mod\n\n  return mod.parse\n}\n\n/**\n * Get the simple query parser.\n *\n * @param {object} options\n */\n\nfunction simpleparser (options) {\n  var parameterLimit = options.parameterLimit !== undefined\n    ? options.parameterLimit\n    : 1000\n  var parse = parser('querystring')\n\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\n    throw new TypeError('option parameterLimit must be a positive number')\n  }\n\n  if (isFinite(parameterLimit)) {\n    parameterLimit = parameterLimit | 0\n  }\n\n  return function queryparse (body) {\n    var paramCount = parameterCount(body, parameterLimit)\n\n    if (paramCount === undefined) {\n      debug('too many parameters')\n      throw createError(413, 'too many parameters', {\n        type: 'parameters.too.many'\n      })\n    }\n\n    debug('parse urlencoding')\n    return parse(body, undefined, undefined, {maxKeys: parameterLimit})\n  }\n}\n\n/**\n * Get the simple type checker.\n *\n * @param {string} type\n * @return {function}\n */\n\nfunction typeChecker (type) {\n  return function checkType (req) {\n    return Boolean(typeis(req, type))\n  }\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) { // eslint-disable-line func-name-matching\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) { // eslint-disable-line func-name-matching\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) { // eslint-disable-line func-name-matching\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    serializeDate: function serializeDate(date) { // eslint-disable-line func-name-matching\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify( // eslint-disable-line func-name-matching\n    object,\n    prefix,\n    generateArrayPrefix,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    formatter,\n    encodeValuesOnly\n) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter,\n                encodeValuesOnly\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = typeof options.encoder === 'function' ? options.encoder : defaults.encoder;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    var encodeValuesOnly = typeof options.encodeValuesOnly === 'boolean' ? options.encodeValuesOnly : defaults.encodeValuesOnly;\n    if (typeof options.format === 'undefined') {\n        options.format = formats['default'];\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encode ? encoder : null,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter,\n            encodeValuesOnly\n        ));\n    }\n\n    var joined = keys.join(delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = {};\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder);\n            val = options.decoder(part.slice(pos + 1), defaults.decoder);\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options) {\n    var leaf = val;\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]') {\n            obj = [];\n            obj = obj.concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts ? utils.assign({}, opts) : {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.ignoreQueryPrefix = options.ignoreQueryPrefix === true;\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n","/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar finalhandler = require('finalhandler');\nvar Router = require('./router');\nvar methods = require('methods');\nvar middleware = require('./middleware/init');\nvar query = require('./middleware/query');\nvar debug = require('debug')('express:application');\nvar View = require('./view');\nvar http = require('http');\nvar compileETag = require('./utils').compileETag;\nvar compileQueryParser = require('./utils').compileQueryParser;\nvar compileTrust = require('./utils').compileTrust;\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar merge = require('utils-merge');\nvar resolve = require('path').resolve;\nvar setPrototypeOf = require('setprototypeof')\nvar slice = Array.prototype.slice;\n\n/**\n * Application prototype.\n */\n\nvar app = exports = module.exports = {};\n\n/**\n * Variable for trust proxy inheritance back-compat\n * @private\n */\n\nvar trustProxyDefaultSymbol = '@@symbol:trust_proxy_default';\n\n/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * @private\n */\n\napp.init = function init() {\n  this.cache = {};\n  this.engines = {};\n  this.settings = {};\n\n  this.defaultConfiguration();\n};\n\n/**\n * Initialize application configuration.\n * @private\n */\n\napp.defaultConfiguration = function defaultConfiguration() {\n  var env = process.env.NODE_ENV || 'development';\n\n  // default settings\n  this.enable('x-powered-by');\n  this.set('etag', 'weak');\n  this.set('env', env);\n  this.set('query parser', 'extended');\n  this.set('subdomain offset', 2);\n  this.set('trust proxy', false);\n\n  // trust proxy inherit back-compat\n  Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n    configurable: true,\n    value: true\n  });\n\n  debug('booting in %s mode', env);\n\n  this.on('mount', function onmount(parent) {\n    // inherit trust proxy\n    if (this.settings[trustProxyDefaultSymbol] === true\n      && typeof parent.settings['trust proxy fn'] === 'function') {\n      delete this.settings['trust proxy'];\n      delete this.settings['trust proxy fn'];\n    }\n\n    // inherit protos\n    setPrototypeOf(this.request, parent.request)\n    setPrototypeOf(this.response, parent.response)\n    setPrototypeOf(this.engines, parent.engines)\n    setPrototypeOf(this.settings, parent.settings)\n  });\n\n  // setup locals\n  this.locals = Object.create(null);\n\n  // top-most app is mounted at /\n  this.mountpath = '/';\n\n  // default locals\n  this.locals.settings = this.settings;\n\n  // default configuration\n  this.set('view', View);\n  this.set('views', resolve('views'));\n  this.set('jsonp callback name', 'callback');\n\n  if (env === 'production') {\n    this.enable('view cache');\n  }\n\n  Object.defineProperty(this, 'router', {\n    get: function() {\n      throw new Error('\\'app.router\\' is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.');\n    }\n  });\n};\n\n/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * @private\n */\napp.lazyrouter = function lazyrouter() {\n  if (!this._router) {\n    this._router = new Router({\n      caseSensitive: this.enabled('case sensitive routing'),\n      strict: this.enabled('strict routing')\n    });\n\n    this._router.use(query(this.get('query parser fn')));\n    this._router.use(middleware.init(this));\n  }\n};\n\n/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * @private\n */\n\napp.handle = function handle(req, res, callback) {\n  var router = this._router;\n\n  // final handler\n  var done = callback || finalhandler(req, res, {\n    env: this.get('env'),\n    onerror: logerror.bind(this)\n  });\n\n  // no routes\n  if (!router) {\n    debug('no routes defined on app');\n    done();\n    return;\n  }\n\n  router.handle(req, res, done);\n};\n\n/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * @public\n */\n\napp.use = function use(fn) {\n  var offset = 0;\n  var path = '/';\n\n  // default path to '/'\n  // disambiguate app.use([fn])\n  if (typeof fn !== 'function') {\n    var arg = fn;\n\n    while (Array.isArray(arg) && arg.length !== 0) {\n      arg = arg[0];\n    }\n\n    // first arg is the path\n    if (typeof arg !== 'function') {\n      offset = 1;\n      path = fn;\n    }\n  }\n\n  var fns = flatten(slice.call(arguments, offset));\n\n  if (fns.length === 0) {\n    throw new TypeError('app.use() requires a middleware function')\n  }\n\n  // setup router\n  this.lazyrouter();\n  var router = this._router;\n\n  fns.forEach(function (fn) {\n    // non-express app\n    if (!fn || !fn.handle || !fn.set) {\n      return router.use(path, fn);\n    }\n\n    debug('.use app under %s', path);\n    fn.mountpath = path;\n    fn.parent = this;\n\n    // restore .app property on req and res\n    router.use(path, function mounted_app(req, res, next) {\n      var orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    // mounted an app\n    fn.emit('mount', this);\n  }, this);\n\n  return this;\n};\n\n/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * @public\n */\n\napp.route = function route(path) {\n  this.lazyrouter();\n  return this._router.route(path);\n};\n\n/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a \"foo.ejs\" file Express will invoke the following internally:\n *\n *     app.engine('ejs', require('ejs').__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to \"map\" a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * \".html\" files:\n *\n *     app.engine('html', require('ejs').renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you're using \".ejs\" extensions you dont need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node's popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * @param {String} ext\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.engine = function engine(ext, fn) {\n  if (typeof fn !== 'function') {\n    throw new Error('callback function required');\n  }\n\n  // get file extension\n  var extension = ext[0] !== '.'\n    ? '.' + ext\n    : ext;\n\n  // store engine\n  this.engines[extension] = fn;\n\n  return this;\n};\n\n/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * @param {String|Array} name\n * @param {Function} fn\n * @return {app} for chaining\n * @public\n */\n\napp.param = function param(name, fn) {\n  this.lazyrouter();\n\n  if (Array.isArray(name)) {\n    for (var i = 0; i < name.length; i++) {\n      this.param(name[i], fn);\n    }\n\n    return this;\n  }\n\n  this._router.param(name, fn);\n\n  return this;\n};\n\n/**\n * Assign `setting` to `val`, or return `setting`'s value.\n *\n *    app.set('foo', 'bar');\n *    app.set('foo');\n *    // => \"bar\"\n *\n * Mounted servers inherit their parent server's settings.\n *\n * @param {String} setting\n * @param {*} [val]\n * @return {Server} for chaining\n * @public\n */\n\napp.set = function set(setting, val) {\n  if (arguments.length === 1) {\n    // app.get(setting)\n    return this.settings[setting];\n  }\n\n  debug('set \"%s\" to %o', setting, val);\n\n  // set value\n  this.settings[setting] = val;\n\n  // trigger matched settings\n  switch (setting) {\n    case 'etag':\n      this.set('etag fn', compileETag(val));\n      break;\n    case 'query parser':\n      this.set('query parser fn', compileQueryParser(val));\n      break;\n    case 'trust proxy':\n      this.set('trust proxy fn', compileTrust(val));\n\n      // trust proxy inherit back-compat\n      Object.defineProperty(this.settings, trustProxyDefaultSymbol, {\n        configurable: true,\n        value: false\n      });\n\n      break;\n  }\n\n  return this;\n};\n\n/**\n * Return the app's absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as \"/admin\", which itself\n * was mounted as \"/blog\" then the\n * return value would be \"/blog/admin\".\n *\n * @return {String}\n * @private\n */\n\napp.path = function path() {\n  return this.parent\n    ? this.parent.path() + this.mountpath\n    : '';\n};\n\n/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled('foo')\n *    // => false\n *\n *    app.enable('foo')\n *    app.enabled('foo')\n *    // => true\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.enabled = function enabled(setting) {\n  return Boolean(this.set(setting));\n};\n\n/**\n * Check if `setting` is disabled.\n *\n *    app.disabled('foo')\n *    // => true\n *\n *    app.enable('foo')\n *    app.disabled('foo')\n *    // => false\n *\n * @param {String} setting\n * @return {Boolean}\n * @public\n */\n\napp.disabled = function disabled(setting) {\n  return !this.set(setting);\n};\n\n/**\n * Enable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.enable = function enable(setting) {\n  return this.set(setting, true);\n};\n\n/**\n * Disable `setting`.\n *\n * @param {String} setting\n * @return {app} for chaining\n * @public\n */\n\napp.disable = function disable(setting) {\n  return this.set(setting, false);\n};\n\n/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    if (method === 'get' && arguments.length === 1) {\n      // app.get(setting)\n      return this.set(path);\n    }\n\n    this.lazyrouter();\n\n    var route = this._router.route(path);\n    route[method].apply(route, slice.call(arguments, 1));\n    return this;\n  };\n});\n\n/**\n * Special-cased \"all\" method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * @param {String} path\n * @param {Function} ...\n * @return {app} for chaining\n * @public\n */\n\napp.all = function all(path) {\n  this.lazyrouter();\n\n  var route = this._router.route(path);\n  var args = slice.call(arguments, 1);\n\n  for (var i = 0; i < methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  return this;\n};\n\n// del -> delete alias\n\napp.del = deprecate.function(app.delete, 'app.del: Use app.delete instead');\n\n/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render('email', { name: 'Tobi' }, function(err, html){\n *      // ...\n *    })\n *\n * @param {String} name\n * @param {Object|Function} options or fn\n * @param {Function} callback\n * @public\n */\n\napp.render = function render(name, options, callback) {\n  var cache = this.cache;\n  var done = callback;\n  var engines = this.engines;\n  var opts = options;\n  var renderOptions = {};\n  var view;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge app.locals\n  merge(renderOptions, this.locals);\n\n  // merge options._locals\n  if (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  // merge options\n  merge(renderOptions, opts);\n\n  // set .cache unless explicitly provided\n  if (renderOptions.cache == null) {\n    renderOptions.cache = this.enabled('view cache');\n  }\n\n  // primed cache\n  if (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  // view\n  if (!view) {\n    var View = this.get('view');\n\n    view = new View(name, {\n      defaultEngine: this.get('view engine'),\n      root: this.get('views'),\n      engines: engines\n    });\n\n    if (!view.path) {\n      var dirs = Array.isArray(view.root) && view.root.length > 1\n        ? 'directories \"' + view.root.slice(0, -1).join('\", \"') + '\" or \"' + view.root[view.root.length - 1] + '\"'\n        : 'directory \"' + view.root + '\"'\n      var err = new Error('Failed to lookup view \"' + name + '\" in views ' + dirs);\n      err.view = view;\n      return done(err);\n    }\n\n    // prime the cache\n    if (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  // render\n  tryRender(view, renderOptions, done);\n};\n\n/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the \"http\"\n * and \"https\" modules as shown here:\n *\n *    var http = require('http')\n *      , https = require('https')\n *      , express = require('express')\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * @return {http.Server}\n * @public\n */\n\napp.listen = function listen() {\n  var server = http.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  /* istanbul ignore next */\n  if (this.get('env') !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Try rendering a view.\n * @private\n */\n\nfunction tryRender(view, options, callback) {\n  try {\n    view.render(options, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n","/*!\n * finalhandler\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler')\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar onFinished = require('on-finished')\nvar parseUrl = require('parseurl')\nvar statuses = require('statuses')\nvar unpipe = require('unpipe')\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\nvar NEWLINE_REGEXP = /\\n/g\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\nvar isFinished = onFinished.isFinished\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler (req, res, options) {\n  var opts = options || {}\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development'\n\n  // get error callback\n  var onerror = opts.onerror\n\n  return function (err) {\n    var headers\n    var msg\n    var status\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug('cannot 404 after headers sent')\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err)\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res)\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err)\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env)\n    } else {\n      // not found\n      status = 404\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\n    }\n\n    debug('default %s', status)\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer(onerror, err, req, res)\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug('cannot %d after headers sent', status)\n      req.socket.destroy()\n      return\n    }\n\n    // send response\n    send(req, res, status, headers, msg)\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null)\n  var keys = Object.keys(err.headers)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    headers[key] = err.headers[key]\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString()\n    }\n  }\n\n  return msg || statuses[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message)\n\n    // response status\n    res.statusCode = status\n    res.statusMessage = statuses[status]\n\n    // response headers\n    setHeaders(res, headers)\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'self'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\n\n    if (req.method === 'HEAD') {\n      res.end()\n      return\n    }\n\n    res.end(body, 'utf8')\n  }\n\n  if (isFinished(req)) {\n    write()\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req)\n\n  // flush the request\n  onFinished(req, write)\n  req.resume()\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers)\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i]\n    res.setHeader(key, headers[key])\n  }\n}\n","/**\n * Expose `pathtoRegexp`.\n */\n\nmodule.exports = pathtoRegexp;\n\n/**\n * Match matching groups in a regular expression.\n */\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String|RegExp|Array} path\n * @param  {Array} keys\n * @param  {Object} options\n * @return {RegExp}\n * @api private\n */\n\nfunction pathtoRegexp(path, keys, options) {\n  options = options || {};\n  keys = keys || [];\n  var strict = options.strict;\n  var end = options.end !== false;\n  var flags = options.sensitive ? '' : 'i';\n  var extraOffset = 0;\n  var keysOffset = keys.length;\n  var i = 0;\n  var name = 0;\n  var m;\n\n  if (path instanceof RegExp) {\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\n      keys.push({\n        name: name++,\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    return path;\n  }\n\n  if (Array.isArray(path)) {\n    // Map array parts into regexps and return their source. We also pass\n    // the same keys and options instance into every generation to get\n    // consistent matching groups before we join the sources together.\n    path = path.map(function (value) {\n      return pathtoRegexp(value, keys, options).source;\n    });\n\n    return new RegExp('(?:' + path.join('|') + ')', flags);\n  }\n\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\n    .replace(/\\/\\(/g, '/(?:')\n    .replace(/([\\/\\.])/g, '\\\\$1')\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\n      slash = slash || '';\n      format = format || '';\n      capture = capture || '([^\\\\/' + format + ']+?)';\n      optional = optional || '';\n\n      keys.push({\n        name: key,\n        optional: !!optional,\n        offset: offset + extraOffset\n      });\n\n      var result = ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + format + (optional ? slash : '') + capture\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\n        + ')'\n        + optional;\n\n      extraOffset += result.length - match.length;\n\n      return result;\n    })\n    .replace(/\\*/g, function (star, index) {\n      var len = keys.length\n\n      while (len-- > keysOffset && keys[len].offset > index) {\n        keys[len].offset += 3; // Replacement length minus asterisk length.\n      }\n\n      return '(.*)';\n    });\n\n  // This is a workaround for handling unnamed matching groups.\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\n    var escapeCount = 0;\n    var index = m.index;\n\n    while (path.charAt(--index) === '\\\\') {\n      escapeCount++;\n    }\n\n    // It's possible to escape the bracket.\n    if (escapeCount % 2 === 1) {\n      continue;\n    }\n\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\n      keys.splice(keysOffset + i, 0, {\n        name: name++, // Unnamed matching groups must be consistently linear.\n        optional: false,\n        offset: m.index\n      });\n    }\n\n    i++;\n  }\n\n  // If the path is non-ending, match until the end or a slash.\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\n\n  return new RegExp(path, flags);\n};\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar setPrototypeOf = require('setprototypeof')\n\n/**\n * Initialization middleware, exposing the\n * request and response to each other, as well\n * as defaulting the X-Powered-By header field.\n *\n * @param {Function} app\n * @return {Function}\n * @api private\n */\n\nexports.init = function(app){\n  return function expressInit(req, res, next){\n    if (app.enabled('x-powered-by')) res.setHeader('X-Powered-By', 'Express');\n    req.res = res;\n    res.req = req;\n    req.next = next;\n\n    setPrototypeOf(req, app.request)\n    setPrototypeOf(res, app.response)\n\n    res.locals = res.locals || Object.create(null);\n\n    next();\n  };\n};\n\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    var mod = this.ext.substr(1)\n    debug('require \"%s\"', mod)\n\n    // default engine export\n    var fn = require(mod).__express\n\n    if (typeof fn !== 'function') {\n      throw new Error('Module \"' + mod + '\" does not provide a view engine.')\n    }\n\n    opts.engines[this.ext] = fn\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 155;","/*!\n * destroy\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar ReadStream = require('fs').ReadStream\nvar Stream = require('stream')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = destroy\n\n/**\n * Destroy a stream.\n *\n * @param {object} stream\n * @public\n */\n\nfunction destroy(stream) {\n  if (stream instanceof ReadStream) {\n    return destroyReadStream(stream)\n  }\n\n  if (!(stream instanceof Stream)) {\n    return stream\n  }\n\n  if (typeof stream.destroy === 'function') {\n    stream.destroy()\n  }\n\n  return stream\n}\n\n/**\n * Destroy a ReadStream.\n *\n * @param {object} stream\n * @private\n */\n\nfunction destroyReadStream(stream) {\n  stream.destroy()\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose)\n  }\n\n  return stream\n}\n\n/**\n * On open handler to close stream.\n * @private\n */\n\nfunction onOpenClose() {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close()\n  }\n}\n","var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts[i]]) {\n        console.warn((this._loading || \"define()\").replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts[i]] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/^.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Define built-in types\nmime.define(require('./types.json'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\/|^application\\/(javascript|json)/).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n","/*!\n * forwarded\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = forwarded\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {object} req\n * @return {array}\n * @public\n */\n\nfunction forwarded (req) {\n  if (!req) {\n    throw new TypeError('argument req is required')\n  }\n\n  // simple header parsing\n  var proxyAddrs = parse(req.headers['x-forwarded-for'] || '')\n  var socketAddr = req.connection.remoteAddress\n  var addrs = [socketAddr].concat(proxyAddrs)\n\n  // return all addresses\n  return addrs\n}\n\n/**\n * Parse the X-Forwarded-For header.\n *\n * @param {string} header\n * @private\n */\n\nfunction parse (header) {\n  var end = header.length\n  var list = []\n  var start = header.length\n\n  // gather addresses, backwards\n  for (var i = header.length - 1; i >= 0; i--) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i\n        }\n        break\n      case 0x2c: /* , */\n        if (start !== end) {\n          list.push(header.substring(start, end))\n        }\n        start = end = i\n        break\n      default:\n        start = i\n        break\n    }\n  }\n\n  // final address\n  if (start !== end) {\n    list.push(header.substring(start, end))\n  }\n\n  return list\n}\n","(function() {\n  var expandIPv6, ipaddr, ipv4Part, ipv4Regexes, ipv6Part, ipv6Regexes, matchCIDR, root, zoneIndex;\n\n  ipaddr = {};\n\n  root = this;\n\n  if ((typeof module !== \"undefined\" && module !== null) && module.exports) {\n    module.exports = ipaddr;\n  } else {\n    root['ipaddr'] = ipaddr;\n  }\n\n  matchCIDR = function(first, second, partSize, cidrBits) {\n    var part, shift;\n    if (first.length !== second.length) {\n      throw new Error(\"ipaddr: cannot match CIDR for objects with different lengths\");\n    }\n    part = 0;\n    while (cidrBits > 0) {\n      shift = partSize - cidrBits;\n      if (shift < 0) {\n        shift = 0;\n      }\n      if (first[part] >> shift !== second[part] >> shift) {\n        return false;\n      }\n      cidrBits -= partSize;\n      part += 1;\n    }\n    return true;\n  };\n\n  ipaddr.subnetMatch = function(address, rangeList, defaultName) {\n    var k, len, rangeName, rangeSubnets, subnet;\n    if (defaultName == null) {\n      defaultName = 'unicast';\n    }\n    for (rangeName in rangeList) {\n      rangeSubnets = rangeList[rangeName];\n      if (rangeSubnets[0] && !(rangeSubnets[0] instanceof Array)) {\n        rangeSubnets = [rangeSubnets];\n      }\n      for (k = 0, len = rangeSubnets.length; k < len; k++) {\n        subnet = rangeSubnets[k];\n        if (address.kind() === subnet[0].kind()) {\n          if (address.match.apply(address, subnet)) {\n            return rangeName;\n          }\n        }\n      }\n    }\n    return defaultName;\n  };\n\n  ipaddr.IPv4 = (function() {\n    function IPv4(octets) {\n      var k, len, octet;\n      if (octets.length !== 4) {\n        throw new Error(\"ipaddr: ipv4 octet count should be 4\");\n      }\n      for (k = 0, len = octets.length; k < len; k++) {\n        octet = octets[k];\n        if (!((0 <= octet && octet <= 255))) {\n          throw new Error(\"ipaddr: ipv4 octet should fit in 8 bits\");\n        }\n      }\n      this.octets = octets;\n    }\n\n    IPv4.prototype.kind = function() {\n      return 'ipv4';\n    };\n\n    IPv4.prototype.toString = function() {\n      return this.octets.join(\".\");\n    };\n\n    IPv4.prototype.toNormalizedString = function() {\n      return this.toString();\n    };\n\n    IPv4.prototype.toByteArray = function() {\n      return this.octets.slice(0);\n    };\n\n    IPv4.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv4') {\n        throw new Error(\"ipaddr: cannot match ipv4 address with non-ipv4 one\");\n      }\n      return matchCIDR(this.octets, other.octets, 8, cidrRange);\n    };\n\n    IPv4.prototype.SpecialRanges = {\n      unspecified: [[new IPv4([0, 0, 0, 0]), 8]],\n      broadcast: [[new IPv4([255, 255, 255, 255]), 32]],\n      multicast: [[new IPv4([224, 0, 0, 0]), 4]],\n      linkLocal: [[new IPv4([169, 254, 0, 0]), 16]],\n      loopback: [[new IPv4([127, 0, 0, 0]), 8]],\n      carrierGradeNat: [[new IPv4([100, 64, 0, 0]), 10]],\n      \"private\": [[new IPv4([10, 0, 0, 0]), 8], [new IPv4([172, 16, 0, 0]), 12], [new IPv4([192, 168, 0, 0]), 16]],\n      reserved: [[new IPv4([192, 0, 0, 0]), 24], [new IPv4([192, 0, 2, 0]), 24], [new IPv4([192, 88, 99, 0]), 24], [new IPv4([198, 51, 100, 0]), 24], [new IPv4([203, 0, 113, 0]), 24], [new IPv4([240, 0, 0, 0]), 4]]\n    };\n\n    IPv4.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv4.prototype.toIPv4MappedAddress = function() {\n      return ipaddr.IPv6.parse(\"::ffff:\" + (this.toString()));\n    };\n\n    IPv4.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, octet, stop, zeros, zerotable;\n      zerotable = {\n        0: 8,\n        128: 7,\n        192: 6,\n        224: 5,\n        240: 4,\n        248: 3,\n        252: 2,\n        254: 1,\n        255: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 3; k >= 0; i = k += -1) {\n        octet = this.octets[i];\n        if (octet in zerotable) {\n          zeros = zerotable[octet];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 8) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 32 - cidr;\n    };\n\n    return IPv4;\n\n  })();\n\n  ipv4Part = \"(0?\\\\d+|0x[a-f0-9]+)\";\n\n  ipv4Regexes = {\n    fourOctet: new RegExp(\"^\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"$\", 'i'),\n    longValue: new RegExp(\"^\" + ipv4Part + \"$\", 'i')\n  };\n\n  ipaddr.IPv4.parser = function(string) {\n    var match, parseIntAuto, part, shift, value;\n    parseIntAuto = function(string) {\n      if (string[0] === \"0\" && string[1] !== \"x\") {\n        return parseInt(string, 8);\n      } else {\n        return parseInt(string);\n      }\n    };\n    if (match = string.match(ipv4Regexes.fourOctet)) {\n      return (function() {\n        var k, len, ref, results;\n        ref = match.slice(1, 6);\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(parseIntAuto(part));\n        }\n        return results;\n      })();\n    } else if (match = string.match(ipv4Regexes.longValue)) {\n      value = parseIntAuto(match[1]);\n      if (value > 0xffffffff || value < 0) {\n        throw new Error(\"ipaddr: address outside defined range\");\n      }\n      return ((function() {\n        var k, results;\n        results = [];\n        for (shift = k = 0; k <= 24; shift = k += 8) {\n          results.push((value >> shift) & 0xff);\n        }\n        return results;\n      })()).reverse();\n    } else {\n      return null;\n    }\n  };\n\n  ipaddr.IPv6 = (function() {\n    function IPv6(parts, zoneId) {\n      var i, k, l, len, part, ref;\n      if (parts.length === 16) {\n        this.parts = [];\n        for (i = k = 0; k <= 14; i = k += 2) {\n          this.parts.push((parts[i] << 8) | parts[i + 1]);\n        }\n      } else if (parts.length === 8) {\n        this.parts = parts;\n      } else {\n        throw new Error(\"ipaddr: ipv6 part count should be 8 or 16\");\n      }\n      ref = this.parts;\n      for (l = 0, len = ref.length; l < len; l++) {\n        part = ref[l];\n        if (!((0 <= part && part <= 0xffff))) {\n          throw new Error(\"ipaddr: ipv6 part should fit in 16 bits\");\n        }\n      }\n      if (zoneId) {\n        this.zoneId = zoneId;\n      }\n    }\n\n    IPv6.prototype.kind = function() {\n      return 'ipv6';\n    };\n\n    IPv6.prototype.toString = function() {\n      return this.toNormalizedString().replace(/((^|:)(0(:|$))+)/, '::');\n    };\n\n    IPv6.prototype.toByteArray = function() {\n      var bytes, k, len, part, ref;\n      bytes = [];\n      ref = this.parts;\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        bytes.push(part >> 8);\n        bytes.push(part & 0xff);\n      }\n      return bytes;\n    };\n\n    IPv6.prototype.toNormalizedString = function() {\n      var addr, part, suffix;\n      addr = ((function() {\n        var k, len, ref, results;\n        ref = this.parts;\n        results = [];\n        for (k = 0, len = ref.length; k < len; k++) {\n          part = ref[k];\n          results.push(part.toString(16));\n        }\n        return results;\n      }).call(this)).join(\":\");\n      suffix = '';\n      if (this.zoneId) {\n        suffix = '%' + this.zoneId;\n      }\n      return addr + suffix;\n    };\n\n    IPv6.prototype.match = function(other, cidrRange) {\n      var ref;\n      if (cidrRange === void 0) {\n        ref = other, other = ref[0], cidrRange = ref[1];\n      }\n      if (other.kind() !== 'ipv6') {\n        throw new Error(\"ipaddr: cannot match ipv6 address with non-ipv6 one\");\n      }\n      return matchCIDR(this.parts, other.parts, 16, cidrRange);\n    };\n\n    IPv6.prototype.SpecialRanges = {\n      unspecified: [new IPv6([0, 0, 0, 0, 0, 0, 0, 0]), 128],\n      linkLocal: [new IPv6([0xfe80, 0, 0, 0, 0, 0, 0, 0]), 10],\n      multicast: [new IPv6([0xff00, 0, 0, 0, 0, 0, 0, 0]), 8],\n      loopback: [new IPv6([0, 0, 0, 0, 0, 0, 0, 1]), 128],\n      uniqueLocal: [new IPv6([0xfc00, 0, 0, 0, 0, 0, 0, 0]), 7],\n      ipv4Mapped: [new IPv6([0, 0, 0, 0, 0, 0xffff, 0, 0]), 96],\n      rfc6145: [new IPv6([0, 0, 0, 0, 0xffff, 0, 0, 0]), 96],\n      rfc6052: [new IPv6([0x64, 0xff9b, 0, 0, 0, 0, 0, 0]), 96],\n      '6to4': [new IPv6([0x2002, 0, 0, 0, 0, 0, 0, 0]), 16],\n      teredo: [new IPv6([0x2001, 0, 0, 0, 0, 0, 0, 0]), 32],\n      reserved: [[new IPv6([0x2001, 0xdb8, 0, 0, 0, 0, 0, 0]), 32]]\n    };\n\n    IPv6.prototype.range = function() {\n      return ipaddr.subnetMatch(this, this.SpecialRanges);\n    };\n\n    IPv6.prototype.isIPv4MappedAddress = function() {\n      return this.range() === 'ipv4Mapped';\n    };\n\n    IPv6.prototype.toIPv4Address = function() {\n      var high, low, ref;\n      if (!this.isIPv4MappedAddress()) {\n        throw new Error(\"ipaddr: trying to convert a generic ipv6 address to ipv4\");\n      }\n      ref = this.parts.slice(-2), high = ref[0], low = ref[1];\n      return new ipaddr.IPv4([high >> 8, high & 0xff, low >> 8, low & 0xff]);\n    };\n\n    IPv6.prototype.prefixLengthFromSubnetMask = function() {\n      var cidr, i, k, part, stop, zeros, zerotable;\n      zerotable = {\n        0: 16,\n        32768: 15,\n        49152: 14,\n        57344: 13,\n        61440: 12,\n        63488: 11,\n        64512: 10,\n        65024: 9,\n        65280: 8,\n        65408: 7,\n        65472: 6,\n        65504: 5,\n        65520: 4,\n        65528: 3,\n        65532: 2,\n        65534: 1,\n        65535: 0\n      };\n      cidr = 0;\n      stop = false;\n      for (i = k = 7; k >= 0; i = k += -1) {\n        part = this.parts[i];\n        if (part in zerotable) {\n          zeros = zerotable[part];\n          if (stop && zeros !== 0) {\n            return null;\n          }\n          if (zeros !== 16) {\n            stop = true;\n          }\n          cidr += zeros;\n        } else {\n          return null;\n        }\n      }\n      return 128 - cidr;\n    };\n\n    return IPv6;\n\n  })();\n\n  ipv6Part = \"(?:[0-9a-f]+::?)+\";\n\n  zoneIndex = \"%[0-9a-z]{1,}\";\n\n  ipv6Regexes = {\n    zoneIndex: new RegExp(zoneIndex, 'i'),\n    \"native\": new RegExp(\"^(::)?(\" + ipv6Part + \")?([0-9a-f]+)?(::)?(\" + zoneIndex + \")?$\", 'i'),\n    transitional: new RegExp((\"^((?:\" + ipv6Part + \")|(?:::)(?:\" + ipv6Part + \")?)\") + (ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part + \"\\\\.\" + ipv4Part) + (\"(\" + zoneIndex + \")?$\"), 'i')\n  };\n\n  expandIPv6 = function(string, parts) {\n    var colonCount, lastColon, part, replacement, replacementCount, zoneId;\n    if (string.indexOf('::') !== string.lastIndexOf('::')) {\n      return null;\n    }\n    zoneId = (string.match(ipv6Regexes['zoneIndex']) || [])[0];\n    if (zoneId) {\n      zoneId = zoneId.substring(1);\n      string = string.replace(/%.+$/, '');\n    }\n    colonCount = 0;\n    lastColon = -1;\n    while ((lastColon = string.indexOf(':', lastColon + 1)) >= 0) {\n      colonCount++;\n    }\n    if (string.substr(0, 2) === '::') {\n      colonCount--;\n    }\n    if (string.substr(-2, 2) === '::') {\n      colonCount--;\n    }\n    if (colonCount > parts) {\n      return null;\n    }\n    replacementCount = parts - colonCount;\n    replacement = ':';\n    while (replacementCount--) {\n      replacement += '0:';\n    }\n    string = string.replace('::', replacement);\n    if (string[0] === ':') {\n      string = string.slice(1);\n    }\n    if (string[string.length - 1] === ':') {\n      string = string.slice(0, -1);\n    }\n    parts = (function() {\n      var k, len, ref, results;\n      ref = string.split(\":\");\n      results = [];\n      for (k = 0, len = ref.length; k < len; k++) {\n        part = ref[k];\n        results.push(parseInt(part, 16));\n      }\n      return results;\n    })();\n    return {\n      parts: parts,\n      zoneId: zoneId\n    };\n  };\n\n  ipaddr.IPv6.parser = function(string) {\n    var addr, k, len, match, octet, octets, zoneId;\n    if (ipv6Regexes['native'].test(string)) {\n      return expandIPv6(string, 8);\n    } else if (match = string.match(ipv6Regexes['transitional'])) {\n      zoneId = match[6] || '';\n      addr = expandIPv6(match[1].slice(0, -1) + zoneId, 6);\n      if (addr.parts) {\n        octets = [parseInt(match[2]), parseInt(match[3]), parseInt(match[4]), parseInt(match[5])];\n        for (k = 0, len = octets.length; k < len; k++) {\n          octet = octets[k];\n          if (!((0 <= octet && octet <= 255))) {\n            return null;\n          }\n        }\n        addr.parts.push(octets[0] << 8 | octets[1]);\n        addr.parts.push(octets[2] << 8 | octets[3]);\n        return {\n          parts: addr.parts,\n          zoneId: addr.zoneId\n        };\n      }\n    }\n    return null;\n  };\n\n  ipaddr.IPv4.isIPv4 = ipaddr.IPv6.isIPv6 = function(string) {\n    return this.parser(string) !== null;\n  };\n\n  ipaddr.IPv4.isValid = function(string) {\n    var e;\n    try {\n      new this(this.parser(string));\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.isValidFourPartDecimal = function(string) {\n    if (ipaddr.IPv4.isValid(string) && string.match(/^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){3}$/)) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  ipaddr.IPv6.isValid = function(string) {\n    var addr, e;\n    if (typeof string === \"string\" && string.indexOf(\":\") === -1) {\n      return false;\n    }\n    try {\n      addr = this.parser(string);\n      new this(addr.parts, addr.zoneId);\n      return true;\n    } catch (error1) {\n      e = error1;\n      return false;\n    }\n  };\n\n  ipaddr.IPv4.parse = function(string) {\n    var parts;\n    parts = this.parser(string);\n    if (parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(parts);\n  };\n\n  ipaddr.IPv6.parse = function(string) {\n    var addr;\n    addr = this.parser(string);\n    if (addr.parts === null) {\n      throw new Error(\"ipaddr: string is not formatted like ip address\");\n    }\n    return new this(addr.parts, addr.zoneId);\n  };\n\n  ipaddr.IPv4.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 32) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv4 CIDR range\");\n  };\n\n  ipaddr.IPv4.subnetMaskFromPrefixLength = function(prefix) {\n    var filledOctetCount, j, octets;\n    prefix = parseInt(prefix);\n    if (prefix < 0 || prefix > 32) {\n      throw new Error('ipaddr: invalid IPv4 prefix length');\n    }\n    octets = [0, 0, 0, 0];\n    j = 0;\n    filledOctetCount = Math.floor(prefix / 8);\n    while (j < filledOctetCount) {\n      octets[j] = 255;\n      j++;\n    }\n    if (filledOctetCount < 4) {\n      octets[filledOctetCount] = Math.pow(2, prefix % 8) - 1 << 8 - (prefix % 8);\n    }\n    return new this(octets);\n  };\n\n  ipaddr.IPv4.broadcastAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) | parseInt(subnetMaskOctets[i], 10) ^ 255);\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv4.networkAddressFromCIDR = function(string) {\n    var cidr, error, i, ipInterfaceOctets, octets, subnetMaskOctets;\n    try {\n      cidr = this.parseCIDR(string);\n      ipInterfaceOctets = cidr[0].toByteArray();\n      subnetMaskOctets = this.subnetMaskFromPrefixLength(cidr[1]).toByteArray();\n      octets = [];\n      i = 0;\n      while (i < 4) {\n        octets.push(parseInt(ipInterfaceOctets[i], 10) & parseInt(subnetMaskOctets[i], 10));\n        i++;\n      }\n      return new this(octets);\n    } catch (error1) {\n      error = error1;\n      throw new Error('ipaddr: the address does not have IPv4 CIDR format');\n    }\n  };\n\n  ipaddr.IPv6.parseCIDR = function(string) {\n    var maskLength, match, parsed;\n    if (match = string.match(/^(.+)\\/(\\d+)$/)) {\n      maskLength = parseInt(match[2]);\n      if (maskLength >= 0 && maskLength <= 128) {\n        parsed = [this.parse(match[1]), maskLength];\n        Object.defineProperty(parsed, 'toString', {\n          value: function() {\n            return this.join('/');\n          }\n        });\n        return parsed;\n      }\n    }\n    throw new Error(\"ipaddr: string is not formatted like an IPv6 CIDR range\");\n  };\n\n  ipaddr.isValid = function(string) {\n    return ipaddr.IPv6.isValid(string) || ipaddr.IPv4.isValid(string);\n  };\n\n  ipaddr.parse = function(string) {\n    if (ipaddr.IPv6.isValid(string)) {\n      return ipaddr.IPv6.parse(string);\n    } else if (ipaddr.IPv4.isValid(string)) {\n      return ipaddr.IPv4.parse(string);\n    } else {\n      throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 format\");\n    }\n  };\n\n  ipaddr.parseCIDR = function(string) {\n    var e;\n    try {\n      return ipaddr.IPv6.parseCIDR(string);\n    } catch (error1) {\n      e = error1;\n      try {\n        return ipaddr.IPv4.parseCIDR(string);\n      } catch (error1) {\n        e = error1;\n        throw new Error(\"ipaddr: the address has neither IPv6 nor IPv4 CIDR format\");\n      }\n    }\n  };\n\n  ipaddr.fromByteArray = function(bytes) {\n    var length;\n    length = bytes.length;\n    if (length === 4) {\n      return new ipaddr.IPv4(bytes);\n    } else if (length === 16) {\n      return new ipaddr.IPv6(bytes);\n    } else {\n      throw new Error(\"ipaddr: the binary input is neither an IPv6 nor IPv4 address\");\n    }\n  };\n\n  ipaddr.process = function(string) {\n    var addr;\n    addr = this.parse(string);\n    if (addr.kind() === 'ipv6' && addr.isIPv4MappedAddress()) {\n      return addr.toIPv4Address();\n    } else {\n      return addr;\n    }\n  };\n\n}).call(this);\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts');\nvar deprecate = require('depd')('express');\nvar isIP = require('net').isIP;\nvar typeis = require('type-is');\nvar http = require('http');\nvar fresh = require('fresh');\nvar parseRange = require('range-parser');\nvar parse = require('parseurl');\nvar proxyaddr = require('proxy-addr');\n\n/**\n * Request prototype.\n * @public\n */\n\nvar req = Object.create(http.IncomingMessage.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = req\n\n/**\n * Return request header.\n *\n * The `Referrer` header field is special-cased,\n * both `Referrer` and `Referer` are interchangeable.\n *\n * Examples:\n *\n *     req.get('Content-Type');\n *     // => \"text/plain\"\n *\n *     req.get('content-type');\n *     // => \"text/plain\"\n *\n *     req.get('Something');\n *     // => undefined\n *\n * Aliased as `req.header()`.\n *\n * @param {String} name\n * @return {String}\n * @public\n */\n\nreq.get =\nreq.header = function header(name) {\n  if (!name) {\n    throw new TypeError('name argument is required to req.get');\n  }\n\n  if (typeof name !== 'string') {\n    throw new TypeError('name must be a string to req.get');\n  }\n\n  var lc = name.toLowerCase();\n\n  switch (lc) {\n    case 'referer':\n    case 'referrer':\n      return this.headers.referrer\n        || this.headers.referer;\n    default:\n      return this.headers[lc];\n  }\n};\n\n/**\n * To do: update docs.\n *\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single MIME type string\n * such as \"application/json\", an extension name\n * such as \"json\", a comma-delimited list such as \"json, html, text/plain\",\n * an argument list such as `\"json\", \"html\", \"text/plain\"`,\n * or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given, the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     req.accepts('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('html');\n *     // => \"html\"\n *     req.accepts('text/html');\n *     // => \"text/html\"\n *     req.accepts('json, text');\n *     // => \"json\"\n *     req.accepts('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     req.accepts('image/png');\n *     req.accepts('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     req.accepts(['html', 'json']);\n *     req.accepts('html', 'json');\n *     req.accepts('html, json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)\n * @return {String|Array|Boolean}\n * @public\n */\n\nreq.accepts = function(){\n  var accept = accepts(this);\n  return accept.types.apply(accept, arguments);\n};\n\n/**\n * Check if the given `encoding`s are accepted.\n *\n * @param {String} ...encoding\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsEncodings = function(){\n  var accept = accepts(this);\n  return accept.encodings.apply(accept, arguments);\n};\n\nreq.acceptsEncoding = deprecate.function(req.acceptsEncodings,\n  'req.acceptsEncoding: Use acceptsEncodings instead');\n\n/**\n * Check if the given `charset`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...charset\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsCharsets = function(){\n  var accept = accepts(this);\n  return accept.charsets.apply(accept, arguments);\n};\n\nreq.acceptsCharset = deprecate.function(req.acceptsCharsets,\n  'req.acceptsCharset: Use acceptsCharsets instead');\n\n/**\n * Check if the given `lang`s are acceptable,\n * otherwise you should respond with 406 \"Not Acceptable\".\n *\n * @param {String} ...lang\n * @return {String|Array}\n * @public\n */\n\nreq.acceptsLanguages = function(){\n  var accept = accepts(this);\n  return accept.languages.apply(accept, arguments);\n};\n\nreq.acceptsLanguage = deprecate.function(req.acceptsLanguages,\n  'req.acceptsLanguage: Use acceptsLanguages instead');\n\n/**\n * Parse Range header field, capping to the given `size`.\n *\n * Unspecified ranges such as \"0-\" require knowledge of your resource length. In\n * the case of a byte range this is of course the total number of bytes. If the\n * Range header field is not given `undefined` is returned, `-1` when unsatisfiable,\n * and `-2` when syntactically invalid.\n *\n * When ranges are returned, the array has a \"type\" property which is the type of\n * range that is required (most commonly, \"bytes\"). Each array element is an object\n * with a \"start\" and \"end\" property for the portion of the range.\n *\n * The \"combine\" option can be set to `true` and overlapping & adjacent ranges\n * will be combined into a single range.\n *\n * NOTE: remember that ranges are inclusive, so for example \"Range: users=0-3\"\n * should respond with 4 users when available, not 3.\n *\n * @param {number} size\n * @param {object} [options]\n * @param {boolean} [options.combine=false]\n * @return {number|array}\n * @public\n */\n\nreq.range = function range(size, options) {\n  var range = this.get('Range');\n  if (!range) return;\n  return parseRange(size, range, options);\n};\n\n/**\n * Return the value of param `name` when present or `defaultValue`.\n *\n *  - Checks route placeholders, ex: _/user/:id_\n *  - Checks body params, ex: id=12, {\"id\":12}\n *  - Checks query string params, ex: ?id=12\n *\n * To utilize request bodies, `req.body`\n * should be an object. This can be done by using\n * the `bodyParser()` middleware.\n *\n * @param {String} name\n * @param {Mixed} [defaultValue]\n * @return {String}\n * @public\n */\n\nreq.param = function param(name, defaultValue) {\n  var params = this.params || {};\n  var body = this.body || {};\n  var query = this.query || {};\n\n  var args = arguments.length === 1\n    ? 'name'\n    : 'name, default';\n  deprecate('req.param(' + args + '): Use req.params, req.body, or req.query instead');\n\n  if (null != params[name] && params.hasOwnProperty(name)) return params[name];\n  if (null != body[name]) return body[name];\n  if (null != query[name]) return query[name];\n\n  return defaultValue;\n};\n\n/**\n * Check if the incoming request contains the \"Content-Type\"\n * header field, and it contains the give mime `type`.\n *\n * Examples:\n *\n *      // With Content-Type: text/html; charset=utf-8\n *      req.is('html');\n *      req.is('text/html');\n *      req.is('text/*');\n *      // => true\n *\n *      // When Content-Type is application/json\n *      req.is('json');\n *      req.is('application/json');\n *      req.is('application/*');\n *      // => true\n *\n *      req.is('html');\n *      // => false\n *\n * @param {String|Array} types...\n * @return {String|false|null}\n * @public\n */\n\nreq.is = function is(types) {\n  var arr = types;\n\n  // support flattened arguments\n  if (!Array.isArray(types)) {\n    arr = new Array(arguments.length);\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arguments[i];\n    }\n  }\n\n  return typeis(this, arr);\n};\n\n/**\n * Return the protocol string \"http\" or \"https\"\n * when requested with TLS. When the \"trust proxy\"\n * setting trusts the socket address, the\n * \"X-Forwarded-Proto\" header field will be trusted\n * and used if present.\n *\n * If you're running behind a reverse proxy that\n * supplies https for you this may be enabled.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'protocol', function protocol(){\n  var proto = this.connection.encrypted\n    ? 'https'\n    : 'http';\n  var trust = this.app.get('trust proxy fn');\n\n  if (!trust(this.connection.remoteAddress, 0)) {\n    return proto;\n  }\n\n  // Note: X-Forwarded-Proto is normally only ever a\n  //       single value, but this is to be safe.\n  var header = this.get('X-Forwarded-Proto') || proto\n  var index = header.indexOf(',')\n\n  return index !== -1\n    ? header.substring(0, index).trim()\n    : header.trim()\n});\n\n/**\n * Short-hand for:\n *\n *    req.protocol === 'https'\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'secure', function secure(){\n  return this.protocol === 'https';\n});\n\n/**\n * Return the remote address from the trusted proxy.\n *\n * The is the remote address on the socket unless\n * \"trust proxy\" is set.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'ip', function ip(){\n  var trust = this.app.get('trust proxy fn');\n  return proxyaddr(this, trust);\n});\n\n/**\n * When \"trust proxy\" is set, trusted proxy addresses + client.\n *\n * For example if the value were \"client, proxy1, proxy2\"\n * you would receive the array `[\"client\", \"proxy1\", \"proxy2\"]`\n * where \"proxy2\" is the furthest down-stream and \"proxy1\" and\n * \"proxy2\" were trusted.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'ips', function ips() {\n  var trust = this.app.get('trust proxy fn');\n  var addrs = proxyaddr.all(this, trust);\n\n  // reverse the order (to farthest -> closest)\n  // and remove socket address\n  addrs.reverse().pop()\n\n  return addrs\n});\n\n/**\n * Return subdomains as an array.\n *\n * Subdomains are the dot-separated parts of the host before the main domain of\n * the app. By default, the domain of the app is assumed to be the last two\n * parts of the host. This can be changed by setting \"subdomain offset\".\n *\n * For example, if the domain is \"tobi.ferrets.example.com\":\n * If \"subdomain offset\" is not set, req.subdomains is `[\"ferrets\", \"tobi\"]`.\n * If \"subdomain offset\" is 3, req.subdomains is `[\"tobi\"]`.\n *\n * @return {Array}\n * @public\n */\n\ndefineGetter(req, 'subdomains', function subdomains() {\n  var hostname = this.hostname;\n\n  if (!hostname) return [];\n\n  var offset = this.app.get('subdomain offset');\n  var subdomains = !isIP(hostname)\n    ? hostname.split('.').reverse()\n    : [hostname];\n\n  return subdomains.slice(offset);\n});\n\n/**\n * Short-hand for `url.parse(req.url).pathname`.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'path', function path() {\n  return parse(this).pathname;\n});\n\n/**\n * Parse the \"Host\" header field to a hostname.\n *\n * When the \"trust proxy\" setting trusts the socket\n * address, the \"X-Forwarded-Host\" header field will\n * be trusted.\n *\n * @return {String}\n * @public\n */\n\ndefineGetter(req, 'hostname', function hostname(){\n  var trust = this.app.get('trust proxy fn');\n  var host = this.get('X-Forwarded-Host');\n\n  if (!host || !trust(this.connection.remoteAddress, 0)) {\n    host = this.get('Host');\n  }\n\n  if (!host) return;\n\n  // IPv6 literal support\n  var offset = host[0] === '['\n    ? host.indexOf(']') + 1\n    : 0;\n  var index = host.indexOf(':', offset);\n\n  return index !== -1\n    ? host.substring(0, index)\n    : host;\n});\n\n// TODO: change req.host to return host in next major\n\ndefineGetter(req, 'host', deprecate.function(function host(){\n  return this.hostname;\n}, 'req.host: Use req.hostname instead'));\n\n/**\n * Check if the request is fresh, aka\n * Last-Modified and/or the ETag\n * still match.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'fresh', function(){\n  var method = this.method;\n  var res = this.res\n  var status = res.statusCode\n\n  // GET or HEAD for weak freshness validation only\n  if ('GET' !== method && 'HEAD' !== method) return false;\n\n  // 2xx or 304 as per rfc2616 14.26\n  if ((status >= 200 && status < 300) || 304 === status) {\n    return fresh(this.headers, {\n      'etag': res.get('ETag'),\n      'last-modified': res.get('Last-Modified')\n    })\n  }\n\n  return false;\n});\n\n/**\n * Check if the request is stale, aka\n * \"Last-Modified\" and / or the \"ETag\" for the\n * resource has changed.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'stale', function stale(){\n  return !this.fresh;\n});\n\n/**\n * Check if the request was an _XMLHttpRequest_.\n *\n * @return {Boolean}\n * @public\n */\n\ndefineGetter(req, 'xhr', function xhr(){\n  var val = this.get('X-Requested-With') || '';\n  return val.toLowerCase() === 'xmlhttprequest';\n});\n\n/**\n * Helper function for creating a getter on an object.\n *\n * @param {Object} obj\n * @param {String} name\n * @param {Function} getter\n * @private\n */\nfunction defineGetter(obj, name, getter) {\n  Object.defineProperty(obj, name, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n","/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts (req) {\n  if (!(this instanceof Accepts)) {\n    return new Accepts(req)\n  }\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  // no accept header, return first given type\n  if (!this.headers.accept) {\n    return types[0]\n  }\n\n  var mimes = types.map(extToMime)\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime))\n  var first = accepts[0]\n\n  return first\n    ? types[mimes.indexOf(first)]\n    : false\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime (type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime (type) {\n  return typeof type === 'string'\n}\n","/*!\n * negotiator\n * Copyright(c) 2012 Federico Romero\n * Copyright(c) 2012-2014 Isaac Z. Schlueter\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Cached loaded submodules.\n * @private\n */\n\nvar modules = Object.create(null);\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Negotiator;\nmodule.exports.Negotiator = Negotiator;\n\n/**\n * Create a Negotiator instance from a request.\n * @param {object} request\n * @public\n */\n\nfunction Negotiator(request) {\n  if (!(this instanceof Negotiator)) {\n    return new Negotiator(request);\n  }\n\n  this.request = request;\n}\n\nNegotiator.prototype.charset = function charset(available) {\n  var set = this.charsets(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.charsets = function charsets(available) {\n  var preferredCharsets = loadModule('charset').preferredCharsets;\n  return preferredCharsets(this.request.headers['accept-charset'], available);\n};\n\nNegotiator.prototype.encoding = function encoding(available) {\n  var set = this.encodings(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.encodings = function encodings(available) {\n  var preferredEncodings = loadModule('encoding').preferredEncodings;\n  return preferredEncodings(this.request.headers['accept-encoding'], available);\n};\n\nNegotiator.prototype.language = function language(available) {\n  var set = this.languages(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.languages = function languages(available) {\n  var preferredLanguages = loadModule('language').preferredLanguages;\n  return preferredLanguages(this.request.headers['accept-language'], available);\n};\n\nNegotiator.prototype.mediaType = function mediaType(available) {\n  var set = this.mediaTypes(available);\n  return set && set[0];\n};\n\nNegotiator.prototype.mediaTypes = function mediaTypes(available) {\n  var preferredMediaTypes = loadModule('mediaType').preferredMediaTypes;\n  return preferredMediaTypes(this.request.headers.accept, available);\n};\n\n// Backwards compatibility\nNegotiator.prototype.preferredCharset = Negotiator.prototype.charset;\nNegotiator.prototype.preferredCharsets = Negotiator.prototype.charsets;\nNegotiator.prototype.preferredEncoding = Negotiator.prototype.encoding;\nNegotiator.prototype.preferredEncodings = Negotiator.prototype.encodings;\nNegotiator.prototype.preferredLanguage = Negotiator.prototype.language;\nNegotiator.prototype.preferredLanguages = Negotiator.prototype.languages;\nNegotiator.prototype.preferredMediaType = Negotiator.prototype.mediaType;\nNegotiator.prototype.preferredMediaTypes = Negotiator.prototype.mediaTypes;\n\n/**\n * Load the given module.\n * @private\n */\n\nfunction loadModule(moduleName) {\n  var module = modules[moduleName];\n\n  if (module !== undefined) {\n    return module;\n  }\n\n  // This uses a switch for static require analysis\n  switch (moduleName) {\n    case 'charset':\n      module = require('./lib/charset');\n      break;\n    case 'encoding':\n      module = require('./lib/encoding');\n      break;\n    case 'language':\n      module = require('./lib/language');\n      break;\n    case 'mediaType':\n      module = require('./lib/mediaType');\n      break;\n    default:\n      throw new Error('Cannot find module \\'' + moduleName + '\\'');\n  }\n\n  // Store to prevent invoking require()\n  modules[moduleName] = module;\n\n  return module;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredCharsets;\nmodule.exports.preferredCharsets = preferredCharsets;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleCharsetRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Charset header.\n * @private\n */\n\nfunction parseAcceptCharset(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var charset = parseCharset(accepts[i].trim(), i);\n\n    if (charset) {\n      accepts[j++] = charset;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a charset from the Accept-Charset header.\n * @private\n */\n\nfunction parseCharset(str, i) {\n  var match = simpleCharsetRegExp.exec(str);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a charset.\n * @private\n */\n\nfunction getCharsetPriority(charset, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(charset, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the charset.\n * @private\n */\n\nfunction specify(charset, spec, index) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n}\n\n/**\n * Get the preferred charsets from an Accept-Charset header.\n * @public\n */\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  var accepts = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all charsets\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullCharset);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getCharsetPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted charsets\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getCharset(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full charset string.\n * @private\n */\n\nfunction getFullCharset(spec) {\n  return spec.charset;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredEncodings;\nmodule.exports.preferredEncodings = preferredEncodings;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleEncodingRegExp = /^\\s*([^\\s;]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Encoding header.\n * @private\n */\n\nfunction parseAcceptEncoding(accept) {\n  var accepts = accept.split(',');\n  var hasIdentity = false;\n  var minQuality = 1;\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var encoding = parseEncoding(accepts[i].trim(), i);\n\n    if (encoding) {\n      accepts[j++] = encoding;\n      hasIdentity = hasIdentity || specify('identity', encoding);\n      minQuality = Math.min(minQuality, encoding.q || 1);\n    }\n  }\n\n  if (!hasIdentity) {\n    /*\n     * If identity doesn't explicitly appear in the accept-encoding header,\n     * it's added to the list of acceptable encoding with the lowest q\n     */\n    accepts[j++] = {\n      encoding: 'identity',\n      q: minQuality,\n      i: i\n    };\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse an encoding from the Accept-Encoding header.\n * @private\n */\n\nfunction parseEncoding(str, i) {\n  var match = simpleEncodingRegExp.exec(str);\n  if (!match) return null;\n\n  var encoding = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';');\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    encoding: encoding,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of an encoding.\n * @private\n */\n\nfunction getEncodingPriority(encoding, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(encoding, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the encoding.\n * @private\n */\n\nfunction specify(encoding, spec, index) {\n  var s = 0;\n  if(spec.encoding.toLowerCase() === encoding.toLowerCase()){\n    s |= 1;\n  } else if (spec.encoding !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred encodings from an Accept-Encoding header.\n * @public\n */\n\nfunction preferredEncodings(accept, provided) {\n  var accepts = parseAcceptEncoding(accept || '');\n\n  if (!provided) {\n    // sorted list of all encodings\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullEncoding);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getEncodingPriority(type, accepts, index);\n  });\n\n  // sorted list of accepted encodings\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getEncoding(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full encoding string.\n * @private\n */\n\nfunction getFullEncoding(spec) {\n  return spec.encoding;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredLanguages;\nmodule.exports.preferredLanguages = preferredLanguages;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleLanguageRegExp = /^\\s*([^\\s\\-;]+)(?:-([^\\s;]+))?\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept-Language header.\n * @private\n */\n\nfunction parseAcceptLanguage(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var langauge = parseLanguage(accepts[i].trim(), i);\n\n    if (langauge) {\n      accepts[j++] = langauge;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a language from the Accept-Language header.\n * @private\n */\n\nfunction parseLanguage(str, i) {\n  var match = simpleLanguageRegExp.exec(str);\n  if (!match) return null;\n\n  var prefix = match[1],\n      suffix = match[2],\n      full = prefix;\n\n  if (suffix) full += \"-\" + suffix;\n\n  var q = 1;\n  if (match[3]) {\n    var params = match[3].split(';')\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].split('=');\n      if (p[0] === 'q') q = parseFloat(p[1]);\n    }\n  }\n\n  return {\n    prefix: prefix,\n    suffix: suffix,\n    q: q,\n    i: i,\n    full: full\n  };\n}\n\n/**\n * Get the priority of a language.\n * @private\n */\n\nfunction getLanguagePriority(language, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(language, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the language.\n * @private\n */\n\nfunction specify(language, spec, index) {\n  var p = parseLanguage(language)\n  if (!p) return null;\n  var s = 0;\n  if(spec.full.toLowerCase() === p.full.toLowerCase()){\n    s |= 4;\n  } else if (spec.prefix.toLowerCase() === p.full.toLowerCase()) {\n    s |= 2;\n  } else if (spec.full.toLowerCase() === p.prefix.toLowerCase()) {\n    s |= 1;\n  } else if (spec.full !== '*' ) {\n    return null\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s\n  }\n};\n\n/**\n * Get the preferred languages from an Accept-Language header.\n * @public\n */\n\nfunction preferredLanguages(accept, provided) {\n  // RFC 2616 sec 14.4: no header = *\n  var accepts = parseAcceptLanguage(accept === undefined ? '*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all languages\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullLanguage);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getLanguagePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted languages\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getLanguage(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full language string.\n * @private\n */\n\nfunction getFullLanguage(spec) {\n  return spec.full;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n","/**\n * negotiator\n * Copyright(c) 2012 Isaac Z. Schlueter\n * Copyright(c) 2014 Federico Romero\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = preferredMediaTypes;\nmodule.exports.preferredMediaTypes = preferredMediaTypes;\n\n/**\n * Module variables.\n * @private\n */\n\nvar simpleMediaTypeRegExp = /^\\s*([^\\s\\/;]+)\\/([^;\\s]+)\\s*(?:;(.*))?$/;\n\n/**\n * Parse the Accept header.\n * @private\n */\n\nfunction parseAccept(accept) {\n  var accepts = splitMediaTypes(accept);\n\n  for (var i = 0, j = 0; i < accepts.length; i++) {\n    var mediaType = parseMediaType(accepts[i].trim(), i);\n\n    if (mediaType) {\n      accepts[j++] = mediaType;\n    }\n  }\n\n  // trim accepts\n  accepts.length = j;\n\n  return accepts;\n}\n\n/**\n * Parse a media type from the Accept header.\n * @private\n */\n\nfunction parseMediaType(str, i) {\n  var match = simpleMediaTypeRegExp.exec(str);\n  if (!match) return null;\n\n  var params = Object.create(null);\n  var q = 1;\n  var subtype = match[2];\n  var type = match[1];\n\n  if (match[3]) {\n    var kvps = splitParameters(match[3]).map(splitKeyValuePair);\n\n    for (var j = 0; j < kvps.length; j++) {\n      var pair = kvps[j];\n      var key = pair[0].toLowerCase();\n      var val = pair[1];\n\n      // get the value, unwrapping quotes\n      var value = val && val[0] === '\"' && val[val.length - 1] === '\"'\n        ? val.substr(1, val.length - 2)\n        : val;\n\n      if (key === 'q') {\n        q = parseFloat(value);\n        break;\n      }\n\n      // store parameter\n      params[key] = value;\n    }\n  }\n\n  return {\n    type: type,\n    subtype: subtype,\n    params: params,\n    q: q,\n    i: i\n  };\n}\n\n/**\n * Get the priority of a media type.\n * @private\n */\n\nfunction getMediaTypePriority(type, accepted, index) {\n  var priority = {o: -1, q: 0, s: 0};\n\n  for (var i = 0; i < accepted.length; i++) {\n    var spec = specify(type, accepted[i], index);\n\n    if (spec && (priority.s - spec.s || priority.q - spec.q || priority.o - spec.o) < 0) {\n      priority = spec;\n    }\n  }\n\n  return priority;\n}\n\n/**\n * Get the specificity of the media type.\n * @private\n */\n\nfunction specify(type, spec, index) {\n  var p = parseMediaType(type);\n  var s = 0;\n\n  if (!p) {\n    return null;\n  }\n\n  if(spec.type.toLowerCase() == p.type.toLowerCase()) {\n    s |= 4\n  } else if(spec.type != '*') {\n    return null;\n  }\n\n  if(spec.subtype.toLowerCase() == p.subtype.toLowerCase()) {\n    s |= 2\n  } else if(spec.subtype != '*') {\n    return null;\n  }\n\n  var keys = Object.keys(spec.params);\n  if (keys.length > 0) {\n    if (keys.every(function (k) {\n      return spec.params[k] == '*' || (spec.params[k] || '').toLowerCase() == (p.params[k] || '').toLowerCase();\n    })) {\n      s |= 1\n    } else {\n      return null\n    }\n  }\n\n  return {\n    i: index,\n    o: spec.i,\n    q: spec.q,\n    s: s,\n  }\n}\n\n/**\n * Get the preferred media types from an Accept header.\n * @public\n */\n\nfunction preferredMediaTypes(accept, provided) {\n  // RFC 2616 sec 14.2: no header = */*\n  var accepts = parseAccept(accept === undefined ? '*/*' : accept || '');\n\n  if (!provided) {\n    // sorted list of all types\n    return accepts\n      .filter(isQuality)\n      .sort(compareSpecs)\n      .map(getFullType);\n  }\n\n  var priorities = provided.map(function getPriority(type, index) {\n    return getMediaTypePriority(type, accepts, index);\n  });\n\n  // sorted list of accepted types\n  return priorities.filter(isQuality).sort(compareSpecs).map(function getType(priority) {\n    return provided[priorities.indexOf(priority)];\n  });\n}\n\n/**\n * Compare two specs.\n * @private\n */\n\nfunction compareSpecs(a, b) {\n  return (b.q - a.q) || (b.s - a.s) || (a.o - b.o) || (a.i - b.i) || 0;\n}\n\n/**\n * Get full type string.\n * @private\n */\n\nfunction getFullType(spec) {\n  return spec.type + '/' + spec.subtype;\n}\n\n/**\n * Check if a spec has any quality.\n * @private\n */\n\nfunction isQuality(spec) {\n  return spec.q > 0;\n}\n\n/**\n * Count the number of quotes in a string.\n * @private\n */\n\nfunction quoteCount(string) {\n  var count = 0;\n  var index = 0;\n\n  while ((index = string.indexOf('\"', index)) !== -1) {\n    count++;\n    index++;\n  }\n\n  return count;\n}\n\n/**\n * Split a key value pair.\n * @private\n */\n\nfunction splitKeyValuePair(str) {\n  var index = str.indexOf('=');\n  var key;\n  var val;\n\n  if (index === -1) {\n    key = str;\n  } else {\n    key = str.substr(0, index);\n    val = str.substr(index + 1);\n  }\n\n  return [key, val];\n}\n\n/**\n * Split an Accept header into media types.\n * @private\n */\n\nfunction splitMediaTypes(accept) {\n  var accepts = accept.split(',');\n\n  for (var i = 1, j = 0; i < accepts.length; i++) {\n    if (quoteCount(accepts[j]) % 2 == 0) {\n      accepts[++j] = accepts[i];\n    } else {\n      accepts[j] += ',' + accepts[i];\n    }\n  }\n\n  // trim accepts\n  accepts.length = j + 1;\n\n  return accepts;\n}\n\n/**\n * Split a string of parameters.\n * @private\n */\n\nfunction splitParameters(str) {\n  var parameters = str.split(';');\n\n  for (var i = 1, j = 0; i < parameters.length; i++) {\n    if (quoteCount(parameters[j]) % 2 == 0) {\n      parameters[++j] = parameters[i];\n    } else {\n      parameters[j] += ';' + parameters[i];\n    }\n  }\n\n  // trim parameters\n  parameters.length = j + 1;\n\n  for (var i = 0; i < parameters.length; i++) {\n    parameters[i] = parameters[i].trim();\n  }\n\n  return parameters;\n}\n","/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar deprecate = require('depd')('express');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar http = require('http');\nvar isAbsolute = require('./utils').isAbsolute;\nvar onFinished = require('on-finished');\nvar path = require('path');\nvar statuses = require('statuses')\nvar merge = require('utils-merge');\nvar sign = require('cookie-signature').sign;\nvar normalizeType = require('./utils').normalizeType;\nvar normalizeTypes = require('./utils').normalizeTypes;\nvar setCharset = require('./utils').setCharset;\nvar cookie = require('cookie');\nvar send = require('send');\nvar extname = path.extname;\nvar mime = send.mime;\nvar resolve = path.resolve;\nvar vary = require('vary');\n\n/**\n * Response prototype.\n * @public\n */\n\nvar res = Object.create(http.ServerResponse.prototype)\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = res\n\n/**\n * Module variables.\n * @private\n */\n\nvar charsetRegExp = /;\\s*charset\\s*=/;\n\n/**\n * Set status `code`.\n *\n * @param {Number} code\n * @return {ServerResponse}\n * @public\n */\n\nres.status = function status(code) {\n  this.statusCode = code;\n  return this;\n};\n\n/**\n * Set Link header field with the given `links`.\n *\n * Examples:\n *\n *    res.links({\n *      next: 'http://api.example.com/users?page=2',\n *      last: 'http://api.example.com/users?page=5'\n *    });\n *\n * @param {Object} links\n * @return {ServerResponse}\n * @public\n */\n\nres.links = function(links){\n  var link = this.get('Link') || '';\n  if (link) link += ', ';\n  return this.set('Link', link + Object.keys(links).map(function(rel){\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\n  }).join(', '));\n};\n\n/**\n * Send a response.\n *\n * Examples:\n *\n *     res.send(Buffer.from('wahoo'));\n *     res.send({ some: 'json' });\n *     res.send('<p>some html</p>');\n *\n * @param {string|number|boolean|object|Buffer} body\n * @public\n */\n\nres.send = function send(body) {\n  var chunk = body;\n  var encoding;\n  var req = this.req;\n  var type;\n\n  // settings\n  var app = this.app;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.send(body, status) backwards compat\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\n      this.statusCode = arguments[0];\n      chunk = arguments[1];\n    }\n  }\n\n  // disambiguate res.send(status) and res.send(status, num)\n  if (typeof chunk === 'number' && arguments.length === 1) {\n    // res.send(status) will set status message as text string\n    if (!this.get('Content-Type')) {\n      this.type('txt');\n    }\n\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\n    this.statusCode = chunk;\n    chunk = statuses[chunk]\n  }\n\n  switch (typeof chunk) {\n    // string defaulting to html\n    case 'string':\n      if (!this.get('Content-Type')) {\n        this.type('html');\n      }\n      break;\n    case 'boolean':\n    case 'number':\n    case 'object':\n      if (chunk === null) {\n        chunk = '';\n      } else if (Buffer.isBuffer(chunk)) {\n        if (!this.get('Content-Type')) {\n          this.type('bin');\n        }\n      } else {\n        return this.json(chunk);\n      }\n      break;\n  }\n\n  // write strings in utf-8\n  if (typeof chunk === 'string') {\n    encoding = 'utf8';\n    type = this.get('Content-Type');\n\n    // reflect this in content-type\n    if (typeof type === 'string') {\n      this.set('Content-Type', setCharset(type, 'utf-8'));\n    }\n  }\n\n  // determine if ETag should be generated\n  var etagFn = app.get('etag fn')\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\n\n  // populate Content-Length\n  var len\n  if (chunk !== undefined) {\n    if (Buffer.isBuffer(chunk)) {\n      // get length of Buffer\n      len = chunk.length\n    } else if (!generateETag && chunk.length < 1000) {\n      // just calculate length when no ETag + small chunk\n      len = Buffer.byteLength(chunk, encoding)\n    } else {\n      // convert chunk to Buffer and calculate\n      chunk = Buffer.from(chunk, encoding)\n      encoding = undefined;\n      len = chunk.length\n    }\n\n    this.set('Content-Length', len);\n  }\n\n  // populate ETag\n  var etag;\n  if (generateETag && len !== undefined) {\n    if ((etag = etagFn(chunk, encoding))) {\n      this.set('ETag', etag);\n    }\n  }\n\n  // freshness\n  if (req.fresh) this.statusCode = 304;\n\n  // strip irrelevant headers\n  if (204 === this.statusCode || 304 === this.statusCode) {\n    this.removeHeader('Content-Type');\n    this.removeHeader('Content-Length');\n    this.removeHeader('Transfer-Encoding');\n    chunk = '';\n  }\n\n  if (req.method === 'HEAD') {\n    // skip body for HEAD\n    this.end();\n  } else {\n    // respond\n    this.end(chunk, encoding);\n  }\n\n  return this;\n};\n\n/**\n * Send JSON response.\n *\n * Examples:\n *\n *     res.json(null);\n *     res.json({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.json = function json(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('Content-Type', 'application/json');\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send JSON response with JSONP callback support.\n *\n * Examples:\n *\n *     res.jsonp(null);\n *     res.jsonp({ user: 'tj' });\n *\n * @param {string|number|boolean|object} obj\n * @public\n */\n\nres.jsonp = function jsonp(obj) {\n  var val = obj;\n\n  // allow status / body\n  if (arguments.length === 2) {\n    // res.json(body, status) backwards compat\n    if (typeof arguments[1] === 'number') {\n      deprecate('res.jsonp(obj, status): Use res.status(status).json(obj) instead');\n      this.statusCode = arguments[1];\n    } else {\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\n      this.statusCode = arguments[0];\n      val = arguments[1];\n    }\n  }\n\n  // settings\n  var app = this.app;\n  var escape = app.get('json escape')\n  var replacer = app.get('json replacer');\n  var spaces = app.get('json spaces');\n  var body = stringify(val, replacer, spaces, escape)\n  var callback = this.req.query[app.get('jsonp callback name')];\n\n  // content-type\n  if (!this.get('Content-Type')) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'application/json');\n  }\n\n  // fixup callback\n  if (Array.isArray(callback)) {\n    callback = callback[0];\n  }\n\n  // jsonp\n  if (typeof callback === 'string' && callback.length !== 0) {\n    this.set('X-Content-Type-Options', 'nosniff');\n    this.set('Content-Type', 'text/javascript');\n\n    // restrict callback charset\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\n\n    // replace chars not allowed in JavaScript that are in JSON\n    body = body\n      .replace(/\\u2028/g, '\\\\u2028')\n      .replace(/\\u2029/g, '\\\\u2029');\n\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\n    // the typeof check is just to reduce client error noise\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\n  }\n\n  return this.send(body);\n};\n\n/**\n * Send given HTTP status code.\n *\n * Sets the response status to `statusCode` and the body of the\n * response to the standard description from node's http.STATUS_CODES\n * or the statusCode number if no description.\n *\n * Examples:\n *\n *     res.sendStatus(200);\n *\n * @param {number} statusCode\n * @public\n */\n\nres.sendStatus = function sendStatus(statusCode) {\n  var body = statuses[statusCode] || String(statusCode)\n\n  this.statusCode = statusCode;\n  this.type('txt');\n\n  return this.send(body);\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendFile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendFile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendFile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendFile = function sendFile(path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  if (!path) {\n    throw new TypeError('path argument is required to res.sendFile');\n  }\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  if (!opts.root && !isAbsolute(path)) {\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\n  }\n\n  // create file stream\n  var pathname = encodeURI(path);\n  var file = send(req, pathname, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\n/**\n * Transfer the file at the given `path`.\n *\n * Automatically sets the _Content-Type_ response header field.\n * The callback `callback(err)` is invoked when the transfer is complete\n * or when an error occurs. Be sure to check `res.sentHeader`\n * if you wish to attempt responding, as the header and some data\n * may have already been transferred.\n *\n * Options:\n *\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\n *   - `root`     root directory for relative filenames\n *   - `headers`  object of headers to serve with file\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\n *\n * Other options are passed along to `send`.\n *\n * Examples:\n *\n *  The following example illustrates how `res.sendfile()` may\n *  be used as an alternative for the `static()` middleware for\n *  dynamic situations. The code backing `res.sendfile()` is actually\n *  the same code, so HTTP cache support etc is identical.\n *\n *     app.get('/user/:uid/photos/:file', function(req, res){\n *       var uid = req.params.uid\n *         , file = req.params.file;\n *\n *       req.user.mayViewFilesFrom(uid, function(yes){\n *         if (yes) {\n *           res.sendfile('/uploads/' + uid + '/' + file);\n *         } else {\n *           res.send(403, 'Sorry! you cant see that.');\n *         }\n *       });\n *     });\n *\n * @public\n */\n\nres.sendfile = function (path, options, callback) {\n  var done = callback;\n  var req = this.req;\n  var res = this;\n  var next = req.next;\n  var opts = options || {};\n\n  // support function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // create file stream\n  var file = send(req, path, opts);\n\n  // transfer\n  sendfile(res, file, opts, function (err) {\n    if (done) return done(err);\n    if (err && err.code === 'EISDIR') return next();\n\n    // next() all but write errors\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\n      next(err);\n    }\n  });\n};\n\nres.sendfile = deprecate.function(res.sendfile,\n  'res.sendfile: Use res.sendFile instead');\n\n/**\n * Transfer the file at the given `path` as an attachment.\n *\n * Optionally providing an alternate attachment `filename`,\n * and optional callback `callback(err)`. The callback is invoked\n * when the data transfer is complete, or when an error has\n * ocurred. Be sure to check `res.headersSent` if you plan to respond.\n *\n * Optionally providing an `options` object to use with `res.sendFile()`.\n * This function will set the `Content-Disposition` header, overriding\n * any `Content-Disposition` header passed as header options in order\n * to set the attachment and filename.\n *\n * This method uses `res.sendFile()`.\n *\n * @public\n */\n\nres.download = function download (path, filename, options, callback) {\n  var done = callback;\n  var name = filename;\n  var opts = options || null\n\n  // support function as second or third arg\n  if (typeof filename === 'function') {\n    done = filename;\n    name = null;\n    opts = null\n  } else if (typeof options === 'function') {\n    done = options\n    opts = null\n  }\n\n  // set Content-Disposition when file is sent\n  var headers = {\n    'Content-Disposition': contentDisposition(name || path)\n  };\n\n  // merge user-provided headers\n  if (opts && opts.headers) {\n    var keys = Object.keys(opts.headers)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      if (key.toLowerCase() !== 'content-disposition') {\n        headers[key] = opts.headers[key]\n      }\n    }\n  }\n\n  // merge user-provided options\n  opts = Object.create(opts)\n  opts.headers = headers\n\n  // Resolve the full path for sendFile\n  var fullPath = resolve(path);\n\n  // send file\n  return this.sendFile(fullPath, opts, done)\n};\n\n/**\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\n *\n * Examples:\n *\n *     res.type('.html');\n *     res.type('html');\n *     res.type('json');\n *     res.type('application/json');\n *     res.type('png');\n *\n * @param {String} type\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.contentType =\nres.type = function contentType(type) {\n  var ct = type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type;\n\n  return this.set('Content-Type', ct);\n};\n\n/**\n * Respond to the Acceptable formats using an `obj`\n * of mime-type callbacks.\n *\n * This method uses `req.accepted`, an array of\n * acceptable types ordered by their quality values.\n * When \"Accept\" is not present the _first_ callback\n * is invoked, otherwise the first match is used. When\n * no match is performed the server responds with\n * 406 \"Not Acceptable\".\n *\n * Content-Type is set for you, however if you choose\n * you may alter this within the callback using `res.type()`\n * or `res.set('Content-Type', ...)`.\n *\n *    res.format({\n *      'text/plain': function(){\n *        res.send('hey');\n *      },\n *\n *      'text/html': function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      'appliation/json': function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * In addition to canonicalized MIME types you may\n * also use extnames mapped to these types:\n *\n *    res.format({\n *      text: function(){\n *        res.send('hey');\n *      },\n *\n *      html: function(){\n *        res.send('<p>hey</p>');\n *      },\n *\n *      json: function(){\n *        res.send({ message: 'hey' });\n *      }\n *    });\n *\n * By default Express passes an `Error`\n * with a `.status` of 406 to `next(err)`\n * if a match is not made. If you provide\n * a `.default` callback it will be invoked\n * instead.\n *\n * @param {Object} obj\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.format = function(obj){\n  var req = this.req;\n  var next = req.next;\n\n  var fn = obj.default;\n  if (fn) delete obj.default;\n  var keys = Object.keys(obj);\n\n  var key = keys.length > 0\n    ? req.accepts(keys)\n    : false;\n\n  this.vary(\"Accept\");\n\n  if (key) {\n    this.set('Content-Type', normalizeType(key).value);\n    obj[key](req, this, next);\n  } else if (fn) {\n    fn();\n  } else {\n    var err = new Error('Not Acceptable');\n    err.status = err.statusCode = 406;\n    err.types = normalizeTypes(keys).map(function(o){ return o.value });\n    next(err);\n  }\n\n  return this;\n};\n\n/**\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\n *\n * @param {String} filename\n * @return {ServerResponse}\n * @public\n */\n\nres.attachment = function attachment(filename) {\n  if (filename) {\n    this.type(extname(filename));\n  }\n\n  this.set('Content-Disposition', contentDisposition(filename));\n\n  return this;\n};\n\n/**\n * Append additional header `field` with value `val`.\n *\n * Example:\n *\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\n *    res.append('Warning', '199 Miscellaneous warning');\n *\n * @param {String} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.append = function append(field, val) {\n  var prev = this.get(field);\n  var value = val;\n\n  if (prev) {\n    // concat the new and prev vals\n    value = Array.isArray(prev) ? prev.concat(val)\n      : Array.isArray(val) ? [prev].concat(val)\n      : [prev, val];\n  }\n\n  return this.set(field, value);\n};\n\n/**\n * Set header `field` to `val`, or pass\n * an object of header fields.\n *\n * Examples:\n *\n *    res.set('Foo', ['bar', 'baz']);\n *    res.set('Accept', 'application/json');\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\n *\n * Aliased as `res.header()`.\n *\n * @param {String|Object} field\n * @param {String|Array} val\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.set =\nres.header = function header(field, val) {\n  if (arguments.length === 2) {\n    var value = Array.isArray(val)\n      ? val.map(String)\n      : String(val);\n\n    // add charset to content-type\n    if (field.toLowerCase() === 'content-type') {\n      if (Array.isArray(value)) {\n        throw new TypeError('Content-Type cannot be set to an Array');\n      }\n      if (!charsetRegExp.test(value)) {\n        var charset = mime.charsets.lookup(value.split(';')[0]);\n        if (charset) value += '; charset=' + charset.toLowerCase();\n      }\n    }\n\n    this.setHeader(field, value);\n  } else {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n  }\n  return this;\n};\n\n/**\n * Get value for header `field`.\n *\n * @param {String} field\n * @return {String}\n * @public\n */\n\nres.get = function(field){\n  return this.getHeader(field);\n};\n\n/**\n * Clear cookie `name`.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.clearCookie = function clearCookie(name, options) {\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\n\n  return this.cookie(name, '', opts);\n};\n\n/**\n * Set cookie `name` to `value`, with the given `options`.\n *\n * Options:\n *\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\n *    - `signed`   sign the cookie\n *    - `path`     defaults to \"/\"\n *\n * Examples:\n *\n *    // \"Remember Me\" for 15 minutes\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\n *\n *    // save as above\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\n *\n * @param {String} name\n * @param {String|Object} value\n * @param {Object} [options]\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.cookie = function (name, value, options) {\n  var opts = merge({}, options);\n  var secret = this.req.secret;\n  var signed = opts.signed;\n\n  if (signed && !secret) {\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\n  }\n\n  var val = typeof value === 'object'\n    ? 'j:' + JSON.stringify(value)\n    : String(value);\n\n  if (signed) {\n    val = 's:' + sign(val, secret);\n  }\n\n  if ('maxAge' in opts) {\n    opts.expires = new Date(Date.now() + opts.maxAge);\n    opts.maxAge /= 1000;\n  }\n\n  if (opts.path == null) {\n    opts.path = '/';\n  }\n\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\n\n  return this;\n};\n\n/**\n * Set the location header to `url`.\n *\n * The given `url` can also be \"back\", which redirects\n * to the _Referrer_ or _Referer_ headers or \"/\".\n *\n * Examples:\n *\n *    res.location('/foo/bar').;\n *    res.location('http://example.com');\n *    res.location('../login');\n *\n * @param {String} url\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.location = function location(url) {\n  var loc = url;\n\n  // \"back\" is an alias for the referrer\n  if (url === 'back') {\n    loc = this.req.get('Referrer') || '/';\n  }\n\n  // set location\n  return this.set('Location', encodeUrl(loc));\n};\n\n/**\n * Redirect to the given `url` with optional response `status`\n * defaulting to 302.\n *\n * The resulting `url` is determined by `res.location()`, so\n * it will play nicely with mounted apps, relative paths,\n * `\"back\"` etc.\n *\n * Examples:\n *\n *    res.redirect('/foo/bar');\n *    res.redirect('http://example.com');\n *    res.redirect(301, 'http://example.com');\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\n *\n * @public\n */\n\nres.redirect = function redirect(url) {\n  var address = url;\n  var body;\n  var status = 302;\n\n  // allow status / url\n  if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number') {\n      status = arguments[0];\n      address = arguments[1];\n    } else {\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\n      status = arguments[1];\n    }\n  }\n\n  // Set location header\n  address = this.location(address).get('Location');\n\n  // Support text/{plain,html} by default\n  this.format({\n    text: function(){\n      body = statuses[status] + '. Redirecting to ' + address\n    },\n\n    html: function(){\n      var u = escapeHtml(address);\n      body = '<p>' + statuses[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\n    },\n\n    default: function(){\n      body = '';\n    }\n  });\n\n  // Respond\n  this.statusCode = status;\n  this.set('Content-Length', Buffer.byteLength(body));\n\n  if (this.req.method === 'HEAD') {\n    this.end();\n  } else {\n    this.end(body);\n  }\n};\n\n/**\n * Add `field` to Vary. If already present in the Vary set, then\n * this call is simply ignored.\n *\n * @param {Array|String} field\n * @return {ServerResponse} for chaining\n * @public\n */\n\nres.vary = function(field){\n  // checks for back-compat\n  if (!field || (Array.isArray(field) && !field.length)) {\n    deprecate('res.vary(): Provide a field name');\n    return this;\n  }\n\n  vary(this, field);\n\n  return this;\n};\n\n/**\n * Render `view` with the given `options` and optional callback `fn`.\n * When a callback function is given a response will _not_ be made\n * automatically, otherwise a response of _200_ and _text/html_ is given.\n *\n * Options:\n *\n *  - `cache`     boolean hinting to the engine it should cache\n *  - `filename`  filename of the view being rendered\n *\n * @public\n */\n\nres.render = function render(view, options, callback) {\n  var app = this.req.app;\n  var done = callback;\n  var opts = options || {};\n  var req = this.req;\n  var self = this;\n\n  // support callback function as second arg\n  if (typeof options === 'function') {\n    done = options;\n    opts = {};\n  }\n\n  // merge res.locals\n  opts._locals = self.locals;\n\n  // default callback to respond\n  done = done || function (err, str) {\n    if (err) return req.next(err);\n    self.send(str);\n  };\n\n  // render\n  app.render(view, opts, done);\n};\n\n// pipe the send file stream\nfunction sendfile(res, file, options, callback) {\n  var done = false;\n  var streaming;\n\n  // request aborted\n  function onaborted() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('Request aborted');\n    err.code = 'ECONNABORTED';\n    callback(err);\n  }\n\n  // directory\n  function ondirectory() {\n    if (done) return;\n    done = true;\n\n    var err = new Error('EISDIR, read');\n    err.code = 'EISDIR';\n    callback(err);\n  }\n\n  // errors\n  function onerror(err) {\n    if (done) return;\n    done = true;\n    callback(err);\n  }\n\n  // ended\n  function onend() {\n    if (done) return;\n    done = true;\n    callback();\n  }\n\n  // file\n  function onfile() {\n    streaming = false;\n  }\n\n  // finished\n  function onfinish(err) {\n    if (err && err.code === 'ECONNRESET') return onaborted();\n    if (err) return onerror(err);\n    if (done) return;\n\n    setImmediate(function () {\n      if (streaming !== false && !done) {\n        onaborted();\n        return;\n      }\n\n      if (done) return;\n      done = true;\n      callback();\n    });\n  }\n\n  // streaming\n  function onstream() {\n    streaming = true;\n  }\n\n  file.on('directory', ondirectory);\n  file.on('end', onend);\n  file.on('error', onerror);\n  file.on('file', onfile);\n  file.on('stream', onstream);\n  onFinished(res, onfinish);\n\n  if (options.headers) {\n    // set headers on successful transfer\n    file.on('headers', function headers(res) {\n      var obj = options.headers;\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var k = keys[i];\n        res.setHeader(k, obj[k]);\n      }\n    });\n  }\n\n  // pipe\n  file.pipe(res);\n}\n\n/**\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\n * ability to escape characters that can trigger HTML sniffing.\n *\n * @param {*} value\n * @param {function} replaces\n * @param {number} spaces\n * @param {boolean} escape\n * @returns {string}\n * @private\n */\n\nfunction stringify (value, replacer, spaces, escape) {\n  // v8 checks arguments.length for optimizing simple call\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\n  var json = replacer || spaces\n    ? JSON.stringify(value, replacer, spaces)\n    : JSON.stringify(value);\n\n  if (escape) {\n    json = json.replace(/[<>&]/g, function (c) {\n      switch (c.charCodeAt(0)) {\n        case 0x3c:\n          return '\\\\u003c'\n        case 0x3e:\n          return '\\\\u003e'\n        case 0x26:\n          return '\\\\u0026'\n        default:\n          return c\n      }\n    })\n  }\n\n  return json\n}\n","/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n","/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar decode = decodeURIComponent;\nvar encode = encodeURIComponent;\nvar pairSplitRegExp = /; */;\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var pairs = str.split(pairSplitRegExp);\n  var dec = opt.decode || decode;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var eq_idx = pair.indexOf('=');\n\n    // skip things that don't look like key=value\n    if (eq_idx < 0) {\n      continue;\n    }\n\n    var key = pair.substr(0, eq_idx).trim()\n    var val = pair.substr(++eq_idx, pair.length).trim();\n\n    // quoted values\n    if ('\"' == val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    // only assign once\n    if (undefined == obj[key]) {\n      obj[key] = tryDecode(val, dec);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n","/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary\nmodule.exports.append = append\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse(String(field))\n    : field\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header\n  var vals = parse(header.toLowerCase())\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase()\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld)\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i]\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse (header) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end))\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || ''\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val)\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val)\n  }\n}\n","/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar encodeUrl = require('encodeurl')\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic (root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic (req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile () {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error (err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes (str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n /**\n * Create a minimal HTML document.\n *\n * @param {string} title\n * @param {string} body\n * @private\n */\n\nfunction createHtmlDocument (title, body) {\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>' + title + '</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener () {\n  return function notFound () {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener () {\n  return function redirect (res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = encodeUrl(url.format(originalUrl))\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\n      escapeHtml(loc) + '</a>')\n\n    // send redirect response\n    res.statusCode = 301\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\n    res.setHeader('Content-Security-Policy', \"default-src 'self'\")\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(doc)\n  }\n}\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet asyncawait = true;\ntry {\n  new Function('async function test(){await 1}');\n} catch (error) {\n  asyncawait = false;\n}\n\n// If node does not support async await, use the compiled version.\nconst Puppeteer = asyncawait ? require('./lib/Puppeteer') : require('./node6/lib/Puppeteer');\nconst packageJson = require('./package.json');\nconst preferredRevision = packageJson.puppeteer.chromium_revision;\nconst isPuppeteerCore = packageJson.name === 'puppeteer-core';\n\nmodule.exports = new Puppeteer(__dirname, preferredRevision, isPuppeteerCore);\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper} = require('./helper');\nconst Launcher = require('./Launcher');\nconst BrowserFetcher = require('./BrowserFetcher');\n\nmodule.exports = class {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._launcher = new Launcher(projectRoot, preferredRevision, isPuppeteerCore);\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Puppeteer.Browser>}\n   */\n  launch(options) {\n    return this._launcher.launch(options);\n  }\n\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Puppeteer.Browser>}\n   */\n  connect(options) {\n    return this._launcher.connect(options);\n  }\n\n  /**\n   * @return {string}\n   */\n  executablePath() {\n    return this._launcher.executablePath();\n  }\n\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n  defaultArgs(options) {\n    return this._launcher.defaultArgs(options);\n  }\n\n  /**\n   * @param {!BrowserFetcher.Options=} options\n   * @return {!BrowserFetcher}\n   */\n  createBrowserFetcher(options) {\n    return new BrowserFetcher(this._projectRoot, options);\n  }\n};\n\nhelper.tracePublicAPI(module.exports, 'Puppeteer');\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst os = require('os');\nconst path = require('path');\nconst removeFolder = require('rimraf');\nconst childProcess = require('child_process');\nconst BrowserFetcher = require('./BrowserFetcher');\nconst {Connection} = require('./Connection');\nconst {Browser} = require('./Browser');\nconst readline = require('readline');\nconst fs = require('fs');\nconst {helper, debugError} = require('./helper');\nconst {TimeoutError} = require('./Errors');\nconst WebSocketTransport = require('./WebSocketTransport');\nconst PipeTransport = require('./PipeTransport');\n\nconst mkdtempAsync = helper.promisify(fs.mkdtemp);\nconst removeFolderAsync = helper.promisify(removeFolder);\n\nconst CHROME_PROFILE_PATH = path.join(os.tmpdir(), 'puppeteer_dev_profile-');\n\nconst DEFAULT_ARGS = [\n  '--disable-background-networking',\n  '--disable-background-timer-throttling',\n  '--disable-backgrounding-occluded-windows',\n  '--disable-breakpad',\n  '--disable-client-side-phishing-detection',\n  '--disable-default-apps',\n  '--disable-dev-shm-usage',\n  '--disable-extensions',\n  // TODO: Support OOOPIF. @see https://github.com/GoogleChrome/puppeteer/issues/2548\n  '--disable-features=site-per-process',\n  '--disable-hang-monitor',\n  '--disable-ipc-flooding-protection',\n  '--disable-popup-blocking',\n  '--disable-prompt-on-repost',\n  '--disable-renderer-backgrounding',\n  '--disable-sync',\n  '--disable-translate',\n  '--metrics-recording-only',\n  '--no-first-run',\n  '--safebrowsing-disable-auto-update',\n  '--enable-automation',\n  '--password-store=basic',\n  '--use-mock-keychain',\n];\n\nclass Launcher {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Browser>}\n   */\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      slowMo = 0,\n      timeout = 30000\n    } = options;\n\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs)\n      chromeArguments.push(...this.defaultArgs(options));\n    else if (Array.isArray(ignoreDefaultArgs))\n      chromeArguments.push(...this.defaultArgs(options).filter(arg => ignoreDefaultArgs.indexOf(arg) === -1));\n    else\n      chromeArguments.push(...args);\n\n    let temporaryUserDataDir = null;\n\n    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-')))\n      chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n    if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {\n      temporaryUserDataDir = await mkdtempAsync(CHROME_PROFILE_PATH);\n      chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n    }\n\n    let chromeExecutable = executablePath;\n    if (!executablePath) {\n      const {missingText, executablePath} = this._resolveExecutablePath();\n      if (missingText)\n        throw new Error(missingText);\n      chromeExecutable = executablePath;\n    }\n\n    const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n    /** @type {!Array<\"ignore\"|\"pipe\">} */\n    const stdio = usePipe ? ['ignore', 'ignore', 'ignore', 'pipe', 'pipe'] : ['pipe', 'pipe', 'pipe'];\n    const chromeProcess = childProcess.spawn(\n        chromeExecutable,\n        chromeArguments,\n        {\n          // On non-windows platforms, `detached: false` makes child process a leader of a new\n          // process group, making it possible to kill child process tree with `.kill(-pid)` command.\n          // @see https://nodejs.org/api/child_process.html#child_process_options_detached\n          detached: process.platform !== 'win32',\n          env,\n          stdio\n        }\n    );\n\n    if (dumpio) {\n      chromeProcess.stderr.pipe(process.stderr);\n      chromeProcess.stdout.pipe(process.stdout);\n    }\n\n    let chromeClosed = false;\n    const waitForChromeToClose = new Promise((fulfill, reject) => {\n      chromeProcess.once('exit', () => {\n        chromeClosed = true;\n        // Cleanup as processes exit.\n        if (temporaryUserDataDir) {\n          removeFolderAsync(temporaryUserDataDir)\n              .then(() => fulfill())\n              .catch(err => console.error(err));\n        } else {\n          fulfill();\n        }\n      });\n    });\n\n    const listeners = [ helper.addEventListener(process, 'exit', killChrome) ];\n    if (handleSIGINT)\n      listeners.push(helper.addEventListener(process, 'SIGINT', () => { killChrome(); process.exit(130); }));\n    if (handleSIGTERM)\n      listeners.push(helper.addEventListener(process, 'SIGTERM', gracefullyCloseChrome));\n    if (handleSIGHUP)\n      listeners.push(helper.addEventListener(process, 'SIGHUP', gracefullyCloseChrome));\n    /** @type {?Connection} */\n    let connection = null;\n    try {\n      if (!usePipe) {\n        const browserWSEndpoint = await waitForWSEndpoint(chromeProcess, timeout, this._preferredRevision);\n        const transport = await WebSocketTransport.create(browserWSEndpoint);\n        connection = new Connection(browserWSEndpoint, transport, slowMo);\n      } else {\n        const transport = new PipeTransport(/** @type {!NodeJS.WritableStream} */(chromeProcess.stdio[3]), /** @type {!NodeJS.ReadableStream} */ (chromeProcess.stdio[4]));\n        connection = new Connection('', transport, slowMo);\n      }\n      const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, chromeProcess, gracefullyCloseChrome);\n      await ensureInitialPage(browser);\n      return browser;\n    } catch (e) {\n      killChrome();\n      throw e;\n    }\n\n    /**\n     * @param {!Browser} browser\n     */\n    async function ensureInitialPage(browser) {\n      // Wait for initial page target to be created.\n      if (browser.targets().find(target => target.type() === 'page'))\n        return;\n\n      let initialPageCallback;\n      const initialPagePromise = new Promise(resolve => initialPageCallback = resolve);\n      const listeners = [helper.addEventListener(browser, 'targetcreated', target => {\n        if (target.type() === 'page')\n          initialPageCallback();\n      })];\n\n      await initialPagePromise;\n      helper.removeEventListeners(listeners);\n    }\n\n    /**\n     * @return {Promise}\n     */\n    function gracefullyCloseChrome() {\n      helper.removeEventListeners(listeners);\n      if (temporaryUserDataDir) {\n        killChrome();\n      } else if (connection) {\n        // Attempt to close chrome gracefully\n        connection.send('Browser.close').catch(error => {\n          debugError(error);\n          killChrome();\n        });\n      }\n      return waitForChromeToClose;\n    }\n\n    // This method has to be sync to be used as 'exit' event handler.\n    function killChrome() {\n      helper.removeEventListeners(listeners);\n      if (chromeProcess.pid && !chromeProcess.killed && !chromeClosed) {\n        // Force kill chrome.\n        try {\n          if (process.platform === 'win32')\n            childProcess.execSync(`taskkill /pid ${chromeProcess.pid} /T /F`);\n          else\n            process.kill(-chromeProcess.pid, 'SIGKILL');\n        } catch (e) {\n          // the process might have already stopped\n        }\n      }\n      // Attempt to remove temporary profile directory to avoid littering.\n      try {\n        removeFolder.sync(temporaryUserDataDir);\n      } catch (e) { }\n    }\n  }\n\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n  defaultArgs(options = {}) {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    const chromeArguments = [...DEFAULT_ARGS];\n    if (userDataDir)\n      chromeArguments.push(`--user-data-dir=${userDataDir}`);\n    if (devtools)\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    if (headless) {\n      chromeArguments.push(\n          '--headless',\n          '--hide-scrollbars',\n          '--mute-audio'\n      );\n      if (os.platform() === 'win32')\n        chromeArguments.push('--disable-gpu');\n    }\n    if (args.every(arg => arg.startsWith('-')))\n      chromeArguments.push('about:blank');\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n\n  /**\n   * @return {string}\n   */\n  executablePath() {\n    return this._resolveExecutablePath().executablePath;\n  }\n\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Browser>}\n   */\n  async connect(options) {\n    const {\n      browserWSEndpoint,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      transport = await WebSocketTransport.create(browserWSEndpoint),\n      slowMo = 0,\n    } = options;\n    const connection = new Connection(browserWSEndpoint, transport, slowMo);\n    const {browserContextIds} = await connection.send('Target.getBrowserContexts');\n    return Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(debugError));\n  }\n\n  /**\n   * @return {{executablePath: string, missingText: ?string}}\n   */\n  _resolveExecutablePath() {\n    const browserFetcher = new BrowserFetcher(this._projectRoot);\n    // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n    if (!this._isPuppeteerCore) {\n      const executablePath = process.env['PUPPETEER_EXECUTABLE_PATH'];\n      if (executablePath) {\n        const missingText = !fs.existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : null;\n        return { executablePath, missingText };\n      }\n      const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n      if (revision) {\n        const revisionInfo = browserFetcher.revisionInfo(revision);\n        const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : null;\n        return {executablePath: revisionInfo.executablePath, missingText};\n      }\n    }\n    const revisionInfo = browserFetcher.revisionInfo(this._preferredRevision);\n    const missingText = !revisionInfo.local ? `Chromium revision is not downloaded. Run \"npm install\" or \"yarn install\"` : null;\n    return {executablePath: revisionInfo.executablePath, missingText};\n  }\n\n}\n\n/**\n * @param {!Puppeteer.ChildProcess} chromeProcess\n * @param {number} timeout\n * @param {string} preferredRevision\n * @return {!Promise<string>}\n */\nfunction waitForWSEndpoint(chromeProcess, timeout, preferredRevision) {\n  return new Promise((resolve, reject) => {\n    const rl = readline.createInterface({ input: chromeProcess.stderr });\n    let stderr = '';\n    const listeners = [\n      helper.addEventListener(rl, 'line', onLine),\n      helper.addEventListener(rl, 'close', () => onClose()),\n      helper.addEventListener(chromeProcess, 'exit', () => onClose()),\n      helper.addEventListener(chromeProcess, 'error', error => onClose(error))\n    ];\n    const timeoutId = timeout ? setTimeout(onTimeout, timeout) : 0;\n\n    /**\n     * @param {!Error=} error\n     */\n    function onClose(error) {\n      cleanup();\n      reject(new Error([\n        'Failed to launch chrome!' + (error ? ' ' + error.message : ''),\n        stderr,\n        '',\n        'TROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md',\n        '',\n      ].join('\\n')));\n    }\n\n    function onTimeout() {\n      cleanup();\n      reject(new TimeoutError(`Timed out after ${timeout} ms while trying to connect to Chrome! The only Chrome revision guaranteed to work is r${preferredRevision}`));\n    }\n\n    /**\n     * @param {string} line\n     */\n    function onLine(line) {\n      stderr += line + '\\n';\n      const match = line.match(/^DevTools listening on (ws:\\/\\/.*)$/);\n      if (!match)\n        return;\n      cleanup();\n      resolve(match[1]);\n    }\n\n    function cleanup() {\n      if (timeoutId)\n        clearTimeout(timeoutId);\n      helper.removeEventListeners(listeners);\n    }\n  });\n}\n\n/**\n * @typedef {Object} Launcher.ChromeArgOptions\n * @property {boolean=} headless\n * @property {Array<string>=} args\n * @property {string=} userDataDir\n * @property {boolean=} devtools\n */\n\n/**\n * @typedef {Object} Launcher.LaunchOptions\n * @property {string=} executablePath\n * @property {boolean|Array<string>=} ignoreDefaultArgs\n * @property {boolean=} handleSIGINT\n * @property {boolean=} handleSIGTERM\n * @property {boolean=} handleSIGHUP\n * @property {number=} timeout\n * @property {boolean=} dumpio\n * @property {!Object<string, string | undefined>=} env\n * @property {boolean=} pipe\n */\n\n/**\n * @typedef {Object} Launcher.BrowserOptions\n * @property {boolean=} ignoreHTTPSErrors\n * @property {(?Puppeteer.Viewport)=} defaultViewport\n * @property {number=} slowMo\n */\n\n\nmodule.exports = Launcher;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar fs = require('fs')\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path-is-absolute')\nvar common = require('./common.js')\nvar alphasort = common.alphasort\nvar alphasorti = common.alphasorti\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","var fs = require(\"fs\");\nvar zlib = require(\"zlib\");\nvar fd_slicer = require(\"fd-slicer\");\nvar util = require(\"util\");\nvar EventEmitter = require(\"events\").EventEmitter;\nvar Transform = require(\"stream\").Transform;\nvar PassThrough = require(\"stream\").PassThrough;\nvar Writable = require(\"stream\").Writable;\n\nexports.open = open;\nexports.fromFd = fromFd;\nexports.fromBuffer = fromBuffer;\nexports.fromRandomAccessReader = fromRandomAccessReader;\nexports.dosDateTimeToDate = dosDateTimeToDate;\nexports.ZipFile = ZipFile;\nexports.Entry = Entry;\nexports.RandomAccessReader = RandomAccessReader;\n\nfunction open(path, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = true;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  fs.open(path, \"r\", function(err, fd) {\n    if (err) return callback(err);\n    fromFd(fd, options, function(err, zipfile) {\n      if (err) fs.close(fd, defaultCallback);\n      callback(err, zipfile);\n    });\n  });\n}\n\nfunction fromFd(fd, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = false;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  fs.fstat(fd, function(err, stats) {\n    if (err) return callback(err);\n    var reader = fd_slicer.createFromFd(fd, {autoClose: true});\n    fromRandomAccessReader(reader, stats.size, options, callback);\n  });\n}\n\nfunction fromBuffer(buffer, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  options.autoClose = false;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  // i got your open file right here.\n  var reader = fd_slicer.createFromBuffer(buffer);\n  fromRandomAccessReader(reader, buffer.length, options, callback);\n}\n\nfunction fromRandomAccessReader(reader, totalSize, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  if (options == null) options = {};\n  if (options.autoClose == null) options.autoClose = true;\n  if (options.lazyEntries == null) options.lazyEntries = false;\n  if (callback == null) callback = defaultCallback;\n  if (typeof totalSize !== \"number\") throw new Error(\"expected totalSize parameter to be a number\");\n  if (totalSize > Number.MAX_SAFE_INTEGER) {\n    throw new Error(\"zip file too large. only file sizes up to 2^52 are supported due to JavaScript's Number type being an IEEE 754 double.\");\n  }\n\n  // the matching unref() call is in zipfile.close()\n  reader.ref();\n\n  // eocdr means End of Central Directory Record.\n  // search backwards for the eocdr signature.\n  // the last field of the eocdr is a variable-length comment.\n  // the comment size is encoded in a 2-byte field in the eocdr, which we can't find without trudging backwards through the comment to find it.\n  // as a consequence of this design decision, it's possible to have ambiguous zip file metadata if a coherent eocdr was in the comment.\n  // we search backwards for a eocdr signature, and hope that whoever made the zip file was smart enough to forbid the eocdr signature in the comment.\n  var eocdrWithoutCommentSize = 22;\n  var maxCommentSize = 0x10000; // 2-byte size\n  var bufferSize = Math.min(eocdrWithoutCommentSize + maxCommentSize, totalSize);\n  var buffer = new Buffer(bufferSize);\n  var bufferReadStart = totalSize - buffer.length;\n  readAndAssertNoEof(reader, buffer, 0, bufferSize, bufferReadStart, function(err) {\n    if (err) return callback(err);\n    for (var i = bufferSize - eocdrWithoutCommentSize; i >= 0; i -= 1) {\n      if (buffer.readUInt32LE(i) !== 0x06054b50) continue;\n      // found eocdr\n      var eocdrBuffer = buffer.slice(i);\n\n      // 0 - End of central directory signature = 0x06054b50\n      // 4 - Number of this disk\n      var diskNumber = eocdrBuffer.readUInt16LE(4);\n      if (diskNumber !== 0) return callback(new Error(\"multi-disk zip files are not supported: found disk number: \" + diskNumber));\n      // 6 - Disk where central directory starts\n      // 8 - Number of central directory records on this disk\n      // 10 - Total number of central directory records\n      var entryCount = eocdrBuffer.readUInt16LE(10);\n      // 12 - Size of central directory (bytes)\n      // 16 - Offset of start of central directory, relative to start of archive\n      var centralDirectoryOffset = eocdrBuffer.readUInt32LE(16);\n      // 20 - Comment length\n      var commentLength = eocdrBuffer.readUInt16LE(20);\n      var expectedCommentLength = eocdrBuffer.length - eocdrWithoutCommentSize;\n      if (commentLength !== expectedCommentLength) {\n        return callback(new Error(\"invalid comment length. expected: \" + expectedCommentLength + \". found: \" + commentLength));\n      }\n      // 22 - Comment\n      // the encoding is always cp437.\n      var comment = bufferToString(eocdrBuffer, 22, eocdrBuffer.length, false);\n\n      if (!(entryCount === 0xffff || centralDirectoryOffset === 0xffffffff)) {\n        return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries));\n      }\n\n      // ZIP64 format\n\n      // ZIP64 Zip64 end of central directory locator\n      var zip64EocdlBuffer = new Buffer(20);\n      var zip64EocdlOffset = bufferReadStart + i - zip64EocdlBuffer.length;\n      readAndAssertNoEof(reader, zip64EocdlBuffer, 0, zip64EocdlBuffer.length, zip64EocdlOffset, function(err) {\n        if (err) return callback(err);\n\n        // 0 - zip64 end of central dir locator signature = 0x07064b50\n        if (zip64EocdlBuffer.readUInt32LE(0) !== 0x07064b50) {\n          return callback(new Error(\"invalid ZIP64 End of Central Directory Locator signature\"));\n        }\n        // 4 - number of the disk with the start of the zip64 end of central directory\n        // 8 - relative offset of the zip64 end of central directory record\n        var zip64EocdrOffset = readUInt64LE(zip64EocdlBuffer, 8);\n        // 16 - total number of disks\n\n        // ZIP64 end of central directory record\n        var zip64EocdrBuffer = new Buffer(56);\n        readAndAssertNoEof(reader, zip64EocdrBuffer, 0, zip64EocdrBuffer.length, zip64EocdrOffset, function(err) {\n          if (err) return callback(err);\n\n          // 0 - zip64 end of central dir signature                           4 bytes  (0x06064b50)\n          if (zip64EocdrBuffer.readUInt32LE(0) !== 0x06064b50) return callback(new Error(\"invalid ZIP64 end of central directory record signature\"));\n          // 4 - size of zip64 end of central directory record                8 bytes\n          // 12 - version made by                                             2 bytes\n          // 14 - version needed to extract                                   2 bytes\n          // 16 - number of this disk                                         4 bytes\n          // 20 - number of the disk with the start of the central directory  4 bytes\n          // 24 - total number of entries in the central directory on this disk         8 bytes\n          // 32 - total number of entries in the central directory            8 bytes\n          entryCount = readUInt64LE(zip64EocdrBuffer, 32);\n          // 40 - size of the central directory                               8 bytes\n          // 48 - offset of start of central directory with respect to the starting disk number     8 bytes\n          centralDirectoryOffset = readUInt64LE(zip64EocdrBuffer, 48);\n          // 56 - zip64 extensible data sector                                (variable size)\n          return callback(null, new ZipFile(reader, centralDirectoryOffset, totalSize, entryCount, comment, options.autoClose, options.lazyEntries));\n        });\n      });\n      return;\n    }\n    callback(new Error(\"end of central directory record signature not found\"));\n  });\n}\n\nutil.inherits(ZipFile, EventEmitter);\nfunction ZipFile(reader, centralDirectoryOffset, fileSize, entryCount, comment, autoClose, lazyEntries) {\n  var self = this;\n  EventEmitter.call(self);\n  self.reader = reader;\n  // forward close events\n  self.reader.on(\"error\", function(err) {\n    // error closing the fd\n    emitError(self, err);\n  });\n  self.reader.once(\"close\", function() {\n    self.emit(\"close\");\n  });\n  self.readEntryCursor = centralDirectoryOffset;\n  self.fileSize = fileSize;\n  self.entryCount = entryCount;\n  self.comment = comment;\n  self.entriesRead = 0;\n  self.autoClose = !!autoClose;\n  self.lazyEntries = !!lazyEntries;\n  self.isOpen = true;\n  self.emittedError = false;\n\n  if (!self.lazyEntries) self.readEntry();\n}\nZipFile.prototype.close = function() {\n  if (!this.isOpen) return;\n  this.isOpen = false;\n  this.reader.unref();\n};\n\nfunction emitErrorAndAutoClose(self, err) {\n  if (self.autoClose) self.close();\n  emitError(self, err);\n}\nfunction emitError(self, err) {\n  if (self.emittedError) return;\n  self.emittedError = true;\n  self.emit(\"error\", err);\n}\n\nZipFile.prototype.readEntry = function() {\n  var self = this;\n  if (self.entryCount === self.entriesRead) {\n    // done with metadata\n    setImmediate(function() {\n      if (self.autoClose) self.close();\n      if (self.emittedError) return;\n      self.emit(\"end\");\n    });\n    return;\n  }\n  if (self.emittedError) return;\n  var buffer = new Buffer(46);\n  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {\n    if (err) return emitErrorAndAutoClose(self, err);\n    if (self.emittedError) return;\n    var entry = new Entry();\n    // 0 - Central directory file header signature\n    var signature = buffer.readUInt32LE(0);\n    if (signature !== 0x02014b50) return emitErrorAndAutoClose(self, new Error(\"invalid central directory file header signature: 0x\" + signature.toString(16)));\n    // 4 - Version made by\n    entry.versionMadeBy = buffer.readUInt16LE(4);\n    // 6 - Version needed to extract (minimum)\n    entry.versionNeededToExtract = buffer.readUInt16LE(6);\n    // 8 - General purpose bit flag\n    entry.generalPurposeBitFlag = buffer.readUInt16LE(8);\n    // 10 - Compression method\n    entry.compressionMethod = buffer.readUInt16LE(10);\n    // 12 - File last modification time\n    entry.lastModFileTime = buffer.readUInt16LE(12);\n    // 14 - File last modification date\n    entry.lastModFileDate = buffer.readUInt16LE(14);\n    // 16 - CRC-32\n    entry.crc32 = buffer.readUInt32LE(16);\n    // 20 - Compressed size\n    entry.compressedSize = buffer.readUInt32LE(20);\n    // 24 - Uncompressed size\n    entry.uncompressedSize = buffer.readUInt32LE(24);\n    // 28 - File name length (n)\n    entry.fileNameLength = buffer.readUInt16LE(28);\n    // 30 - Extra field length (m)\n    entry.extraFieldLength = buffer.readUInt16LE(30);\n    // 32 - File comment length (k)\n    entry.fileCommentLength = buffer.readUInt16LE(32);\n    // 34 - Disk number where file starts\n    // 36 - Internal file attributes\n    entry.internalFileAttributes = buffer.readUInt16LE(36);\n    // 38 - External file attributes\n    entry.externalFileAttributes = buffer.readUInt32LE(38);\n    // 42 - Relative offset of local file header\n    entry.relativeOffsetOfLocalHeader = buffer.readUInt32LE(42);\n\n    self.readEntryCursor += 46;\n\n    buffer = new Buffer(entry.fileNameLength + entry.extraFieldLength + entry.fileCommentLength);\n    readAndAssertNoEof(self.reader, buffer, 0, buffer.length, self.readEntryCursor, function(err) {\n      if (err) return emitErrorAndAutoClose(self, err);\n      if (self.emittedError) return;\n      // 46 - File name\n      var isUtf8 = entry.generalPurposeBitFlag & 0x800\n      try {\n        entry.fileName = bufferToString(buffer, 0, entry.fileNameLength, isUtf8);\n      } catch (e) {\n        return emitErrorAndAutoClose(self, e);\n      }\n\n      // 46+n - Extra field\n      var fileCommentStart = entry.fileNameLength + entry.extraFieldLength;\n      var extraFieldBuffer = buffer.slice(entry.fileNameLength, fileCommentStart);\n      entry.extraFields = [];\n      var i = 0;\n      while (i < extraFieldBuffer.length) {\n        var headerId = extraFieldBuffer.readUInt16LE(i + 0);\n        var dataSize = extraFieldBuffer.readUInt16LE(i + 2);\n        var dataStart = i + 4;\n        var dataEnd = dataStart + dataSize;\n        var dataBuffer = new Buffer(dataSize);\n        extraFieldBuffer.copy(dataBuffer, 0, dataStart, dataEnd);\n        entry.extraFields.push({\n          id: headerId,\n          data: dataBuffer,\n        });\n        i = dataEnd;\n      }\n\n      // 46+n+m - File comment\n      try {\n        entry.fileComment = bufferToString(buffer, fileCommentStart, fileCommentStart + entry.fileCommentLength, isUtf8);\n      } catch (e) {\n        return emitErrorAndAutoClose(self, e);\n      }\n\n      self.readEntryCursor += buffer.length;\n      self.entriesRead += 1;\n\n      if (entry.uncompressedSize            === 0xffffffff ||\n          entry.compressedSize              === 0xffffffff ||\n          entry.relativeOffsetOfLocalHeader === 0xffffffff) {\n        // ZIP64 format\n        // find the Zip64 Extended Information Extra Field\n        var zip64EiefBuffer = null;\n        for (var i = 0; i < entry.extraFields.length; i++) {\n          var extraField = entry.extraFields[i];\n          if (extraField.id === 0x0001) {\n            zip64EiefBuffer = extraField.data;\n            break;\n          }\n        }\n        if (zip64EiefBuffer == null) return emitErrorAndAutoClose(self, new Error(\"expected Zip64 Extended Information Extra Field\"));\n        var index = 0;\n        // 0 - Original Size          8 bytes\n        if (entry.uncompressedSize === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Original Size\"));\n          entry.uncompressedSize = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 8 - Compressed Size        8 bytes\n        if (entry.compressedSize === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Compressed Size\"));\n          entry.compressedSize = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 16 - Relative Header Offset 8 bytes\n        if (entry.relativeOffsetOfLocalHeader === 0xffffffff) {\n          if (index + 8 > zip64EiefBuffer.length) return emitErrorAndAutoClose(self, new Error(\"Zip64 Extended Information Extra Field does not include Relative Header Offset\"));\n          entry.relativeOffsetOfLocalHeader = readUInt64LE(zip64EiefBuffer, index);\n          index += 8;\n        }\n        // 24 - Disk Start Number      4 bytes\n      }\n\n      // validate file size\n      if (entry.compressionMethod === 0) {\n        if (entry.compressedSize !== entry.uncompressedSize) {\n          var msg = \"compressed/uncompressed size mismatch for stored file: \" + entry.compressedSize + \" != \" + entry.uncompressedSize;\n          return emitErrorAndAutoClose(self, new Error(msg));\n        }\n      }\n\n      // validate file name\n      if (entry.fileName.indexOf(\"\\\\\") !== -1) return emitErrorAndAutoClose(self, new Error(\"invalid characters in fileName: \" + entry.fileName));\n      if (/^[a-zA-Z]:/.test(entry.fileName) || /^\\//.test(entry.fileName)) return emitErrorAndAutoClose(self, new Error(\"absolute path: \" + entry.fileName));\n      if (entry.fileName.split(\"/\").indexOf(\"..\") !== -1) return emitErrorAndAutoClose(self, new Error(\"invalid relative path: \" + entry.fileName));\n      self.emit(\"entry\", entry);\n\n      if (!self.lazyEntries) self.readEntry();\n    });\n  });\n};\n\nZipFile.prototype.openReadStream = function(entry, callback) {\n  var self = this;\n  if (!self.isOpen) return callback(new Error(\"closed\"));\n  // make sure we don't lose the fd before we open the actual read stream\n  self.reader.ref();\n  var buffer = new Buffer(30);\n  readAndAssertNoEof(self.reader, buffer, 0, buffer.length, entry.relativeOffsetOfLocalHeader, function(err) {\n    try {\n      if (err) return callback(err);\n      // 0 - Local file header signature = 0x04034b50\n      var signature = buffer.readUInt32LE(0);\n      if (signature !== 0x04034b50) return callback(new Error(\"invalid local file header signature: 0x\" + signature.toString(16)));\n      // all this should be redundant\n      // 4 - Version needed to extract (minimum)\n      // 6 - General purpose bit flag\n      // 8 - Compression method\n      // 10 - File last modification time\n      // 12 - File last modification date\n      // 14 - CRC-32\n      // 18 - Compressed size\n      // 22 - Uncompressed size\n      // 26 - File name length (n)\n      var fileNameLength = buffer.readUInt16LE(26);\n      // 28 - Extra field length (m)\n      var extraFieldLength = buffer.readUInt16LE(28);\n      // 30 - File name\n      // 30+n - Extra field\n      var localFileHeaderEnd = entry.relativeOffsetOfLocalHeader + buffer.length + fileNameLength + extraFieldLength;\n      var compressed;\n      if (entry.compressionMethod === 0) {\n        // 0 - The file is stored (no compression)\n        compressed = false;\n      } else if (entry.compressionMethod === 8) {\n        // 8 - The file is Deflated\n        compressed = true;\n      } else {\n        return callback(new Error(\"unsupported compression method: \" + entry.compressionMethod));\n      }\n      var fileDataStart = localFileHeaderEnd;\n      var fileDataEnd = fileDataStart + entry.compressedSize;\n      if (entry.compressedSize !== 0) {\n        // bounds check now, because the read streams will probably not complain loud enough.\n        // since we're dealing with an unsigned offset plus an unsigned size,\n        // we only have 1 thing to check for.\n        if (fileDataEnd > self.fileSize) {\n          return callback(new Error(\"file data overflows file bounds: \" +\n              fileDataStart + \" + \" + entry.compressedSize + \" > \" + self.fileSize));\n        }\n      }\n      var readStream = self.reader.createReadStream({start: fileDataStart, end: fileDataEnd});\n      var endpointStream = readStream;\n      if (compressed) {\n        var destroyed = false;\n        var inflateFilter = zlib.createInflateRaw();\n        readStream.on(\"error\", function(err) {\n          // setImmediate here because errors can be emitted during the first call to pipe()\n          setImmediate(function() {\n            if (!destroyed) inflateFilter.emit(\"error\", err);\n          });\n        });\n\n        var checkerStream = new AssertByteCountStream(entry.uncompressedSize);\n        inflateFilter.on(\"error\", function(err) {\n          // forward zlib errors to the client-visible stream\n          setImmediate(function() {\n            if (!destroyed) checkerStream.emit(\"error\", err);\n          });\n        });\n        checkerStream.destroy = function() {\n          destroyed = true;\n          inflateFilter.unpipe(checkerStream);\n          readStream.unpipe(inflateFilter);\n          // TODO: the inflateFilter now causes a memory leak. see Issue #27.\n          readStream.destroy();\n        };\n        endpointStream = readStream.pipe(inflateFilter).pipe(checkerStream);\n      }\n      callback(null, endpointStream);\n    } finally {\n      self.reader.unref();\n    }\n  });\n};\n\nfunction Entry() {\n}\nEntry.prototype.getLastModDate = function() {\n  return dosDateTimeToDate(this.lastModFileDate, this.lastModFileTime);\n};\n\nfunction dosDateTimeToDate(date, time) {\n  var day = date & 0x1f; // 1-31\n  var month = (date >> 5 & 0xf) - 1; // 1-12, 0-11\n  var year = (date >> 9 & 0x7f) + 1980; // 0-128, 1980-2108\n\n  var millisecond = 0;\n  var second = (time & 0x1f) * 2; // 0-29, 0-58 (even numbers)\n  var minute = time >> 5 & 0x3f; // 0-59\n  var hour = time >> 11 & 0x1f; // 0-23\n\n  return new Date(year, month, day, hour, minute, second, millisecond);\n}\n\nfunction readAndAssertNoEof(reader, buffer, offset, length, position, callback) {\n  if (length === 0) {\n    // fs.read will throw an out-of-bounds error if you try to read 0 bytes from a 0 byte file\n    return setImmediate(function() { callback(null, new Buffer(0)); });\n  }\n  reader.read(buffer, offset, length, position, function(err, bytesRead) {\n    if (err) return callback(err);\n    if (bytesRead < length) return callback(new Error(\"unexpected EOF\"));\n    callback();\n  });\n}\n\nutil.inherits(AssertByteCountStream, Transform);\nfunction AssertByteCountStream(byteCount) {\n  Transform.call(this);\n  this.actualByteCount = 0;\n  this.expectedByteCount = byteCount;\n}\nAssertByteCountStream.prototype._transform = function(chunk, encoding, cb) {\n  this.actualByteCount += chunk.length;\n  if (this.actualByteCount > this.expectedByteCount) {\n    var msg = \"too many bytes in the stream. expected \" + this.expectedByteCount + \". got at least \" + this.actualByteCount;\n    return cb(new Error(msg));\n  }\n  cb(null, chunk);\n};\nAssertByteCountStream.prototype._flush = function(cb) {\n  if (this.actualByteCount < this.expectedByteCount) {\n    var msg = \"not enough bytes in the stream. expected \" + this.expectedByteCount + \". got only \" + this.actualByteCount;\n    return cb(new Error(msg));\n  }\n  cb();\n};\n\nutil.inherits(RandomAccessReader, EventEmitter);\nfunction RandomAccessReader() {\n  EventEmitter.call(this);\n  this.refCount = 0;\n}\nRandomAccessReader.prototype.ref = function() {\n  this.refCount += 1;\n};\nRandomAccessReader.prototype.unref = function() {\n  var self = this;\n  self.refCount -= 1;\n\n  if (self.refCount > 0) return;\n  if (self.refCount < 0) throw new Error(\"invalid unref\");\n\n  self.close(onCloseDone);\n\n  function onCloseDone(err) {\n    if (err) return self.emit('error', err);\n    self.emit('close');\n  }\n};\nRandomAccessReader.prototype.createReadStream = function(options) {\n  var start = options.start;\n  var end = options.end;\n  if (start === end) {\n    var emptyStream = new PassThrough();\n    setImmediate(function() {\n      emptyStream.end();\n    });\n    return emptyStream;\n  }\n  var stream = this._readStreamForRange(start, end);\n\n  var destroyed = false;\n  var refUnrefFilter = new RefUnrefFilter(this);\n  stream.on(\"error\", function(err) {\n    setImmediate(function() {\n      if (!destroyed) refUnrefFilter.emit(\"error\", err);\n    });\n  });\n  refUnrefFilter.destroy = function() {\n    stream.unpipe(refUnrefFilter);\n    refUnrefFilter.unref();\n    stream.destroy();\n  };\n\n  var byteCounter = new AssertByteCountStream(end - start);\n  refUnrefFilter.on(\"error\", function(err) {\n    setImmediate(function() {\n      if (!destroyed) byteCounter.emit(\"error\", err);\n    });\n  });\n  byteCounter.destroy = function() {\n    destroyed = true;\n    refUnrefFilter.unpipe(byteCounter);\n    refUnrefFilter.destroy();\n  };\n\n  return stream.pipe(refUnrefFilter).pipe(byteCounter);\n};\nRandomAccessReader.prototype._readStreamForRange = function(start, end) {\n  throw new Error(\"not implemented\");\n};\nRandomAccessReader.prototype.read = function(buffer, offset, length, position, callback) {\n  var readStream = this.createReadStream({start: position, end: position + length});\n  var writeStream = new Writable();\n  var written = 0;\n  writeStream._write = function(chunk, encoding, cb) {\n    chunk.copy(buffer, offset + written, 0, chunk.length);\n    written += chunk.length;\n    cb();\n  };\n  writeStream.on(\"finish\", callback);\n  readStream.on(\"error\", function(error) {\n    callback(error);\n  });\n  readStream.pipe(writeStream);\n};\nRandomAccessReader.prototype.close = function(callback) {\n  setImmediate(callback);\n};\n\nutil.inherits(RefUnrefFilter, PassThrough);\nfunction RefUnrefFilter(context) {\n  PassThrough.call(this);\n  this.context = context;\n  this.context.ref();\n  this.unreffedYet = false;\n}\nRefUnrefFilter.prototype._flush = function(cb) {\n  this.unref();\n  cb();\n};\nRefUnrefFilter.prototype.unref = function(cb) {\n  if (this.unreffedYet) return;\n  this.unreffedYet = true;\n  this.context.unref();\n};\n\nvar cp437 = '\\u0000☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ';\nfunction bufferToString(buffer, start, end, isUtf8) {\n  if (isUtf8) {\n    return buffer.toString(\"utf8\", start, end);\n  } else {\n    var result = \"\";\n    for (var i = start; i < end; i++) {\n      result += cp437[buffer[i]];\n    }\n    return result;\n  }\n}\n\nfunction readUInt64LE(buffer, offset) {\n  // there is no native function for this, because we can't actually store 64-bit integers precisely.\n  // after 53 bits, JavaScript's Number type (IEEE 754 double) can't store individual integers anymore.\n  // but since 53 bits is a whole lot more than 32 bits, we do our best anyway.\n  var lower32 = buffer.readUInt32LE(offset);\n  var upper32 = buffer.readUInt32LE(offset + 4);\n  // we can't use bitshifting here, because JavaScript bitshifting only works on 32-bit integers.\n  return upper32 * 0x100000000 + lower32;\n  // as long as we're bounds checking the result of this function against the total file size,\n  // we'll catch any overflow errors, because we already made sure the total file size was within reason.\n}\n\nfunction defaultCallback(err) {\n  if (err) throw err;\n}\n","var fs = require('fs');\nvar util = require('util');\nvar stream = require('stream');\nvar Readable = stream.Readable;\nvar Writable = stream.Writable;\nvar PassThrough = stream.PassThrough;\nvar Pend = require('pend');\nvar EventEmitter = require('events').EventEmitter;\n\nexports.createFromBuffer = createFromBuffer;\nexports.createFromFd = createFromFd;\nexports.BufferSlicer = BufferSlicer;\nexports.FdSlicer = FdSlicer;\n\nutil.inherits(FdSlicer, EventEmitter);\nfunction FdSlicer(fd, options) {\n  options = options || {};\n  EventEmitter.call(this);\n\n  this.fd = fd;\n  this.pend = new Pend();\n  this.pend.max = 1;\n  this.refCount = 0;\n  this.autoClose = !!options.autoClose;\n}\n\nFdSlicer.prototype.read = function(buffer, offset, length, position, callback) {\n  var self = this;\n  self.pend.go(function(cb) {\n    fs.read(self.fd, buffer, offset, length, position, function(err, bytesRead, buffer) {\n      cb();\n      callback(err, bytesRead, buffer);\n    });\n  });\n};\n\nFdSlicer.prototype.write = function(buffer, offset, length, position, callback) {\n  var self = this;\n  self.pend.go(function(cb) {\n    fs.write(self.fd, buffer, offset, length, position, function(err, written, buffer) {\n      cb();\n      callback(err, written, buffer);\n    });\n  });\n};\n\nFdSlicer.prototype.createReadStream = function(options) {\n  return new ReadStream(this, options);\n};\n\nFdSlicer.prototype.createWriteStream = function(options) {\n  return new WriteStream(this, options);\n};\n\nFdSlicer.prototype.ref = function() {\n  this.refCount += 1;\n};\n\nFdSlicer.prototype.unref = function() {\n  var self = this;\n  self.refCount -= 1;\n\n  if (self.refCount > 0) return;\n  if (self.refCount < 0) throw new Error(\"invalid unref\");\n\n  if (self.autoClose) {\n    fs.close(self.fd, onCloseDone);\n  }\n\n  function onCloseDone(err) {\n    if (err) {\n      self.emit('error', err);\n    } else {\n      self.emit('close');\n    }\n  }\n};\n\nutil.inherits(ReadStream, Readable);\nfunction ReadStream(context, options) {\n  options = options || {};\n  Readable.call(this, options);\n\n  this.context = context;\n  this.context.ref();\n\n  this.start = options.start || 0;\n  this.endOffset = options.end;\n  this.pos = this.start;\n  this.destroyed = false;\n}\n\nReadStream.prototype._read = function(n) {\n  var self = this;\n  if (self.destroyed) return;\n\n  var toRead = Math.min(self._readableState.highWaterMark, n);\n  if (self.endOffset != null) {\n    toRead = Math.min(toRead, self.endOffset - self.pos);\n  }\n  if (toRead <= 0) {\n    self.destroyed = true;\n    self.push(null);\n    self.context.unref();\n    return;\n  }\n  self.context.pend.go(function(cb) {\n    if (self.destroyed) return cb();\n    var buffer = new Buffer(toRead);\n    fs.read(self.context.fd, buffer, 0, toRead, self.pos, function(err, bytesRead) {\n      if (err) {\n        self.destroy(err);\n      } else if (bytesRead === 0) {\n        self.destroyed = true;\n        self.push(null);\n        self.context.unref();\n      } else {\n        self.pos += bytesRead;\n        self.push(buffer.slice(0, bytesRead));\n      }\n      cb();\n    });\n  });\n};\n\nReadStream.prototype.destroy = function(err) {\n  if (this.destroyed) return;\n  err = err || new Error(\"stream destroyed\");\n  this.destroyed = true;\n  this.emit('error', err);\n  this.context.unref();\n};\n\nutil.inherits(WriteStream, Writable);\nfunction WriteStream(context, options) {\n  options = options || {};\n  Writable.call(this, options);\n\n  this.context = context;\n  this.context.ref();\n\n  this.start = options.start || 0;\n  this.endOffset = (options.end == null) ? Infinity : +options.end;\n  this.bytesWritten = 0;\n  this.pos = this.start;\n  this.destroyed = false;\n\n  this.on('finish', this.destroy.bind(this));\n}\n\nWriteStream.prototype._write = function(buffer, encoding, callback) {\n  var self = this;\n  if (self.destroyed) return;\n\n  if (self.pos + buffer.length > self.endOffset) {\n    var err = new Error(\"maximum file length exceeded\");\n    err.code = 'ETOOBIG';\n    self.destroy();\n    callback(err);\n    return;\n  }\n  self.context.pend.go(function(cb) {\n    if (self.destroyed) return cb();\n    fs.write(self.context.fd, buffer, 0, buffer.length, self.pos, function(err, bytes) {\n      if (err) {\n        self.destroy();\n        cb();\n        callback(err);\n      } else {\n        self.bytesWritten += bytes;\n        self.pos += bytes;\n        self.emit('progress');\n        cb();\n        callback();\n      }\n    });\n  });\n};\n\nWriteStream.prototype.destroy = function() {\n  if (this.destroyed) return;\n  this.destroyed = true;\n  this.context.unref();\n};\n\nutil.inherits(BufferSlicer, EventEmitter);\nfunction BufferSlicer(buffer) {\n  EventEmitter.call(this);\n\n  this.refCount = 0;\n  this.buffer = buffer;\n}\n\nBufferSlicer.prototype.read = function(buffer, offset, length, position, callback) {\n  var end = position + length;\n  var delta = end - this.buffer.length;\n  var written = (delta > 0) ? delta : length;\n  this.buffer.copy(buffer, offset, position, end);\n  setImmediate(function() {\n    callback(null, written);\n  });\n};\n\nBufferSlicer.prototype.write = function(buffer, offset, length, position, callback) {\n  buffer.copy(this.buffer, position, offset, offset + length);\n  setImmediate(function() {\n    callback(null, length, buffer);\n  });\n};\n\nBufferSlicer.prototype.createReadStream = function(options) {\n  options = options || {};\n  var readStream = new PassThrough(options);\n  readStream.start = options.start || 0;\n  readStream.endOffset = options.end;\n  readStream.pos = readStream.endOffset || this.buffer.length; // yep, we're already done\n  readStream.destroyed = false;\n  readStream.write(this.buffer.slice(readStream.start, readStream.pos));\n  readStream.end();\n  readStream.destroy = function() {\n    readStream.destroyed = true;\n  };\n  return readStream;\n};\n\nBufferSlicer.prototype.createWriteStream = function(options) {\n  var bufferSlicer = this;\n  options = options || {};\n  var writeStream = new Writable(options);\n  writeStream.start = options.start || 0;\n  writeStream.endOffset = (options.end == null) ? this.buffer.length : +options.end;\n  writeStream.bytesWritten = 0;\n  writeStream.pos = writeStream.start;\n  writeStream.destroyed = false;\n  writeStream._write = function(buffer, encoding, callback) {\n    if (writeStream.destroyed) return;\n\n    var end = writeStream.pos + buffer.length;\n    if (end > writeStream.endOffset) {\n      var err = new Error(\"maximum file length exceeded\");\n      err.code = 'ETOOBIG';\n      writeStream.destroyed = true;\n      callback(err);\n      return;\n    }\n    buffer.copy(bufferSlicer.buffer, writeStream.pos, 0, buffer.length);\n\n    writeStream.bytesWritten += buffer.length;\n    writeStream.pos = end;\n    writeStream.emit('progress');\n    callback();\n  };\n  writeStream.destroy = function() {\n    writeStream.destroyed = true;\n  };\n  return writeStream;\n};\n\nBufferSlicer.prototype.ref = function() {\n  this.refCount += 1;\n};\n\nBufferSlicer.prototype.unref = function() {\n  this.refCount -= 1;\n\n  if (this.refCount < 0) {\n    throw new Error(\"invalid unref\");\n  }\n};\n\nfunction createFromBuffer(buffer) {\n  return new BufferSlicer(buffer);\n}\n\nfunction createFromFd(fd, options) {\n  return new FdSlicer(fd, options);\n}\n","module.exports = Pend;\n\nfunction Pend() {\n  this.pending = 0;\n  this.max = Infinity;\n  this.listeners = [];\n  this.waiting = [];\n  this.error = null;\n}\n\nPend.prototype.go = function(fn) {\n  if (this.pending < this.max) {\n    pendGo(this, fn);\n  } else {\n    this.waiting.push(fn);\n  }\n};\n\nPend.prototype.wait = function(cb) {\n  if (this.pending === 0) {\n    cb(this.error);\n  } else {\n    this.listeners.push(cb);\n  }\n};\n\nPend.prototype.hold = function() {\n  return pendHold(this);\n};\n\nfunction pendHold(self) {\n  self.pending += 1;\n  var called = false;\n  return onCb;\n  function onCb(err) {\n    if (called) throw new Error(\"callback called twice\");\n    called = true;\n    self.error = self.error || err;\n    self.pending -= 1;\n    if (self.waiting.length > 0 && self.pending < self.max) {\n      pendGo(self, self.waiting.shift());\n    } else if (self.pending === 0) {\n      var listeners = self.listeners;\n      self.listeners = [];\n      listeners.forEach(cbListener);\n    }\n  }\n  function cbListener(listener) {\n    listener(self.error);\n  }\n}\n\nfunction pendGo(self, fn) {\n  fn(pendHold(self));\n}\n","var path = require('path');\nvar fs = require('fs');\nvar _0777 = parseInt('0777', 8);\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n\nfunction mkdirP (p, opts, f, made) {\n    if (typeof opts === 'function') {\n        f = opts;\n        opts = {};\n    }\n    else if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n    \n    var cb = f || function () {};\n    p = path.resolve(p);\n    \n    xfs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), opts, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, opts, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                xfs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, opts, made) {\n    if (!opts || typeof opts !== 'object') {\n        opts = { mode: opts };\n    }\n    \n    var mode = opts.mode;\n    var xfs = opts.fs || fs;\n    \n    if (mode === undefined) {\n        mode = _0777 & (~process.umask());\n    }\n    if (!made) made = null;\n\n    p = path.resolve(p);\n\n    try {\n        xfs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), opts, made);\n                sync(p, opts, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = xfs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n","var Writable = require('readable-stream').Writable\nvar inherits = require('inherits')\nvar bufferFrom = require('buffer-from')\n\nif (typeof Uint8Array === 'undefined') {\n  var U8 = require('typedarray').Uint8Array\n} else {\n  var U8 = Uint8Array\n}\n\nfunction ConcatStream(opts, cb) {\n  if (!(this instanceof ConcatStream)) return new ConcatStream(opts, cb)\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n  if (!opts) opts = {}\n\n  var encoding = opts.encoding\n  var shouldInferEncoding = false\n\n  if (!encoding) {\n    shouldInferEncoding = true\n  } else {\n    encoding =  String(encoding).toLowerCase()\n    if (encoding === 'u8' || encoding === 'uint8') {\n      encoding = 'uint8array'\n    }\n  }\n\n  Writable.call(this, { objectMode: true })\n\n  this.encoding = encoding\n  this.shouldInferEncoding = shouldInferEncoding\n\n  if (cb) this.on('finish', function () { cb(this.getBody()) })\n  this.body = []\n}\n\nmodule.exports = ConcatStream\ninherits(ConcatStream, Writable)\n\nConcatStream.prototype._write = function(chunk, enc, next) {\n  this.body.push(chunk)\n  next()\n}\n\nConcatStream.prototype.inferEncoding = function (buff) {\n  var firstBuffer = buff === undefined ? this.body[0] : buff;\n  if (Buffer.isBuffer(firstBuffer)) return 'buffer'\n  if (typeof Uint8Array !== 'undefined' && firstBuffer instanceof Uint8Array) return 'uint8array'\n  if (Array.isArray(firstBuffer)) return 'array'\n  if (typeof firstBuffer === 'string') return 'string'\n  if (Object.prototype.toString.call(firstBuffer) === \"[object Object]\") return 'object'\n  return 'buffer'\n}\n\nConcatStream.prototype.getBody = function () {\n  if (!this.encoding && this.body.length === 0) return []\n  if (this.shouldInferEncoding) this.encoding = this.inferEncoding()\n  if (this.encoding === 'array') return arrayConcat(this.body)\n  if (this.encoding === 'string') return stringConcat(this.body)\n  if (this.encoding === 'buffer') return bufferConcat(this.body)\n  if (this.encoding === 'uint8array') return u8Concat(this.body)\n  return this.body\n}\n\nvar isArray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]'\n}\n\nfunction isArrayish (arr) {\n  return /Array\\]$/.test(Object.prototype.toString.call(arr))\n}\n\nfunction isBufferish (p) {\n  return typeof p === 'string' || isArrayish(p) || (p && typeof p.subarray === 'function')\n}\n\nfunction stringConcat (parts) {\n  var strings = []\n  var needsToString = false\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i]\n    if (typeof p === 'string') {\n      strings.push(p)\n    } else if (Buffer.isBuffer(p)) {\n      strings.push(p)\n    } else if (isBufferish(p)) {\n      strings.push(bufferFrom(p))\n    } else {\n      strings.push(bufferFrom(String(p)))\n    }\n  }\n  if (Buffer.isBuffer(parts[0])) {\n    strings = Buffer.concat(strings)\n    strings = strings.toString('utf8')\n  } else {\n    strings = strings.join('')\n  }\n  return strings\n}\n\nfunction bufferConcat (parts) {\n  var bufs = []\n  for (var i = 0; i < parts.length; i++) {\n    var p = parts[i]\n    if (Buffer.isBuffer(p)) {\n      bufs.push(p)\n    } else if (isBufferish(p)) {\n      bufs.push(bufferFrom(p))\n    } else {\n      bufs.push(bufferFrom(String(p)))\n    }\n  }\n  return Buffer.concat(bufs)\n}\n\nfunction arrayConcat (parts) {\n  var res = []\n  for (var i = 0; i < parts.length; i++) {\n    res.push.apply(res, parts[i])\n  }\n  return res\n}\n\nfunction u8Concat (parts) {\n  var len = 0\n  for (var i = 0; i < parts.length; i++) {\n    if (typeof parts[i] === 'string') {\n      parts[i] = bufferFrom(parts[i])\n    }\n    len += parts[i].length\n  }\n  var u8 = new U8(len)\n  for (var i = 0, offset = 0; i < parts.length; i++) {\n    var part = parts[i]\n    for (var j = 0; j < part.length; j++) {\n      u8[offset++] = part[j]\n    }\n  }\n  return u8\n}\n","var Stream = require('stream');\nif (process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream;\n  exports = module.exports = Stream.Readable;\n  exports.Readable = Stream.Readable;\n  exports.Writable = Stream.Writable;\n  exports.Duplex = Stream.Duplex;\n  exports.Transform = Stream.Transform;\n  exports.PassThrough = Stream.PassThrough;\n  exports.Stream = Stream;\n} else {\n  exports = module.exports = require('./lib/_stream_readable.js');\n  exports.Stream = Stream || exports;\n  exports.Readable = exports;\n  exports.Writable = require('./lib/_stream_writable.js');\n  exports.Duplex = require('./lib/_stream_duplex.js');\n  exports.Transform = require('./lib/_stream_transform.js');\n  exports.PassThrough = require('./lib/_stream_passthrough.js');\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","var toString = Object.prototype.toString\n\nvar isModern = (\n  typeof Buffer.alloc === 'function' &&\n  typeof Buffer.allocUnsafe === 'function' &&\n  typeof Buffer.from === 'function'\n)\n\nfunction isArrayBuffer (input) {\n  return toString.call(input).slice(8, -1) === 'ArrayBuffer'\n}\n\nfunction fromArrayBuffer (obj, byteOffset, length) {\n  byteOffset >>>= 0\n\n  var maxLength = obj.byteLength - byteOffset\n\n  if (maxLength < 0) {\n    throw new RangeError(\"'offset' is out of bounds\")\n  }\n\n  if (length === undefined) {\n    length = maxLength\n  } else {\n    length >>>= 0\n\n    if (length > maxLength) {\n      throw new RangeError(\"'length' is out of bounds\")\n    }\n  }\n\n  return isModern\n    ? Buffer.from(obj.slice(byteOffset, byteOffset + length))\n    : new Buffer(new Uint8Array(obj.slice(byteOffset, byteOffset + length)))\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  return isModern\n    ? Buffer.from(string, encoding)\n    : new Buffer(string, encoding)\n}\n\nfunction bufferFrom (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value)) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return isModern\n    ? Buffer.from(value)\n    : new Buffer(value)\n}\n\nmodule.exports = bufferFrom\n","var undefined = (void 0); // Paranoia\n\n// Beyond this value, index getters/setters (i.e. array[0], array[1]) are so slow to\n// create, and consume so much memory, that the browser appears frozen.\nvar MAX_ARRAY_LENGTH = 1e5;\n\n// Approximations of internal ECMAScript conversion functions\nvar ECMAScript = (function() {\n  // Stash a copy in case other scripts modify these\n  var opts = Object.prototype.toString,\n      ophop = Object.prototype.hasOwnProperty;\n\n  return {\n    // Class returns internal [[Class]] property, used to avoid cross-frame instanceof issues:\n    Class: function(v) { return opts.call(v).replace(/^\\[object *|\\]$/g, ''); },\n    HasProperty: function(o, p) { return p in o; },\n    HasOwnProperty: function(o, p) { return ophop.call(o, p); },\n    IsCallable: function(o) { return typeof o === 'function'; },\n    ToInt32: function(v) { return v >> 0; },\n    ToUint32: function(v) { return v >>> 0; }\n  };\n}());\n\n// Snapshot intrinsics\nvar LN2 = Math.LN2,\n    abs = Math.abs,\n    floor = Math.floor,\n    log = Math.log,\n    min = Math.min,\n    pow = Math.pow,\n    round = Math.round;\n\n// ES5: lock down object properties\nfunction configureProperties(obj) {\n  if (getOwnPropNames && defineProp) {\n    var props = getOwnPropNames(obj), i;\n    for (i = 0; i < props.length; i += 1) {\n      defineProp(obj, props[i], {\n        value: obj[props[i]],\n        writable: false,\n        enumerable: false,\n        configurable: false\n      });\n    }\n  }\n}\n\n// emulate ES5 getter/setter API using legacy APIs\n// http://blogs.msdn.com/b/ie/archive/2010/09/07/transitioning-existing-code-to-the-es5-getter-setter-apis.aspx\n// (second clause tests for Object.defineProperty() in IE<9 that only supports extending DOM prototypes, but\n// note that IE<9 does not support __defineGetter__ or __defineSetter__ so it just renders the method harmless)\nvar defineProp\nif (Object.defineProperty && (function() {\n      try {\n        Object.defineProperty({}, 'x', {});\n        return true;\n      } catch (e) {\n        return false;\n      }\n    })()) {\n  defineProp = Object.defineProperty;\n} else {\n  defineProp = function(o, p, desc) {\n    if (!o === Object(o)) throw new TypeError(\"Object.defineProperty called on non-object\");\n    if (ECMAScript.HasProperty(desc, 'get') && Object.prototype.__defineGetter__) { Object.prototype.__defineGetter__.call(o, p, desc.get); }\n    if (ECMAScript.HasProperty(desc, 'set') && Object.prototype.__defineSetter__) { Object.prototype.__defineSetter__.call(o, p, desc.set); }\n    if (ECMAScript.HasProperty(desc, 'value')) { o[p] = desc.value; }\n    return o;\n  };\n}\n\nvar getOwnPropNames = Object.getOwnPropertyNames || function (o) {\n  if (o !== Object(o)) throw new TypeError(\"Object.getOwnPropertyNames called on non-object\");\n  var props = [], p;\n  for (p in o) {\n    if (ECMAScript.HasOwnProperty(o, p)) {\n      props.push(p);\n    }\n  }\n  return props;\n};\n\n// ES5: Make obj[index] an alias for obj._getter(index)/obj._setter(index, value)\n// for index in 0 ... obj.length\nfunction makeArrayAccessors(obj) {\n  if (!defineProp) { return; }\n\n  if (obj.length > MAX_ARRAY_LENGTH) throw new RangeError(\"Array too large for polyfill\");\n\n  function makeArrayAccessor(index) {\n    defineProp(obj, index, {\n      'get': function() { return obj._getter(index); },\n      'set': function(v) { obj._setter(index, v); },\n      enumerable: true,\n      configurable: false\n    });\n  }\n\n  var i;\n  for (i = 0; i < obj.length; i += 1) {\n    makeArrayAccessor(i);\n  }\n}\n\n// Internal conversion functions:\n//    pack<Type>()   - take a number (interpreted as Type), output a byte array\n//    unpack<Type>() - take a byte array, output a Type-like number\n\nfunction as_signed(value, bits) { var s = 32 - bits; return (value << s) >> s; }\nfunction as_unsigned(value, bits) { var s = 32 - bits; return (value << s) >>> s; }\n\nfunction packI8(n) { return [n & 0xff]; }\nfunction unpackI8(bytes) { return as_signed(bytes[0], 8); }\n\nfunction packU8(n) { return [n & 0xff]; }\nfunction unpackU8(bytes) { return as_unsigned(bytes[0], 8); }\n\nfunction packU8Clamped(n) { n = round(Number(n)); return [n < 0 ? 0 : n > 0xff ? 0xff : n & 0xff]; }\n\nfunction packI16(n) { return [(n >> 8) & 0xff, n & 0xff]; }\nfunction unpackI16(bytes) { return as_signed(bytes[0] << 8 | bytes[1], 16); }\n\nfunction packU16(n) { return [(n >> 8) & 0xff, n & 0xff]; }\nfunction unpackU16(bytes) { return as_unsigned(bytes[0] << 8 | bytes[1], 16); }\n\nfunction packI32(n) { return [(n >> 24) & 0xff, (n >> 16) & 0xff, (n >> 8) & 0xff, n & 0xff]; }\nfunction unpackI32(bytes) { return as_signed(bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], 32); }\n\nfunction packU32(n) { return [(n >> 24) & 0xff, (n >> 16) & 0xff, (n >> 8) & 0xff, n & 0xff]; }\nfunction unpackU32(bytes) { return as_unsigned(bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], 32); }\n\nfunction packIEEE754(v, ebits, fbits) {\n\n  var bias = (1 << (ebits - 1)) - 1,\n      s, e, f, ln,\n      i, bits, str, bytes;\n\n  function roundToEven(n) {\n    var w = floor(n), f = n - w;\n    if (f < 0.5)\n      return w;\n    if (f > 0.5)\n      return w + 1;\n    return w % 2 ? w + 1 : w;\n  }\n\n  // Compute sign, exponent, fraction\n  if (v !== v) {\n    // NaN\n    // http://dev.w3.org/2006/webapi/WebIDL/#es-type-mapping\n    e = (1 << ebits) - 1; f = pow(2, fbits - 1); s = 0;\n  } else if (v === Infinity || v === -Infinity) {\n    e = (1 << ebits) - 1; f = 0; s = (v < 0) ? 1 : 0;\n  } else if (v === 0) {\n    e = 0; f = 0; s = (1 / v === -Infinity) ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = abs(v);\n\n    if (v >= pow(2, 1 - bias)) {\n      e = min(floor(log(v) / LN2), 1023);\n      f = roundToEven(v / pow(2, e) * pow(2, fbits));\n      if (f / pow(2, fbits) >= 2) {\n        e = e + 1;\n        f = 1;\n      }\n      if (e > bias) {\n        // Overflow\n        e = (1 << ebits) - 1;\n        f = 0;\n      } else {\n        // Normalized\n        e = e + bias;\n        f = f - pow(2, fbits);\n      }\n    } else {\n      // Denormalized\n      e = 0;\n      f = roundToEven(v / pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  bits = [];\n  for (i = fbits; i; i -= 1) { bits.push(f % 2 ? 1 : 0); f = floor(f / 2); }\n  for (i = ebits; i; i -= 1) { bits.push(e % 2 ? 1 : 0); e = floor(e / 2); }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  str = bits.join('');\n\n  // Bits to bytes\n  bytes = [];\n  while (str.length) {\n    bytes.push(parseInt(str.substring(0, 8), 2));\n    str = str.substring(8);\n  }\n  return bytes;\n}\n\nfunction unpackIEEE754(bytes, ebits, fbits) {\n\n  // Bytes to bits\n  var bits = [], i, j, b, str,\n      bias, s, e, f;\n\n  for (i = bytes.length; i; i -= 1) {\n    b = bytes[i - 1];\n    for (j = 8; j; j -= 1) {\n      bits.push(b % 2 ? 1 : 0); b = b >> 1;\n    }\n  }\n  bits.reverse();\n  str = bits.join('');\n\n  // Unpack sign, exponent, fraction\n  bias = (1 << (ebits - 1)) - 1;\n  s = parseInt(str.substring(0, 1), 2) ? -1 : 1;\n  e = parseInt(str.substring(1, 1 + ebits), 2);\n  f = parseInt(str.substring(1 + ebits), 2);\n\n  // Produce number\n  if (e === (1 << ebits) - 1) {\n    return f !== 0 ? NaN : s * Infinity;\n  } else if (e > 0) {\n    // Normalized\n    return s * pow(2, e - bias) * (1 + f / pow(2, fbits));\n  } else if (f !== 0) {\n    // Denormalized\n    return s * pow(2, -(bias - 1)) * (f / pow(2, fbits));\n  } else {\n    return s < 0 ? -0 : 0;\n  }\n}\n\nfunction unpackF64(b) { return unpackIEEE754(b, 11, 52); }\nfunction packF64(v) { return packIEEE754(v, 11, 52); }\nfunction unpackF32(b) { return unpackIEEE754(b, 8, 23); }\nfunction packF32(v) { return packIEEE754(v, 8, 23); }\n\n\n//\n// 3 The ArrayBuffer Type\n//\n\n(function() {\n\n  /** @constructor */\n  var ArrayBuffer = function ArrayBuffer(length) {\n    length = ECMAScript.ToInt32(length);\n    if (length < 0) throw new RangeError('ArrayBuffer size is not a small enough positive integer');\n\n    this.byteLength = length;\n    this._bytes = [];\n    this._bytes.length = length;\n\n    var i;\n    for (i = 0; i < this.byteLength; i += 1) {\n      this._bytes[i] = 0;\n    }\n\n    configureProperties(this);\n  };\n\n  exports.ArrayBuffer = exports.ArrayBuffer || ArrayBuffer;\n\n  //\n  // 4 The ArrayBufferView Type\n  //\n\n  // NOTE: this constructor is not exported\n  /** @constructor */\n  var ArrayBufferView = function ArrayBufferView() {\n    //this.buffer = null;\n    //this.byteOffset = 0;\n    //this.byteLength = 0;\n  };\n\n  //\n  // 5 The Typed Array View Types\n  //\n\n  function makeConstructor(bytesPerElement, pack, unpack) {\n    // Each TypedArray type requires a distinct constructor instance with\n    // identical logic, which this produces.\n\n    var ctor;\n    ctor = function(buffer, byteOffset, length) {\n      var array, sequence, i, s;\n\n      if (!arguments.length || typeof arguments[0] === 'number') {\n        // Constructor(unsigned long length)\n        this.length = ECMAScript.ToInt32(arguments[0]);\n        if (length < 0) throw new RangeError('ArrayBufferView size is not a small enough positive integer');\n\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n      } else if (typeof arguments[0] === 'object' && arguments[0].constructor === ctor) {\n        // Constructor(TypedArray array)\n        array = arguments[0];\n\n        this.length = array.length;\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n\n        for (i = 0; i < this.length; i += 1) {\n          this._setter(i, array._getter(i));\n        }\n      } else if (typeof arguments[0] === 'object' &&\n                 !(arguments[0] instanceof ArrayBuffer || ECMAScript.Class(arguments[0]) === 'ArrayBuffer')) {\n        // Constructor(sequence<type> array)\n        sequence = arguments[0];\n\n        this.length = ECMAScript.ToUint32(sequence.length);\n        this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        this.buffer = new ArrayBuffer(this.byteLength);\n        this.byteOffset = 0;\n\n        for (i = 0; i < this.length; i += 1) {\n          s = sequence[i];\n          this._setter(i, Number(s));\n        }\n      } else if (typeof arguments[0] === 'object' &&\n                 (arguments[0] instanceof ArrayBuffer || ECMAScript.Class(arguments[0]) === 'ArrayBuffer')) {\n        // Constructor(ArrayBuffer buffer,\n        //             optional unsigned long byteOffset, optional unsigned long length)\n        this.buffer = buffer;\n\n        this.byteOffset = ECMAScript.ToUint32(byteOffset);\n        if (this.byteOffset > this.buffer.byteLength) {\n          throw new RangeError(\"byteOffset out of range\");\n        }\n\n        if (this.byteOffset % this.BYTES_PER_ELEMENT) {\n          // The given byteOffset must be a multiple of the element\n          // size of the specific type, otherwise an exception is raised.\n          throw new RangeError(\"ArrayBuffer length minus the byteOffset is not a multiple of the element size.\");\n        }\n\n        if (arguments.length < 3) {\n          this.byteLength = this.buffer.byteLength - this.byteOffset;\n\n          if (this.byteLength % this.BYTES_PER_ELEMENT) {\n            throw new RangeError(\"length of buffer minus byteOffset not a multiple of the element size\");\n          }\n          this.length = this.byteLength / this.BYTES_PER_ELEMENT;\n        } else {\n          this.length = ECMAScript.ToUint32(length);\n          this.byteLength = this.length * this.BYTES_PER_ELEMENT;\n        }\n\n        if ((this.byteOffset + this.byteLength) > this.buffer.byteLength) {\n          throw new RangeError(\"byteOffset and length reference an area beyond the end of the buffer\");\n        }\n      } else {\n        throw new TypeError(\"Unexpected argument type(s)\");\n      }\n\n      this.constructor = ctor;\n\n      configureProperties(this);\n      makeArrayAccessors(this);\n    };\n\n    ctor.prototype = new ArrayBufferView();\n    ctor.prototype.BYTES_PER_ELEMENT = bytesPerElement;\n    ctor.prototype._pack = pack;\n    ctor.prototype._unpack = unpack;\n    ctor.BYTES_PER_ELEMENT = bytesPerElement;\n\n    // getter type (unsigned long index);\n    ctor.prototype._getter = function(index) {\n      if (arguments.length < 1) throw new SyntaxError(\"Not enough arguments\");\n\n      index = ECMAScript.ToUint32(index);\n      if (index >= this.length) {\n        return undefined;\n      }\n\n      var bytes = [], i, o;\n      for (i = 0, o = this.byteOffset + index * this.BYTES_PER_ELEMENT;\n           i < this.BYTES_PER_ELEMENT;\n           i += 1, o += 1) {\n        bytes.push(this.buffer._bytes[o]);\n      }\n      return this._unpack(bytes);\n    };\n\n    // NONSTANDARD: convenience alias for getter: type get(unsigned long index);\n    ctor.prototype.get = ctor.prototype._getter;\n\n    // setter void (unsigned long index, type value);\n    ctor.prototype._setter = function(index, value) {\n      if (arguments.length < 2) throw new SyntaxError(\"Not enough arguments\");\n\n      index = ECMAScript.ToUint32(index);\n      if (index >= this.length) {\n        return undefined;\n      }\n\n      var bytes = this._pack(value), i, o;\n      for (i = 0, o = this.byteOffset + index * this.BYTES_PER_ELEMENT;\n           i < this.BYTES_PER_ELEMENT;\n           i += 1, o += 1) {\n        this.buffer._bytes[o] = bytes[i];\n      }\n    };\n\n    // void set(TypedArray array, optional unsigned long offset);\n    // void set(sequence<type> array, optional unsigned long offset);\n    ctor.prototype.set = function(index, value) {\n      if (arguments.length < 1) throw new SyntaxError(\"Not enough arguments\");\n      var array, sequence, offset, len,\n          i, s, d,\n          byteOffset, byteLength, tmp;\n\n      if (typeof arguments[0] === 'object' && arguments[0].constructor === this.constructor) {\n        // void set(TypedArray array, optional unsigned long offset);\n        array = arguments[0];\n        offset = ECMAScript.ToUint32(arguments[1]);\n\n        if (offset + array.length > this.length) {\n          throw new RangeError(\"Offset plus length of array is out of range\");\n        }\n\n        byteOffset = this.byteOffset + offset * this.BYTES_PER_ELEMENT;\n        byteLength = array.length * this.BYTES_PER_ELEMENT;\n\n        if (array.buffer === this.buffer) {\n          tmp = [];\n          for (i = 0, s = array.byteOffset; i < byteLength; i += 1, s += 1) {\n            tmp[i] = array.buffer._bytes[s];\n          }\n          for (i = 0, d = byteOffset; i < byteLength; i += 1, d += 1) {\n            this.buffer._bytes[d] = tmp[i];\n          }\n        } else {\n          for (i = 0, s = array.byteOffset, d = byteOffset;\n               i < byteLength; i += 1, s += 1, d += 1) {\n            this.buffer._bytes[d] = array.buffer._bytes[s];\n          }\n        }\n      } else if (typeof arguments[0] === 'object' && typeof arguments[0].length !== 'undefined') {\n        // void set(sequence<type> array, optional unsigned long offset);\n        sequence = arguments[0];\n        len = ECMAScript.ToUint32(sequence.length);\n        offset = ECMAScript.ToUint32(arguments[1]);\n\n        if (offset + len > this.length) {\n          throw new RangeError(\"Offset plus length of array is out of range\");\n        }\n\n        for (i = 0; i < len; i += 1) {\n          s = sequence[i];\n          this._setter(offset + i, Number(s));\n        }\n      } else {\n        throw new TypeError(\"Unexpected argument type(s)\");\n      }\n    };\n\n    // TypedArray subarray(long begin, optional long end);\n    ctor.prototype.subarray = function(start, end) {\n      function clamp(v, min, max) { return v < min ? min : v > max ? max : v; }\n\n      start = ECMAScript.ToInt32(start);\n      end = ECMAScript.ToInt32(end);\n\n      if (arguments.length < 1) { start = 0; }\n      if (arguments.length < 2) { end = this.length; }\n\n      if (start < 0) { start = this.length + start; }\n      if (end < 0) { end = this.length + end; }\n\n      start = clamp(start, 0, this.length);\n      end = clamp(end, 0, this.length);\n\n      var len = end - start;\n      if (len < 0) {\n        len = 0;\n      }\n\n      return new this.constructor(\n        this.buffer, this.byteOffset + start * this.BYTES_PER_ELEMENT, len);\n    };\n\n    return ctor;\n  }\n\n  var Int8Array = makeConstructor(1, packI8, unpackI8);\n  var Uint8Array = makeConstructor(1, packU8, unpackU8);\n  var Uint8ClampedArray = makeConstructor(1, packU8Clamped, unpackU8);\n  var Int16Array = makeConstructor(2, packI16, unpackI16);\n  var Uint16Array = makeConstructor(2, packU16, unpackU16);\n  var Int32Array = makeConstructor(4, packI32, unpackI32);\n  var Uint32Array = makeConstructor(4, packU32, unpackU32);\n  var Float32Array = makeConstructor(4, packF32, unpackF32);\n  var Float64Array = makeConstructor(8, packF64, unpackF64);\n\n  exports.Int8Array = exports.Int8Array || Int8Array;\n  exports.Uint8Array = exports.Uint8Array || Uint8Array;\n  exports.Uint8ClampedArray = exports.Uint8ClampedArray || Uint8ClampedArray;\n  exports.Int16Array = exports.Int16Array || Int16Array;\n  exports.Uint16Array = exports.Uint16Array || Uint16Array;\n  exports.Int32Array = exports.Int32Array || Int32Array;\n  exports.Uint32Array = exports.Uint32Array || Uint32Array;\n  exports.Float32Array = exports.Float32Array || Float32Array;\n  exports.Float64Array = exports.Float64Array || Float64Array;\n}());\n\n//\n// 6 The DataView View Type\n//\n\n(function() {\n  function r(array, index) {\n    return ECMAScript.IsCallable(array.get) ? array.get(index) : array[index];\n  }\n\n  var IS_BIG_ENDIAN = (function() {\n    var u16array = new(exports.Uint16Array)([0x1234]),\n        u8array = new(exports.Uint8Array)(u16array.buffer);\n    return r(u8array, 0) === 0x12;\n  }());\n\n  // Constructor(ArrayBuffer buffer,\n  //             optional unsigned long byteOffset,\n  //             optional unsigned long byteLength)\n  /** @constructor */\n  var DataView = function DataView(buffer, byteOffset, byteLength) {\n    if (arguments.length === 0) {\n      buffer = new exports.ArrayBuffer(0);\n    } else if (!(buffer instanceof exports.ArrayBuffer || ECMAScript.Class(buffer) === 'ArrayBuffer')) {\n      throw new TypeError(\"TypeError\");\n    }\n\n    this.buffer = buffer || new exports.ArrayBuffer(0);\n\n    this.byteOffset = ECMAScript.ToUint32(byteOffset);\n    if (this.byteOffset > this.buffer.byteLength) {\n      throw new RangeError(\"byteOffset out of range\");\n    }\n\n    if (arguments.length < 3) {\n      this.byteLength = this.buffer.byteLength - this.byteOffset;\n    } else {\n      this.byteLength = ECMAScript.ToUint32(byteLength);\n    }\n\n    if ((this.byteOffset + this.byteLength) > this.buffer.byteLength) {\n      throw new RangeError(\"byteOffset and length reference an area beyond the end of the buffer\");\n    }\n\n    configureProperties(this);\n  };\n\n  function makeGetter(arrayType) {\n    return function(byteOffset, littleEndian) {\n\n      byteOffset = ECMAScript.ToUint32(byteOffset);\n\n      if (byteOffset + arrayType.BYTES_PER_ELEMENT > this.byteLength) {\n        throw new RangeError(\"Array index out of range\");\n      }\n      byteOffset += this.byteOffset;\n\n      var uint8Array = new exports.Uint8Array(this.buffer, byteOffset, arrayType.BYTES_PER_ELEMENT),\n          bytes = [], i;\n      for (i = 0; i < arrayType.BYTES_PER_ELEMENT; i += 1) {\n        bytes.push(r(uint8Array, i));\n      }\n\n      if (Boolean(littleEndian) === Boolean(IS_BIG_ENDIAN)) {\n        bytes.reverse();\n      }\n\n      return r(new arrayType(new exports.Uint8Array(bytes).buffer), 0);\n    };\n  }\n\n  DataView.prototype.getUint8 = makeGetter(exports.Uint8Array);\n  DataView.prototype.getInt8 = makeGetter(exports.Int8Array);\n  DataView.prototype.getUint16 = makeGetter(exports.Uint16Array);\n  DataView.prototype.getInt16 = makeGetter(exports.Int16Array);\n  DataView.prototype.getUint32 = makeGetter(exports.Uint32Array);\n  DataView.prototype.getInt32 = makeGetter(exports.Int32Array);\n  DataView.prototype.getFloat32 = makeGetter(exports.Float32Array);\n  DataView.prototype.getFloat64 = makeGetter(exports.Float64Array);\n\n  function makeSetter(arrayType) {\n    return function(byteOffset, value, littleEndian) {\n\n      byteOffset = ECMAScript.ToUint32(byteOffset);\n      if (byteOffset + arrayType.BYTES_PER_ELEMENT > this.byteLength) {\n        throw new RangeError(\"Array index out of range\");\n      }\n\n      // Get bytes\n      var typeArray = new arrayType([value]),\n          byteArray = new exports.Uint8Array(typeArray.buffer),\n          bytes = [], i, byteView;\n\n      for (i = 0; i < arrayType.BYTES_PER_ELEMENT; i += 1) {\n        bytes.push(r(byteArray, i));\n      }\n\n      // Flip if necessary\n      if (Boolean(littleEndian) === Boolean(IS_BIG_ENDIAN)) {\n        bytes.reverse();\n      }\n\n      // Write them\n      byteView = new exports.Uint8Array(this.buffer, byteOffset, arrayType.BYTES_PER_ELEMENT);\n      byteView.set(bytes);\n    };\n  }\n\n  DataView.prototype.setUint8 = makeSetter(exports.Uint8Array);\n  DataView.prototype.setInt8 = makeSetter(exports.Int8Array);\n  DataView.prototype.setUint16 = makeSetter(exports.Uint16Array);\n  DataView.prototype.setInt16 = makeSetter(exports.Int16Array);\n  DataView.prototype.setUint32 = makeSetter(exports.Uint32Array);\n  DataView.prototype.setInt32 = makeSetter(exports.Int32Array);\n  DataView.prototype.setFloat32 = makeSetter(exports.Float32Array);\n  DataView.prototype.setFloat64 = makeSetter(exports.Float64Array);\n\n  exports.DataView = exports.DataView || DataView;\n\n}());\n","'use strict';\nrequire('./patch-core');\nconst inherits = require('util').inherits;\nconst promisify = require('es6-promisify');\nconst EventEmitter = require('events').EventEmitter;\n\nmodule.exports = Agent;\n\nfunction isAgent(v) {\n  return v && typeof v.addRequest === 'function';\n}\n\n/**\n * Base `http.Agent` implementation.\n * No pooling/keep-alive is implemented by default.\n *\n * @param {Function} callback\n * @api public\n */\nfunction Agent(callback, _opts) {\n  if (!(this instanceof Agent)) {\n    return new Agent(callback, _opts);\n  }\n\n  EventEmitter.call(this);\n\n  // The callback gets promisified if it has 3 parameters\n  // (i.e. it has a callback function) lazily\n  this._promisifiedCallback = false;\n\n  let opts = _opts;\n  if ('function' === typeof callback) {\n    this.callback = callback;\n  } else if (callback) {\n    opts = callback;\n  }\n\n  // timeout for the socket to be returned from the callback\n  this.timeout = (opts && opts.timeout) || null;\n\n  this.options = opts;\n}\ninherits(Agent, EventEmitter);\n\n/**\n * Override this function in your subclass!\n */\nAgent.prototype.callback = function callback(req, opts) {\n  throw new Error(\n    '\"agent-base\" has no default implementation, you must subclass and override `callback()`'\n  );\n};\n\n/**\n * Called by node-core's \"_http_client.js\" module when creating\n * a new HTTP request with this Agent instance.\n *\n * @api public\n */\nAgent.prototype.addRequest = function addRequest(req, _opts) {\n  const ownOpts = Object.assign({}, _opts);\n\n  // Set default `host` for HTTP to localhost\n  if (null == ownOpts.host) {\n    ownOpts.host = 'localhost';\n  }\n\n  // Set default `port` for HTTP if none was explicitly specified\n  if (null == ownOpts.port) {\n    ownOpts.port = ownOpts.secureEndpoint ? 443 : 80;\n  }\n\n  const opts = Object.assign({}, this.options, ownOpts);\n\n  if (opts.host && opts.path) {\n    // If both a `host` and `path` are specified then it's most likely the\n    // result of a `url.parse()` call... we need to remove the `path` portion so\n    // that `net.connect()` doesn't attempt to open that as a unix socket file.\n    delete opts.path;\n  }\n\n  delete opts.agent;\n  delete opts.hostname;\n  delete opts._defaultAgent;\n  delete opts.defaultPort;\n  delete opts.createConnection;\n\n  // Hint to use \"Connection: close\"\n  // XXX: non-documented `http` module API :(\n  req._last = true;\n  req.shouldKeepAlive = false;\n\n  // Create the `stream.Duplex` instance\n  let timeout;\n  let timedOut = false;\n  const timeoutMs = this.timeout;\n  const freeSocket = this.freeSocket;\n\n  function onerror(err) {\n    if (req._hadError) return;\n    req.emit('error', err);\n    // For Safety. Some additional errors might fire later on\n    // and we need to make sure we don't double-fire the error event.\n    req._hadError = true;\n  }\n\n  function ontimeout() {\n    timeout = null;\n    timedOut = true;\n    const err = new Error(\n      'A \"socket\" was not created for HTTP request before ' + timeoutMs + 'ms'\n    );\n    err.code = 'ETIMEOUT';\n    onerror(err);\n  }\n\n  function callbackError(err) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    onerror(err);\n  }\n\n  function onsocket(socket) {\n    if (timedOut) return;\n    if (timeout != null) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n    if (isAgent(socket)) {\n      // `socket` is actually an http.Agent instance, so relinquish\n      // responsibility for this `req` to the Agent from here on\n      socket.addRequest(req, opts);\n    } else if (socket) {\n      function onfree() {\n        freeSocket(socket, opts);\n      }\n      socket.on('free', onfree);\n      req.onSocket(socket);\n    } else {\n      const err = new Error(\n        'no Duplex stream was returned to agent-base for `' + req.method + ' ' + req.path + '`'\n      );\n      onerror(err);\n    }\n  }\n\n  if (!this._promisifiedCallback && this.callback.length >= 3) {\n    // Legacy callback function - convert to a Promise\n    this.callback = promisify(this.callback, this);\n    this._promisifiedCallback = true;\n  }\n\n  if (timeoutMs > 0) {\n    timeout = setTimeout(ontimeout, timeoutMs);\n  }\n\n  try {\n    Promise.resolve(this.callback(req, opts)).then(onsocket, callbackError);\n  } catch (err) {\n    Promise.reject(err).catch(callbackError);\n  }\n};\n\nAgent.prototype.freeSocket = function freeSocket(socket, opts) {\n  // TODO reuse sockets\n  socket.destroy();\n};\n","'use strict';\nconst url = require('url');\nconst https = require('https');\n\n/**\n * This currently needs to be applied to all Node.js versions\n * in order to determine if the `req` is an HTTP or HTTPS request.\n *\n * There is currently no PR attempting to move this property upstream.\n */\nhttps.request = (function(request) {\n  return function(_options, cb) {\n    let options;\n    if (typeof _options === 'string') {\n      options = url.parse(_options);\n    } else {\n      options = Object.assign({}, _options);\n    }\n    if (null == options.port) {\n      options.port = 443;\n    }\n    options.secureEndpoint = true;\n    return request.call(https, options, cb);\n  };\n})(https.request);\n\n/**\n * This is needed for Node.js >= 9.0.0 to make sure `https.get()` uses the\n * patched `https.request()`.\n *\n * Ref: https://github.com/nodejs/node/commit/5118f31\n */\nhttps.get = function(options, cb) {\n  const req = https.request(options, cb);\n  req.end();\n  return req;\n};\n","\"use strict\";\n\n/* global module, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    // Get a promise object. This may be native, or it may be polyfilled\n\n    var ES6Promise = require(\"./promise.js\");\n\n    /**\n     * thatLooksLikeAPromiseToMe()\n     *\n     * Duck-types a promise.\n     *\n     * @param {object} o\n     * @return {bool} True if this resembles a promise\n     */\n    function thatLooksLikeAPromiseToMe(o) {\n        return o && typeof o.then === \"function\" && typeof o.catch === \"function\";\n    }\n\n    /**\n     * promisify()\n     *\n     * Transforms callback-based function -- func(arg1, arg2 .. argN, callback) -- into\n     * an ES6-compatible Promise. Promisify provides a default callback of the form (error, result)\n     * and rejects when `error` is truthy. You can also supply settings object as the second argument.\n     *\n     * @param {function} original - The function to promisify\n     * @param {object} settings - Settings object\n     * @param {object} settings.thisArg - A `this` context to use. If not set, assume `settings` _is_ `thisArg`\n     * @param {bool} settings.multiArgs - Should multiple arguments be returned as an array?\n     * @return {function} A promisified version of `original`\n     */\n    return function promisify(original, settings) {\n\n        return function () {\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            var returnMultipleArguments = settings && settings.multiArgs;\n\n            var target = void 0;\n            if (settings && settings.thisArg) {\n                target = settings.thisArg;\n            } else if (settings) {\n                target = settings;\n            }\n\n            // Return the promisified function\n            return new ES6Promise(function (resolve, reject) {\n\n                // Append the callback bound to the context\n                args.push(function callback(err) {\n\n                    if (err) {\n                        return reject(err);\n                    }\n\n                    for (var _len2 = arguments.length, values = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                        values[_key2 - 1] = arguments[_key2];\n                    }\n\n                    if (false === !!returnMultipleArguments) {\n                        return resolve(values[0]);\n                    }\n\n                    resolve(values);\n                });\n\n                // Call the function\n                var response = original.apply(target, args);\n\n                // If it looks like original already returns a promise,\n                // then just resolve with that promise. Hopefully, the callback function we added will just be ignored.\n                if (thatLooksLikeAPromiseToMe(response)) {\n                    resolve(response);\n                }\n            });\n        };\n    };\n}();","\"use strict\";\n\n/* global self, window, module, global, require */\nmodule.exports = function () {\n\n    \"use strict\";\n\n    var globalObject = void 0;\n\n    function isFunction(x) {\n        return typeof x === \"function\";\n    }\n\n    // Seek the global object\n    if (global !== undefined) {\n        globalObject = global;\n    } else if (window !== undefined && window.document) {\n        globalObject = window;\n    } else {\n        globalObject = self;\n    }\n\n    // Test for any native promise implementation, and if that\n    // implementation appears to conform to the specificaton.\n    // This code mostly nicked from the es6-promise module polyfill\n    // and then fooled with.\n    var hasPromiseSupport = function () {\n\n        // No promise object at all, and it's a non-starter\n        if (!globalObject.hasOwnProperty(\"Promise\")) {\n            return false;\n        }\n\n        // There is a Promise object. Does it conform to the spec?\n        var P = globalObject.Promise;\n\n        // Some of these methods are missing from\n        // Firefox/Chrome experimental implementations\n        if (!P.hasOwnProperty(\"resolve\") || !P.hasOwnProperty(\"reject\")) {\n            return false;\n        }\n\n        if (!P.hasOwnProperty(\"all\") || !P.hasOwnProperty(\"race\")) {\n            return false;\n        }\n\n        // Older version of the spec had a resolver object\n        // as the arg rather than a function\n        return function () {\n\n            var resolve = void 0;\n\n            var p = new globalObject.Promise(function (r) {\n                resolve = r;\n            });\n\n            if (p) {\n                return isFunction(resolve);\n            }\n\n            return false;\n        }();\n    }();\n\n    // Export the native Promise implementation if it\n    // looks like it matches the spec\n    if (hasPromiseSupport) {\n        return globalObject.Promise;\n    }\n\n    //  Otherwise, return the es6-promise polyfill by @jaffathecake.\n    return require(\"es6-promise\").Promise;\n}();","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.5+7f2b526d\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).replace(/\\s*\\n\\s*/g, ' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { helper, assert } = require('./helper');\nconst {Target} = require('./Target');\nconst EventEmitter = require('events');\nconst {TaskQueue} = require('./TaskQueue');\nconst {Connection} = require('./Connection');\n\nclass Browser extends EventEmitter {\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Array<string>} contextIds\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {?Puppeteer.ChildProcess} process\n   * @param {(function():Promise)=} closeCallback\n   */\n  constructor(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback) {\n    super();\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._process = process;\n    this._screenshotTaskQueue = new TaskQueue();\n    this._connection = connection;\n    this._closeCallback = closeCallback || new Function();\n\n    this._defaultContext = new BrowserContext(this._connection, this, null);\n    /** @type {Map<string, BrowserContext>} */\n    this._contexts = new Map();\n    for (const contextId of contextIds)\n      this._contexts.set(contextId, new BrowserContext(this._connection, this, contextId));\n\n    /** @type {Map<string, Target>} */\n    this._targets = new Map();\n    this._connection.on(Connection.Events.Disconnected, () => this.emit(Browser.Events.Disconnected));\n    this._connection.on('Target.targetCreated', this._targetCreated.bind(this));\n    this._connection.on('Target.targetDestroyed', this._targetDestroyed.bind(this));\n    this._connection.on('Target.targetInfoChanged', this._targetInfoChanged.bind(this));\n  }\n\n  /**\n   * @return {?Puppeteer.ChildProcess}\n   */\n  process() {\n    return this._process;\n  }\n\n  /**\n   * @return {!Promise<!BrowserContext>}\n   */\n  async createIncognitoBrowserContext() {\n    const {browserContextId} = await this._connection.send('Target.createBrowserContext');\n    const context = new BrowserContext(this._connection, this, browserContextId);\n    this._contexts.set(browserContextId, context);\n    return context;\n  }\n\n  /**\n   * @return {!Array<!BrowserContext>}\n   */\n  browserContexts() {\n    return [this._defaultContext, ...Array.from(this._contexts.values())];\n  }\n\n  /**\n   * @return {!BrowserContext}\n   */\n  defaultBrowserContext() {\n    return this._defaultContext;\n  }\n\n  /**\n   * @param {?string} contextId\n   */\n  async _disposeContext(contextId) {\n    await this._connection.send('Target.disposeBrowserContext', {browserContextId: contextId || undefined});\n    this._contexts.delete(contextId);\n  }\n\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Array<string>} contextIds\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {?Puppeteer.ChildProcess} process\n   * @param {function()=} closeCallback\n   */\n  static async create(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback) {\n    const browser = new Browser(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback);\n    await connection.send('Target.setDiscoverTargets', {discover: true});\n    return browser;\n  }\n\n  /**\n   * @param {!Protocol.Target.targetCreatedPayload} event\n   */\n  async _targetCreated(event) {\n    const targetInfo = event.targetInfo;\n    const {browserContextId} = targetInfo;\n    const context = (browserContextId && this._contexts.has(browserContextId)) ? this._contexts.get(browserContextId) : this._defaultContext;\n\n    const target = new Target(targetInfo, context, () => this._connection.createSession(targetInfo), this._ignoreHTTPSErrors, this._defaultViewport, this._screenshotTaskQueue);\n    assert(!this._targets.has(event.targetInfo.targetId), 'Target should not exist before targetCreated');\n    this._targets.set(event.targetInfo.targetId, target);\n\n    if (await target._initializedPromise) {\n      this.emit(Browser.Events.TargetCreated, target);\n      context.emit(BrowserContext.Events.TargetCreated, target);\n    }\n  }\n\n  /**\n   * @param {{targetId: string}} event\n   */\n  async _targetDestroyed(event) {\n    const target = this._targets.get(event.targetId);\n    target._initializedCallback(false);\n    this._targets.delete(event.targetId);\n    target._closedCallback();\n    if (await target._initializedPromise) {\n      this.emit(Browser.Events.TargetDestroyed, target);\n      target.browserContext().emit(BrowserContext.Events.TargetDestroyed, target);\n    }\n  }\n\n  /**\n   * @param {!Protocol.Target.targetInfoChangedPayload} event\n   */\n  _targetInfoChanged(event) {\n    const target = this._targets.get(event.targetInfo.targetId);\n    assert(target, 'target should exist before targetInfoChanged');\n    const previousURL = target.url();\n    const wasInitialized = target._isInitialized;\n    target._targetInfoChanged(event.targetInfo);\n    if (wasInitialized && previousURL !== target.url()) {\n      this.emit(Browser.Events.TargetChanged, target);\n      target.browserContext().emit(BrowserContext.Events.TargetChanged, target);\n    }\n  }\n\n  /**\n   * @return {string}\n   */\n  wsEndpoint() {\n    return this._connection.url();\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  async newPage() {\n    return this._defaultContext.newPage();\n  }\n\n  /**\n   * @param {?string} contextId\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  async _createPageInContext(contextId) {\n    const {targetId} = await this._connection.send('Target.createTarget', {url: 'about:blank', browserContextId: contextId || undefined});\n    const target = await this._targets.get(targetId);\n    assert(await target._initializedPromise, 'Failed to create target for page');\n    const page = await target.page();\n    return page;\n  }\n\n  /**\n   * @return {!Array<!Target>}\n   */\n  targets() {\n    return Array.from(this._targets.values()).filter(target => target._isInitialized);\n  }\n\n  /**\n   * @return {!Target}\n   */\n  target() {\n    return this.targets().find(target => target.type() === 'browser');\n  }\n\n  /**\n   * @param {function(!Target):boolean} predicate\n   * @param {{timeout?: number}=} options\n   * @return {!Promise<!Target>}\n   */\n  async waitForTarget(predicate, options = {}) {\n    const {\n      timeout = 30000\n    } = options;\n    const existingTarget = this.targets().find(predicate);\n    if (existingTarget)\n      return existingTarget;\n    let resolve;\n    const targetPromise = new Promise(x => resolve = x);\n    this.on(Browser.Events.TargetCreated, check);\n    this.on(Browser.Events.TargetChanged, check);\n    try {\n      if (!timeout)\n        return await targetPromise;\n      return await helper.waitWithTimeout(targetPromise, 'target', timeout);\n    } finally {\n      this.removeListener(Browser.Events.TargetCreated, check);\n      this.removeListener(Browser.Events.TargetChanged, check);\n    }\n\n    /**\n     * @param {!Target} target\n     */\n    function check(target) {\n      if (predicate(target))\n        resolve(target);\n    }\n  }\n\n  /**\n   * @return {!Promise<!Array<!Puppeteer.Page>>}\n   */\n  async pages() {\n    const contextPages = await Promise.all(this.browserContexts().map(context => context.pages()));\n    // Flatten array.\n    return contextPages.reduce((acc, x) => acc.concat(x), []);\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async version() {\n    const version = await this._getVersion();\n    return version.product;\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async userAgent() {\n    const version = await this._getVersion();\n    return version.userAgent;\n  }\n\n  async close() {\n    await this._closeCallback.call(null);\n    this.disconnect();\n  }\n\n  disconnect() {\n    this._connection.dispose();\n  }\n\n  /**\n   * @return {!Promise<!Object>}\n   */\n  _getVersion() {\n    return this._connection.send('Browser.getVersion');\n  }\n}\n\n/** @enum {string} */\nBrowser.Events = {\n  TargetCreated: 'targetcreated',\n  TargetDestroyed: 'targetdestroyed',\n  TargetChanged: 'targetchanged',\n  Disconnected: 'disconnected'\n};\n\nclass BrowserContext extends EventEmitter {\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Browser} browser\n   * @param {?string} contextId\n   */\n  constructor(connection, browser, contextId) {\n    super();\n    this._connection = connection;\n    this._browser = browser;\n    this._id = contextId;\n  }\n\n  /**\n   * @return {!Array<!Target>} target\n   */\n  targets() {\n    return this._browser.targets().filter(target => target.browserContext() === this);\n  }\n\n  /**\n   * @param {function(!Target):boolean} predicate\n   * @param {{timeout?: number}=} options\n   * @return {!Promise<!Target>}\n   */\n  waitForTarget(predicate, options) {\n    return this._browser.waitForTarget(target => target.browserContext() === this && predicate(target), options);\n  }\n\n  /**\n   * @return {!Promise<!Array<!Puppeteer.Page>>}\n   */\n  async pages() {\n    const pages = await Promise.all(\n        this.targets()\n            .filter(target => target.type() === 'page')\n            .map(target => target.page())\n    );\n    return pages.filter(page => !!page);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isIncognito() {\n    return !!this._id;\n  }\n\n  /**\n   * @param {string} origin\n   * @param {!Array<string>} permissions\n   */\n  async overridePermissions(origin, permissions) {\n    const webPermissionToProtocol = new Map([\n      ['geolocation', 'geolocation'],\n      ['midi', 'midi'],\n      ['notifications', 'notifications'],\n      ['push', 'push'],\n      ['camera', 'videoCapture'],\n      ['microphone', 'audioCapture'],\n      ['background-sync', 'backgroundSync'],\n      ['ambient-light-sensor', 'sensors'],\n      ['accelerometer', 'sensors'],\n      ['gyroscope', 'sensors'],\n      ['magnetometer', 'sensors'],\n      ['accessibility-events', 'accessibilityEvents'],\n      ['clipboard-read', 'clipboardRead'],\n      ['clipboard-write', 'clipboardWrite'],\n      ['payment-handler', 'paymentHandler'],\n      // chrome-specific permissions we have.\n      ['midi-sysex', 'midiSysex'],\n    ]);\n    permissions = permissions.map(permission => {\n      const protocolPermission = webPermissionToProtocol.get(permission);\n      if (!protocolPermission)\n        throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    await this._connection.send('Browser.grantPermissions', {origin, browserContextId: this._id || undefined, permissions});\n  }\n\n  async clearPermissionOverrides() {\n    await this._connection.send('Browser.resetPermissions', {browserContextId: this._id || undefined});\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  newPage() {\n    return this._browser._createPageInContext(this._id);\n  }\n\n  /**\n   * @return {!Browser}\n   */\n  browser() {\n    return this._browser;\n  }\n\n  async close() {\n    assert(this._id, 'Non-incognito profiles cannot be closed!');\n    await this._browser._disposeContext(this._id);\n  }\n}\n\n/** @enum {string} */\nBrowserContext.Events = {\n  TargetCreated: 'targetcreated',\n  TargetDestroyed: 'targetdestroyed',\n  TargetChanged: 'targetchanged',\n};\n\nhelper.tracePublicAPI(BrowserContext);\nhelper.tracePublicAPI(Browser);\n\nmodule.exports = {Browser, BrowserContext};\n","const {Page} = require('./Page');\nconst {helper} = require('./helper');\n\nclass Target {\n  /**\n   * @param {!Protocol.Target.TargetInfo} targetInfo\n   * @param {!Puppeteer.BrowserContext} browserContext\n   * @param {!function():!Promise<!Puppeteer.CDPSession>} sessionFactory\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {!Puppeteer.TaskQueue} screenshotTaskQueue\n   */\n  constructor(targetInfo, browserContext, sessionFactory, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {\n    this._targetInfo = targetInfo;\n    this._browserContext = browserContext;\n    this._targetId = targetInfo.targetId;\n    this._sessionFactory = sessionFactory;\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._screenshotTaskQueue = screenshotTaskQueue;\n    /** @type {?Promise<!Puppeteer.Page>} */\n    this._pagePromise = null;\n    this._initializedPromise = new Promise(fulfill => this._initializedCallback = fulfill);\n    this._isClosedPromise = new Promise(fulfill => this._closedCallback = fulfill);\n    this._isInitialized = this._targetInfo.type !== 'page' || this._targetInfo.url !== '';\n    if (this._isInitialized)\n      this._initializedCallback(true);\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.CDPSession>}\n   */\n  createCDPSession() {\n    return this._sessionFactory();\n  }\n\n  /**\n   * @return {!Promise<?Page>}\n   */\n  async page() {\n    if ((this._targetInfo.type === 'page' || this._targetInfo.type === 'background_page') && !this._pagePromise) {\n      this._pagePromise = this._sessionFactory()\n          .then(client => Page.create(client, this, this._ignoreHTTPSErrors, this._defaultViewport, this._screenshotTaskQueue));\n    }\n    return this._pagePromise;\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._targetInfo.url;\n  }\n\n  /**\n   * @return {\"page\"|\"background_page\"|\"service_worker\"|\"other\"|\"browser\"}\n   */\n  type() {\n    const type = this._targetInfo.type;\n    if (type === 'page' || type === 'background_page' || type === 'service_worker' || type === 'browser')\n      return type;\n    return 'other';\n  }\n\n  /**\n   * @return {!Puppeteer.Browser}\n   */\n  browser() {\n    return this._browserContext.browser();\n  }\n\n  /**\n   * @return {!Puppeteer.BrowserContext}\n   */\n  browserContext() {\n    return this._browserContext;\n  }\n\n  /**\n   * @return {?Puppeteer.Target}\n   */\n  opener() {\n    const { openerId } = this._targetInfo;\n    if (!openerId)\n      return null;\n    return this.browser()._targets.get(openerId);\n  }\n\n  /**\n   * @param {!Protocol.Target.TargetInfo} targetInfo\n   */\n  _targetInfoChanged(targetInfo) {\n    this._targetInfo = targetInfo;\n\n    if (!this._isInitialized && (this._targetInfo.type !== 'page' || this._targetInfo.url !== '')) {\n      this._isInitialized = true;\n      this._initializedCallback(true);\n      return;\n    }\n  }\n}\n\nhelper.tracePublicAPI(Target);\n\nmodule.exports = {Target};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst fs = require('fs');\nconst EventEmitter = require('events');\nconst mime = require('mime');\nconst {NetworkManager} = require('./NetworkManager');\nconst {Dialog} = require('./Dialog');\nconst {EmulationManager} = require('./EmulationManager');\nconst {FrameManager} = require('./FrameManager');\nconst {Keyboard, Mouse, Touchscreen} = require('./Input');\nconst Tracing = require('./Tracing');\nconst {helper, debugError, assert} = require('./helper');\nconst {Coverage} = require('./Coverage');\nconst {Worker} = require('./Worker');\nconst {createJSHandle} = require('./ExecutionContext');\nconst {Accessibility} = require('./Accessibility');\nconst writeFileAsync = helper.promisify(fs.writeFile);\n\nclass Page extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Puppeteer.Target} target\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {!Puppeteer.TaskQueue} screenshotTaskQueue\n   * @return {!Promise<!Page>}\n   */\n  static async create(client, target, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {\n\n    await client.send('Page.enable');\n    const {frameTree} = await client.send('Page.getFrameTree');\n    const page = new Page(client, target, frameTree, ignoreHTTPSErrors, screenshotTaskQueue);\n\n    await Promise.all([\n      client.send('Target.setAutoAttach', {autoAttach: true, waitForDebuggerOnStart: false}),\n      client.send('Page.setLifecycleEventsEnabled', { enabled: true }),\n      client.send('Network.enable', {}),\n      client.send('Runtime.enable', {}),\n      client.send('Security.enable', {}),\n      client.send('Performance.enable', {}),\n      client.send('Log.enable', {}),\n    ]);\n    if (ignoreHTTPSErrors)\n      await client.send('Security.setOverrideCertificateErrors', {override: true});\n    // Initialize default page size.\n    if (defaultViewport)\n      await page.setViewport(defaultViewport);\n\n    return page;\n  }\n\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Puppeteer.Target} target\n   * @param {!Protocol.Page.FrameTree} frameTree\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {!Puppeteer.TaskQueue} screenshotTaskQueue\n   */\n  constructor(client, target, frameTree, ignoreHTTPSErrors, screenshotTaskQueue) {\n    super();\n    this._closed = false;\n    this._client = client;\n    this._target = target;\n    this._keyboard = new Keyboard(client);\n    this._mouse = new Mouse(client, this._keyboard);\n    this._touchscreen = new Touchscreen(client, this._keyboard);\n    this._accessibility = new Accessibility(client);\n    this._networkManager = new NetworkManager(client);\n    /** @type {!FrameManager} */\n    this._frameManager = new FrameManager(client, frameTree, this, this._networkManager);\n    this._networkManager.setFrameManager(this._frameManager);\n    this._emulationManager = new EmulationManager(client);\n    this._tracing = new Tracing(client);\n    /** @type {!Map<string, Function>} */\n    this._pageBindings = new Map();\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._coverage = new Coverage(client);\n    this._javascriptEnabled = true;\n    /** @type {?Puppeteer.Viewport} */\n    this._viewport = null;\n\n    this._screenshotTaskQueue = screenshotTaskQueue;\n\n    /** @type {!Map<string, Worker>} */\n    this._workers = new Map();\n    client.on('Target.attachedToTarget', event => {\n      if (event.targetInfo.type !== 'worker') {\n        // If we don't detach from service workers, they will never die.\n        client.send('Target.detachFromTarget', {\n          sessionId: event.sessionId\n        }).catch(debugError);\n        return;\n      }\n      const session = client._createSession(event.targetInfo.type, event.sessionId);\n      const worker = new Worker(session, event.targetInfo.url, this._addConsoleMessage.bind(this), this._handleException.bind(this));\n      this._workers.set(event.sessionId, worker);\n      this.emit(Page.Events.WorkerCreated, worker);\n\n    });\n    client.on('Target.detachedFromTarget', event => {\n      const worker = this._workers.get(event.sessionId);\n      if (!worker)\n        return;\n      this.emit(Page.Events.WorkerDestroyed, worker);\n      this._workers.delete(event.sessionId);\n    });\n\n    this._frameManager.on(FrameManager.Events.FrameAttached, event => this.emit(Page.Events.FrameAttached, event));\n    this._frameManager.on(FrameManager.Events.FrameDetached, event => this.emit(Page.Events.FrameDetached, event));\n    this._frameManager.on(FrameManager.Events.FrameNavigated, event => this.emit(Page.Events.FrameNavigated, event));\n\n    this._networkManager.on(NetworkManager.Events.Request, event => this.emit(Page.Events.Request, event));\n    this._networkManager.on(NetworkManager.Events.Response, event => this.emit(Page.Events.Response, event));\n    this._networkManager.on(NetworkManager.Events.RequestFailed, event => this.emit(Page.Events.RequestFailed, event));\n    this._networkManager.on(NetworkManager.Events.RequestFinished, event => this.emit(Page.Events.RequestFinished, event));\n\n    client.on('Page.domContentEventFired', event => this.emit(Page.Events.DOMContentLoaded));\n    client.on('Page.loadEventFired', event => this.emit(Page.Events.Load));\n    client.on('Runtime.consoleAPICalled', event => this._onConsoleAPI(event));\n    client.on('Runtime.bindingCalled', event => this._onBindingCalled(event));\n    client.on('Page.javascriptDialogOpening', event => this._onDialog(event));\n    client.on('Runtime.exceptionThrown', exception => this._handleException(exception.exceptionDetails));\n    client.on('Security.certificateError', event => this._onCertificateError(event));\n    client.on('Inspector.targetCrashed', event => this._onTargetCrashed());\n    client.on('Performance.metrics', event => this._emitMetrics(event));\n    client.on('Log.entryAdded', event => this._onLogEntryAdded(event));\n    this._target._isClosedPromise.then(() => {\n      this.emit(Page.Events.Close);\n      this._closed = true;\n    });\n  }\n\n  /**\n   * @param {!{longitude: number, latitude: number, accuracy: (number|undefined)}} options\n   */\n  async setGeolocation(options) {\n    const { longitude, latitude, accuracy = 0} = options;\n    if (longitude < -180 || longitude > 180)\n      throw new Error(`Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`);\n    if (latitude < -90 || latitude > 90)\n      throw new Error(`Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`);\n    if (accuracy < 0)\n      throw new Error(`Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`);\n    await this._client.send('Emulation.setGeolocationOverride', {longitude, latitude, accuracy});\n  }\n\n  /**\n   * @return {!Puppeteer.Target}\n   */\n  target() {\n    return this._target;\n  }\n\n  /**\n   * @return {!Puppeteer.Browser}\n   */\n  browser() {\n    return this._target.browser();\n  }\n\n  _onTargetCrashed() {\n    this.emit('error', new Error('Page crashed!'));\n  }\n\n  /**\n   * @param {!Protocol.Log.entryAddedPayload} event\n   */\n  _onLogEntryAdded(event) {\n    const {level, text, args, source} = event.entry;\n    if (args)\n      args.map(arg => helper.releaseObject(this._client, arg));\n    if (source !== 'worker')\n      this.emit(Page.Events.Console, new ConsoleMessage(level, text));\n  }\n\n  /**\n   * @return {!Puppeteer.Frame}\n   */\n  mainFrame() {\n    return this._frameManager.mainFrame();\n  }\n\n  /**\n   * @return {!Keyboard}\n   */\n  get keyboard() {\n    return this._keyboard;\n  }\n\n  /**\n   * @return {!Touchscreen}\n   */\n  get touchscreen() {\n    return this._touchscreen;\n  }\n\n  /**\n   * @return {!Coverage}\n   */\n  get coverage() {\n    return this._coverage;\n  }\n\n  /**\n   * @return {!Tracing}\n   */\n  get tracing() {\n    return this._tracing;\n  }\n\n  /**\n   * @return {!Accessibility}\n   */\n  get accessibility() {\n    return this._accessibility;\n  }\n\n  /**\n   * @return {!Array<Puppeteer.Frame>}\n   */\n  frames() {\n    return this._frameManager.frames();\n  }\n\n  /**\n   * @return {!Array<!Worker>}\n   */\n  workers() {\n    return Array.from(this._workers.values());\n  }\n\n  /**\n   * @param {boolean} value\n   */\n  async setRequestInterception(value) {\n    return this._networkManager.setRequestInterception(value);\n  }\n\n  /**\n   * @param {boolean} enabled\n   */\n  setOfflineMode(enabled) {\n    return this._networkManager.setOfflineMode(enabled);\n  }\n\n  /**\n   * @param {number} timeout\n   */\n  setDefaultNavigationTimeout(timeout) {\n    this._frameManager.setDefaultNavigationTimeout(timeout);\n  }\n\n  /**\n   * @param {!Protocol.Security.certificateErrorPayload} event\n   */\n  _onCertificateError(event) {\n    if (!this._ignoreHTTPSErrors)\n      return;\n    this._client.send('Security.handleCertificateError', {\n      eventId: event.eventId,\n      action: 'continue'\n    }).catch(debugError);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  async $(selector) {\n    return this.mainFrame().$(selector);\n  }\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  async evaluateHandle(pageFunction, ...args) {\n    const context = await this.mainFrame().executionContext();\n    return context.evaluateHandle(pageFunction, ...args);\n  }\n\n  /**\n   * @param {!Puppeteer.JSHandle} prototypeHandle\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  async queryObjects(prototypeHandle) {\n    const context = await this.mainFrame().executionContext();\n    return context.queryObjects(prototypeHandle);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $eval(selector, pageFunction, ...args) {\n    return this.mainFrame().$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $$eval(selector, pageFunction, ...args) {\n    return this.mainFrame().$$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  async $$(selector) {\n    return this.mainFrame().$$(selector);\n  }\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  async $x(expression) {\n    return this.mainFrame().$x(expression);\n  }\n\n  /**\n   * @param {!Array<string>} urls\n   * @return {!Promise<!Array<Network.Cookie>>}\n   */\n  async cookies(...urls) {\n    return (await this._client.send('Network.getCookies', {\n      urls: urls.length ? urls : [this.url()]\n    })).cookies;\n  }\n\n  /**\n   * @param {Array<Protocol.Network.deleteCookiesParameters>} cookies\n   */\n  async deleteCookie(...cookies) {\n    const pageURL = this.url();\n    for (const cookie of cookies) {\n      const item = Object.assign({}, cookie);\n      if (!cookie.url && pageURL.startsWith('http'))\n        item.url = pageURL;\n      await this._client.send('Network.deleteCookies', item);\n    }\n  }\n\n  /**\n   * @param {Array<Network.CookieParam>} cookies\n   */\n  async setCookie(...cookies) {\n    const pageURL = this.url();\n    const startsWithHTTP = pageURL.startsWith('http');\n    const items = cookies.map(cookie => {\n      const item = Object.assign({}, cookie);\n      if (!item.url && startsWithHTTP)\n        item.url = pageURL;\n      assert(\n          item.url !== 'about:blank',\n          `Blank page can not have cookie \"${item.name}\"`\n      );\n      assert(\n          !String.prototype.startsWith.call(item.url || '', 'data:'),\n          `Data URL page can not have cookie \"${item.name}\"`\n      );\n      return item;\n    });\n    await this.deleteCookie(...items);\n    if (items.length)\n      await this._client.send('Network.setCookies', { cookies: items });\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string, type?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async addScriptTag(options) {\n    return this.mainFrame().addScriptTag(options);\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async addStyleTag(options) {\n    return this.mainFrame().addStyleTag(options);\n  }\n\n  /**\n   * @param {string} name\n   * @param {function(?)} puppeteerFunction\n   */\n  async exposeFunction(name, puppeteerFunction) {\n    if (this._pageBindings.has(name))\n      throw new Error(`Failed to add page binding with name ${name}: window['${name}'] already exists!`);\n    this._pageBindings.set(name, puppeteerFunction);\n\n    const expression = helper.evaluationString(addPageBinding, name);\n    await this._client.send('Runtime.addBinding', {name: name});\n    await this._client.send('Page.addScriptToEvaluateOnNewDocument', {source: expression});\n    await Promise.all(this.frames().map(frame => frame.evaluate(expression).catch(debugError)));\n\n    function addPageBinding(bindingName) {\n      const binding = window[bindingName];\n      window[bindingName] = async(...args) => {\n        const me = window[bindingName];\n        let callbacks = me['callbacks'];\n        if (!callbacks) {\n          callbacks = new Map();\n          me['callbacks'] = callbacks;\n        }\n        const seq = (me['lastSeq'] || 0) + 1;\n        me['lastSeq'] = seq;\n        const promise = new Promise((resolve, reject) => callbacks.set(seq, {resolve, reject}));\n        binding(JSON.stringify({name: bindingName, seq, args}));\n        return promise;\n      };\n    }\n  }\n\n  /**\n   * @param {?{username: string, password: string}} credentials\n   */\n  async authenticate(credentials) {\n    return this._networkManager.authenticate(credentials);\n  }\n\n  /**\n   * @param {!Object<string, string>} headers\n   */\n  async setExtraHTTPHeaders(headers) {\n    return this._networkManager.setExtraHTTPHeaders(headers);\n  }\n\n  /**\n   * @param {string} userAgent\n   */\n  async setUserAgent(userAgent) {\n    return this._networkManager.setUserAgent(userAgent);\n  }\n\n  /**\n   * @return {!Promise<!Metrics>}\n   */\n  async metrics() {\n    const response = await this._client.send('Performance.getMetrics');\n    return this._buildMetricsObject(response.metrics);\n  }\n\n  /**\n   * @param {!Protocol.Performance.metricsPayload} event\n   */\n  _emitMetrics(event) {\n    this.emit(Page.Events.Metrics, {\n      title: event.title,\n      metrics: this._buildMetricsObject(event.metrics)\n    });\n  }\n\n  /**\n   * @param {?Array<!Protocol.Performance.Metric>} metrics\n   * @return {!Metrics}\n   */\n  _buildMetricsObject(metrics) {\n    const result = {};\n    for (const metric of metrics || []) {\n      if (supportedMetrics.has(metric.name))\n        result[metric.name] = metric.value;\n    }\n    return result;\n  }\n\n  /**\n   * @param {!Protocol.Runtime.ExceptionDetails} exceptionDetails\n   */\n  _handleException(exceptionDetails) {\n    const message = helper.getExceptionMessage(exceptionDetails);\n    const err = new Error(message);\n    err.stack = ''; // Don't report clientside error with a node stack attached\n    this.emit(Page.Events.PageError, err);\n  }\n\n  /**\n   * @param {!Protocol.Runtime.consoleAPICalledPayload} event\n   */\n  async _onConsoleAPI(event) {\n    const context = this._frameManager.executionContextById(event.executionContextId);\n    const values = event.args.map(arg => createJSHandle(context, arg));\n    this._addConsoleMessage(event.type, values);\n  }\n\n  /**\n   * @param {!Protocol.Runtime.bindingCalledPayload} event\n   */\n  async _onBindingCalled(event) {\n    const {name, seq, args} = JSON.parse(event.payload);\n    let expression = null;\n    try {\n      const result = await this._pageBindings.get(name)(...args);\n      expression = helper.evaluationString(deliverResult, name, seq, result);\n    } catch (error) {\n      if (error instanceof Error)\n        expression = helper.evaluationString(deliverError, name, seq, error.message, error.stack);\n      else\n        expression = helper.evaluationString(deliverErrorValue, name, seq, error);\n    }\n    this._client.send('Runtime.evaluate', { expression, contextId: event.executionContextId }).catch(debugError);\n\n    /**\n     * @param {string} name\n     * @param {number} seq\n     * @param {*} result\n     */\n    function deliverResult(name, seq, result) {\n      window[name]['callbacks'].get(seq).resolve(result);\n      window[name]['callbacks'].delete(seq);\n    }\n\n    /**\n     * @param {string} name\n     * @param {number} seq\n     * @param {string} message\n     * @param {string} stack\n     */\n    function deliverError(name, seq, message, stack) {\n      const error = new Error(message);\n      error.stack = stack;\n      window[name]['callbacks'].get(seq).reject(error);\n      window[name]['callbacks'].delete(seq);\n    }\n\n    /**\n     * @param {string} name\n     * @param {number} seq\n     * @param {*} value\n     */\n    function deliverErrorValue(name, seq, value) {\n      window[name]['callbacks'].get(seq).reject(value);\n      window[name]['callbacks'].delete(seq);\n    }\n  }\n\n  /**\n   * @param {string} type\n   * @param {!Array<!Puppeteer.JSHandle>} args\n   */\n  _addConsoleMessage(type, args) {\n    if (!this.listenerCount(Page.Events.Console)) {\n      args.forEach(arg => arg.dispose());\n      return;\n    }\n    const textTokens = [];\n    for (const arg of args) {\n      const remoteObject = arg._remoteObject;\n      if (remoteObject.objectId)\n        textTokens.push(arg.toString());\n      else\n        textTokens.push(helper.valueFromRemoteObject(remoteObject));\n    }\n    const message = new ConsoleMessage(type, textTokens.join(' '), args);\n    this.emit(Page.Events.Console, message);\n  }\n\n  _onDialog(event) {\n    let dialogType = null;\n    if (event.type === 'alert')\n      dialogType = Dialog.Type.Alert;\n    else if (event.type === 'confirm')\n      dialogType = Dialog.Type.Confirm;\n    else if (event.type === 'prompt')\n      dialogType = Dialog.Type.Prompt;\n    else if (event.type === 'beforeunload')\n      dialogType = Dialog.Type.BeforeUnload;\n    assert(dialogType, 'Unknown javascript dialog type: ' + event.type);\n    const dialog = new Dialog(this._client, dialogType, event.message, event.defaultPrompt);\n    this.emit(Page.Events.Dialog, dialog);\n  }\n\n  /**\n   * @return {!string}\n   */\n  url() {\n    return this.mainFrame().url();\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async content() {\n    return await this._frameManager.mainFrame().content();\n  }\n\n  /**\n   * @param {string} html\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   */\n  async setContent(html, options) {\n    await this._frameManager.mainFrame().setContent(html, options);\n  }\n\n  /**\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async goto(url, options) {\n    return await this._frameManager.mainFrame().goto(url, options);\n  }\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async reload(options) {\n    const [response] = await Promise.all([\n      this.waitForNavigation(options),\n      this._client.send('Page.reload')\n    ]);\n    return response;\n  }\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async waitForNavigation(options = {}) {\n    return await this._frameManager.mainFrame().waitForNavigation(options);\n  }\n\n  /**\n   * @param {(string|Function)} urlOrPredicate\n   * @param {!{timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.Request>}\n   */\n  async waitForRequest(urlOrPredicate, options = {}) {\n    const {\n      timeout = 30000\n    } = options;\n    return helper.waitForEvent(this._networkManager, NetworkManager.Events.Request, request => {\n      if (helper.isString(urlOrPredicate))\n        return (urlOrPredicate === request.url());\n      if (typeof urlOrPredicate === 'function')\n        return !!(urlOrPredicate(request));\n      return false;\n    }, timeout);\n  }\n\n  /**\n   * @param {(string|Function)} urlOrPredicate\n   * @param {!{timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.Response>}\n   */\n  async waitForResponse(urlOrPredicate, options = {}) {\n    const {\n      timeout = 30000\n    } = options;\n    return helper.waitForEvent(this._networkManager, NetworkManager.Events.Response, response => {\n      if (helper.isString(urlOrPredicate))\n        return (urlOrPredicate === response.url());\n      if (typeof urlOrPredicate === 'function')\n        return !!(urlOrPredicate(response));\n      return false;\n    }, timeout);\n  }\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async goBack(options) {\n    return this._go(-1, options);\n  }\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async goForward(options) {\n    return this._go(+1, options);\n  }\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async _go(delta, options) {\n    const history = await this._client.send('Page.getNavigationHistory');\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry)\n      return null;\n    const [response] = await Promise.all([\n      this.waitForNavigation(options),\n      this._client.send('Page.navigateToHistoryEntry', {entryId: entry.id}),\n    ]);\n    return response;\n  }\n\n  async bringToFront() {\n    await this._client.send('Page.bringToFront');\n  }\n\n  /**\n   * @param {!{viewport: !Puppeteer.Viewport, userAgent: string}} options\n   */\n  async emulate(options) {\n    await Promise.all([\n      this.setViewport(options.viewport),\n      this.setUserAgent(options.userAgent)\n    ]);\n  }\n\n  /**\n   * @param {boolean} enabled\n   */\n  async setJavaScriptEnabled(enabled) {\n    if (this._javascriptEnabled === enabled)\n      return;\n    this._javascriptEnabled = enabled;\n    await this._client.send('Emulation.setScriptExecutionDisabled', { value: !enabled });\n  }\n\n  /**\n   * @param {boolean} enabled\n   */\n  async setBypassCSP(enabled) {\n    await this._client.send('Page.setBypassCSP', { enabled });\n  }\n\n  /**\n   * @param {?string} mediaType\n   */\n  async emulateMedia(mediaType) {\n    assert(mediaType === 'screen' || mediaType === 'print' || mediaType === null, 'Unsupported media type: ' + mediaType);\n    await this._client.send('Emulation.setEmulatedMedia', {media: mediaType || ''});\n  }\n\n  /**\n   * @param {!Puppeteer.Viewport} viewport\n   */\n  async setViewport(viewport) {\n    const needsReload = await this._emulationManager.emulateViewport(viewport);\n    this._viewport = viewport;\n    if (needsReload)\n      await this.reload();\n  }\n\n  /**\n   * @return {?Puppeteer.Viewport}\n   */\n  viewport() {\n    return this._viewport;\n  }\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n  async evaluate(pageFunction, ...args) {\n    return this._frameManager.mainFrame().evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   */\n  async evaluateOnNewDocument(pageFunction, ...args) {\n    const source = helper.evaluationString(pageFunction, ...args);\n    await this._client.send('Page.addScriptToEvaluateOnNewDocument', { source });\n  }\n\n  /**\n   * @param {boolean} enabled\n   */\n  async setCacheEnabled(enabled = true) {\n    await this._client.send('Network.setCacheDisabled', {cacheDisabled: !enabled});\n  }\n\n  /**\n   * @param {!ScreenshotOptions=} options\n   * @return {!Promise<!Buffer|!String>}\n   */\n  async screenshot(options = {}) {\n    let screenshotType = null;\n    // options.type takes precedence over inferring the type from options.path\n    // because it may be a 0-length file with no extension created beforehand (i.e. as a temp file).\n    if (options.type) {\n      assert(options.type === 'png' || options.type === 'jpeg', 'Unknown options.type value: ' + options.type);\n      screenshotType = options.type;\n    } else if (options.path) {\n      const mimeType = mime.getType(options.path);\n      if (mimeType === 'image/png')\n        screenshotType = 'png';\n      else if (mimeType === 'image/jpeg')\n        screenshotType = 'jpeg';\n      assert(screenshotType, 'Unsupported screenshot mime type: ' + mimeType);\n    }\n\n    if (!screenshotType)\n      screenshotType = 'png';\n\n    if (options.quality) {\n      assert(screenshotType === 'jpeg', 'options.quality is unsupported for the ' + screenshotType + ' screenshots');\n      assert(typeof options.quality === 'number', 'Expected options.quality to be a number but found ' + (typeof options.quality));\n      assert(Number.isInteger(options.quality), 'Expected options.quality to be an integer');\n      assert(options.quality >= 0 && options.quality <= 100, 'Expected options.quality to be between 0 and 100 (inclusive), got ' + options.quality);\n    }\n    assert(!options.clip || !options.fullPage, 'options.clip and options.fullPage are exclusive');\n    if (options.clip) {\n      assert(typeof options.clip.x === 'number', 'Expected options.clip.x to be a number but found ' + (typeof options.clip.x));\n      assert(typeof options.clip.y === 'number', 'Expected options.clip.y to be a number but found ' + (typeof options.clip.y));\n      assert(typeof options.clip.width === 'number', 'Expected options.clip.width to be a number but found ' + (typeof options.clip.width));\n      assert(typeof options.clip.height === 'number', 'Expected options.clip.height to be a number but found ' + (typeof options.clip.height));\n    }\n    return this._screenshotTaskQueue.postTask(this._screenshotTask.bind(this, screenshotType, options));\n  }\n\n  /**\n   * @param {\"png\"|\"jpeg\"} format\n   * @param {!ScreenshotOptions=} options\n   * @return {!Promise<!Buffer|!String>}\n   */\n  async _screenshotTask(format, options) {\n    await this._client.send('Target.activateTarget', {targetId: this._target._targetId});\n    let clip = options.clip ? Object.assign({}, options['clip'], {scale: 1}) : undefined;\n\n    if (options.fullPage) {\n      const metrics = await this._client.send('Page.getLayoutMetrics');\n      const width = Math.ceil(metrics.contentSize.width);\n      const height = Math.ceil(metrics.contentSize.height);\n\n      // Overwrite clip for full page at all times.\n      clip = { x: 0, y: 0, width, height, scale: 1 };\n      const {\n        isMobile = false,\n        deviceScaleFactor = 1,\n        isLandscape = false\n      } = this._viewport || {};\n      /** @type {!Protocol.Emulation.ScreenOrientation} */\n      const screenOrientation = isLandscape ? { angle: 90, type: 'landscapePrimary' } : { angle: 0, type: 'portraitPrimary' };\n      await this._client.send('Emulation.setDeviceMetricsOverride', { mobile: isMobile, width, height, deviceScaleFactor, screenOrientation });\n    }\n    const shouldSetDefaultBackground = options.omitBackground && format === 'png';\n    if (shouldSetDefaultBackground)\n      await this._client.send('Emulation.setDefaultBackgroundColorOverride', { color: { r: 0, g: 0, b: 0, a: 0 } });\n    const result = await this._client.send('Page.captureScreenshot', { format, quality: options.quality, clip });\n    if (shouldSetDefaultBackground)\n      await this._client.send('Emulation.setDefaultBackgroundColorOverride');\n\n    if (options.fullPage && this._viewport)\n      await this.setViewport(this._viewport);\n\n    const buffer = options.encoding === 'base64' ? result.data : Buffer.from(result.data, 'base64');\n    if (options.path)\n      await writeFileAsync(options.path, buffer);\n    return buffer;\n  }\n\n  /**\n   * @param {!PDFOptions=} options\n   * @return {!Promise<!Buffer>}\n   */\n  async pdf(options = {}) {\n    const {\n      scale = 1,\n      displayHeaderFooter = false,\n      headerTemplate = '',\n      footerTemplate = '',\n      printBackground = false,\n      landscape = false,\n      pageRanges = '',\n      preferCSSPageSize = false,\n      margin = {},\n      path = null\n    } = options;\n\n    let paperWidth = 8.5;\n    let paperHeight = 11;\n    if (options.format) {\n      const format = Page.PaperFormats[options.format.toLowerCase()];\n      assert(format, 'Unknown paper format: ' + options.format);\n      paperWidth = format.width;\n      paperHeight = format.height;\n    } else {\n      paperWidth = convertPrintParameterToInches(options.width) || paperWidth;\n      paperHeight = convertPrintParameterToInches(options.height) || paperHeight;\n    }\n\n    const marginTop = convertPrintParameterToInches(margin.top) || 0;\n    const marginLeft = convertPrintParameterToInches(margin.left) || 0;\n    const marginBottom = convertPrintParameterToInches(margin.bottom) || 0;\n    const marginRight = convertPrintParameterToInches(margin.right) || 0;\n\n    const result = await this._client.send('Page.printToPDF', {\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      paperWidth,\n      paperHeight,\n      marginTop,\n      marginBottom,\n      marginLeft,\n      marginRight,\n      pageRanges,\n      preferCSSPageSize\n    });\n    const buffer = Buffer.from(result.data, 'base64');\n    if (path !== null)\n      await writeFileAsync(path, buffer);\n    return buffer;\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async title() {\n    return this.mainFrame().title();\n  }\n\n  /**\n   * @param {!{runBeforeUnload: (boolean|undefined)}=} options\n   */\n  async close(options = {runBeforeUnload: undefined}) {\n    assert(!!this._client._connection, 'Protocol error: Connection closed. Most likely the page has been closed.');\n    const runBeforeUnload = !!options.runBeforeUnload;\n    if (runBeforeUnload) {\n      await this._client.send('Page.close');\n    } else {\n      await this._client._connection.send('Target.closeTarget', { targetId: this._target._targetId });\n      await this._target._isClosedPromise;\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isClosed() {\n    return this._closed;\n  }\n\n  /**\n   * @return {!Mouse}\n   */\n  get mouse() {\n    return this._mouse;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  click(selector, options = {}) {\n    return this.mainFrame().click(selector, options);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  focus(selector) {\n    return this.mainFrame().focus(selector);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  hover(selector) {\n    return this.mainFrame().hover(selector);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!Array<string>} values\n   * @return {!Promise<!Array<string>>}\n   */\n  select(selector, ...values) {\n    return this.mainFrame().select(selector, ...values);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  tap(selector) {\n    return this.mainFrame().tap(selector);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  type(selector, text, options) {\n    return this.mainFrame().type(selector, text, options);\n  }\n\n  /**\n   * @param {(string|number|Function)} selectorOrFunctionOrTimeout\n   * @param {!Object=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitFor(selectorOrFunctionOrTimeout, options = {}, ...args) {\n    return this.mainFrame().waitFor(selectorOrFunctionOrTimeout, options, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  waitForSelector(selector, options = {}) {\n    return this.mainFrame().waitForSelector(selector, options);\n  }\n\n  /**\n   * @param {string} xpath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  waitForXPath(xpath, options = {}) {\n    return this.mainFrame().waitForXPath(xpath, options);\n  }\n\n  /**\n   * @param {function()} pageFunction\n   * @param {!{polling?: string|number, timeout?: number}=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitForFunction(pageFunction, options = {}, ...args) {\n    return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n  }\n}\n\n/**\n * @typedef {Object} PDFOptions\n * @property {number=} scale\n * @property {boolean=} displayHeaderFooter\n * @property {string=} headerTemplate\n * @property {string=} footerTemplate\n * @property {boolean=} printBackground\n * @property {boolean=} landscape\n * @property {string=} pageRanges\n * @property {string=} format\n * @property {string|number=} width\n * @property {string|number=} height\n * @property {boolean=} preferCSSPageSize\n * @property {!{top?: string|number, bottom?: string|number, left?: string|number, right?: string|number}=} margin\n * @property {string=} path\n */\n\n/**\n * @typedef {Object} Metrics\n * @property {number=} Timestamp\n * @property {number=} Documents\n * @property {number=} Frames\n * @property {number=} JSEventListeners\n * @property {number=} Nodes\n * @property {number=} LayoutCount\n * @property {number=} RecalcStyleCount\n * @property {number=} LayoutDuration\n * @property {number=} RecalcStyleDuration\n * @property {number=} ScriptDuration\n * @property {number=} TaskDuration\n * @property {number=} JSHeapUsedSize\n * @property {number=} JSHeapTotalSize\n */\n\n/**\n * @typedef {Object} ScreenshotOptions\n * @property {string=} type\n * @property {string=} path\n * @property {boolean=} fullPage\n * @property {{x: number, y: number, width: number, height: number}=} clip\n * @property {number=} quality\n * @property {boolean=} omitBackground\n * @property {string=} encoding\n */\n\n/** @type {!Set<string>} */\nconst supportedMetrics = new Set([\n  'Timestamp',\n  'Documents',\n  'Frames',\n  'JSEventListeners',\n  'Nodes',\n  'LayoutCount',\n  'RecalcStyleCount',\n  'LayoutDuration',\n  'RecalcStyleDuration',\n  'ScriptDuration',\n  'TaskDuration',\n  'JSHeapUsedSize',\n  'JSHeapTotalSize',\n]);\n\n/** @enum {!{width: number, height: number}} */\nPage.PaperFormats = {\n  letter: {width: 8.5, height: 11},\n  legal: {width: 8.5, height: 14},\n  tabloid: {width: 11, height: 17},\n  ledger: {width: 17, height: 11},\n  a0: {width: 33.1, height: 46.8 },\n  a1: {width: 23.4, height: 33.1 },\n  a2: {width: 16.5, height: 23.4 },\n  a3: {width: 11.7, height: 16.5 },\n  a4: {width: 8.27, height: 11.7 },\n  a5: {width: 5.83, height: 8.27 },\n  a6: {width: 4.13, height: 5.83 },\n};\n\nconst unitToPixels = {\n  'px': 1,\n  'in': 96,\n  'cm': 37.8,\n  'mm': 3.78\n};\n\n/**\n * @param {(string|number|undefined)} parameter\n * @return {(number|undefined)}\n */\nfunction convertPrintParameterToInches(parameter) {\n  if (typeof parameter === 'undefined')\n    return undefined;\n  let pixels;\n  if (helper.isNumber(parameter)) {\n    // Treat numbers as pixel values to be aligned with phantom's paperSize.\n    pixels = /** @type {number} */ (parameter);\n  } else if (helper.isString(parameter)) {\n    const text = /** @type {string} */ (parameter);\n    let unit = text.substring(text.length - 2).toLowerCase();\n    let valueText = '';\n    if (unitToPixels.hasOwnProperty(unit)) {\n      valueText = text.substring(0, text.length - 2);\n    } else {\n      // In case of unknown unit try to parse the whole parameter as number of pixels.\n      // This is consistent with phantom's paperSize behavior.\n      unit = 'px';\n      valueText = text;\n    }\n    const value = Number(valueText);\n    assert(!isNaN(value), 'Failed to parse parameter value: ' + text);\n    pixels = value * unitToPixels[unit];\n  } else {\n    throw new Error('page.pdf() Cannot handle parameter type: ' + (typeof parameter));\n  }\n  return pixels / 96;\n}\n\nPage.Events = {\n  Close: 'close',\n  Console: 'console',\n  Dialog: 'dialog',\n  DOMContentLoaded: 'domcontentloaded',\n  Error: 'error',\n  // Can't use just 'error' due to node.js special treatment of error events.\n  // @see https://nodejs.org/api/events.html#events_error_events\n  PageError: 'pageerror',\n  Request: 'request',\n  Response: 'response',\n  RequestFailed: 'requestfailed',\n  RequestFinished: 'requestfinished',\n  FrameAttached: 'frameattached',\n  FrameDetached: 'framedetached',\n  FrameNavigated: 'framenavigated',\n  Load: 'load',\n  Metrics: 'metrics',\n  WorkerCreated: 'workercreated',\n  WorkerDestroyed: 'workerdestroyed',\n};\n\n\n/**\n * @typedef {Object} Network.Cookie\n * @property {string} name\n * @property {string} value\n * @property {string} domain\n * @property {string} path\n * @property {number} expires\n * @property {number} size\n * @property {boolean} httpOnly\n * @property {boolean} secure\n * @property {boolean} session\n * @property {(\"Strict\"|\"Lax\")=} sameSite\n */\n\n\n/**\n * @typedef {Object} Network.CookieParam\n * @property {string} name\n * @property {string} value\n * @property {string=} url\n * @property {string=} domain\n * @property {string=} path\n * @property {number=} expires\n * @property {boolean=} httpOnly\n * @property {boolean=} secure\n * @property {(\"Strict\"|\"Lax\")=} sameSite\n */\n\nclass ConsoleMessage {\n  /**\n   * @param {string} type\n   * @param {string} text\n   * @param {!Array<!Puppeteer.JSHandle>} args\n   */\n  constructor(type, text, args = []) {\n    this._type = type;\n    this._text = text;\n    this._args = args;\n  }\n\n  /**\n   * @return {string}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @return {string}\n   */\n  text() {\n    return this._text;\n  }\n\n  /**\n   * @return {!Array<!Puppeteer.JSHandle>}\n   */\n  args() {\n    return this._args;\n  }\n}\n\n\nmodule.exports = {Page};\nhelper.tracePublicAPI(Page);\n","'use strict';\n\n/**\n * @param typeMap [Object] Map of MIME type -> Array[extensions]\n * @param ...\n */\nfunction Mime() {\n  this._types = Object.create(null);\n  this._extensions = Object.create(null);\n\n  for (var i = 0; i < arguments.length; i++) {\n    this.define(arguments[i]);\n  }\n\n  this.define = this.define.bind(this);\n  this.getType = this.getType.bind(this);\n  this.getExtension = this.getExtension.bind(this);\n}\n\n/**\n * Define mimetype -> xtension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * If a type declares an extension that has already been defined, an error will\n * be thrown.  To suppress this error and force the extension to be associated\n * with the new type, pass `force`=true.  Alternatively, you may prefix the\n * extension with \"*\" to map the type to extension, without mapping the\n * extension to the type.\n *\n * e.g. mime.define({'audio/wav', ['wav']}, {'audio/x-wav', ['*wav']});\n *\n *\n * @param map (Object) type definitions\n * @param force (Boolean) if true, force overriding of existing definitions\n */\nMime.prototype.define = function(typeMap, force) {\n  for (var type in typeMap) {\n    var extensions = typeMap[type];\n    for (var i = 0; i < extensions.length; i++) {\n      var ext = extensions[i];\n\n      // '*' prefix = not the preferred type for this extension.  So fixup the\n      // extension, and skip it.\n      if (ext[0] == '*') {\n        continue;\n      }\n\n      if (!force && (ext in this._types)) {\n        throw new Error(\n          'Attempt to change mapping for \"' + ext +\n          '\" extension from \"' + this._types[ext] + '\" to \"' + type +\n          '\". Pass `force=true` to allow this, otherwise remove \"' + ext +\n          '\" from the list of extensions for \"' + type + '\".'\n        );\n      }\n\n      this._types[ext] = type;\n    }\n\n    // Use first extension as default\n    if (force || !this._extensions[type]) {\n      var ext = extensions[0];\n      this._extensions[type] = (ext[0] != '*') ? ext : ext.substr(1)\n    }\n  }\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.getType = function(path) {\n  path = String(path);\n  var last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n  var ext = last.replace(/^.*\\./, '').toLowerCase();\n\n  var hasPath = last.length < path.length;\n  var hasDot = ext.length < last.length - 1;\n\n  return (hasDot || !hasPath) && this._types[ext] || null;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.getExtension = function(type) {\n  type = /^\\s*([^;\\s]*)/.test(type) && RegExp.$1;\n  return type && this._extensions[type.toLowerCase()] || null;\n};\n\nmodule.exports = Mime;\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @template T\n * @template V\n */\nclass Multimap {\n  constructor() {\n    this._map = new Map();\n  }\n\n  /**\n   * @param {T} key\n   * @param {V} value\n   */\n  set(key, value) {\n    let set = this._map.get(key);\n    if (!set) {\n      set = new Set();\n      this._map.set(key, set);\n    }\n    set.add(value);\n  }\n\n  /**\n   * @param {T} key\n   * @return {!Set<V>}\n   */\n  get(key) {\n    let result = this._map.get(key);\n    if (!result)\n      result = new Set();\n    return result;\n  }\n\n  /**\n   * @param {T} key\n   * @return {boolean}\n   */\n  has(key) {\n    return this._map.has(key);\n  }\n\n  /**\n   * @param {T} key\n   * @param {V} value\n   * @return {boolean}\n   */\n  hasValue(key, value) {\n    const set = this._map.get(key);\n    if (!set)\n      return false;\n    return set.has(value);\n  }\n\n  /**\n   * @return {number}\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * @param {T} key\n   * @param {V} value\n   * @return {boolean}\n   */\n  delete(key, value) {\n    const values = this.get(key);\n    const result = values.delete(value);\n    if (!values.size)\n      this._map.delete(key);\n    return result;\n  }\n\n  /**\n   * @param {T} key\n   */\n  deleteAll(key) {\n    this._map.delete(key);\n  }\n\n  /**\n   * @param {T} key\n   * @return {V}\n   */\n  firstValue(key) {\n    const set = this._map.get(key);\n    if (!set)\n      return null;\n    return set.values().next().value;\n  }\n\n  /**\n   * @return {T}\n   */\n  firstKey() {\n    return this._map.keys().next().value;\n  }\n\n  /**\n   * @return {!Array<V>}\n   */\n  valuesArray() {\n    const result = [];\n    for (const key of this._map.keys())\n      result.push(...Array.from(this._map.get(key).values()));\n    return result;\n  }\n\n  /**\n   * @return {!Array<T>}\n   */\n  keysArray() {\n    return Array.from(this._map.keys());\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n\nmodule.exports = Multimap;\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert} = require('./helper');\n\nclass Dialog {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {string} type\n   * @param {string} message\n   * @param {(string|undefined)} defaultValue\n   */\n  constructor(client, type, message, defaultValue = '') {\n    this._client = client;\n    this._type = type;\n    this._message = message;\n    this._handled = false;\n    this._defaultValue = defaultValue;\n  }\n\n  /**\n   * @return {string}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @return {string}\n   */\n  message() {\n    return this._message;\n  }\n\n  /**\n   * @return {string}\n   */\n  defaultValue() {\n    return this._defaultValue;\n  }\n\n  /**\n   * @param {string=} promptText\n   */\n  async accept(promptText) {\n    assert(!this._handled, 'Cannot accept dialog which is already handled!');\n    this._handled = true;\n    await this._client.send('Page.handleJavaScriptDialog', {\n      accept: true,\n      promptText: promptText\n    });\n  }\n\n  async dismiss() {\n    assert(!this._handled, 'Cannot dismiss dialog which is already handled!');\n    this._handled = true;\n    await this._client.send('Page.handleJavaScriptDialog', {\n      accept: false\n    });\n  }\n}\n\nDialog.Type = {\n  Alert: 'alert',\n  BeforeUnload: 'beforeunload',\n  Confirm: 'confirm',\n  Prompt: 'prompt'\n};\n\nmodule.exports = {Dialog};\nhelper.tracePublicAPI(Dialog);\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass EmulationManager {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._emulatingMobile = false;\n    this._hasTouch = false;\n  }\n\n  /**\n   * @param {!Puppeteer.Viewport} viewport\n   * @return {Promise<boolean>}\n   */\n  async emulateViewport(viewport) {\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor || 1;\n    /** @type {Protocol.Emulation.ScreenOrientation} */\n    const screenOrientation = viewport.isLandscape ? { angle: 90, type: 'landscapePrimary' } : { angle: 0, type: 'portraitPrimary' };\n    const hasTouch = viewport.hasTouch || false;\n\n    await Promise.all([\n      this._client.send('Emulation.setDeviceMetricsOverride', { mobile, width, height, deviceScaleFactor, screenOrientation }),\n      this._client.send('Emulation.setTouchEmulationEnabled', {\n        enabled: hasTouch\n      })\n    ]);\n\n    const reloadNeeded = this._emulatingMobile !== mobile || this._hasTouch !== hasTouch;\n    this._emulatingMobile = mobile;\n    this._hasTouch = hasTouch;\n    return reloadNeeded;\n  }\n}\n\nmodule.exports = {EmulationManager};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst fs = require('fs');\nconst EventEmitter = require('events');\nconst {helper, assert} = require('./helper');\nconst {ExecutionContext} = require('./ExecutionContext');\nconst {TimeoutError} = require('./Errors');\nconst {NetworkManager} = require('./NetworkManager');\nconst {CDPSession} = require('./Connection');\n\nconst readFileAsync = helper.promisify(fs.readFile);\n\nclass FrameManager extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Page.FrameTree} frameTree\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.NetworkManager} networkManager\n   */\n  constructor(client, frameTree, page, networkManager) {\n    super();\n    this._client = client;\n    this._page = page;\n    this._networkManager = networkManager;\n    this._defaultNavigationTimeout = 30000;\n    /** @type {!Map<string, !Frame>} */\n    this._frames = new Map();\n    /** @type {!Map<number, !ExecutionContext>} */\n    this._contextIdToContext = new Map();\n\n    this._client.on('Page.frameAttached', event => this._onFrameAttached(event.frameId, event.parentFrameId));\n    this._client.on('Page.frameNavigated', event => this._onFrameNavigated(event.frame));\n    this._client.on('Page.navigatedWithinDocument', event => this._onFrameNavigatedWithinDocument(event.frameId, event.url));\n    this._client.on('Page.frameDetached', event => this._onFrameDetached(event.frameId));\n    this._client.on('Page.frameStoppedLoading', event => this._onFrameStoppedLoading(event.frameId));\n    this._client.on('Runtime.executionContextCreated', event => this._onExecutionContextCreated(event.context));\n    this._client.on('Runtime.executionContextDestroyed', event => this._onExecutionContextDestroyed(event.executionContextId));\n    this._client.on('Runtime.executionContextsCleared', event => this._onExecutionContextsCleared());\n    this._client.on('Page.lifecycleEvent', event => this._onLifecycleEvent(event));\n\n    this._handleFrameTree(frameTree);\n  }\n\n  /**\n   * @param {number} timeout\n   */\n  setDefaultNavigationTimeout(timeout) {\n    this._defaultNavigationTimeout = timeout;\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async navigateFrame(frame, url, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      referer = this._networkManager.extraHTTPHeaders()['referer'],\n      waitUntil = ['load'],\n      timeout = this._defaultNavigationTimeout,\n    } = options;\n\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    let ensureNewDocumentNavigation = false;\n    let error = await Promise.race([\n      navigate(this._client, url, referer, frame._id),\n      watcher.timeoutOrTerminationPromise(),\n    ]);\n    if (!error) {\n      error = await Promise.race([\n        watcher.timeoutOrTerminationPromise(),\n        ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise(),\n      ]);\n    }\n    watcher.dispose();\n    if (error)\n      throw error;\n    return watcher.navigationResponse();\n\n    /**\n     * @param {!Puppeteer.CDPSession} client\n     * @param {string} url\n     * @param {string} referrer\n     * @param {string} frameId\n     * @return {!Promise<?Error>}\n     */\n    async function navigate(client, url, referrer, frameId) {\n      try {\n        const response = await client.send('Page.navigate', {url, referrer, frameId});\n        ensureNewDocumentNavigation = !!response.loaderId;\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        return error;\n      }\n    }\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async waitForFrameNavigation(frame, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      waitUntil = ['load'],\n      timeout = this._defaultNavigationTimeout,\n    } = options;\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    const error = await Promise.race([\n      watcher.timeoutOrTerminationPromise(),\n      watcher.sameDocumentNavigationPromise(),\n      watcher.newDocumentNavigationPromise()\n    ]);\n    watcher.dispose();\n    if (error)\n      throw error;\n    return watcher.navigationResponse();\n  }\n\n  /**\n   * @param {!Protocol.Page.lifecycleEventPayload} event\n   */\n  _onLifecycleEvent(event) {\n    const frame = this._frames.get(event.frameId);\n    if (!frame)\n      return;\n    frame._onLifecycleEvent(event.loaderId, event.name);\n    this.emit(FrameManager.Events.LifecycleEvent, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   */\n  _onFrameStoppedLoading(frameId) {\n    const frame = this._frames.get(frameId);\n    if (!frame)\n      return;\n    frame._onLoadingStopped();\n    this.emit(FrameManager.Events.LifecycleEvent, frame);\n  }\n\n  /**\n   * @param {!Protocol.Page.FrameTree} frameTree\n   */\n  _handleFrameTree(frameTree) {\n    if (frameTree.frame.parentId)\n      this._onFrameAttached(frameTree.frame.id, frameTree.frame.parentId);\n    this._onFrameNavigated(frameTree.frame);\n    if (!frameTree.childFrames)\n      return;\n\n    for (const child of frameTree.childFrames)\n      this._handleFrameTree(child);\n  }\n\n  /**\n   * @return {!Puppeteer.Page}\n   */\n  page() {\n    return this._page;\n  }\n\n  /**\n   * @return {!Frame}\n   */\n  mainFrame() {\n    return this._mainFrame;\n  }\n\n  /**\n   * @return {!Array<!Frame>}\n   */\n  frames() {\n    return Array.from(this._frames.values());\n  }\n\n  /**\n   * @param {!string} frameId\n   * @return {?Frame}\n   */\n  frame(frameId) {\n    return this._frames.get(frameId) || null;\n  }\n\n  /**\n   * @param {string} frameId\n   * @param {?string} parentFrameId\n   */\n  _onFrameAttached(frameId, parentFrameId) {\n    if (this._frames.has(frameId))\n      return;\n    assert(parentFrameId);\n    const parentFrame = this._frames.get(parentFrameId);\n    const frame = new Frame(this, this._client, parentFrame, frameId);\n    this._frames.set(frame._id, frame);\n    this.emit(FrameManager.Events.FrameAttached, frame);\n  }\n\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n  _onFrameNavigated(framePayload) {\n    const isMainFrame = !framePayload.parentId;\n    let frame = isMainFrame ? this._mainFrame : this._frames.get(framePayload.id);\n    assert(isMainFrame || frame, 'We either navigate top level or have old version of the navigated frame');\n\n    // Detach all child frames first.\n    if (frame) {\n      for (const child of frame.childFrames())\n        this._removeFramesRecursively(child);\n    }\n\n    // Update or create main frame.\n    if (isMainFrame) {\n      if (frame) {\n        // Update frame id to retain frame identity on cross-process navigation.\n        this._frames.delete(frame._id);\n        frame._id = framePayload.id;\n      } else {\n        // Initial main frame navigation.\n        frame = new Frame(this, this._client, null, framePayload.id);\n      }\n      this._frames.set(framePayload.id, frame);\n      this._mainFrame = frame;\n    }\n\n    // Update frame payload.\n    frame._navigated(framePayload);\n\n    this.emit(FrameManager.Events.FrameNavigated, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   * @param {string} url\n   */\n  _onFrameNavigatedWithinDocument(frameId, url) {\n    const frame = this._frames.get(frameId);\n    if (!frame)\n      return;\n    frame._navigatedWithinDocument(url);\n    this.emit(FrameManager.Events.FrameNavigatedWithinDocument, frame);\n    this.emit(FrameManager.Events.FrameNavigated, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   */\n  _onFrameDetached(frameId) {\n    const frame = this._frames.get(frameId);\n    if (frame)\n      this._removeFramesRecursively(frame);\n  }\n\n  _onExecutionContextCreated(contextPayload) {\n    const frameId = contextPayload.auxData ? contextPayload.auxData.frameId : null;\n    const frame = this._frames.get(frameId) || null;\n    /** @type {!ExecutionContext} */\n    const context = new ExecutionContext(this._client, contextPayload, frame);\n    this._contextIdToContext.set(contextPayload.id, context);\n    if (frame)\n      frame._addExecutionContext(context);\n  }\n\n  /**\n   * @param {number} executionContextId\n   */\n  _onExecutionContextDestroyed(executionContextId) {\n    const context = this._contextIdToContext.get(executionContextId);\n    if (!context)\n      return;\n    this._contextIdToContext.delete(executionContextId);\n    if (context.frame())\n      context.frame()._removeExecutionContext(context);\n  }\n\n  _onExecutionContextsCleared() {\n    for (const context of this._contextIdToContext.values()) {\n      if (context.frame())\n        context.frame()._removeExecutionContext(context);\n    }\n    this._contextIdToContext.clear();\n  }\n\n  /**\n   * @param {number} contextId\n   * @return {!ExecutionContext}\n   */\n  executionContextById(contextId) {\n    const context = this._contextIdToContext.get(contextId);\n    assert(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n\n  /**\n   * @param {!Frame} frame\n   */\n  _removeFramesRecursively(frame) {\n    for (const child of frame.childFrames())\n      this._removeFramesRecursively(child);\n    frame._detach();\n    this._frames.delete(frame._id);\n    this.emit(FrameManager.Events.FrameDetached, frame);\n  }\n}\n\n/** @enum {string} */\nFrameManager.Events = {\n  FrameAttached: 'frameattached',\n  FrameNavigated: 'framenavigated',\n  FrameDetached: 'framedetached',\n  LifecycleEvent: 'lifecycleevent',\n  FrameNavigatedWithinDocument: 'framenavigatedwithindocument',\n  ExecutionContextCreated: 'executioncontextcreated',\n  ExecutionContextDestroyed: 'executioncontextdestroyed',\n};\n\n/**\n * @unrestricted\n */\nclass Frame {\n  /**\n   * @param {!FrameManager} frameManager\n   * @param {!Puppeteer.CDPSession} client\n   * @param {?Frame} parentFrame\n   * @param {string} frameId\n   */\n  constructor(frameManager, client, parentFrame, frameId) {\n    this._frameManager = frameManager;\n    this._client = client;\n    this._parentFrame = parentFrame;\n    this._url = '';\n    this._id = frameId;\n    this._detached = false;\n\n    /** @type {?Promise<!Puppeteer.ElementHandle>} */\n    this._documentPromise = null;\n    /** @type {!Promise<!ExecutionContext>} */\n    this._contextPromise;\n    this._contextResolveCallback = null;\n    this._setDefaultContext(null);\n\n\n    /** @type {!Set<!WaitTask>} */\n    this._waitTasks = new Set();\n    this._loaderId = '';\n    /** @type {!Set<string>} */\n    this._lifecycleEvents = new Set();\n\n    /** @type {!Set<!Frame>} */\n    this._childFrames = new Set();\n    if (this._parentFrame)\n      this._parentFrame._childFrames.add(this);\n  }\n\n  /**\n   * @param {!ExecutionContext} context\n   */\n  _addExecutionContext(context) {\n    if (context._isDefault)\n      this._setDefaultContext(context);\n  }\n\n  /**\n   * @param {!ExecutionContext} context\n   */\n  _removeExecutionContext(context) {\n    if (context._isDefault)\n      this._setDefaultContext(null);\n  }\n\n  /**\n   * @param {?ExecutionContext} context\n   */\n  _setDefaultContext(context) {\n    if (context) {\n      this._contextResolveCallback.call(null, context);\n      this._contextResolveCallback = null;\n      for (const waitTask of this._waitTasks)\n        waitTask.rerun();\n    } else {\n      this._documentPromise = null;\n      this._contextPromise = new Promise(fulfill => {\n        this._contextResolveCallback = fulfill;\n      });\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async goto(url, options) {\n    return await this._frameManager.navigateFrame(this, url, options);\n  }\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async waitForNavigation(options) {\n    return await this._frameManager.waitForFrameNavigation(this, options);\n  }\n\n  /**\n   * @return {!Promise<!ExecutionContext>}\n   */\n  executionContext() {\n    return this._contextPromise;\n  }\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  async evaluateHandle(pageFunction, ...args) {\n    const context = await this._contextPromise;\n    return context.evaluateHandle(pageFunction, ...args);\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n  async evaluate(pageFunction, ...args) {\n    const context = await this._contextPromise;\n    return context.evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  async $(selector) {\n    const document = await this._document();\n    const value = await document.$(selector);\n    return value;\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async _document() {\n    if (this._documentPromise)\n      return this._documentPromise;\n    this._documentPromise = this._contextPromise.then(async context => {\n      const document = await context.evaluateHandle('document');\n      return document.asElement();\n    });\n    return this._documentPromise;\n  }\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  async $x(expression) {\n    const document = await this._document();\n    const value = await document.$x(expression);\n    return value;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $eval(selector, pageFunction, ...args) {\n    const document = await this._document();\n    return document.$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $$eval(selector, pageFunction, ...args) {\n    const document = await this._document();\n    const value = await document.$$eval(selector, pageFunction, ...args);\n    return value;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  async $$(selector) {\n    const document = await this._document();\n    const value = await document.$$(selector);\n    return value;\n  }\n\n  /**\n   * @return {!Promise<String>}\n   */\n  async content() {\n    return await this.evaluate(() => {\n      let retVal = '';\n      if (document.doctype)\n        retVal = new XMLSerializer().serializeToString(document.doctype);\n      if (document.documentElement)\n        retVal += document.documentElement.outerHTML;\n      return retVal;\n    });\n  }\n\n  /**\n   * @param {string} html\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   */\n  async setContent(html, options = {}) {\n    const {\n      waitUntil = ['load'],\n      timeout = 30000,\n    } = options;\n    // We rely upon the fact that document.open() will reset frame lifecycle with \"init\"\n    // lifecycle event. @see https://crrev.com/608658\n    await this.evaluate(html => {\n      document.open();\n      document.write(html);\n      document.close();\n    }, html);\n    const watcher = new LifecycleWatcher(this._frameManager, this, waitUntil, timeout);\n    const error = await Promise.race([\n      watcher.timeoutOrTerminationPromise(),\n      watcher.lifecyclePromise(),\n    ]);\n    watcher.dispose();\n    if (error)\n      throw error;\n  }\n\n  /**\n   * @return {string}\n   */\n  name() {\n    return this._name || '';\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {?Frame}\n   */\n  parentFrame() {\n    return this._parentFrame;\n  }\n\n  /**\n   * @return {!Array.<!Frame>}\n   */\n  childFrames() {\n    return Array.from(this._childFrames);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isDetached() {\n    return this._detached;\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string, type?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async addScriptTag(options) {\n    const {\n      url = null,\n      path = null,\n      content = null,\n      type = ''\n    } = options;\n    if (url !== null) {\n      try {\n        const context = await this._contextPromise;\n        return (await context.evaluateHandle(addScriptUrl, url, type)).asElement();\n      } catch (error) {\n        throw new Error(`Loading script from ${url} failed`);\n      }\n    }\n\n    if (path !== null) {\n      let contents = await readFileAsync(path, 'utf8');\n      contents += '//# sourceURL=' + path.replace(/\\n/g, '');\n      const context = await this._contextPromise;\n      return (await context.evaluateHandle(addScriptContent, contents, type)).asElement();\n    }\n\n    if (content !== null) {\n      const context = await this._contextPromise;\n      return (await context.evaluateHandle(addScriptContent, content, type)).asElement();\n    }\n\n    throw new Error('Provide an object with a `url`, `path` or `content` property');\n\n    /**\n     * @param {string} url\n     * @param {string} type\n     * @return {!Promise<!HTMLElement>}\n     */\n    async function addScriptUrl(url, type) {\n      const script = document.createElement('script');\n      script.src = url;\n      if (type)\n        script.type = type;\n      const promise = new Promise((res, rej) => {\n        script.onload = res;\n        script.onerror = rej;\n      });\n      document.head.appendChild(script);\n      await promise;\n      return script;\n    }\n\n    /**\n     * @param {string} content\n     * @param {string} type\n     * @return {!HTMLElement}\n     */\n    function addScriptContent(content, type = 'text/javascript') {\n      const script = document.createElement('script');\n      script.type = type;\n      script.text = content;\n      let error = null;\n      script.onerror = e => error = e;\n      document.head.appendChild(script);\n      if (error)\n        throw error;\n      return script;\n    }\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async addStyleTag(options) {\n    const {\n      url = null,\n      path = null,\n      content = null\n    } = options;\n    if (url !== null) {\n      try {\n        const context = await this._contextPromise;\n        return (await context.evaluateHandle(addStyleUrl, url)).asElement();\n      } catch (error) {\n        throw new Error(`Loading style from ${url} failed`);\n      }\n    }\n\n    if (path !== null) {\n      let contents = await readFileAsync(path, 'utf8');\n      contents += '/*# sourceURL=' + path.replace(/\\n/g, '') + '*/';\n      const context = await this._contextPromise;\n      return (await context.evaluateHandle(addStyleContent, contents)).asElement();\n    }\n\n    if (content !== null) {\n      const context = await this._contextPromise;\n      return (await context.evaluateHandle(addStyleContent, content)).asElement();\n    }\n\n    throw new Error('Provide an object with a `url`, `path` or `content` property');\n\n    /**\n     * @param {string} url\n     * @return {!Promise<!HTMLElement>}\n     */\n    async function addStyleUrl(url) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = url;\n      const promise = new Promise((res, rej) => {\n        link.onload = res;\n        link.onerror = rej;\n      });\n      document.head.appendChild(link);\n      await promise;\n      return link;\n    }\n\n    /**\n     * @param {string} content\n     * @return {!Promise<!HTMLElement>}\n     */\n    async function addStyleContent(content) {\n      const style = document.createElement('style');\n      style.type = 'text/css';\n      style.appendChild(document.createTextNode(content));\n      const promise = new Promise((res, rej) => {\n        style.onload = res;\n        style.onerror = rej;\n      });\n      document.head.appendChild(style);\n      await promise;\n      return style;\n    }\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async click(selector, options) {\n    const handle = await this.$(selector);\n    assert(handle, 'No node found for selector: ' + selector);\n    await handle.click(options);\n    await handle.dispose();\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async focus(selector) {\n    const handle = await this.$(selector);\n    assert(handle, 'No node found for selector: ' + selector);\n    await handle.focus();\n    await handle.dispose();\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async hover(selector) {\n    const handle = await this.$(selector);\n    assert(handle, 'No node found for selector: ' + selector);\n    await handle.hover();\n    await handle.dispose();\n  }\n\n  /**\n  * @param {string} selector\n  * @param {!Array<string>} values\n  * @return {!Promise<!Array<string>>}\n  */\n  select(selector, ...values){\n    for (const value of values)\n      assert(helper.isString(value), 'Values must be strings. Found value \"' + value + '\" of type \"' + (typeof value) + '\"');\n    return this.$eval(selector, (element, values) => {\n      if (element.nodeName.toLowerCase() !== 'select')\n        throw new Error('Element is not a <select> element.');\n\n      const options = Array.from(element.options);\n      element.value = undefined;\n      for (const option of options) {\n        option.selected = values.includes(option.value);\n        if (option.selected && !element.multiple)\n          break;\n      }\n      element.dispatchEvent(new Event('input', { 'bubbles': true }));\n      element.dispatchEvent(new Event('change', { 'bubbles': true }));\n      return options.filter(option => option.selected).map(option => option.value);\n    }, values);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async tap(selector) {\n    const handle = await this.$(selector);\n    assert(handle, 'No node found for selector: ' + selector);\n    await handle.tap();\n    await handle.dispose();\n  }\n\n  /**\n   * @param {string} selector\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  async type(selector, text, options) {\n    const handle = await this.$(selector);\n    assert(handle, 'No node found for selector: ' + selector);\n    await handle.type(text, options);\n    await handle.dispose();\n  }\n\n  /**\n   * @param {(string|number|Function)} selectorOrFunctionOrTimeout\n   * @param {!Object=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitFor(selectorOrFunctionOrTimeout, options = {}, ...args) {\n    const xPathPattern = '//';\n\n    if (helper.isString(selectorOrFunctionOrTimeout)) {\n      const string = /** @type {string} */ (selectorOrFunctionOrTimeout);\n      if (string.startsWith(xPathPattern))\n        return this.waitForXPath(string, options);\n      return this.waitForSelector(string, options);\n    }\n    if (helper.isNumber(selectorOrFunctionOrTimeout))\n      return new Promise(fulfill => setTimeout(fulfill, /** @type {number} */ (selectorOrFunctionOrTimeout)));\n    if (typeof selectorOrFunctionOrTimeout === 'function')\n      return this.waitForFunction(selectorOrFunctionOrTimeout, options, ...args);\n    return Promise.reject(new Error('Unsupported target type: ' + (typeof selectorOrFunctionOrTimeout)));\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  waitForSelector(selector, options) {\n    return this._waitForSelectorOrXPath(selector, false, options);\n  }\n\n  /**\n   * @param {string} xpath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  waitForXPath(xpath, options) {\n    return this._waitForSelectorOrXPath(xpath, true, options);\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!{polling?: string|number, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitForFunction(pageFunction, options = {}, ...args) {\n    const {\n      polling = 'raf',\n      timeout = 30000\n    } = options;\n    return new WaitTask(this, pageFunction, 'function', polling, timeout, ...args).promise;\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async title() {\n    return this.evaluate(() => document.title);\n  }\n\n  /**\n   * @param {string} selectorOrXPath\n   * @param {boolean} isXPath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  _waitForSelectorOrXPath(selectorOrXPath, isXPath, options = {}) {\n    const {\n      visible: waitForVisible = false,\n      hidden: waitForHidden = false,\n      timeout = 30000,\n    } = options;\n    const polling = waitForVisible || waitForHidden ? 'raf' : 'mutation';\n    const title = `${isXPath ? 'XPath' : 'selector'} \"${selectorOrXPath}\"${waitForHidden ? ' to be hidden' : ''}`;\n    return new WaitTask(this, predicate, title, polling, timeout, selectorOrXPath, isXPath, waitForVisible, waitForHidden).promise;\n\n    /**\n     * @param {string} selectorOrXPath\n     * @param {boolean} isXPath\n     * @param {boolean} waitForVisible\n     * @param {boolean} waitForHidden\n     * @return {?Node|boolean}\n     */\n    function predicate(selectorOrXPath, isXPath, waitForVisible, waitForHidden) {\n      const node = isXPath\n        ? document.evaluate(selectorOrXPath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue\n        : document.querySelector(selectorOrXPath);\n      if (!node)\n        return waitForHidden;\n      if (!waitForVisible && !waitForHidden)\n        return node;\n      const element = /** @type {Element} */ (node.nodeType === Node.TEXT_NODE ? node.parentElement : node);\n\n      const style = window.getComputedStyle(element);\n      const isVisible = style && style.visibility !== 'hidden' && hasVisibleBoundingBox();\n      const success = (waitForVisible === isVisible || waitForHidden === !isVisible);\n      return success ? node : null;\n\n      /**\n       * @return {boolean}\n       */\n      function hasVisibleBoundingBox() {\n        const rect = element.getBoundingClientRect();\n        return !!(rect.top || rect.bottom || rect.width || rect.height);\n      }\n    }\n  }\n\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n  _navigated(framePayload) {\n    this._name = framePayload.name;\n    // TODO(lushnikov): remove this once requestInterception has loaderId exposed.\n    this._navigationURL = framePayload.url;\n    this._url = framePayload.url;\n  }\n\n  /**\n   * @param {string} url\n   */\n  _navigatedWithinDocument(url) {\n    this._url = url;\n  }\n\n  /**\n   * @param {string} loaderId\n   * @param {string} name\n   */\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n\n  _detach() {\n    for (const waitTask of this._waitTasks)\n      waitTask.terminate(new Error('waitForFunction failed: frame got detached.'));\n    this._detached = true;\n    if (this._parentFrame)\n      this._parentFrame._childFrames.delete(this);\n    this._parentFrame = null;\n  }\n}\nhelper.tracePublicAPI(Frame);\n\nclass WaitTask {\n  /**\n   * @param {!Frame} frame\n   * @param {Function|string} predicateBody\n   * @param {string|number} polling\n   * @param {number} timeout\n   * @param {!Array<*>} args\n   */\n  constructor(frame, predicateBody, title, polling, timeout, ...args) {\n    if (helper.isString(polling))\n      assert(polling === 'raf' || polling === 'mutation', 'Unknown polling option: ' + polling);\n    else if (helper.isNumber(polling))\n      assert(polling > 0, 'Cannot poll with non-positive interval: ' + polling);\n    else\n      throw new Error('Unknown polling options: ' + polling);\n\n    this._frame = frame;\n    this._polling = polling;\n    this._timeout = timeout;\n    this._predicateBody = helper.isString(predicateBody) ? 'return ' + predicateBody : 'return (' + predicateBody + ')(...args)';\n    this._args = args;\n    this._runCount = 0;\n    frame._waitTasks.add(this);\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    // Since page navigation requires us to re-install the pageScript, we should track\n    // timeout on our end.\n    if (timeout) {\n      const timeoutError = new TimeoutError(`waiting for ${title} failed: timeout ${timeout}ms exceeded`);\n      this._timeoutTimer = setTimeout(() => this.terminate(timeoutError), timeout);\n    }\n    this.rerun();\n  }\n\n  /**\n   * @param {!Error} error\n   */\n  terminate(error) {\n    this._terminated = true;\n    this._reject(error);\n    this._cleanup();\n  }\n\n  async rerun() {\n    const runCount = ++this._runCount;\n    /** @type {?Puppeteer.JSHandle} */\n    let success = null;\n    let error = null;\n    try {\n      success = await (await this._frame.executionContext()).evaluateHandle(waitForPredicatePageFunction, this._predicateBody, this._polling, this._timeout, ...this._args);\n    } catch (e) {\n      error = e;\n    }\n\n    if (this._terminated || runCount !== this._runCount) {\n      if (success)\n        await success.dispose();\n      return;\n    }\n\n    // Ignore timeouts in pageScript - we track timeouts ourselves.\n    // If the frame's execution context has already changed, `frame.evaluate` will\n    // throw an error - ignore this predicate run altogether.\n    if (!error && await this._frame.evaluate(s => !s, success).catch(e => true)) {\n      await success.dispose();\n      return;\n    }\n\n    // When the page is navigated, the promise is rejected.\n    // We will try again in the new execution context.\n    if (error && error.message.includes('Execution context was destroyed'))\n      return;\n\n    // We could have tried to evaluate in a context which was already\n    // destroyed.\n    if (error && error.message.includes('Cannot find context with specified id'))\n      return;\n\n    if (error)\n      this._reject(error);\n    else\n      this._resolve(success);\n\n    this._cleanup();\n  }\n\n  _cleanup() {\n    clearTimeout(this._timeoutTimer);\n    this._frame._waitTasks.delete(this);\n    this._runningTask = null;\n  }\n}\n\n/**\n * @param {string} predicateBody\n * @param {string} polling\n * @param {number} timeout\n * @return {!Promise<*>}\n */\nasync function waitForPredicatePageFunction(predicateBody, polling, timeout, ...args) {\n  const predicate = new Function('...args', predicateBody);\n  let timedOut = false;\n  if (timeout)\n    setTimeout(() => timedOut = true, timeout);\n  if (polling === 'raf')\n    return await pollRaf();\n  if (polling === 'mutation')\n    return await pollMutation();\n  if (typeof polling === 'number')\n    return await pollInterval(polling);\n\n  /**\n   * @return {!Promise<*>}\n   */\n  function pollMutation() {\n    const success = predicate.apply(null, args);\n    if (success)\n      return Promise.resolve(success);\n\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    const observer = new MutationObserver(mutations => {\n      if (timedOut) {\n        observer.disconnect();\n        fulfill();\n      }\n      const success = predicate.apply(null, args);\n      if (success) {\n        observer.disconnect();\n        fulfill(success);\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return result;\n  }\n\n  /**\n   * @return {!Promise<*>}\n   */\n  function pollRaf() {\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    onRaf();\n    return result;\n\n    function onRaf() {\n      if (timedOut) {\n        fulfill();\n        return;\n      }\n      const success = predicate.apply(null, args);\n      if (success)\n        fulfill(success);\n      else\n        requestAnimationFrame(onRaf);\n    }\n  }\n\n  /**\n   * @param {number} pollInterval\n   * @return {!Promise<*>}\n   */\n  function pollInterval(pollInterval) {\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    onTimeout();\n    return result;\n\n    function onTimeout() {\n      if (timedOut) {\n        fulfill();\n        return;\n      }\n      const success = predicate.apply(null, args);\n      if (success)\n        fulfill(success);\n      else\n        setTimeout(onTimeout, pollInterval);\n    }\n  }\n}\n\nfunction assertNoLegacyNavigationOptions(options) {\n  assert(options['networkIdleTimeout'] === undefined, 'ERROR: networkIdleTimeout option is no longer supported.');\n  assert(options['networkIdleInflight'] === undefined, 'ERROR: networkIdleInflight option is no longer supported.');\n  assert(options.waitUntil !== 'networkidle', 'ERROR: \"networkidle\" option is no longer supported. Use \"networkidle2\" instead');\n}\n\nclass LifecycleWatcher {\n  /**\n   * @param {!FrameManager} frameManager\n   * @param {!Puppeteer.Frame} frame\n   * @param {string|!Array<string>} waitUntil\n   * @param {number} timeout\n   */\n  constructor(frameManager, frame, waitUntil, timeout) {\n    if (Array.isArray(waitUntil))\n      waitUntil = waitUntil.slice();\n    else if (typeof waitUntil === 'string')\n      waitUntil = [waitUntil];\n    this._expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle[value];\n      assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent;\n    });\n\n    this._frameManager = frameManager;\n    this._networkManager = frameManager._networkManager;\n    this._frame = frame;\n    this._initialLoaderId = frame._loaderId;\n    this._timeout = timeout;\n    /** @type {?Puppeteer.Request} */\n    this._navigationRequest = null;\n    this._eventListeners = [\n      helper.addEventListener(frameManager._client, CDPSession.Events.Disconnected, () => this._terminate(new Error('Navigation failed because browser has disconnected!'))),\n      helper.addEventListener(this._frameManager, FrameManager.Events.LifecycleEvent, this._checkLifecycleComplete.bind(this)),\n      helper.addEventListener(this._frameManager, FrameManager.Events.FrameNavigatedWithinDocument, this._navigatedWithinDocument.bind(this)),\n      helper.addEventListener(this._frameManager, FrameManager.Events.FrameDetached, this._onFrameDetached.bind(this)),\n      helper.addEventListener(this._networkManager, NetworkManager.Events.Request, this._onRequest.bind(this)),\n    ];\n\n    this._sameDocumentNavigationPromise = new Promise(fulfill => {\n      this._sameDocumentNavigationCompleteCallback = fulfill;\n    });\n\n    this._lifecyclePromise = new Promise(fulfill => {\n      this._lifecycleCallback = fulfill;\n    });\n\n    this._newDocumentNavigationPromise = new Promise(fulfill => {\n      this._newDocumentNavigationCompleteCallback = fulfill;\n    });\n\n    this._timeoutPromise = this._createTimeoutPromise();\n    this._terminationPromise = new Promise(fulfill => {\n      this._terminationCallback = fulfill;\n    });\n  }\n\n  /**\n   * @param {!Puppeteer.Request} request\n   */\n  _onRequest(request) {\n    if (request.frame() !== this._frame || !request.isNavigationRequest())\n      return;\n    this._navigationRequest = request;\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   */\n  _onFrameDetached(frame) {\n    if (this._frame === frame) {\n      this._terminationCallback.call(null, new Error('Navigating frame was detached'));\n      return;\n    }\n    this._checkLifecycleComplete();\n  }\n\n  /**\n   * @return {?Puppeteer.Response}\n   */\n  navigationResponse() {\n    return this._navigationRequest ? this._navigationRequest.response() : null;\n  }\n\n  /**\n   * @param {!Error} error\n   */\n  _terminate(error) {\n    this._terminationCallback.call(null, error);\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  sameDocumentNavigationPromise() {\n    return this._sameDocumentNavigationPromise;\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  newDocumentNavigationPromise() {\n    return this._newDocumentNavigationPromise;\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  lifecyclePromise() {\n    return this._lifecyclePromise;\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  timeoutOrTerminationPromise() {\n    return Promise.race([this._timeoutPromise, this._terminationPromise]);\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  _createTimeoutPromise() {\n    if (!this._timeout)\n      return new Promise(() => {});\n    const errorMessage = 'Navigation Timeout Exceeded: ' + this._timeout + 'ms exceeded';\n    return new Promise(fulfill => this._maximumTimer = setTimeout(fulfill, this._timeout))\n        .then(() => new TimeoutError(errorMessage));\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   */\n  _navigatedWithinDocument(frame) {\n    if (frame !== this._frame)\n      return;\n    this._hasSameDocumentNavigation = true;\n    this._checkLifecycleComplete();\n  }\n\n  _checkLifecycleComplete() {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this._frame, this._expectedLifecycle))\n      return;\n    this._lifecycleCallback();\n    if (this._frame._loaderId === this._initialLoaderId && !this._hasSameDocumentNavigation)\n      return;\n    if (this._hasSameDocumentNavigation)\n      this._sameDocumentNavigationCompleteCallback();\n    if (this._frame._loaderId !== this._initialLoaderId)\n      this._newDocumentNavigationCompleteCallback();\n\n    /**\n     * @param {!Puppeteer.Frame} frame\n     * @param {!Array<string>} expectedLifecycle\n     * @return {boolean}\n     */\n    function checkLifecycle(frame, expectedLifecycle) {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event))\n          return false;\n      }\n      for (const child of frame.childFrames()) {\n        if (!checkLifecycle(child, expectedLifecycle))\n          return false;\n      }\n      return true;\n    }\n  }\n\n  dispose() {\n    helper.removeEventListeners(this._eventListeners);\n    clearTimeout(this._maximumTimer);\n  }\n}\n\nconst puppeteerToProtocolLifecycle = {\n  'load': 'load',\n  'domcontentloaded': 'DOMContentLoaded',\n  'networkidle0': 'networkIdle',\n  'networkidle2': 'networkAlmostIdle',\n};\n\nmodule.exports = {FrameManager, Frame};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert} = require('./helper');\nconst keyDefinitions = require('./USKeyboardLayout');\n\n/**\n * @typedef {Object} KeyDescription\n * @property {number} keyCode\n * @property {string} key\n * @property {string} text\n * @property {string} code\n * @property {number} location\n */\n\nclass Keyboard {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._modifiers = 0;\n    this._pressedKeys = new Set();\n  }\n\n  /**\n   * @param {string} key\n   * @param {{text?: string}=} options\n   */\n  async down(key, options = { text: undefined }) {\n    const description = this._keyDescriptionForString(key);\n\n    const autoRepeat = this._pressedKeys.has(description.code);\n    this._pressedKeys.add(description.code);\n    this._modifiers |= this._modifierBit(description.key);\n\n    const text = options.text === undefined ? description.text : options.text;\n    await this._client.send('Input.dispatchKeyEvent', {\n      type: text ? 'keyDown' : 'rawKeyDown',\n      modifiers: this._modifiers,\n      windowsVirtualKeyCode: description.keyCode,\n      code: description.code,\n      key: description.key,\n      text: text,\n      unmodifiedText: text,\n      autoRepeat,\n      location: description.location,\n      isKeypad: description.location === 3\n    });\n  }\n\n  /**\n   * @param {string} key\n   * @return {number}\n   */\n  _modifierBit(key) {\n    if (key === 'Alt')\n      return 1;\n    if (key === 'Control')\n      return 2;\n    if (key === 'Meta')\n      return 4;\n    if (key === 'Shift')\n      return 8;\n    return 0;\n  }\n\n  /**\n   * @param {string} keyString\n   * @return {KeyDescription}\n   */\n  _keyDescriptionForString(keyString) {\n    const shift = this._modifiers & 8;\n    const description = {\n      key: '',\n      keyCode: 0,\n      code: '',\n      text: '',\n      location: 0\n    };\n\n    const definition = keyDefinitions[keyString];\n    assert(definition, `Unknown key: \"${keyString}\"`);\n\n    if (definition.key)\n      description.key = definition.key;\n    if (shift && definition.shiftKey)\n      description.key = definition.shiftKey;\n\n    if (definition.keyCode)\n      description.keyCode = definition.keyCode;\n    if (shift && definition.shiftKeyCode)\n      description.keyCode = definition.shiftKeyCode;\n\n    if (definition.code)\n      description.code = definition.code;\n\n    if (definition.location)\n      description.location = definition.location;\n\n    if (description.key.length === 1)\n      description.text = description.key;\n\n    if (definition.text)\n      description.text = definition.text;\n    if (shift && definition.shiftText)\n      description.text = definition.shiftText;\n\n    // if any modifiers besides shift are pressed, no text should be sent\n    if (this._modifiers & ~8)\n      description.text = '';\n\n    return description;\n  }\n\n  /**\n   * @param {string} key\n   */\n  async up(key) {\n    const description = this._keyDescriptionForString(key);\n\n    this._modifiers &= ~this._modifierBit(description.key);\n    this._pressedKeys.delete(description.code);\n    await this._client.send('Input.dispatchKeyEvent', {\n      type: 'keyUp',\n      modifiers: this._modifiers,\n      key: description.key,\n      windowsVirtualKeyCode: description.keyCode,\n      code: description.code,\n      location: description.location\n    });\n  }\n\n  /**\n   * @param {string} char\n   */\n  async sendCharacter(char) {\n    await this._client.send('Input.insertText', {text: char});\n  }\n\n  /**\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  async type(text, options) {\n    let delay = 0;\n    if (options && options.delay)\n      delay = options.delay;\n    for (const char of text) {\n      if (keyDefinitions[char])\n        await this.press(char, {delay});\n      else\n        await this.sendCharacter(char);\n      if (delay)\n        await new Promise(f => setTimeout(f, delay));\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @param {!{delay?: number, text?: string}=} options\n   */\n  async press(key, options = {}) {\n    const {delay = null} = options;\n    await this.down(key, options);\n    if (delay !== null)\n      await new Promise(f => setTimeout(f, options.delay));\n    await this.up(key);\n  }\n}\n\nclass Mouse {\n  /**\n   * @param {Puppeteer.CDPSession} client\n   * @param {!Keyboard} keyboard\n   */\n  constructor(client, keyboard) {\n    this._client = client;\n    this._keyboard = keyboard;\n    this._x = 0;\n    this._y = 0;\n    /** @type {'none'|'left'|'right'|'middle'} */\n    this._button = 'none';\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {!{steps?: number}=} options\n   */\n  async move(x, y, options = {}) {\n    const {steps = 1} = options;\n    const fromX = this._x, fromY = this._y;\n    this._x = x;\n    this._y = y;\n    for (let i = 1; i <= steps; i++) {\n      await this._client.send('Input.dispatchMouseEvent', {\n        type: 'mouseMoved',\n        button: this._button,\n        x: fromX + (this._x - fromX) * (i / steps),\n        y: fromY + (this._y - fromY) * (i / steps),\n        modifiers: this._keyboard._modifiers\n      });\n    }\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async click(x, y, options = {}) {\n    const {delay = null} = options;\n    this.move(x, y);\n    this.down(options);\n    if (delay !== null)\n      await new Promise(f => setTimeout(f, delay));\n    await this.up(options);\n  }\n\n  /**\n   * @param {!{button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async down(options = {}) {\n    const {button = 'left', clickCount = 1} = options;\n    this._button = button;\n    await this._client.send('Input.dispatchMouseEvent', {\n      type: 'mousePressed',\n      button,\n      x: this._x,\n      y: this._y,\n      modifiers: this._keyboard._modifiers,\n      clickCount\n    });\n  }\n\n  /**\n   * @param {!{button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async up(options = {}) {\n    const {button = 'left', clickCount = 1} = options;\n    this._button = 'none';\n    await this._client.send('Input.dispatchMouseEvent', {\n      type: 'mouseReleased',\n      button,\n      x: this._x,\n      y: this._y,\n      modifiers: this._keyboard._modifiers,\n      clickCount\n    });\n  }\n}\n\nclass Touchscreen {\n  /**\n   * @param {Puppeteer.CDPSession} client\n   * @param {Keyboard} keyboard\n   */\n  constructor(client, keyboard) {\n    this._client = client;\n    this._keyboard = keyboard;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  async tap(x, y) {\n    // Touches appear to be lost during the first frame after navigation.\n    // This waits a frame before sending the tap.\n    // @see https://crbug.com/613219\n    await this._client.send('Runtime.evaluate', {\n      expression: 'new Promise(x => requestAnimationFrame(() => requestAnimationFrame(x)))',\n      awaitPromise: true\n    });\n\n    const touchPoints = [{x: Math.round(x), y: Math.round(y)}];\n    await this._client.send('Input.dispatchTouchEvent', {\n      type: 'touchStart',\n      touchPoints,\n      modifiers: this._keyboard._modifiers\n    });\n    await this._client.send('Input.dispatchTouchEvent', {\n      type: 'touchEnd',\n      touchPoints: [],\n      modifiers: this._keyboard._modifiers\n    });\n  }\n}\n\nmodule.exports = { Keyboard, Mouse, Touchscreen};\nhelper.tracePublicAPI(Keyboard);\nhelper.tracePublicAPI(Mouse);\nhelper.tracePublicAPI(Touchscreen);\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} KeyDefinition\n * @property {number=} keyCode\n * @property {number=} shiftKeyCode\n * @property {string=} key\n * @property {string=} shiftKey\n * @property {string=} code\n * @property {string=} text\n * @property {string=} shiftText\n * @property {number=} location\n */\n\n/**\n * @type {Object<string, KeyDefinition>}\n */\nmodule.exports = {\n  '0': {'keyCode': 48, 'key': '0', 'code': 'Digit0'},\n  '1': {'keyCode': 49, 'key': '1', 'code': 'Digit1'},\n  '2': {'keyCode': 50, 'key': '2', 'code': 'Digit2'},\n  '3': {'keyCode': 51, 'key': '3', 'code': 'Digit3'},\n  '4': {'keyCode': 52, 'key': '4', 'code': 'Digit4'},\n  '5': {'keyCode': 53, 'key': '5', 'code': 'Digit5'},\n  '6': {'keyCode': 54, 'key': '6', 'code': 'Digit6'},\n  '7': {'keyCode': 55, 'key': '7', 'code': 'Digit7'},\n  '8': {'keyCode': 56, 'key': '8', 'code': 'Digit8'},\n  '9': {'keyCode': 57, 'key': '9', 'code': 'Digit9'},\n  'Power': {'key': 'Power', 'code': 'Power'},\n  'Eject': {'key': 'Eject', 'code': 'Eject'},\n  'Abort': {'keyCode': 3, 'code': 'Abort', 'key': 'Cancel'},\n  'Help': {'keyCode': 6, 'code': 'Help', 'key': 'Help'},\n  'Backspace': {'keyCode': 8, 'code': 'Backspace', 'key': 'Backspace'},\n  'Tab': {'keyCode': 9, 'code': 'Tab', 'key': 'Tab'},\n  'Numpad5': {'keyCode': 12, 'shiftKeyCode': 101, 'key': 'Clear', 'code': 'Numpad5', 'shiftKey': '5', 'location': 3},\n  'NumpadEnter': {'keyCode': 13, 'code': 'NumpadEnter', 'key': 'Enter', 'text': '\\r', 'location': 3},\n  'Enter': {'keyCode': 13, 'code': 'Enter', 'key': 'Enter', 'text': '\\r'},\n  '\\r': {'keyCode': 13, 'code': 'Enter', 'key': 'Enter', 'text': '\\r'},\n  '\\n': {'keyCode': 13, 'code': 'Enter', 'key': 'Enter', 'text': '\\r'},\n  'ShiftLeft': {'keyCode': 16, 'code': 'ShiftLeft', 'key': 'Shift', 'location': 1},\n  'ShiftRight': {'keyCode': 16, 'code': 'ShiftRight', 'key': 'Shift', 'location': 2},\n  'ControlLeft': {'keyCode': 17, 'code': 'ControlLeft', 'key': 'Control', 'location': 1},\n  'ControlRight': {'keyCode': 17, 'code': 'ControlRight', 'key': 'Control', 'location': 2},\n  'AltLeft': {'keyCode': 18, 'code': 'AltLeft', 'key': 'Alt', 'location': 1},\n  'AltRight': {'keyCode': 18, 'code': 'AltRight', 'key': 'Alt', 'location': 2},\n  'Pause': {'keyCode': 19, 'code': 'Pause', 'key': 'Pause'},\n  'CapsLock': {'keyCode': 20, 'code': 'CapsLock', 'key': 'CapsLock'},\n  'Escape': {'keyCode': 27, 'code': 'Escape', 'key': 'Escape'},\n  'Convert': {'keyCode': 28, 'code': 'Convert', 'key': 'Convert'},\n  'NonConvert': {'keyCode': 29, 'code': 'NonConvert', 'key': 'NonConvert'},\n  'Space': {'keyCode': 32, 'code': 'Space', 'key': ' '},\n  'Numpad9': {'keyCode': 33, 'shiftKeyCode': 105, 'key': 'PageUp', 'code': 'Numpad9', 'shiftKey': '9', 'location': 3},\n  'PageUp': {'keyCode': 33, 'code': 'PageUp', 'key': 'PageUp'},\n  'Numpad3': {'keyCode': 34, 'shiftKeyCode': 99, 'key': 'PageDown', 'code': 'Numpad3', 'shiftKey': '3', 'location': 3},\n  'PageDown': {'keyCode': 34, 'code': 'PageDown', 'key': 'PageDown'},\n  'End': {'keyCode': 35, 'code': 'End', 'key': 'End'},\n  'Numpad1': {'keyCode': 35, 'shiftKeyCode': 97, 'key': 'End', 'code': 'Numpad1', 'shiftKey': '1', 'location': 3},\n  'Home': {'keyCode': 36, 'code': 'Home', 'key': 'Home'},\n  'Numpad7': {'keyCode': 36, 'shiftKeyCode': 103, 'key': 'Home', 'code': 'Numpad7', 'shiftKey': '7', 'location': 3},\n  'ArrowLeft': {'keyCode': 37, 'code': 'ArrowLeft', 'key': 'ArrowLeft'},\n  'Numpad4': {'keyCode': 37, 'shiftKeyCode': 100, 'key': 'ArrowLeft', 'code': 'Numpad4', 'shiftKey': '4', 'location': 3},\n  'Numpad8': {'keyCode': 38, 'shiftKeyCode': 104, 'key': 'ArrowUp', 'code': 'Numpad8', 'shiftKey': '8', 'location': 3},\n  'ArrowUp': {'keyCode': 38, 'code': 'ArrowUp', 'key': 'ArrowUp'},\n  'ArrowRight': {'keyCode': 39, 'code': 'ArrowRight', 'key': 'ArrowRight'},\n  'Numpad6': {'keyCode': 39, 'shiftKeyCode': 102, 'key': 'ArrowRight', 'code': 'Numpad6', 'shiftKey': '6', 'location': 3},\n  'Numpad2': {'keyCode': 40, 'shiftKeyCode': 98, 'key': 'ArrowDown', 'code': 'Numpad2', 'shiftKey': '2', 'location': 3},\n  'ArrowDown': {'keyCode': 40, 'code': 'ArrowDown', 'key': 'ArrowDown'},\n  'Select': {'keyCode': 41, 'code': 'Select', 'key': 'Select'},\n  'Open': {'keyCode': 43, 'code': 'Open', 'key': 'Execute'},\n  'PrintScreen': {'keyCode': 44, 'code': 'PrintScreen', 'key': 'PrintScreen'},\n  'Insert': {'keyCode': 45, 'code': 'Insert', 'key': 'Insert'},\n  'Numpad0': {'keyCode': 45, 'shiftKeyCode': 96, 'key': 'Insert', 'code': 'Numpad0', 'shiftKey': '0', 'location': 3},\n  'Delete': {'keyCode': 46, 'code': 'Delete', 'key': 'Delete'},\n  'NumpadDecimal': {'keyCode': 46, 'shiftKeyCode': 110, 'code': 'NumpadDecimal', 'key': '\\u0000', 'shiftKey': '.', 'location': 3},\n  'Digit0': {'keyCode': 48, 'code': 'Digit0', 'shiftKey': ')', 'key': '0'},\n  'Digit1': {'keyCode': 49, 'code': 'Digit1', 'shiftKey': '!', 'key': '1'},\n  'Digit2': {'keyCode': 50, 'code': 'Digit2', 'shiftKey': '@', 'key': '2'},\n  'Digit3': {'keyCode': 51, 'code': 'Digit3', 'shiftKey': '#', 'key': '3'},\n  'Digit4': {'keyCode': 52, 'code': 'Digit4', 'shiftKey': '$', 'key': '4'},\n  'Digit5': {'keyCode': 53, 'code': 'Digit5', 'shiftKey': '%', 'key': '5'},\n  'Digit6': {'keyCode': 54, 'code': 'Digit6', 'shiftKey': '^', 'key': '6'},\n  'Digit7': {'keyCode': 55, 'code': 'Digit7', 'shiftKey': '&', 'key': '7'},\n  'Digit8': {'keyCode': 56, 'code': 'Digit8', 'shiftKey': '*', 'key': '8'},\n  'Digit9': {'keyCode': 57, 'code': 'Digit9', 'shiftKey': '\\(', 'key': '9'},\n  'KeyA': {'keyCode': 65, 'code': 'KeyA', 'shiftKey': 'A', 'key': 'a'},\n  'KeyB': {'keyCode': 66, 'code': 'KeyB', 'shiftKey': 'B', 'key': 'b'},\n  'KeyC': {'keyCode': 67, 'code': 'KeyC', 'shiftKey': 'C', 'key': 'c'},\n  'KeyD': {'keyCode': 68, 'code': 'KeyD', 'shiftKey': 'D', 'key': 'd'},\n  'KeyE': {'keyCode': 69, 'code': 'KeyE', 'shiftKey': 'E', 'key': 'e'},\n  'KeyF': {'keyCode': 70, 'code': 'KeyF', 'shiftKey': 'F', 'key': 'f'},\n  'KeyG': {'keyCode': 71, 'code': 'KeyG', 'shiftKey': 'G', 'key': 'g'},\n  'KeyH': {'keyCode': 72, 'code': 'KeyH', 'shiftKey': 'H', 'key': 'h'},\n  'KeyI': {'keyCode': 73, 'code': 'KeyI', 'shiftKey': 'I', 'key': 'i'},\n  'KeyJ': {'keyCode': 74, 'code': 'KeyJ', 'shiftKey': 'J', 'key': 'j'},\n  'KeyK': {'keyCode': 75, 'code': 'KeyK', 'shiftKey': 'K', 'key': 'k'},\n  'KeyL': {'keyCode': 76, 'code': 'KeyL', 'shiftKey': 'L', 'key': 'l'},\n  'KeyM': {'keyCode': 77, 'code': 'KeyM', 'shiftKey': 'M', 'key': 'm'},\n  'KeyN': {'keyCode': 78, 'code': 'KeyN', 'shiftKey': 'N', 'key': 'n'},\n  'KeyO': {'keyCode': 79, 'code': 'KeyO', 'shiftKey': 'O', 'key': 'o'},\n  'KeyP': {'keyCode': 80, 'code': 'KeyP', 'shiftKey': 'P', 'key': 'p'},\n  'KeyQ': {'keyCode': 81, 'code': 'KeyQ', 'shiftKey': 'Q', 'key': 'q'},\n  'KeyR': {'keyCode': 82, 'code': 'KeyR', 'shiftKey': 'R', 'key': 'r'},\n  'KeyS': {'keyCode': 83, 'code': 'KeyS', 'shiftKey': 'S', 'key': 's'},\n  'KeyT': {'keyCode': 84, 'code': 'KeyT', 'shiftKey': 'T', 'key': 't'},\n  'KeyU': {'keyCode': 85, 'code': 'KeyU', 'shiftKey': 'U', 'key': 'u'},\n  'KeyV': {'keyCode': 86, 'code': 'KeyV', 'shiftKey': 'V', 'key': 'v'},\n  'KeyW': {'keyCode': 87, 'code': 'KeyW', 'shiftKey': 'W', 'key': 'w'},\n  'KeyX': {'keyCode': 88, 'code': 'KeyX', 'shiftKey': 'X', 'key': 'x'},\n  'KeyY': {'keyCode': 89, 'code': 'KeyY', 'shiftKey': 'Y', 'key': 'y'},\n  'KeyZ': {'keyCode': 90, 'code': 'KeyZ', 'shiftKey': 'Z', 'key': 'z'},\n  'MetaLeft': {'keyCode': 91, 'code': 'MetaLeft', 'key': 'Meta', 'location': 1},\n  'MetaRight': {'keyCode': 92, 'code': 'MetaRight', 'key': 'Meta', 'location': 2},\n  'ContextMenu': {'keyCode': 93, 'code': 'ContextMenu', 'key': 'ContextMenu'},\n  'NumpadMultiply': {'keyCode': 106, 'code': 'NumpadMultiply', 'key': '*', 'location': 3},\n  'NumpadAdd': {'keyCode': 107, 'code': 'NumpadAdd', 'key': '+', 'location': 3},\n  'NumpadSubtract': {'keyCode': 109, 'code': 'NumpadSubtract', 'key': '-', 'location': 3},\n  'NumpadDivide': {'keyCode': 111, 'code': 'NumpadDivide', 'key': '/', 'location': 3},\n  'F1': {'keyCode': 112, 'code': 'F1', 'key': 'F1'},\n  'F2': {'keyCode': 113, 'code': 'F2', 'key': 'F2'},\n  'F3': {'keyCode': 114, 'code': 'F3', 'key': 'F3'},\n  'F4': {'keyCode': 115, 'code': 'F4', 'key': 'F4'},\n  'F5': {'keyCode': 116, 'code': 'F5', 'key': 'F5'},\n  'F6': {'keyCode': 117, 'code': 'F6', 'key': 'F6'},\n  'F7': {'keyCode': 118, 'code': 'F7', 'key': 'F7'},\n  'F8': {'keyCode': 119, 'code': 'F8', 'key': 'F8'},\n  'F9': {'keyCode': 120, 'code': 'F9', 'key': 'F9'},\n  'F10': {'keyCode': 121, 'code': 'F10', 'key': 'F10'},\n  'F11': {'keyCode': 122, 'code': 'F11', 'key': 'F11'},\n  'F12': {'keyCode': 123, 'code': 'F12', 'key': 'F12'},\n  'F13': {'keyCode': 124, 'code': 'F13', 'key': 'F13'},\n  'F14': {'keyCode': 125, 'code': 'F14', 'key': 'F14'},\n  'F15': {'keyCode': 126, 'code': 'F15', 'key': 'F15'},\n  'F16': {'keyCode': 127, 'code': 'F16', 'key': 'F16'},\n  'F17': {'keyCode': 128, 'code': 'F17', 'key': 'F17'},\n  'F18': {'keyCode': 129, 'code': 'F18', 'key': 'F18'},\n  'F19': {'keyCode': 130, 'code': 'F19', 'key': 'F19'},\n  'F20': {'keyCode': 131, 'code': 'F20', 'key': 'F20'},\n  'F21': {'keyCode': 132, 'code': 'F21', 'key': 'F21'},\n  'F22': {'keyCode': 133, 'code': 'F22', 'key': 'F22'},\n  'F23': {'keyCode': 134, 'code': 'F23', 'key': 'F23'},\n  'F24': {'keyCode': 135, 'code': 'F24', 'key': 'F24'},\n  'NumLock': {'keyCode': 144, 'code': 'NumLock', 'key': 'NumLock'},\n  'ScrollLock': {'keyCode': 145, 'code': 'ScrollLock', 'key': 'ScrollLock'},\n  'AudioVolumeMute': {'keyCode': 173, 'code': 'AudioVolumeMute', 'key': 'AudioVolumeMute'},\n  'AudioVolumeDown': {'keyCode': 174, 'code': 'AudioVolumeDown', 'key': 'AudioVolumeDown'},\n  'AudioVolumeUp': {'keyCode': 175, 'code': 'AudioVolumeUp', 'key': 'AudioVolumeUp'},\n  'MediaTrackNext': {'keyCode': 176, 'code': 'MediaTrackNext', 'key': 'MediaTrackNext'},\n  'MediaTrackPrevious': {'keyCode': 177, 'code': 'MediaTrackPrevious', 'key': 'MediaTrackPrevious'},\n  'MediaStop': {'keyCode': 178, 'code': 'MediaStop', 'key': 'MediaStop'},\n  'MediaPlayPause': {'keyCode': 179, 'code': 'MediaPlayPause', 'key': 'MediaPlayPause'},\n  'Semicolon': {'keyCode': 186, 'code': 'Semicolon', 'shiftKey': ':', 'key': ';'},\n  'Equal': {'keyCode': 187, 'code': 'Equal', 'shiftKey': '+', 'key': '='},\n  'NumpadEqual': {'keyCode': 187, 'code': 'NumpadEqual', 'key': '=', 'location': 3},\n  'Comma': {'keyCode': 188, 'code': 'Comma', 'shiftKey': '\\<', 'key': ','},\n  'Minus': {'keyCode': 189, 'code': 'Minus', 'shiftKey': '_', 'key': '-'},\n  'Period': {'keyCode': 190, 'code': 'Period', 'shiftKey': '>', 'key': '.'},\n  'Slash': {'keyCode': 191, 'code': 'Slash', 'shiftKey': '?', 'key': '/'},\n  'Backquote': {'keyCode': 192, 'code': 'Backquote', 'shiftKey': '~', 'key': '`'},\n  'BracketLeft': {'keyCode': 219, 'code': 'BracketLeft', 'shiftKey': '{', 'key': '['},\n  'Backslash': {'keyCode': 220, 'code': 'Backslash', 'shiftKey': '|', 'key': '\\\\'},\n  'BracketRight': {'keyCode': 221, 'code': 'BracketRight', 'shiftKey': '}', 'key': ']'},\n  'Quote': {'keyCode': 222, 'code': 'Quote', 'shiftKey': '\"', 'key': '\\''},\n  'AltGraph': {'keyCode': 225, 'code': 'AltGraph', 'key': 'AltGraph'},\n  'Props': {'keyCode': 247, 'code': 'Props', 'key': 'CrSel'},\n  'Cancel': {'keyCode': 3, 'key': 'Cancel', 'code': 'Abort'},\n  'Clear': {'keyCode': 12, 'key': 'Clear', 'code': 'Numpad5', 'location': 3},\n  'Shift': {'keyCode': 16, 'key': 'Shift', 'code': 'ShiftLeft', 'location': 1},\n  'Control': {'keyCode': 17, 'key': 'Control', 'code': 'ControlLeft', 'location': 1},\n  'Alt': {'keyCode': 18, 'key': 'Alt', 'code': 'AltLeft', 'location': 1},\n  'Accept': {'keyCode': 30, 'key': 'Accept'},\n  'ModeChange': {'keyCode': 31, 'key': 'ModeChange'},\n  ' ': {'keyCode': 32, 'key': ' ', 'code': 'Space'},\n  'Print': {'keyCode': 42, 'key': 'Print'},\n  'Execute': {'keyCode': 43, 'key': 'Execute', 'code': 'Open'},\n  '\\u0000': {'keyCode': 46, 'key': '\\u0000', 'code': 'NumpadDecimal', 'location': 3},\n  'a': {'keyCode': 65, 'key': 'a', 'code': 'KeyA'},\n  'b': {'keyCode': 66, 'key': 'b', 'code': 'KeyB'},\n  'c': {'keyCode': 67, 'key': 'c', 'code': 'KeyC'},\n  'd': {'keyCode': 68, 'key': 'd', 'code': 'KeyD'},\n  'e': {'keyCode': 69, 'key': 'e', 'code': 'KeyE'},\n  'f': {'keyCode': 70, 'key': 'f', 'code': 'KeyF'},\n  'g': {'keyCode': 71, 'key': 'g', 'code': 'KeyG'},\n  'h': {'keyCode': 72, 'key': 'h', 'code': 'KeyH'},\n  'i': {'keyCode': 73, 'key': 'i', 'code': 'KeyI'},\n  'j': {'keyCode': 74, 'key': 'j', 'code': 'KeyJ'},\n  'k': {'keyCode': 75, 'key': 'k', 'code': 'KeyK'},\n  'l': {'keyCode': 76, 'key': 'l', 'code': 'KeyL'},\n  'm': {'keyCode': 77, 'key': 'm', 'code': 'KeyM'},\n  'n': {'keyCode': 78, 'key': 'n', 'code': 'KeyN'},\n  'o': {'keyCode': 79, 'key': 'o', 'code': 'KeyO'},\n  'p': {'keyCode': 80, 'key': 'p', 'code': 'KeyP'},\n  'q': {'keyCode': 81, 'key': 'q', 'code': 'KeyQ'},\n  'r': {'keyCode': 82, 'key': 'r', 'code': 'KeyR'},\n  's': {'keyCode': 83, 'key': 's', 'code': 'KeyS'},\n  't': {'keyCode': 84, 'key': 't', 'code': 'KeyT'},\n  'u': {'keyCode': 85, 'key': 'u', 'code': 'KeyU'},\n  'v': {'keyCode': 86, 'key': 'v', 'code': 'KeyV'},\n  'w': {'keyCode': 87, 'key': 'w', 'code': 'KeyW'},\n  'x': {'keyCode': 88, 'key': 'x', 'code': 'KeyX'},\n  'y': {'keyCode': 89, 'key': 'y', 'code': 'KeyY'},\n  'z': {'keyCode': 90, 'key': 'z', 'code': 'KeyZ'},\n  'Meta': {'keyCode': 91, 'key': 'Meta', 'code': 'MetaLeft', 'location': 1},\n  '*': {'keyCode': 106, 'key': '*', 'code': 'NumpadMultiply', 'location': 3},\n  '+': {'keyCode': 107, 'key': '+', 'code': 'NumpadAdd', 'location': 3},\n  '-': {'keyCode': 109, 'key': '-', 'code': 'NumpadSubtract', 'location': 3},\n  '/': {'keyCode': 111, 'key': '/', 'code': 'NumpadDivide', 'location': 3},\n  ';': {'keyCode': 186, 'key': ';', 'code': 'Semicolon'},\n  '=': {'keyCode': 187, 'key': '=', 'code': 'Equal'},\n  ',': {'keyCode': 188, 'key': ',', 'code': 'Comma'},\n  '.': {'keyCode': 190, 'key': '.', 'code': 'Period'},\n  '`': {'keyCode': 192, 'key': '`', 'code': 'Backquote'},\n  '[': {'keyCode': 219, 'key': '[', 'code': 'BracketLeft'},\n  '\\\\': {'keyCode': 220, 'key': '\\\\', 'code': 'Backslash'},\n  ']': {'keyCode': 221, 'key': ']', 'code': 'BracketRight'},\n  '\\'': {'keyCode': 222, 'key': '\\'', 'code': 'Quote'},\n  'Attn': {'keyCode': 246, 'key': 'Attn'},\n  'CrSel': {'keyCode': 247, 'key': 'CrSel', 'code': 'Props'},\n  'ExSel': {'keyCode': 248, 'key': 'ExSel'},\n  'EraseEof': {'keyCode': 249, 'key': 'EraseEof'},\n  'Play': {'keyCode': 250, 'key': 'Play'},\n  'ZoomOut': {'keyCode': 251, 'key': 'ZoomOut'},\n  ')': {'keyCode': 48, 'key': ')', 'code': 'Digit0'},\n  '!': {'keyCode': 49, 'key': '!', 'code': 'Digit1'},\n  '@': {'keyCode': 50, 'key': '@', 'code': 'Digit2'},\n  '#': {'keyCode': 51, 'key': '#', 'code': 'Digit3'},\n  '$': {'keyCode': 52, 'key': '$', 'code': 'Digit4'},\n  '%': {'keyCode': 53, 'key': '%', 'code': 'Digit5'},\n  '^': {'keyCode': 54, 'key': '^', 'code': 'Digit6'},\n  '&': {'keyCode': 55, 'key': '&', 'code': 'Digit7'},\n  '(': {'keyCode': 57, 'key': '\\(', 'code': 'Digit9'},\n  'A': {'keyCode': 65, 'key': 'A', 'code': 'KeyA'},\n  'B': {'keyCode': 66, 'key': 'B', 'code': 'KeyB'},\n  'C': {'keyCode': 67, 'key': 'C', 'code': 'KeyC'},\n  'D': {'keyCode': 68, 'key': 'D', 'code': 'KeyD'},\n  'E': {'keyCode': 69, 'key': 'E', 'code': 'KeyE'},\n  'F': {'keyCode': 70, 'key': 'F', 'code': 'KeyF'},\n  'G': {'keyCode': 71, 'key': 'G', 'code': 'KeyG'},\n  'H': {'keyCode': 72, 'key': 'H', 'code': 'KeyH'},\n  'I': {'keyCode': 73, 'key': 'I', 'code': 'KeyI'},\n  'J': {'keyCode': 74, 'key': 'J', 'code': 'KeyJ'},\n  'K': {'keyCode': 75, 'key': 'K', 'code': 'KeyK'},\n  'L': {'keyCode': 76, 'key': 'L', 'code': 'KeyL'},\n  'M': {'keyCode': 77, 'key': 'M', 'code': 'KeyM'},\n  'N': {'keyCode': 78, 'key': 'N', 'code': 'KeyN'},\n  'O': {'keyCode': 79, 'key': 'O', 'code': 'KeyO'},\n  'P': {'keyCode': 80, 'key': 'P', 'code': 'KeyP'},\n  'Q': {'keyCode': 81, 'key': 'Q', 'code': 'KeyQ'},\n  'R': {'keyCode': 82, 'key': 'R', 'code': 'KeyR'},\n  'S': {'keyCode': 83, 'key': 'S', 'code': 'KeyS'},\n  'T': {'keyCode': 84, 'key': 'T', 'code': 'KeyT'},\n  'U': {'keyCode': 85, 'key': 'U', 'code': 'KeyU'},\n  'V': {'keyCode': 86, 'key': 'V', 'code': 'KeyV'},\n  'W': {'keyCode': 87, 'key': 'W', 'code': 'KeyW'},\n  'X': {'keyCode': 88, 'key': 'X', 'code': 'KeyX'},\n  'Y': {'keyCode': 89, 'key': 'Y', 'code': 'KeyY'},\n  'Z': {'keyCode': 90, 'key': 'Z', 'code': 'KeyZ'},\n  ':': {'keyCode': 186, 'key': ':', 'code': 'Semicolon'},\n  '<': {'keyCode': 188, 'key': '\\<', 'code': 'Comma'},\n  '_': {'keyCode': 189, 'key': '_', 'code': 'Minus'},\n  '>': {'keyCode': 190, 'key': '>', 'code': 'Period'},\n  '?': {'keyCode': 191, 'key': '?', 'code': 'Slash'},\n  '~': {'keyCode': 192, 'key': '~', 'code': 'Backquote'},\n  '{': {'keyCode': 219, 'key': '{', 'code': 'BracketLeft'},\n  '|': {'keyCode': 220, 'key': '|', 'code': 'Backslash'},\n  '}': {'keyCode': 221, 'key': '}', 'code': 'BracketRight'},\n  '\"': {'keyCode': 222, 'key': '\"', 'code': 'Quote'}\n};","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper, assert} = require('./helper');\nconst fs = require('fs');\n\nconst openAsync = helper.promisify(fs.open);\nconst writeAsync = helper.promisify(fs.write);\nconst closeAsync = helper.promisify(fs.close);\n\nclass Tracing {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._recording = false;\n    this._path = '';\n  }\n\n  /**\n   * @param {!{path: string, screenshots?: boolean, categories?: !Array<string>}} options\n   */\n  async start(options) {\n    assert(!this._recording, 'Cannot start recording trace while already recording trace.');\n\n    const defaultCategories = [\n      '-*', 'devtools.timeline', 'v8.execute', 'disabled-by-default-devtools.timeline',\n      'disabled-by-default-devtools.timeline.frame', 'toplevel',\n      'blink.console', 'blink.user_timing', 'latencyInfo', 'disabled-by-default-devtools.timeline.stack',\n      'disabled-by-default-v8.cpu_profiler', 'disabled-by-default-v8.cpu_profiler.hires'\n    ];\n    const {\n      path = null,\n      screenshots = false,\n      categories = defaultCategories,\n    } = options;\n\n    if (screenshots)\n      categories.push('disabled-by-default-devtools.screenshot');\n\n    this._path = path;\n    this._recording = true;\n    await this._client.send('Tracing.start', {\n      transferMode: 'ReturnAsStream',\n      categories: categories.join(',')\n    });\n  }\n\n  /**\n   * @return {!Promise<!Buffer>}\n   */\n  async stop() {\n    let fulfill;\n    const contentPromise = new Promise(x => fulfill = x);\n    this._client.once('Tracing.tracingComplete', event => {\n      this._readStream(event.stream, this._path).then(fulfill);\n    });\n    await this._client.send('Tracing.end');\n    this._recording = false;\n    return contentPromise;\n  }\n\n  /**\n   * @param {string} handle\n   * @param {string} path\n   */\n  async _readStream(handle, path) {\n    let eof = false;\n    let file;\n    if (path)\n      file = await openAsync(path, 'w');\n    const bufs = [];\n    while (!eof) {\n      const response = await this._client.send('IO.read', {handle});\n      eof = response.eof;\n      bufs.push(Buffer.from(response.data));\n      if (path)\n        await writeAsync(file, response.data);\n    }\n    if (path)\n      await closeAsync(file);\n    await this._client.send('IO.close', {handle});\n    let resultBuffer = null;\n    try {\n      resultBuffer = Buffer.concat(bufs);\n    } finally {\n      return resultBuffer;\n    }\n  }\n}\nhelper.tracePublicAPI(Tracing);\n\nmodule.exports = Tracing;\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, debugError, assert} = require('./helper');\n\nconst {EVALUATION_SCRIPT_URL} = require('./ExecutionContext');\n\n/**\n * @typedef {Object} CoverageEntry\n * @property {string} url\n * @property {string} text\n * @property {!Array<!{start: number, end: number}>} ranges\n */\n\nclass Coverage {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._jsCoverage = new JSCoverage(client);\n    this._cssCoverage = new CSSCoverage(client);\n  }\n\n  /**\n   * @param {!{resetOnNavigation?: boolean, reportAnonymousScripts?: boolean}} options\n   */\n  async startJSCoverage(options) {\n    return await this._jsCoverage.start(options);\n  }\n\n  /**\n   * @return {!Promise<!Array<!CoverageEntry>>}\n   */\n  async stopJSCoverage() {\n    return await this._jsCoverage.stop();\n  }\n\n  /**\n   * @param {{resetOnNavigation?: boolean}=} options\n   */\n  async startCSSCoverage(options) {\n    return await this._cssCoverage.start(options);\n  }\n\n  /**\n   * @return {!Promise<!Array<!CoverageEntry>>}\n   */\n  async stopCSSCoverage() {\n    return await this._cssCoverage.stop();\n  }\n}\n\nmodule.exports = {Coverage};\nhelper.tracePublicAPI(Coverage);\n\nclass JSCoverage {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._enabled = false;\n    this._scriptURLs = new Map();\n    this._scriptSources = new Map();\n    this._eventListeners = [];\n    this._resetOnNavigation = false;\n  }\n\n  /**\n   * @param {!{resetOnNavigation?: boolean, reportAnonymousScripts?: boolean}} options\n   */\n  async start(options = {}) {\n    assert(!this._enabled, 'JSCoverage is already enabled');\n    const {\n      resetOnNavigation = true,\n      reportAnonymousScripts = false\n    } = options;\n    this._resetOnNavigation = resetOnNavigation;\n    this._reportAnonymousScripts = reportAnonymousScripts;\n    this._enabled = true;\n    this._scriptURLs.clear();\n    this._scriptSources.clear();\n    this._eventListeners = [\n      helper.addEventListener(this._client, 'Debugger.scriptParsed', this._onScriptParsed.bind(this)),\n      helper.addEventListener(this._client, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this)),\n    ];\n    await Promise.all([\n      this._client.send('Profiler.enable'),\n      this._client.send('Profiler.startPreciseCoverage', {callCount: false, detailed: true}),\n      this._client.send('Debugger.enable'),\n      this._client.send('Debugger.setSkipAllPauses', {skip: true})\n    ]);\n  }\n\n  _onExecutionContextsCleared() {\n    if (!this._resetOnNavigation)\n      return;\n    this._scriptURLs.clear();\n    this._scriptSources.clear();\n  }\n\n  /**\n   * @param {!Protocol.Debugger.scriptParsedPayload} event\n   */\n  async _onScriptParsed(event) {\n    // Ignore puppeteer-injected scripts\n    if (event.url === EVALUATION_SCRIPT_URL)\n      return;\n    // Ignore other anonymous scripts unless the reportAnonymousScripts option is true.\n    if (!event.url && !this._reportAnonymousScripts)\n      return;\n    try {\n      const response = await this._client.send('Debugger.getScriptSource', {scriptId: event.scriptId});\n      this._scriptURLs.set(event.scriptId, event.url);\n      this._scriptSources.set(event.scriptId, response.scriptSource);\n    } catch (e) {\n      // This might happen if the page has already navigated away.\n      debugError(e);\n    }\n  }\n\n  /**\n   * @return {!Promise<!Array<!CoverageEntry>>}\n   */\n  async stop() {\n    assert(this._enabled, 'JSCoverage is not enabled');\n    this._enabled = false;\n    const [profileResponse] = await Promise.all([\n      this._client.send('Profiler.takePreciseCoverage'),\n      this._client.send('Profiler.stopPreciseCoverage'),\n      this._client.send('Profiler.disable'),\n      this._client.send('Debugger.disable'),\n    ]);\n    helper.removeEventListeners(this._eventListeners);\n\n    const coverage = [];\n    for (const entry of profileResponse.result) {\n      let url = this._scriptURLs.get(entry.scriptId);\n      if (!url && this._reportAnonymousScripts)\n        url = 'debugger://VM' + entry.scriptId;\n      const text = this._scriptSources.get(entry.scriptId);\n      if (text === undefined || url === undefined)\n        continue;\n      const flattenRanges = [];\n      for (const func of entry.functions)\n        flattenRanges.push(...func.ranges);\n      const ranges = convertToDisjointRanges(flattenRanges);\n      coverage.push({url, ranges, text});\n    }\n    return coverage;\n  }\n}\n\nclass CSSCoverage {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._enabled = false;\n    this._stylesheetURLs = new Map();\n    this._stylesheetSources = new Map();\n    this._eventListeners = [];\n    this._resetOnNavigation = false;\n  }\n\n  /**\n   * @param {{resetOnNavigation?: boolean}=} options\n   */\n  async start(options = {}) {\n    assert(!this._enabled, 'CSSCoverage is already enabled');\n    const {resetOnNavigation = true} = options;\n    this._resetOnNavigation = resetOnNavigation;\n    this._enabled = true;\n    this._stylesheetURLs.clear();\n    this._stylesheetSources.clear();\n    this._eventListeners = [\n      helper.addEventListener(this._client, 'CSS.styleSheetAdded', this._onStyleSheet.bind(this)),\n      helper.addEventListener(this._client, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this)),\n    ];\n    await Promise.all([\n      this._client.send('DOM.enable'),\n      this._client.send('CSS.enable'),\n      this._client.send('CSS.startRuleUsageTracking'),\n    ]);\n  }\n\n  _onExecutionContextsCleared() {\n    if (!this._resetOnNavigation)\n      return;\n    this._stylesheetURLs.clear();\n    this._stylesheetSources.clear();\n  }\n\n  /**\n   * @param {!Protocol.CSS.styleSheetAddedPayload} event\n   */\n  async _onStyleSheet(event) {\n    const header = event.header;\n    // Ignore anonymous scripts\n    if (!header.sourceURL)\n      return;\n    try {\n      const response = await this._client.send('CSS.getStyleSheetText', {styleSheetId: header.styleSheetId});\n      this._stylesheetURLs.set(header.styleSheetId, header.sourceURL);\n      this._stylesheetSources.set(header.styleSheetId, response.text);\n    } catch (e) {\n      // This might happen if the page has already navigated away.\n      debugError(e);\n    }\n  }\n\n  /**\n   * @return {!Promise<!Array<!CoverageEntry>>}\n   */\n  async stop() {\n    assert(this._enabled, 'CSSCoverage is not enabled');\n    this._enabled = false;\n    const ruleTrackingResponse = await this._client.send('CSS.stopRuleUsageTracking');\n    await Promise.all([\n      this._client.send('CSS.disable'),\n      this._client.send('DOM.disable'),\n    ]);\n    helper.removeEventListeners(this._eventListeners);\n\n    // aggregate by styleSheetId\n    const styleSheetIdToCoverage = new Map();\n    for (const entry of ruleTrackingResponse.ruleUsage) {\n      let ranges = styleSheetIdToCoverage.get(entry.styleSheetId);\n      if (!ranges) {\n        ranges = [];\n        styleSheetIdToCoverage.set(entry.styleSheetId, ranges);\n      }\n      ranges.push({\n        startOffset: entry.startOffset,\n        endOffset: entry.endOffset,\n        count: entry.used ? 1 : 0,\n      });\n    }\n\n    const coverage = [];\n    for (const styleSheetId of this._stylesheetURLs.keys()) {\n      const url = this._stylesheetURLs.get(styleSheetId);\n      const text = this._stylesheetSources.get(styleSheetId);\n      const ranges = convertToDisjointRanges(styleSheetIdToCoverage.get(styleSheetId) || []);\n      coverage.push({url, ranges, text});\n    }\n\n    return coverage;\n  }\n}\n\n/**\n * @param {!Array<!{startOffset:number, endOffset:number, count:number}>} nestedRanges\n * @return {!Array<!{start:number, end:number}>}\n */\nfunction convertToDisjointRanges(nestedRanges) {\n  const points = [];\n  for (const range of nestedRanges) {\n    points.push({ offset: range.startOffset, type: 0, range });\n    points.push({ offset: range.endOffset, type: 1, range });\n  }\n  // Sort points to form a valid parenthesis sequence.\n  points.sort((a, b) => {\n    // Sort with increasing offsets.\n    if (a.offset !== b.offset)\n      return a.offset - b.offset;\n    // All \"end\" points should go before \"start\" points.\n    if (a.type !== b.type)\n      return b.type - a.type;\n    const aLength = a.range.endOffset - a.range.startOffset;\n    const bLength = b.range.endOffset - b.range.startOffset;\n    // For two \"start\" points, the one with longer range goes first.\n    if (a.type === 0)\n      return bLength - aLength;\n    // For two \"end\" points, the one with shorter range goes first.\n    return aLength - bLength;\n  });\n\n  const hitCountStack = [];\n  const results = [];\n  let lastOffset = 0;\n  // Run scanning line to intersect all ranges.\n  for (const point of points) {\n    if (hitCountStack.length && lastOffset < point.offset && hitCountStack[hitCountStack.length - 1] > 0) {\n      const lastResult = results.length ? results[results.length - 1] : null;\n      if (lastResult && lastResult.end === lastOffset)\n        lastResult.end = point.offset;\n      else\n        results.push({start: lastOffset, end: point.offset});\n    }\n    lastOffset = point.offset;\n    if (point.type === 0)\n      hitCountStack.push(point.range.count);\n    else\n      hitCountStack.pop();\n  }\n  // Filter out empty ranges.\n  return results.filter(range => range.end - range.start > 1);\n}\n\n","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst EventEmitter = require('events');\nconst {helper, debugError} = require('./helper');\nconst {ExecutionContext, JSHandle} = require('./ExecutionContext');\n\nclass Worker extends EventEmitter {\n  /**\n   * @param {Puppeteer.CDPSession} client\n   * @param {string} url\n   * @param {function(!string, !Array<!JSHandle>)} consoleAPICalled\n   * @param {function(!Protocol.Runtime.ExceptionDetails)} exceptionThrown\n   */\n  constructor(client, url, consoleAPICalled, exceptionThrown) {\n    super();\n    this._client = client;\n    this._url = url;\n    this._executionContextPromise = new Promise(x => this._executionContextCallback = x);\n    /** @type {function(!Protocol.Runtime.RemoteObject):!JSHandle} */\n    let jsHandleFactory;\n    this._client.once('Runtime.executionContextCreated', async event => {\n      jsHandleFactory = remoteObject => new JSHandle(executionContext, client, remoteObject);\n      const executionContext = new ExecutionContext(client, event.context, null);\n      this._executionContextCallback(executionContext);\n    });\n    // This might fail if the target is closed before we recieve all execution contexts.\n    this._client.send('Runtime.enable', {}).catch(debugError);\n\n    this._client.on('Runtime.consoleAPICalled', event => consoleAPICalled(event.type, event.args.map(jsHandleFactory)));\n    this._client.on('Runtime.exceptionThrown', exception => exceptionThrown(exception.exceptionDetails));\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {!Promise<ExecutionContext>}\n   */\n  async executionContext() {\n    return this._executionContextPromise;\n  }\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n  async evaluate(pageFunction, ...args) {\n    return (await this._executionContextPromise).evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!JSHandle>}\n   */\n  async evaluateHandle(pageFunction, ...args) {\n    return (await this._executionContextPromise).evaluateHandle(pageFunction, ...args);\n  }\n}\n\nmodule.exports = {Worker};\nhelper.tracePublicAPI(Worker);\n","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper} = require('./helper');\n\n/**\n * @typedef {Object} SerializedAXNode\n * @property {string} role\n *\n * @property {string=} name\n * @property {string|number=} value\n * @property {string=} description\n *\n * @property {string=} keyshortcuts\n * @property {string=} roledescription\n * @property {string=} valuetext\n *\n * @property {boolean=} disabled\n * @property {boolean=} expanded\n * @property {boolean=} focused\n * @property {boolean=} modal\n * @property {boolean=} multiline\n * @property {boolean=} multiselectable\n * @property {boolean=} readonly\n * @property {boolean=} required\n * @property {boolean=} selected\n *\n * @property {boolean|\"mixed\"=} checked\n * @property {boolean|\"mixed\"=} pressed\n *\n * @property {number=} level\n * @property {number=} valuemin\n * @property {number=} valuemax\n *\n * @property {string=} autocomplete\n * @property {string=} haspopup\n * @property {string=} invalid\n * @property {string=} orientation\n *\n * @property {Array<SerializedAXNode>=} children\n */\n\nclass Accessibility {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n  }\n\n  /**\n   * @param {{interestingOnly?: boolean}=} options\n   * @return {!Promise<!SerializedAXNode>}\n   */\n  async snapshot(options = {}) {\n    const {interestingOnly = true} = options;\n    const {nodes} = await this._client.send('Accessibility.getFullAXTree');\n    const root = AXNode.createTree(nodes);\n    if (!interestingOnly)\n      return serializeTree(root)[0];\n\n    /** @type {!Set<!AXNode>} */\n    const interestingNodes = new Set();\n    collectInterestingNodes(interestingNodes, root, false);\n    return serializeTree(root, interestingNodes)[0];\n  }\n}\n\n/**\n * @param {!Set<!AXNode>} collection\n * @param {!AXNode} node\n * @param {boolean} insideControl\n */\nfunction collectInterestingNodes(collection, node, insideControl) {\n  if (node.isInteresting(insideControl))\n    collection.add(node);\n  if (node.isLeafNode())\n    return;\n  insideControl = insideControl || node.isControl();\n  for (const child of node._children)\n    collectInterestingNodes(collection, child, insideControl);\n}\n\n/**\n * @param {!AXNode} node\n * @param {!Set<!AXNode>=} whitelistedNodes\n * @return {!Array<!SerializedAXNode>}\n */\nfunction serializeTree(node, whitelistedNodes) {\n  /** @type {!Array<!SerializedAXNode>} */\n  const children = [];\n  for (const child of node._children)\n    children.push(...serializeTree(child, whitelistedNodes));\n\n  if (whitelistedNodes && !whitelistedNodes.has(node))\n    return children;\n\n  const serializedNode = node.serialize();\n  if (children.length)\n    serializedNode.children = children;\n  return [serializedNode];\n}\n\n\nclass AXNode {\n  /**\n   * @param {!Protocol.Accessibility.AXNode} payload\n   */\n  constructor(payload) {\n    this._payload = payload;\n\n    /** @type {!Array<!AXNode>} */\n    this._children = [];\n\n    this._richlyEditable = false;\n    this._editable = false;\n    this._focusable = false;\n    this._expanded = false;\n    this._name = this._payload.name ? this._payload.name.value : '';\n    this._role = this._payload.role ? this._payload.role.value : 'Unknown';\n    this._cachedHasFocusableChild;\n\n    for (const property of this._payload.properties || []) {\n      if (property.name === 'editable') {\n        this._richlyEditable = property.value.value === 'richtext';\n        this._editable = true;\n      }\n      if (property.name === 'focusable')\n        this._focusable = property.value.value;\n      if (property.name === 'expanded')\n        this._expanded = property.value.value;\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _isPlainTextField() {\n    if (this._richlyEditable)\n      return false;\n    if (this._editable)\n      return true;\n    return this._role === 'textbox' || this._role === 'ComboBox' || this._role === 'searchbox';\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _isTextOnlyObject() {\n    const role = this._role;\n    return (role === 'LineBreak' || role === 'text' ||\n            role === 'InlineTextBox');\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _hasFocusableChild() {\n    if (this._cachedHasFocusableChild === undefined) {\n      this._cachedHasFocusableChild = false;\n      for (const child of this._children) {\n        if (child._focusable || child._hasFocusableChild()) {\n          this._cachedHasFocusableChild = true;\n          break;\n        }\n      }\n    }\n    return this._cachedHasFocusableChild;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isLeafNode() {\n    if (!this._children.length)\n      return true;\n\n    // These types of objects may have children that we use as internal\n    // implementation details, but we want to expose them as leaves to platform\n    // accessibility APIs because screen readers might be confused if they find\n    // any children.\n    if (this._isPlainTextField() || this._isTextOnlyObject())\n      return true;\n\n    // Roles whose children are only presentational according to the ARIA and\n    // HTML5 Specs should be hidden from screen readers.\n    // (Note that whilst ARIA buttons can have only presentational children, HTML5\n    // buttons are allowed to have content.)\n    switch (this._role) {\n      case 'doc-cover':\n      case 'graphics-symbol':\n      case 'img':\n      case 'Meter':\n      case 'scrollbar':\n      case 'slider':\n      case 'separator':\n      case 'progressbar':\n        return true;\n      default:\n        break;\n    }\n\n    // Here and below: Android heuristics\n    if (this._hasFocusableChild())\n      return false;\n    if (this._focusable && this._name)\n      return true;\n    if (this._role === 'heading' && this._name)\n      return true;\n    return false;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isControl() {\n    switch (this._role) {\n      case 'button':\n      case 'checkbox':\n      case 'ColorWell':\n      case 'combobox':\n      case 'DisclosureTriangle':\n      case 'listbox':\n      case 'menu':\n      case 'menubar':\n      case 'menuitem':\n      case 'menuitemcheckbox':\n      case 'menuitemradio':\n      case 'radio':\n      case 'scrollbar':\n      case 'searchbox':\n      case 'slider':\n      case 'spinbutton':\n      case 'switch':\n      case 'tab':\n      case 'textbox':\n      case 'tree':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * @param {boolean} insideControl\n   * @return {boolean}\n   */\n  isInteresting(insideControl) {\n    const role = this._role;\n    if (role === 'Ignored')\n      return false;\n\n    if (this._focusable || this._richlyEditable)\n      return true;\n\n    // If it's not focusable but has a control role, then it's interesting.\n    if (this.isControl())\n      return true;\n\n    // A non focusable child of a control is not interesting\n    if (insideControl)\n      return false;\n\n    return this.isLeafNode() && !!this._name;\n  }\n\n  /**\n   * @return {!SerializedAXNode}\n   */\n  serialize() {\n    /** @type {!Map<string, number|string|boolean>} */\n    const properties = new Map();\n    for (const property of this._payload.properties || [])\n      properties.set(property.name.toLowerCase(), property.value.value);\n    if (this._payload.name)\n      properties.set('name', this._payload.name.value);\n    if (this._payload.value)\n      properties.set('value', this._payload.value.value);\n    if (this._payload.description)\n      properties.set('description', this._payload.description.value);\n\n    /** @type {SerializedAXNode} */\n    const node = {\n      role: this._role\n    };\n\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const userStringProperties = [\n      'name',\n      'value',\n      'description',\n      'keyshortcuts',\n      'roledescription',\n      'valuetext',\n    ];\n    for (const userStringProperty of userStringProperties) {\n      if (!properties.has(userStringProperty))\n        continue;\n      node[userStringProperty] = properties.get(userStringProperty);\n    }\n\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const booleanProperties = [\n      'disabled',\n      'expanded',\n      'focused',\n      'modal',\n      'multiline',\n      'multiselectable',\n      'readonly',\n      'required',\n      'selected',\n    ];\n    for (const booleanProperty of booleanProperties) {\n      // WebArea's treat focus differently than other nodes. They report whether their frame  has focus,\n      // not whether focus is specifically on the root node.\n      if (booleanProperty === 'focused' && this._role === 'WebArea')\n        continue;\n      const value = properties.get(booleanProperty);\n      if (!value)\n        continue;\n      node[booleanProperty] = value;\n    }\n\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const tristateProperties = [\n      'checked',\n      'pressed',\n    ];\n    for (const tristateProperty of tristateProperties) {\n      if (!properties.has(tristateProperty))\n        continue;\n      const value = properties.get(tristateProperty);\n      node[tristateProperty] = value === 'mixed' ? 'mixed' : value === 'true' ? true : false;\n    }\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const numericalProperties = [\n      'level',\n      'valuemax',\n      'valuemin',\n    ];\n    for (const numericalProperty of numericalProperties) {\n      if (!properties.has(numericalProperty))\n        continue;\n      node[numericalProperty] = properties.get(numericalProperty);\n    }\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const tokenProperties = [\n      'autocomplete',\n      'haspopup',\n      'invalid',\n      'orientation',\n    ];\n    for (const tokenProperty of tokenProperties) {\n      const value = properties.get(tokenProperty);\n      if (!value || value === 'false')\n        continue;\n      node[tokenProperty] = value;\n    }\n    return node;\n  }\n\n  /**\n   * @param {!Array<!Protocol.Accessibility.AXNode>} payloads\n   * @return {!AXNode}\n   */\n  static createTree(payloads) {\n    /** @type {!Map<string, !AXNode>} */\n    const nodeById = new Map();\n    for (const payload of payloads)\n      nodeById.set(payload.nodeId, new AXNode(payload));\n    for (const node of nodeById.values()) {\n      for (const childId of node._payload.childIds || [])\n        node._children.push(nodeById.get(childId));\n    }\n    return nodeById.values().next().value;\n  }\n}\n\nmodule.exports = {Accessibility};\nhelper.tracePublicAPI(Accessibility);\n","class TaskQueue {\n  constructor() {\n    this._chain = Promise.resolve();\n  }\n\n  /**\n   * @param {function()} task\n   * @return {!Promise}\n   */\n  postTask(task) {\n    const result = this._chain.then(task);\n    this._chain = result.catch(() => {});\n    return result;\n  }\n}\n\nmodule.exports = {TaskQueue};","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst WebSocket = require('ws');\n\n/**\n * @implements {!Puppeteer.ConnectionTransport}\n */\nclass WebSocketTransport {\n  /**\n   * @param {string} url\n   * @return {!Promise<!WebSocketTransport>}\n   */\n  static create(url) {\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(url, [], { perMessageDeflate: false });\n      ws.addEventListener('open', () => resolve(new WebSocketTransport(ws)));\n      ws.addEventListener('error', reject);\n    });\n  }\n\n  /**\n   * @param {!WebSocket} ws\n   */\n  constructor(ws) {\n    this._ws = ws;\n    this._ws.addEventListener('message', event => {\n      if (this.onmessage)\n        this.onmessage.call(null, event.data);\n    });\n    this._ws.addEventListener('close', event => {\n      if (this.onclose)\n        this.onclose.call(null);\n    });\n    // Silently ignore all errors - we don't know what to do with them.\n    this._ws.addEventListener('error', () => {});\n    this.onmessage = null;\n    this.onclose = null;\n  }\n\n  /**\n   * @param {string} message\n   */\n  send(message) {\n    this._ws.send(message);\n  }\n\n  close() {\n    this._ws.close();\n  }\n}\n\nmodule.exports = WebSocketTransport;\n","'use strict';\n\nfunction Queue(options) {\n  if (!(this instanceof Queue)) {\n    return new Queue(options);\n  }\n\n  options = options || {};\n  this.concurrency = options.concurrency || Infinity;\n  this.pending = 0;\n  this.jobs = [];\n  this.cbs = [];\n  this._done = done.bind(this);\n}\n\nvar arrayAddMethods = [\n  'push',\n  'unshift',\n  'splice'\n];\n\narrayAddMethods.forEach(function(method) {\n  Queue.prototype[method] = function() {\n    var methodResult = Array.prototype[method].apply(this.jobs, arguments);\n    this._run();\n    return methodResult;\n  };\n});\n\nObject.defineProperty(Queue.prototype, 'length', {\n  get: function() {\n    return this.pending + this.jobs.length;\n  }\n});\n\nQueue.prototype._run = function() {\n  if (this.pending === this.concurrency) {\n    return;\n  }\n  if (this.jobs.length) {\n    var job = this.jobs.shift();\n    this.pending++;\n    job(this._done);\n    this._run();\n  }\n\n  if (this.pending === 0) {\n    while (this.cbs.length !== 0) {\n      var cb = this.cbs.pop();\n      process.nextTick(cb);\n    }\n  }\n};\n\nQueue.prototype.onDone = function(cb) {\n  if (typeof cb === 'function') {\n    this.cbs.push(cb);\n    this._run();\n  }\n};\n\nfunction done() {\n  this.pending--;\n  this._run();\n}\n\nmodule.exports = Queue;\n","'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was dispatched\n   */\n  constructor(type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being closed\n   * @param {String} reason A human-readable string explaining why the connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(target) {\n    super('open', target);\n  }\n}\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(error, target) {\n    super('error', target);\n\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} method A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @public\n   */\n  addEventListener(method, listener) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage(data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose(code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError(error) {\n      listener.call(this, new ErrorEvent(error, this));\n    }\n\n    function onOpen() {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    if (method === 'message') {\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} method A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener(method, listener) {\n    const listeners = this.listeners(method);\n\n    for (var i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(method, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst crypto = require('crypto');\nconst http = require('http');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst extension = require('./extension');\nconst constants = require('./constants');\nconst WebSocket = require('./websocket');\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {String} options.host The hostname where to bind the server\n   * @param {Number} options.port The port where to bind the server\n   * @param {http.Server} options.server A pre-created HTTP/S server to use\n   * @param {Function} options.verifyClient An hook to reject connections\n   * @param {Function} options.handleProtocols An hook to handle protocols\n   * @param {String} options.path Accept only connections matching this path\n   * @param {Boolean} options.noServer Enable no server mode\n   * @param {Boolean} options.clientTracking Specifies whether or not to track clients\n   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable permessage-deflate\n   * @param {Number} options.maxPayload The maximum allowed message size\n   * @param {Function} callback A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = Object.assign(\n      {\n        maxPayload: 100 * 1024 * 1024,\n        perMessageDeflate: false,\n        handleProtocols: null,\n        clientTracking: true,\n        verifyClient: null,\n        noServer: false,\n        backlog: null, // use default (511 as implemented in net.js)\n        server: null,\n        host: null,\n        path: null,\n        port: null\n      },\n      options\n    );\n\n    if (options.port == null && !options.server && !options.noServer) {\n      throw new TypeError(\n        'One of the \"port\", \"server\", or \"noServer\" options must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, (ws) => {\n            this.emit('connection', ws, req);\n          });\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(cb) {\n    if (cb) this.once('close', cb);\n\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) {\n        server.close(() => this.emit('close'));\n        return;\n      }\n    }\n\n    process.nextTick(emitClose, this);\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' ||\n      req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !req.headers['sec-websocket-key'] ||\n      (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(req.headers['sec-websocket-extensions']);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.connection.authorized || req.connection.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(extensions, req, socket, head, cb);\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @private\n   */\n  completeUpgrade(extensions, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    const key = crypto\n      .createHash('sha1')\n      .update(req.headers['sec-websocket-key'] + constants.GUID, 'binary')\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${key}`\n    ];\n\n    const ws = new WebSocket(null);\n    var protocol = req.headers['sec-websocket-protocol'];\n\n    if (protocol) {\n      protocol = protocol.trim().split(/ *, */);\n\n      //\n      // Optionally call external protocol selection handler.\n      //\n      if (this.options.handleProtocols) {\n        protocol = this.options.handleProtocols(protocol, req);\n      } else {\n        protocol = protocol[0];\n      }\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws.protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, this.options.maxPayload);\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => this.clients.delete(ws));\n    }\n\n    cb(ws);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server.emit('close');\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {net.Socket} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || http.STATUS_CODES[code];\n    headers = Object.assign(\n      {\n        Connection: 'close',\n        'Content-type': 'text/html',\n        'Content-Length': Buffer.byteLength(message)\n      },\n      headers\n    );\n\n    socket.write(\n      `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n        Object.keys(headers)\n          .map((h) => `${h}: ${headers[h]}`)\n          .join('\\r\\n') +\n        '\\r\\n\\r\\n' +\n        message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper} = require('./helper');\n\n/**\n * @implements {!Puppeteer.ConnectionTransport}\n */\nclass PipeTransport {\n  /**\n   * @param {!NodeJS.WritableStream} pipeWrite\n   * @param {!NodeJS.ReadableStream} pipeRead\n   */\n  constructor(pipeWrite, pipeRead) {\n    this._pipeWrite = pipeWrite;\n    this._pendingMessage = '';\n    this._eventListeners = [\n      helper.addEventListener(pipeRead, 'data', buffer => this._dispatch(buffer)),\n      helper.addEventListener(pipeRead, 'close', () => {\n        if (this.onclose)\n          this.onclose.call(null);\n      })\n    ];\n    this.onmessage = null;\n    this.onclose = null;\n  }\n\n  /**\n   * @param {string} message\n   */\n  send(message) {\n    this._pipeWrite.write(message);\n    this._pipeWrite.write('\\0');\n  }\n\n  /**\n   * @param {!Buffer} buffer\n   */\n  _dispatch(buffer) {\n    let end = buffer.indexOf('\\0');\n    if (end === -1) {\n      this._pendingMessage += buffer.toString();\n      return;\n    }\n    const message = this._pendingMessage + buffer.toString(undefined, 0, end);\n    if (this.onmessage)\n      this.onmessage.call(null, message);\n\n    let start = end + 1;\n    end = buffer.indexOf('\\0', start);\n    while (end !== -1) {\n      if (this.onmessage)\n        this.onmessage.call(null, buffer.toString(undefined, start, end));\n      start = end + 1;\n      end = buffer.indexOf('\\0', start);\n    }\n    this._pendingMessage = buffer.toString(undefined, start);\n  }\n\n  close() {\n    this._pipeWrite = null;\n    helper.removeEventListeners(this._eventListeners);\n  }\n}\n\nmodule.exports = PipeTransport;\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper} = require('./helper');\nconst Launcher = require('./Launcher');\nconst BrowserFetcher = require('./BrowserFetcher');\n\nmodule.exports = class {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._launcher = new Launcher(projectRoot, preferredRevision, isPuppeteerCore);\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Puppeteer.Browser>}\n   */\n  launch(options) {\n    return this._launcher.launch(options);\n  }\n\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Puppeteer.Browser>}\n   */\n  connect(options) {\n    return this._launcher.connect(options);\n  }\n\n  /**\n   * @return {string}\n   */\n  executablePath() {\n    return this._launcher.executablePath();\n  }\n\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n  defaultArgs(options) {\n    return this._launcher.defaultArgs(options);\n  }\n\n  /**\n   * @param {!BrowserFetcher.Options=} options\n   * @return {!BrowserFetcher}\n   */\n  createBrowserFetcher(options) {\n    return new BrowserFetcher(this._projectRoot, options);\n  }\n};\n\nhelper.tracePublicAPI(module.exports, 'Puppeteer');\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst os = require('os');\nconst path = require('path');\nconst removeFolder = require('rimraf');\nconst childProcess = require('child_process');\nconst BrowserFetcher = require('./BrowserFetcher');\nconst {Connection} = require('./Connection');\nconst {Browser} = require('./Browser');\nconst readline = require('readline');\nconst fs = require('fs');\nconst {helper, debugError} = require('./helper');\nconst {TimeoutError} = require('./Errors');\nconst WebSocketTransport = require('./WebSocketTransport');\nconst PipeTransport = require('./PipeTransport');\n\nconst mkdtempAsync = helper.promisify(fs.mkdtemp);\nconst removeFolderAsync = helper.promisify(removeFolder);\n\nconst CHROME_PROFILE_PATH = path.join(os.tmpdir(), 'puppeteer_dev_profile-');\n\nconst DEFAULT_ARGS = [\n  '--disable-background-networking',\n  '--disable-background-timer-throttling',\n  '--disable-backgrounding-occluded-windows',\n  '--disable-breakpad',\n  '--disable-client-side-phishing-detection',\n  '--disable-default-apps',\n  '--disable-dev-shm-usage',\n  '--disable-extensions',\n  // TODO: Support OOOPIF. @see https://github.com/GoogleChrome/puppeteer/issues/2548\n  '--disable-features=site-per-process',\n  '--disable-hang-monitor',\n  '--disable-ipc-flooding-protection',\n  '--disable-popup-blocking',\n  '--disable-prompt-on-repost',\n  '--disable-renderer-backgrounding',\n  '--disable-sync',\n  '--disable-translate',\n  '--metrics-recording-only',\n  '--no-first-run',\n  '--safebrowsing-disable-auto-update',\n  '--enable-automation',\n  '--password-store=basic',\n  '--use-mock-keychain',\n];\n\nclass Launcher {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Browser>}\n   */\n  /* async */ launch(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      slowMo = 0,\n      timeout = 30000\n    } = options;\n\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs)\n      chromeArguments.push(...this.defaultArgs(options));\n    else if (Array.isArray(ignoreDefaultArgs))\n      chromeArguments.push(...this.defaultArgs(options).filter(arg => ignoreDefaultArgs.indexOf(arg) === -1));\n    else\n      chromeArguments.push(...args);\n\n    let temporaryUserDataDir = null;\n\n    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-')))\n      chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n    if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {\n      temporaryUserDataDir = (yield mkdtempAsync(CHROME_PROFILE_PATH));\n      chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n    }\n\n    let chromeExecutable = executablePath;\n    if (!executablePath) {\n      const {missingText, executablePath} = this._resolveExecutablePath();\n      if (missingText)\n        throw new Error(missingText);\n      chromeExecutable = executablePath;\n    }\n\n    const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n    /** @type {!Array<\"ignore\"|\"pipe\">} */\n    const stdio = usePipe ? ['ignore', 'ignore', 'ignore', 'pipe', 'pipe'] : ['pipe', 'pipe', 'pipe'];\n    const chromeProcess = childProcess.spawn(\n        chromeExecutable,\n        chromeArguments,\n        {\n          // On non-windows platforms, `detached: false` makes child process a leader of a new\n          // process group, making it possible to kill child process tree with `.kill(-pid)` command.\n          // @see https://nodejs.org/api/child_process.html#child_process_options_detached\n          detached: process.platform !== 'win32',\n          env,\n          stdio\n        }\n    );\n\n    if (dumpio) {\n      chromeProcess.stderr.pipe(process.stderr);\n      chromeProcess.stdout.pipe(process.stdout);\n    }\n\n    let chromeClosed = false;\n    const waitForChromeToClose = new Promise((fulfill, reject) => {\n      chromeProcess.once('exit', () => {\n        chromeClosed = true;\n        // Cleanup as processes exit.\n        if (temporaryUserDataDir) {\n          removeFolderAsync(temporaryUserDataDir)\n              .then(() => fulfill())\n              .catch(err => console.error(err));\n        } else {\n          fulfill();\n        }\n      });\n    });\n\n    const listeners = [ helper.addEventListener(process, 'exit', killChrome) ];\n    if (handleSIGINT)\n      listeners.push(helper.addEventListener(process, 'SIGINT', () => { killChrome(); process.exit(130); }));\n    if (handleSIGTERM)\n      listeners.push(helper.addEventListener(process, 'SIGTERM', gracefullyCloseChrome));\n    if (handleSIGHUP)\n      listeners.push(helper.addEventListener(process, 'SIGHUP', gracefullyCloseChrome));\n    /** @type {?Connection} */\n    let connection = null;\n    try {\n      if (!usePipe) {\n        const browserWSEndpoint = (yield waitForWSEndpoint(chromeProcess, timeout, this._preferredRevision));\n        const transport = (yield WebSocketTransport.create(browserWSEndpoint));\n        connection = new Connection(browserWSEndpoint, transport, slowMo);\n      } else {\n        const transport = new PipeTransport(/** @type {!NodeJS.WritableStream} */(chromeProcess.stdio[3]), /** @type {!NodeJS.ReadableStream} */ (chromeProcess.stdio[4]));\n        connection = new Connection('', transport, slowMo);\n      }\n      const browser = (yield Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, chromeProcess, gracefullyCloseChrome));\n      (yield ensureInitialPage(browser));\n      return browser;\n    } catch (e) {\n      killChrome();\n      throw e;\n    }\n\n    /**\n     * @param {!Browser} browser\n     */\n    /* async */ function ensureInitialPage(browser) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      // Wait for initial page target to be created.\n      if (browser.targets().find(target => target.type() === 'page'))\n        return;\n\n      let initialPageCallback;\n      const initialPagePromise = new Promise(resolve => initialPageCallback = resolve);\n      const listeners = [helper.addEventListener(browser, 'targetcreated', target => {\n        if (target.type() === 'page')\n          initialPageCallback();\n      })];\n\n      (yield initialPagePromise);\n      helper.removeEventListeners(listeners);\n    });}\n\n    /**\n     * @return {Promise}\n     */\n    function gracefullyCloseChrome() {\n      helper.removeEventListeners(listeners);\n      if (temporaryUserDataDir) {\n        killChrome();\n      } else if (connection) {\n        // Attempt to close chrome gracefully\n        connection.send('Browser.close').catch(error => {\n          debugError(error);\n          killChrome();\n        });\n      }\n      return waitForChromeToClose;\n    }\n\n    // This method has to be sync to be used as 'exit' event handler.\n    function killChrome() {\n      helper.removeEventListeners(listeners);\n      if (chromeProcess.pid && !chromeProcess.killed && !chromeClosed) {\n        // Force kill chrome.\n        try {\n          if (process.platform === 'win32')\n            childProcess.execSync(`taskkill /pid ${chromeProcess.pid} /T /F`);\n          else\n            process.kill(-chromeProcess.pid, 'SIGKILL');\n        } catch (e) {\n          // the process might have already stopped\n        }\n      }\n      // Attempt to remove temporary profile directory to avoid littering.\n      try {\n        removeFolder.sync(temporaryUserDataDir);\n      } catch (e) { }\n    }\n  });}\n\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n  defaultArgs(options = {}) {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    const chromeArguments = [...DEFAULT_ARGS];\n    if (userDataDir)\n      chromeArguments.push(`--user-data-dir=${userDataDir}`);\n    if (devtools)\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    if (headless) {\n      chromeArguments.push(\n          '--headless',\n          '--hide-scrollbars',\n          '--mute-audio'\n      );\n      if (os.platform() === 'win32')\n        chromeArguments.push('--disable-gpu');\n    }\n    if (args.every(arg => arg.startsWith('-')))\n      chromeArguments.push('about:blank');\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n\n  /**\n   * @return {string}\n   */\n  executablePath() {\n    return this._resolveExecutablePath().executablePath;\n  }\n\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Browser>}\n   */\n  /* async */ connect(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      browserWSEndpoint,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      transport = (yield WebSocketTransport.create(browserWSEndpoint)),\n      slowMo = 0,\n    } = options;\n    const connection = new Connection(browserWSEndpoint, transport, slowMo);\n    const {browserContextIds} = (yield connection.send('Target.getBrowserContexts'));\n    return Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(debugError));\n  });}\n\n  /**\n   * @return {{executablePath: string, missingText: ?string}}\n   */\n  _resolveExecutablePath() {\n    const browserFetcher = new BrowserFetcher(this._projectRoot);\n    // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n    if (!this._isPuppeteerCore) {\n      const executablePath = process.env['PUPPETEER_EXECUTABLE_PATH'];\n      if (executablePath) {\n        const missingText = !fs.existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : null;\n        return { executablePath, missingText };\n      }\n      const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n      if (revision) {\n        const revisionInfo = browserFetcher.revisionInfo(revision);\n        const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : null;\n        return {executablePath: revisionInfo.executablePath, missingText};\n      }\n    }\n    const revisionInfo = browserFetcher.revisionInfo(this._preferredRevision);\n    const missingText = !revisionInfo.local ? `Chromium revision is not downloaded. Run \"npm install\" or \"yarn install\"` : null;\n    return {executablePath: revisionInfo.executablePath, missingText};\n  }\n\n}\n\n/**\n * @param {!Puppeteer.ChildProcess} chromeProcess\n * @param {number} timeout\n * @param {string} preferredRevision\n * @return {!Promise<string>}\n */\nfunction waitForWSEndpoint(chromeProcess, timeout, preferredRevision) {\n  return new Promise((resolve, reject) => {\n    const rl = readline.createInterface({ input: chromeProcess.stderr });\n    let stderr = '';\n    const listeners = [\n      helper.addEventListener(rl, 'line', onLine),\n      helper.addEventListener(rl, 'close', () => onClose()),\n      helper.addEventListener(chromeProcess, 'exit', () => onClose()),\n      helper.addEventListener(chromeProcess, 'error', error => onClose(error))\n    ];\n    const timeoutId = timeout ? setTimeout(onTimeout, timeout) : 0;\n\n    /**\n     * @param {!Error=} error\n     */\n    function onClose(error) {\n      cleanup();\n      reject(new Error([\n        'Failed to launch chrome!' + (error ? ' ' + error.message : ''),\n        stderr,\n        '',\n        'TROUBLESHOOTING: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md',\n        '',\n      ].join('\\n')));\n    }\n\n    function onTimeout() {\n      cleanup();\n      reject(new TimeoutError(`Timed out after ${timeout} ms while trying to connect to Chrome! The only Chrome revision guaranteed to work is r${preferredRevision}`));\n    }\n\n    /**\n     * @param {string} line\n     */\n    function onLine(line) {\n      stderr += line + '\\n';\n      const match = line.match(/^DevTools listening on (ws:\\/\\/.*)$/);\n      if (!match)\n        return;\n      cleanup();\n      resolve(match[1]);\n    }\n\n    function cleanup() {\n      if (timeoutId)\n        clearTimeout(timeoutId);\n      helper.removeEventListeners(listeners);\n    }\n  });\n}\n\n/**\n * @typedef {Object} Launcher.ChromeArgOptions\n * @property {boolean=} headless\n * @property {Array<string>=} args\n * @property {string=} userDataDir\n * @property {boolean=} devtools\n */\n\n/**\n * @typedef {Object} Launcher.LaunchOptions\n * @property {string=} executablePath\n * @property {boolean|Array<string>=} ignoreDefaultArgs\n * @property {boolean=} handleSIGINT\n * @property {boolean=} handleSIGTERM\n * @property {boolean=} handleSIGHUP\n * @property {number=} timeout\n * @property {boolean=} dumpio\n * @property {!Object<string, string | undefined>=} env\n * @property {boolean=} pipe\n */\n\n/**\n * @typedef {Object} Launcher.BrowserOptions\n * @property {boolean=} ignoreHTTPSErrors\n * @property {(?Puppeteer.Viewport)=} defaultViewport\n * @property {number=} slowMo\n */\n\n\nmodule.exports = Launcher;\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { helper, assert } = require('./helper');\nconst {Target} = require('./Target');\nconst EventEmitter = require('events');\nconst {TaskQueue} = require('./TaskQueue');\nconst {Connection} = require('./Connection');\n\nclass Browser extends EventEmitter {\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Array<string>} contextIds\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {?Puppeteer.ChildProcess} process\n   * @param {(function():Promise)=} closeCallback\n   */\n  constructor(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback) {\n    super();\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._process = process;\n    this._screenshotTaskQueue = new TaskQueue();\n    this._connection = connection;\n    this._closeCallback = closeCallback || new Function();\n\n    this._defaultContext = new BrowserContext(this._connection, this, null);\n    /** @type {Map<string, BrowserContext>} */\n    this._contexts = new Map();\n    for (const contextId of contextIds)\n      this._contexts.set(contextId, new BrowserContext(this._connection, this, contextId));\n\n    /** @type {Map<string, Target>} */\n    this._targets = new Map();\n    this._connection.on(Connection.Events.Disconnected, () => this.emit(Browser.Events.Disconnected));\n    this._connection.on('Target.targetCreated', this._targetCreated.bind(this));\n    this._connection.on('Target.targetDestroyed', this._targetDestroyed.bind(this));\n    this._connection.on('Target.targetInfoChanged', this._targetInfoChanged.bind(this));\n  }\n\n  /**\n   * @return {?Puppeteer.ChildProcess}\n   */\n  process() {\n    return this._process;\n  }\n\n  /**\n   * @return {!Promise<!BrowserContext>}\n   */\n  /* async */ createIncognitoBrowserContext() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {browserContextId} = (yield this._connection.send('Target.createBrowserContext'));\n    const context = new BrowserContext(this._connection, this, browserContextId);\n    this._contexts.set(browserContextId, context);\n    return context;\n  });}\n\n  /**\n   * @return {!Array<!BrowserContext>}\n   */\n  browserContexts() {\n    return [this._defaultContext, ...Array.from(this._contexts.values())];\n  }\n\n  /**\n   * @return {!BrowserContext}\n   */\n  defaultBrowserContext() {\n    return this._defaultContext;\n  }\n\n  /**\n   * @param {?string} contextId\n   */\n  /* async */ _disposeContext(contextId) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._connection.send('Target.disposeBrowserContext', {browserContextId: contextId || undefined}));\n    this._contexts.delete(contextId);\n  });}\n\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Array<string>} contextIds\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {?Puppeteer.ChildProcess} process\n   * @param {function()=} closeCallback\n   */\n  static /* async */ create(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const browser = new Browser(connection, contextIds, ignoreHTTPSErrors, defaultViewport, process, closeCallback);\n    (yield connection.send('Target.setDiscoverTargets', {discover: true}));\n    return browser;\n  });}\n\n  /**\n   * @param {!Protocol.Target.targetCreatedPayload} event\n   */\n  /* async */ _targetCreated(event) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const targetInfo = event.targetInfo;\n    const {browserContextId} = targetInfo;\n    const context = (browserContextId && this._contexts.has(browserContextId)) ? this._contexts.get(browserContextId) : this._defaultContext;\n\n    const target = new Target(targetInfo, context, () => this._connection.createSession(targetInfo), this._ignoreHTTPSErrors, this._defaultViewport, this._screenshotTaskQueue);\n    assert(!this._targets.has(event.targetInfo.targetId), 'Target should not exist before targetCreated');\n    this._targets.set(event.targetInfo.targetId, target);\n\n    if ((yield target._initializedPromise)) {\n      this.emit(Browser.Events.TargetCreated, target);\n      context.emit(BrowserContext.Events.TargetCreated, target);\n    }\n  });}\n\n  /**\n   * @param {{targetId: string}} event\n   */\n  /* async */ _targetDestroyed(event) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const target = this._targets.get(event.targetId);\n    target._initializedCallback(false);\n    this._targets.delete(event.targetId);\n    target._closedCallback();\n    if ((yield target._initializedPromise)) {\n      this.emit(Browser.Events.TargetDestroyed, target);\n      target.browserContext().emit(BrowserContext.Events.TargetDestroyed, target);\n    }\n  });}\n\n  /**\n   * @param {!Protocol.Target.targetInfoChangedPayload} event\n   */\n  _targetInfoChanged(event) {\n    const target = this._targets.get(event.targetInfo.targetId);\n    assert(target, 'target should exist before targetInfoChanged');\n    const previousURL = target.url();\n    const wasInitialized = target._isInitialized;\n    target._targetInfoChanged(event.targetInfo);\n    if (wasInitialized && previousURL !== target.url()) {\n      this.emit(Browser.Events.TargetChanged, target);\n      target.browserContext().emit(BrowserContext.Events.TargetChanged, target);\n    }\n  }\n\n  /**\n   * @return {string}\n   */\n  wsEndpoint() {\n    return this._connection.url();\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  /* async */ newPage() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._defaultContext.newPage();\n  });}\n\n  /**\n   * @param {?string} contextId\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  /* async */ _createPageInContext(contextId) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {targetId} = (yield this._connection.send('Target.createTarget', {url: 'about:blank', browserContextId: contextId || undefined}));\n    const target = (yield this._targets.get(targetId));\n    assert((yield target._initializedPromise), 'Failed to create target for page');\n    const page = (yield target.page());\n    return page;\n  });}\n\n  /**\n   * @return {!Array<!Target>}\n   */\n  targets() {\n    return Array.from(this._targets.values()).filter(target => target._isInitialized);\n  }\n\n  /**\n   * @return {!Target}\n   */\n  target() {\n    return this.targets().find(target => target.type() === 'browser');\n  }\n\n  /**\n   * @param {function(!Target):boolean} predicate\n   * @param {{timeout?: number}=} options\n   * @return {!Promise<!Target>}\n   */\n  /* async */ waitForTarget(predicate, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      timeout = 30000\n    } = options;\n    const existingTarget = this.targets().find(predicate);\n    if (existingTarget)\n      return existingTarget;\n    let resolve;\n    const targetPromise = new Promise(x => resolve = x);\n    this.on(Browser.Events.TargetCreated, check);\n    this.on(Browser.Events.TargetChanged, check);\n    try {\n      if (!timeout)\n        return (yield targetPromise);\n      return (yield helper.waitWithTimeout(targetPromise, 'target', timeout));\n    } finally {\n      this.removeListener(Browser.Events.TargetCreated, check);\n      this.removeListener(Browser.Events.TargetChanged, check);\n    }\n\n    /**\n     * @param {!Target} target\n     */\n    function check(target) {\n      if (predicate(target))\n        resolve(target);\n    }\n  });}\n\n  /**\n   * @return {!Promise<!Array<!Puppeteer.Page>>}\n   */\n  /* async */ pages() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const contextPages = (yield Promise.all(this.browserContexts().map(context => context.pages())));\n    // Flatten array.\n    return contextPages.reduce((acc, x) => acc.concat(x), []);\n  });}\n\n  /**\n   * @return {!Promise<string>}\n   */\n  /* async */ version() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const version = (yield this._getVersion());\n    return version.product;\n  });}\n\n  /**\n   * @return {!Promise<string>}\n   */\n  /* async */ userAgent() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const version = (yield this._getVersion());\n    return version.userAgent;\n  });}\n\n  /* async */ close() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._closeCallback.call(null));\n    this.disconnect();\n  });}\n\n  disconnect() {\n    this._connection.dispose();\n  }\n\n  /**\n   * @return {!Promise<!Object>}\n   */\n  _getVersion() {\n    return this._connection.send('Browser.getVersion');\n  }\n}\n\n/** @enum {string} */\nBrowser.Events = {\n  TargetCreated: 'targetcreated',\n  TargetDestroyed: 'targetdestroyed',\n  TargetChanged: 'targetchanged',\n  Disconnected: 'disconnected'\n};\n\nclass BrowserContext extends EventEmitter {\n  /**\n   * @param {!Puppeteer.Connection} connection\n   * @param {!Browser} browser\n   * @param {?string} contextId\n   */\n  constructor(connection, browser, contextId) {\n    super();\n    this._connection = connection;\n    this._browser = browser;\n    this._id = contextId;\n  }\n\n  /**\n   * @return {!Array<!Target>} target\n   */\n  targets() {\n    return this._browser.targets().filter(target => target.browserContext() === this);\n  }\n\n  /**\n   * @param {function(!Target):boolean} predicate\n   * @param {{timeout?: number}=} options\n   * @return {!Promise<!Target>}\n   */\n  waitForTarget(predicate, options) {\n    return this._browser.waitForTarget(target => target.browserContext() === this && predicate(target), options);\n  }\n\n  /**\n   * @return {!Promise<!Array<!Puppeteer.Page>>}\n   */\n  /* async */ pages() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const pages = (yield Promise.all(\n        this.targets()\n            .filter(target => target.type() === 'page')\n            .map(target => target.page())\n    ));\n    return pages.filter(page => !!page);\n  });}\n\n  /**\n   * @return {boolean}\n   */\n  isIncognito() {\n    return !!this._id;\n  }\n\n  /**\n   * @param {string} origin\n   * @param {!Array<string>} permissions\n   */\n  /* async */ overridePermissions(origin, permissions) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const webPermissionToProtocol = new Map([\n      ['geolocation', 'geolocation'],\n      ['midi', 'midi'],\n      ['notifications', 'notifications'],\n      ['push', 'push'],\n      ['camera', 'videoCapture'],\n      ['microphone', 'audioCapture'],\n      ['background-sync', 'backgroundSync'],\n      ['ambient-light-sensor', 'sensors'],\n      ['accelerometer', 'sensors'],\n      ['gyroscope', 'sensors'],\n      ['magnetometer', 'sensors'],\n      ['accessibility-events', 'accessibilityEvents'],\n      ['clipboard-read', 'clipboardRead'],\n      ['clipboard-write', 'clipboardWrite'],\n      ['payment-handler', 'paymentHandler'],\n      // chrome-specific permissions we have.\n      ['midi-sysex', 'midiSysex'],\n    ]);\n    permissions = permissions.map(permission => {\n      const protocolPermission = webPermissionToProtocol.get(permission);\n      if (!protocolPermission)\n        throw new Error('Unknown permission: ' + permission);\n      return protocolPermission;\n    });\n    (yield this._connection.send('Browser.grantPermissions', {origin, browserContextId: this._id || undefined, permissions}));\n  });}\n\n  /* async */ clearPermissionOverrides() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._connection.send('Browser.resetPermissions', {browserContextId: this._id || undefined}));\n  });}\n\n  /**\n   * @return {!Promise<!Puppeteer.Page>}\n   */\n  newPage() {\n    return this._browser._createPageInContext(this._id);\n  }\n\n  /**\n   * @return {!Browser}\n   */\n  browser() {\n    return this._browser;\n  }\n\n  /* async */ close() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(this._id, 'Non-incognito profiles cannot be closed!');\n    (yield this._browser._disposeContext(this._id));\n  });}\n}\n\n/** @enum {string} */\nBrowserContext.Events = {\n  TargetCreated: 'targetcreated',\n  TargetDestroyed: 'targetdestroyed',\n  TargetChanged: 'targetchanged',\n};\n\nhelper.tracePublicAPI(BrowserContext);\nhelper.tracePublicAPI(Browser);\n\nmodule.exports = {Browser, BrowserContext};\n","const {Page} = require('./Page');\nconst {helper} = require('./helper');\n\nclass Target {\n  /**\n   * @param {!Protocol.Target.TargetInfo} targetInfo\n   * @param {!Puppeteer.BrowserContext} browserContext\n   * @param {!function():!Promise<!Puppeteer.CDPSession>} sessionFactory\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {!Puppeteer.TaskQueue} screenshotTaskQueue\n   */\n  constructor(targetInfo, browserContext, sessionFactory, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {\n    this._targetInfo = targetInfo;\n    this._browserContext = browserContext;\n    this._targetId = targetInfo.targetId;\n    this._sessionFactory = sessionFactory;\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._defaultViewport = defaultViewport;\n    this._screenshotTaskQueue = screenshotTaskQueue;\n    /** @type {?Promise<!Puppeteer.Page>} */\n    this._pagePromise = null;\n    this._initializedPromise = new Promise(fulfill => this._initializedCallback = fulfill);\n    this._isClosedPromise = new Promise(fulfill => this._closedCallback = fulfill);\n    this._isInitialized = this._targetInfo.type !== 'page' || this._targetInfo.url !== '';\n    if (this._isInitialized)\n      this._initializedCallback(true);\n  }\n\n  /**\n   * @return {!Promise<!Puppeteer.CDPSession>}\n   */\n  createCDPSession() {\n    return this._sessionFactory();\n  }\n\n  /**\n   * @return {!Promise<?Page>}\n   */\n  /* async */ page() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if ((this._targetInfo.type === 'page' || this._targetInfo.type === 'background_page') && !this._pagePromise) {\n      this._pagePromise = this._sessionFactory()\n          .then(client => Page.create(client, this, this._ignoreHTTPSErrors, this._defaultViewport, this._screenshotTaskQueue));\n    }\n    return this._pagePromise;\n  });}\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._targetInfo.url;\n  }\n\n  /**\n   * @return {\"page\"|\"background_page\"|\"service_worker\"|\"other\"|\"browser\"}\n   */\n  type() {\n    const type = this._targetInfo.type;\n    if (type === 'page' || type === 'background_page' || type === 'service_worker' || type === 'browser')\n      return type;\n    return 'other';\n  }\n\n  /**\n   * @return {!Puppeteer.Browser}\n   */\n  browser() {\n    return this._browserContext.browser();\n  }\n\n  /**\n   * @return {!Puppeteer.BrowserContext}\n   */\n  browserContext() {\n    return this._browserContext;\n  }\n\n  /**\n   * @return {?Puppeteer.Target}\n   */\n  opener() {\n    const { openerId } = this._targetInfo;\n    if (!openerId)\n      return null;\n    return this.browser()._targets.get(openerId);\n  }\n\n  /**\n   * @param {!Protocol.Target.TargetInfo} targetInfo\n   */\n  _targetInfoChanged(targetInfo) {\n    this._targetInfo = targetInfo;\n\n    if (!this._isInitialized && (this._targetInfo.type !== 'page' || this._targetInfo.url !== '')) {\n      this._isInitialized = true;\n      this._initializedCallback(true);\n      return;\n    }\n  }\n}\n\nhelper.tracePublicAPI(Target);\n\nmodule.exports = {Target};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst fs = require('fs');\nconst EventEmitter = require('events');\nconst mime = require('mime');\nconst {NetworkManager} = require('./NetworkManager');\nconst {Dialog} = require('./Dialog');\nconst {EmulationManager} = require('./EmulationManager');\nconst {FrameManager} = require('./FrameManager');\nconst {Keyboard, Mouse, Touchscreen} = require('./Input');\nconst Tracing = require('./Tracing');\nconst {helper, debugError, assert} = require('./helper');\nconst {Coverage} = require('./Coverage');\nconst {Worker} = require('./Worker');\nconst {createJSHandle} = require('./ExecutionContext');\nconst {Accessibility} = require('./Accessibility');\nconst writeFileAsync = helper.promisify(fs.writeFile);\n\nclass Page extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Puppeteer.Target} target\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {?Puppeteer.Viewport} defaultViewport\n   * @param {!Puppeteer.TaskQueue} screenshotTaskQueue\n   * @return {!Promise<!Page>}\n   */\n  static /* async */ create(client, target, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n\n    (yield client.send('Page.enable'));\n    const {frameTree} = (yield client.send('Page.getFrameTree'));\n    const page = new Page(client, target, frameTree, ignoreHTTPSErrors, screenshotTaskQueue);\n\n    (yield Promise.all([\n      client.send('Target.setAutoAttach', {autoAttach: true, waitForDebuggerOnStart: false}),\n      client.send('Page.setLifecycleEventsEnabled', { enabled: true }),\n      client.send('Network.enable', {}),\n      client.send('Runtime.enable', {}),\n      client.send('Security.enable', {}),\n      client.send('Performance.enable', {}),\n      client.send('Log.enable', {}),\n    ]));\n    if (ignoreHTTPSErrors)\n      (yield client.send('Security.setOverrideCertificateErrors', {override: true}));\n    // Initialize default page size.\n    if (defaultViewport)\n      (yield page.setViewport(defaultViewport));\n\n    return page;\n  });}\n\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Puppeteer.Target} target\n   * @param {!Protocol.Page.FrameTree} frameTree\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {!Puppeteer.TaskQueue} screenshotTaskQueue\n   */\n  constructor(client, target, frameTree, ignoreHTTPSErrors, screenshotTaskQueue) {\n    super();\n    this._closed = false;\n    this._client = client;\n    this._target = target;\n    this._keyboard = new Keyboard(client);\n    this._mouse = new Mouse(client, this._keyboard);\n    this._touchscreen = new Touchscreen(client, this._keyboard);\n    this._accessibility = new Accessibility(client);\n    this._networkManager = new NetworkManager(client);\n    /** @type {!FrameManager} */\n    this._frameManager = new FrameManager(client, frameTree, this, this._networkManager);\n    this._networkManager.setFrameManager(this._frameManager);\n    this._emulationManager = new EmulationManager(client);\n    this._tracing = new Tracing(client);\n    /** @type {!Map<string, Function>} */\n    this._pageBindings = new Map();\n    this._ignoreHTTPSErrors = ignoreHTTPSErrors;\n    this._coverage = new Coverage(client);\n    this._javascriptEnabled = true;\n    /** @type {?Puppeteer.Viewport} */\n    this._viewport = null;\n\n    this._screenshotTaskQueue = screenshotTaskQueue;\n\n    /** @type {!Map<string, Worker>} */\n    this._workers = new Map();\n    client.on('Target.attachedToTarget', event => {\n      if (event.targetInfo.type !== 'worker') {\n        // If we don't detach from service workers, they will never die.\n        client.send('Target.detachFromTarget', {\n          sessionId: event.sessionId\n        }).catch(debugError);\n        return;\n      }\n      const session = client._createSession(event.targetInfo.type, event.sessionId);\n      const worker = new Worker(session, event.targetInfo.url, this._addConsoleMessage.bind(this), this._handleException.bind(this));\n      this._workers.set(event.sessionId, worker);\n      this.emit(Page.Events.WorkerCreated, worker);\n\n    });\n    client.on('Target.detachedFromTarget', event => {\n      const worker = this._workers.get(event.sessionId);\n      if (!worker)\n        return;\n      this.emit(Page.Events.WorkerDestroyed, worker);\n      this._workers.delete(event.sessionId);\n    });\n\n    this._frameManager.on(FrameManager.Events.FrameAttached, event => this.emit(Page.Events.FrameAttached, event));\n    this._frameManager.on(FrameManager.Events.FrameDetached, event => this.emit(Page.Events.FrameDetached, event));\n    this._frameManager.on(FrameManager.Events.FrameNavigated, event => this.emit(Page.Events.FrameNavigated, event));\n\n    this._networkManager.on(NetworkManager.Events.Request, event => this.emit(Page.Events.Request, event));\n    this._networkManager.on(NetworkManager.Events.Response, event => this.emit(Page.Events.Response, event));\n    this._networkManager.on(NetworkManager.Events.RequestFailed, event => this.emit(Page.Events.RequestFailed, event));\n    this._networkManager.on(NetworkManager.Events.RequestFinished, event => this.emit(Page.Events.RequestFinished, event));\n\n    client.on('Page.domContentEventFired', event => this.emit(Page.Events.DOMContentLoaded));\n    client.on('Page.loadEventFired', event => this.emit(Page.Events.Load));\n    client.on('Runtime.consoleAPICalled', event => this._onConsoleAPI(event));\n    client.on('Runtime.bindingCalled', event => this._onBindingCalled(event));\n    client.on('Page.javascriptDialogOpening', event => this._onDialog(event));\n    client.on('Runtime.exceptionThrown', exception => this._handleException(exception.exceptionDetails));\n    client.on('Security.certificateError', event => this._onCertificateError(event));\n    client.on('Inspector.targetCrashed', event => this._onTargetCrashed());\n    client.on('Performance.metrics', event => this._emitMetrics(event));\n    client.on('Log.entryAdded', event => this._onLogEntryAdded(event));\n    this._target._isClosedPromise.then(() => {\n      this.emit(Page.Events.Close);\n      this._closed = true;\n    });\n  }\n\n  /**\n   * @param {!{longitude: number, latitude: number, accuracy: (number|undefined)}} options\n   */\n  /* async */ setGeolocation(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const { longitude, latitude, accuracy = 0} = options;\n    if (longitude < -180 || longitude > 180)\n      throw new Error(`Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`);\n    if (latitude < -90 || latitude > 90)\n      throw new Error(`Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`);\n    if (accuracy < 0)\n      throw new Error(`Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`);\n    (yield this._client.send('Emulation.setGeolocationOverride', {longitude, latitude, accuracy}));\n  });}\n\n  /**\n   * @return {!Puppeteer.Target}\n   */\n  target() {\n    return this._target;\n  }\n\n  /**\n   * @return {!Puppeteer.Browser}\n   */\n  browser() {\n    return this._target.browser();\n  }\n\n  _onTargetCrashed() {\n    this.emit('error', new Error('Page crashed!'));\n  }\n\n  /**\n   * @param {!Protocol.Log.entryAddedPayload} event\n   */\n  _onLogEntryAdded(event) {\n    const {level, text, args, source} = event.entry;\n    if (args)\n      args.map(arg => helper.releaseObject(this._client, arg));\n    if (source !== 'worker')\n      this.emit(Page.Events.Console, new ConsoleMessage(level, text));\n  }\n\n  /**\n   * @return {!Puppeteer.Frame}\n   */\n  mainFrame() {\n    return this._frameManager.mainFrame();\n  }\n\n  /**\n   * @return {!Keyboard}\n   */\n  get keyboard() {\n    return this._keyboard;\n  }\n\n  /**\n   * @return {!Touchscreen}\n   */\n  get touchscreen() {\n    return this._touchscreen;\n  }\n\n  /**\n   * @return {!Coverage}\n   */\n  get coverage() {\n    return this._coverage;\n  }\n\n  /**\n   * @return {!Tracing}\n   */\n  get tracing() {\n    return this._tracing;\n  }\n\n  /**\n   * @return {!Accessibility}\n   */\n  get accessibility() {\n    return this._accessibility;\n  }\n\n  /**\n   * @return {!Array<Puppeteer.Frame>}\n   */\n  frames() {\n    return this._frameManager.frames();\n  }\n\n  /**\n   * @return {!Array<!Worker>}\n   */\n  workers() {\n    return Array.from(this._workers.values());\n  }\n\n  /**\n   * @param {boolean} value\n   */\n  /* async */ setRequestInterception(value) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._networkManager.setRequestInterception(value);\n  });}\n\n  /**\n   * @param {boolean} enabled\n   */\n  setOfflineMode(enabled) {\n    return this._networkManager.setOfflineMode(enabled);\n  }\n\n  /**\n   * @param {number} timeout\n   */\n  setDefaultNavigationTimeout(timeout) {\n    this._frameManager.setDefaultNavigationTimeout(timeout);\n  }\n\n  /**\n   * @param {!Protocol.Security.certificateErrorPayload} event\n   */\n  _onCertificateError(event) {\n    if (!this._ignoreHTTPSErrors)\n      return;\n    this._client.send('Security.handleCertificateError', {\n      eventId: event.eventId,\n      action: 'continue'\n    }).catch(debugError);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  /* async */ $(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.mainFrame().$(selector);\n  });}\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  /* async */ evaluateHandle(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const context = (yield this.mainFrame().executionContext());\n    return context.evaluateHandle(pageFunction, ...args);\n  });}\n\n  /**\n   * @param {!Puppeteer.JSHandle} prototypeHandle\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  /* async */ queryObjects(prototypeHandle) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const context = (yield this.mainFrame().executionContext());\n    return context.queryObjects(prototypeHandle);\n  });}\n\n  /**\n   * @param {string} selector\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  /* async */ $eval(selector, pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.mainFrame().$eval(selector, pageFunction, ...args);\n  });}\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  /* async */ $$eval(selector, pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.mainFrame().$$eval(selector, pageFunction, ...args);\n  });}\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  /* async */ $$(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.mainFrame().$$(selector);\n  });}\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  /* async */ $x(expression) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.mainFrame().$x(expression);\n  });}\n\n  /**\n   * @param {!Array<string>} urls\n   * @return {!Promise<!Array<Network.Cookie>>}\n   */\n  /* async */ cookies(...urls) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return ((yield this._client.send('Network.getCookies', {\n      urls: urls.length ? urls : [this.url()]\n    }))).cookies;\n  });}\n\n  /**\n   * @param {Array<Protocol.Network.deleteCookiesParameters>} cookies\n   */\n  /* async */ deleteCookie(...cookies) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const pageURL = this.url();\n    for (const cookie of cookies) {\n      const item = Object.assign({}, cookie);\n      if (!cookie.url && pageURL.startsWith('http'))\n        item.url = pageURL;\n      (yield this._client.send('Network.deleteCookies', item));\n    }\n  });}\n\n  /**\n   * @param {Array<Network.CookieParam>} cookies\n   */\n  /* async */ setCookie(...cookies) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const pageURL = this.url();\n    const startsWithHTTP = pageURL.startsWith('http');\n    const items = cookies.map(cookie => {\n      const item = Object.assign({}, cookie);\n      if (!item.url && startsWithHTTP)\n        item.url = pageURL;\n      assert(\n          item.url !== 'about:blank',\n          `Blank page can not have cookie \"${item.name}\"`\n      );\n      assert(\n          !String.prototype.startsWith.call(item.url || '', 'data:'),\n          `Data URL page can not have cookie \"${item.name}\"`\n      );\n      return item;\n    });\n    (yield this.deleteCookie(...items));\n    if (items.length)\n      (yield this._client.send('Network.setCookies', { cookies: items }));\n  });}\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string, type?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  /* async */ addScriptTag(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.mainFrame().addScriptTag(options);\n  });}\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  /* async */ addStyleTag(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.mainFrame().addStyleTag(options);\n  });}\n\n  /**\n   * @param {string} name\n   * @param {function(?)} puppeteerFunction\n   */\n  /* async */ exposeFunction(name, puppeteerFunction) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (this._pageBindings.has(name))\n      throw new Error(`Failed to add page binding with name ${name}: window['${name}'] already exists!`);\n    this._pageBindings.set(name, puppeteerFunction);\n\n    const expression = helper.evaluationString(addPageBinding, name);\n    (yield this._client.send('Runtime.addBinding', {name: name}));\n    (yield this._client.send('Page.addScriptToEvaluateOnNewDocument', {source: expression}));\n    (yield Promise.all(this.frames().map(frame => frame.evaluate(expression).catch(debugError))));\n\n    function addPageBinding(bindingName) {\n      const binding = window[bindingName];\n      window[bindingName] = /* async */(...args) => {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n        const me = window[bindingName];\n        let callbacks = me['callbacks'];\n        if (!callbacks) {\n          callbacks = new Map();\n          me['callbacks'] = callbacks;\n        }\n        const seq = (me['lastSeq'] || 0) + 1;\n        me['lastSeq'] = seq;\n        const promise = new Promise((resolve, reject) => callbacks.set(seq, {resolve, reject}));\n        binding(JSON.stringify({name: bindingName, seq, args}));\n        return promise;\n      });};\n    }\n  });}\n\n  /**\n   * @param {?{username: string, password: string}} credentials\n   */\n  /* async */ authenticate(credentials) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._networkManager.authenticate(credentials);\n  });}\n\n  /**\n   * @param {!Object<string, string>} headers\n   */\n  /* async */ setExtraHTTPHeaders(headers) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._networkManager.setExtraHTTPHeaders(headers);\n  });}\n\n  /**\n   * @param {string} userAgent\n   */\n  /* async */ setUserAgent(userAgent) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._networkManager.setUserAgent(userAgent);\n  });}\n\n  /**\n   * @return {!Promise<!Metrics>}\n   */\n  /* async */ metrics() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const response = (yield this._client.send('Performance.getMetrics'));\n    return this._buildMetricsObject(response.metrics);\n  });}\n\n  /**\n   * @param {!Protocol.Performance.metricsPayload} event\n   */\n  _emitMetrics(event) {\n    this.emit(Page.Events.Metrics, {\n      title: event.title,\n      metrics: this._buildMetricsObject(event.metrics)\n    });\n  }\n\n  /**\n   * @param {?Array<!Protocol.Performance.Metric>} metrics\n   * @return {!Metrics}\n   */\n  _buildMetricsObject(metrics) {\n    const result = {};\n    for (const metric of metrics || []) {\n      if (supportedMetrics.has(metric.name))\n        result[metric.name] = metric.value;\n    }\n    return result;\n  }\n\n  /**\n   * @param {!Protocol.Runtime.ExceptionDetails} exceptionDetails\n   */\n  _handleException(exceptionDetails) {\n    const message = helper.getExceptionMessage(exceptionDetails);\n    const err = new Error(message);\n    err.stack = ''; // Don't report clientside error with a node stack attached\n    this.emit(Page.Events.PageError, err);\n  }\n\n  /**\n   * @param {!Protocol.Runtime.consoleAPICalledPayload} event\n   */\n  /* async */ _onConsoleAPI(event) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const context = this._frameManager.executionContextById(event.executionContextId);\n    const values = event.args.map(arg => createJSHandle(context, arg));\n    this._addConsoleMessage(event.type, values);\n  });}\n\n  /**\n   * @param {!Protocol.Runtime.bindingCalledPayload} event\n   */\n  /* async */ _onBindingCalled(event) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {name, seq, args} = JSON.parse(event.payload);\n    let expression = null;\n    try {\n      const result = (yield this._pageBindings.get(name)(...args));\n      expression = helper.evaluationString(deliverResult, name, seq, result);\n    } catch (error) {\n      if (error instanceof Error)\n        expression = helper.evaluationString(deliverError, name, seq, error.message, error.stack);\n      else\n        expression = helper.evaluationString(deliverErrorValue, name, seq, error);\n    }\n    this._client.send('Runtime.evaluate', { expression, contextId: event.executionContextId }).catch(debugError);\n\n    /**\n     * @param {string} name\n     * @param {number} seq\n     * @param {*} result\n     */\n    function deliverResult(name, seq, result) {\n      window[name]['callbacks'].get(seq).resolve(result);\n      window[name]['callbacks'].delete(seq);\n    }\n\n    /**\n     * @param {string} name\n     * @param {number} seq\n     * @param {string} message\n     * @param {string} stack\n     */\n    function deliverError(name, seq, message, stack) {\n      const error = new Error(message);\n      error.stack = stack;\n      window[name]['callbacks'].get(seq).reject(error);\n      window[name]['callbacks'].delete(seq);\n    }\n\n    /**\n     * @param {string} name\n     * @param {number} seq\n     * @param {*} value\n     */\n    function deliverErrorValue(name, seq, value) {\n      window[name]['callbacks'].get(seq).reject(value);\n      window[name]['callbacks'].delete(seq);\n    }\n  });}\n\n  /**\n   * @param {string} type\n   * @param {!Array<!Puppeteer.JSHandle>} args\n   */\n  _addConsoleMessage(type, args) {\n    if (!this.listenerCount(Page.Events.Console)) {\n      args.forEach(arg => arg.dispose());\n      return;\n    }\n    const textTokens = [];\n    for (const arg of args) {\n      const remoteObject = arg._remoteObject;\n      if (remoteObject.objectId)\n        textTokens.push(arg.toString());\n      else\n        textTokens.push(helper.valueFromRemoteObject(remoteObject));\n    }\n    const message = new ConsoleMessage(type, textTokens.join(' '), args);\n    this.emit(Page.Events.Console, message);\n  }\n\n  _onDialog(event) {\n    let dialogType = null;\n    if (event.type === 'alert')\n      dialogType = Dialog.Type.Alert;\n    else if (event.type === 'confirm')\n      dialogType = Dialog.Type.Confirm;\n    else if (event.type === 'prompt')\n      dialogType = Dialog.Type.Prompt;\n    else if (event.type === 'beforeunload')\n      dialogType = Dialog.Type.BeforeUnload;\n    assert(dialogType, 'Unknown javascript dialog type: ' + event.type);\n    const dialog = new Dialog(this._client, dialogType, event.message, event.defaultPrompt);\n    this.emit(Page.Events.Dialog, dialog);\n  }\n\n  /**\n   * @return {!string}\n   */\n  url() {\n    return this.mainFrame().url();\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  /* async */ content() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._frameManager.mainFrame().content());\n  });}\n\n  /**\n   * @param {string} html\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   */\n  /* async */ setContent(html, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._frameManager.mainFrame().setContent(html, options));\n  });}\n\n  /**\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ goto(url, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._frameManager.mainFrame().goto(url, options));\n  });}\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ reload(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const [response] = (yield Promise.all([\n      this.waitForNavigation(options),\n      this._client.send('Page.reload')\n    ]));\n    return response;\n  });}\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ waitForNavigation(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._frameManager.mainFrame().waitForNavigation(options));\n  });}\n\n  /**\n   * @param {(string|Function)} urlOrPredicate\n   * @param {!{timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.Request>}\n   */\n  /* async */ waitForRequest(urlOrPredicate, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      timeout = 30000\n    } = options;\n    return helper.waitForEvent(this._networkManager, NetworkManager.Events.Request, request => {\n      if (helper.isString(urlOrPredicate))\n        return (urlOrPredicate === request.url());\n      if (typeof urlOrPredicate === 'function')\n        return !!(urlOrPredicate(request));\n      return false;\n    }, timeout);\n  });}\n\n  /**\n   * @param {(string|Function)} urlOrPredicate\n   * @param {!{timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.Response>}\n   */\n  /* async */ waitForResponse(urlOrPredicate, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      timeout = 30000\n    } = options;\n    return helper.waitForEvent(this._networkManager, NetworkManager.Events.Response, response => {\n      if (helper.isString(urlOrPredicate))\n        return (urlOrPredicate === response.url());\n      if (typeof urlOrPredicate === 'function')\n        return !!(urlOrPredicate(response));\n      return false;\n    }, timeout);\n  });}\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ goBack(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._go(-1, options);\n  });}\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ goForward(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._go(+1, options);\n  });}\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ _go(delta, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const history = (yield this._client.send('Page.getNavigationHistory'));\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry)\n      return null;\n    const [response] = (yield Promise.all([\n      this.waitForNavigation(options),\n      this._client.send('Page.navigateToHistoryEntry', {entryId: entry.id}),\n    ]));\n    return response;\n  });}\n\n  /* async */ bringToFront() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._client.send('Page.bringToFront'));\n  });}\n\n  /**\n   * @param {!{viewport: !Puppeteer.Viewport, userAgent: string}} options\n   */\n  /* async */ emulate(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield Promise.all([\n      this.setViewport(options.viewport),\n      this.setUserAgent(options.userAgent)\n    ]));\n  });}\n\n  /**\n   * @param {boolean} enabled\n   */\n  /* async */ setJavaScriptEnabled(enabled) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (this._javascriptEnabled === enabled)\n      return;\n    this._javascriptEnabled = enabled;\n    (yield this._client.send('Emulation.setScriptExecutionDisabled', { value: !enabled }));\n  });}\n\n  /**\n   * @param {boolean} enabled\n   */\n  /* async */ setBypassCSP(enabled) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._client.send('Page.setBypassCSP', { enabled }));\n  });}\n\n  /**\n   * @param {?string} mediaType\n   */\n  /* async */ emulateMedia(mediaType) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(mediaType === 'screen' || mediaType === 'print' || mediaType === null, 'Unsupported media type: ' + mediaType);\n    (yield this._client.send('Emulation.setEmulatedMedia', {media: mediaType || ''}));\n  });}\n\n  /**\n   * @param {!Puppeteer.Viewport} viewport\n   */\n  /* async */ setViewport(viewport) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const needsReload = (yield this._emulationManager.emulateViewport(viewport));\n    this._viewport = viewport;\n    if (needsReload)\n      (yield this.reload());\n  });}\n\n  /**\n   * @return {?Puppeteer.Viewport}\n   */\n  viewport() {\n    return this._viewport;\n  }\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n  /* async */ evaluate(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._frameManager.mainFrame().evaluate(pageFunction, ...args);\n  });}\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   */\n  /* async */ evaluateOnNewDocument(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const source = helper.evaluationString(pageFunction, ...args);\n    (yield this._client.send('Page.addScriptToEvaluateOnNewDocument', { source }));\n  });}\n\n  /**\n   * @param {boolean} enabled\n   */\n  /* async */ setCacheEnabled(enabled = true) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._client.send('Network.setCacheDisabled', {cacheDisabled: !enabled}));\n  });}\n\n  /**\n   * @param {!ScreenshotOptions=} options\n   * @return {!Promise<!Buffer|!String>}\n   */\n  /* async */ screenshot(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    let screenshotType = null;\n    // options.type takes precedence over inferring the type from options.path\n    // because it may be a 0-length file with no extension created beforehand (i.e. as a temp file).\n    if (options.type) {\n      assert(options.type === 'png' || options.type === 'jpeg', 'Unknown options.type value: ' + options.type);\n      screenshotType = options.type;\n    } else if (options.path) {\n      const mimeType = mime.getType(options.path);\n      if (mimeType === 'image/png')\n        screenshotType = 'png';\n      else if (mimeType === 'image/jpeg')\n        screenshotType = 'jpeg';\n      assert(screenshotType, 'Unsupported screenshot mime type: ' + mimeType);\n    }\n\n    if (!screenshotType)\n      screenshotType = 'png';\n\n    if (options.quality) {\n      assert(screenshotType === 'jpeg', 'options.quality is unsupported for the ' + screenshotType + ' screenshots');\n      assert(typeof options.quality === 'number', 'Expected options.quality to be a number but found ' + (typeof options.quality));\n      assert(Number.isInteger(options.quality), 'Expected options.quality to be an integer');\n      assert(options.quality >= 0 && options.quality <= 100, 'Expected options.quality to be between 0 and 100 (inclusive), got ' + options.quality);\n    }\n    assert(!options.clip || !options.fullPage, 'options.clip and options.fullPage are exclusive');\n    if (options.clip) {\n      assert(typeof options.clip.x === 'number', 'Expected options.clip.x to be a number but found ' + (typeof options.clip.x));\n      assert(typeof options.clip.y === 'number', 'Expected options.clip.y to be a number but found ' + (typeof options.clip.y));\n      assert(typeof options.clip.width === 'number', 'Expected options.clip.width to be a number but found ' + (typeof options.clip.width));\n      assert(typeof options.clip.height === 'number', 'Expected options.clip.height to be a number but found ' + (typeof options.clip.height));\n    }\n    return this._screenshotTaskQueue.postTask(this._screenshotTask.bind(this, screenshotType, options));\n  });}\n\n  /**\n   * @param {\"png\"|\"jpeg\"} format\n   * @param {!ScreenshotOptions=} options\n   * @return {!Promise<!Buffer|!String>}\n   */\n  /* async */ _screenshotTask(format, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._client.send('Target.activateTarget', {targetId: this._target._targetId}));\n    let clip = options.clip ? Object.assign({}, options['clip'], {scale: 1}) : undefined;\n\n    if (options.fullPage) {\n      const metrics = (yield this._client.send('Page.getLayoutMetrics'));\n      const width = Math.ceil(metrics.contentSize.width);\n      const height = Math.ceil(metrics.contentSize.height);\n\n      // Overwrite clip for full page at all times.\n      clip = { x: 0, y: 0, width, height, scale: 1 };\n      const {\n        isMobile = false,\n        deviceScaleFactor = 1,\n        isLandscape = false\n      } = this._viewport || {};\n      /** @type {!Protocol.Emulation.ScreenOrientation} */\n      const screenOrientation = isLandscape ? { angle: 90, type: 'landscapePrimary' } : { angle: 0, type: 'portraitPrimary' };\n      (yield this._client.send('Emulation.setDeviceMetricsOverride', { mobile: isMobile, width, height, deviceScaleFactor, screenOrientation }));\n    }\n    const shouldSetDefaultBackground = options.omitBackground && format === 'png';\n    if (shouldSetDefaultBackground)\n      (yield this._client.send('Emulation.setDefaultBackgroundColorOverride', { color: { r: 0, g: 0, b: 0, a: 0 } }));\n    const result = (yield this._client.send('Page.captureScreenshot', { format, quality: options.quality, clip }));\n    if (shouldSetDefaultBackground)\n      (yield this._client.send('Emulation.setDefaultBackgroundColorOverride'));\n\n    if (options.fullPage && this._viewport)\n      (yield this.setViewport(this._viewport));\n\n    const buffer = options.encoding === 'base64' ? result.data : Buffer.from(result.data, 'base64');\n    if (options.path)\n      (yield writeFileAsync(options.path, buffer));\n    return buffer;\n  });}\n\n  /**\n   * @param {!PDFOptions=} options\n   * @return {!Promise<!Buffer>}\n   */\n  /* async */ pdf(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      scale = 1,\n      displayHeaderFooter = false,\n      headerTemplate = '',\n      footerTemplate = '',\n      printBackground = false,\n      landscape = false,\n      pageRanges = '',\n      preferCSSPageSize = false,\n      margin = {},\n      path = null\n    } = options;\n\n    let paperWidth = 8.5;\n    let paperHeight = 11;\n    if (options.format) {\n      const format = Page.PaperFormats[options.format.toLowerCase()];\n      assert(format, 'Unknown paper format: ' + options.format);\n      paperWidth = format.width;\n      paperHeight = format.height;\n    } else {\n      paperWidth = convertPrintParameterToInches(options.width) || paperWidth;\n      paperHeight = convertPrintParameterToInches(options.height) || paperHeight;\n    }\n\n    const marginTop = convertPrintParameterToInches(margin.top) || 0;\n    const marginLeft = convertPrintParameterToInches(margin.left) || 0;\n    const marginBottom = convertPrintParameterToInches(margin.bottom) || 0;\n    const marginRight = convertPrintParameterToInches(margin.right) || 0;\n\n    const result = (yield this._client.send('Page.printToPDF', {\n      landscape,\n      displayHeaderFooter,\n      headerTemplate,\n      footerTemplate,\n      printBackground,\n      scale,\n      paperWidth,\n      paperHeight,\n      marginTop,\n      marginBottom,\n      marginLeft,\n      marginRight,\n      pageRanges,\n      preferCSSPageSize\n    }));\n    const buffer = Buffer.from(result.data, 'base64');\n    if (path !== null)\n      (yield writeFileAsync(path, buffer));\n    return buffer;\n  });}\n\n  /**\n   * @return {!Promise<string>}\n   */\n  /* async */ title() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.mainFrame().title();\n  });}\n\n  /**\n   * @param {!{runBeforeUnload: (boolean|undefined)}=} options\n   */\n  /* async */ close(options = {runBeforeUnload: undefined}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(!!this._client._connection, 'Protocol error: Connection closed. Most likely the page has been closed.');\n    const runBeforeUnload = !!options.runBeforeUnload;\n    if (runBeforeUnload) {\n      (yield this._client.send('Page.close'));\n    } else {\n      (yield this._client._connection.send('Target.closeTarget', { targetId: this._target._targetId }));\n      (yield this._target._isClosedPromise);\n    }\n  });}\n\n  /**\n   * @return {boolean}\n   */\n  isClosed() {\n    return this._closed;\n  }\n\n  /**\n   * @return {!Mouse}\n   */\n  get mouse() {\n    return this._mouse;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  click(selector, options = {}) {\n    return this.mainFrame().click(selector, options);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  focus(selector) {\n    return this.mainFrame().focus(selector);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  hover(selector) {\n    return this.mainFrame().hover(selector);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!Array<string>} values\n   * @return {!Promise<!Array<string>>}\n   */\n  select(selector, ...values) {\n    return this.mainFrame().select(selector, ...values);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  tap(selector) {\n    return this.mainFrame().tap(selector);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  type(selector, text, options) {\n    return this.mainFrame().type(selector, text, options);\n  }\n\n  /**\n   * @param {(string|number|Function)} selectorOrFunctionOrTimeout\n   * @param {!Object=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitFor(selectorOrFunctionOrTimeout, options = {}, ...args) {\n    return this.mainFrame().waitFor(selectorOrFunctionOrTimeout, options, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  waitForSelector(selector, options = {}) {\n    return this.mainFrame().waitForSelector(selector, options);\n  }\n\n  /**\n   * @param {string} xpath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  waitForXPath(xpath, options = {}) {\n    return this.mainFrame().waitForXPath(xpath, options);\n  }\n\n  /**\n   * @param {function()} pageFunction\n   * @param {!{polling?: string|number, timeout?: number}=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitForFunction(pageFunction, options = {}, ...args) {\n    return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n  }\n}\n\n/**\n * @typedef {Object} PDFOptions\n * @property {number=} scale\n * @property {boolean=} displayHeaderFooter\n * @property {string=} headerTemplate\n * @property {string=} footerTemplate\n * @property {boolean=} printBackground\n * @property {boolean=} landscape\n * @property {string=} pageRanges\n * @property {string=} format\n * @property {string|number=} width\n * @property {string|number=} height\n * @property {boolean=} preferCSSPageSize\n * @property {!{top?: string|number, bottom?: string|number, left?: string|number, right?: string|number}=} margin\n * @property {string=} path\n */\n\n/**\n * @typedef {Object} Metrics\n * @property {number=} Timestamp\n * @property {number=} Documents\n * @property {number=} Frames\n * @property {number=} JSEventListeners\n * @property {number=} Nodes\n * @property {number=} LayoutCount\n * @property {number=} RecalcStyleCount\n * @property {number=} LayoutDuration\n * @property {number=} RecalcStyleDuration\n * @property {number=} ScriptDuration\n * @property {number=} TaskDuration\n * @property {number=} JSHeapUsedSize\n * @property {number=} JSHeapTotalSize\n */\n\n/**\n * @typedef {Object} ScreenshotOptions\n * @property {string=} type\n * @property {string=} path\n * @property {boolean=} fullPage\n * @property {{x: number, y: number, width: number, height: number}=} clip\n * @property {number=} quality\n * @property {boolean=} omitBackground\n * @property {string=} encoding\n */\n\n/** @type {!Set<string>} */\nconst supportedMetrics = new Set([\n  'Timestamp',\n  'Documents',\n  'Frames',\n  'JSEventListeners',\n  'Nodes',\n  'LayoutCount',\n  'RecalcStyleCount',\n  'LayoutDuration',\n  'RecalcStyleDuration',\n  'ScriptDuration',\n  'TaskDuration',\n  'JSHeapUsedSize',\n  'JSHeapTotalSize',\n]);\n\n/** @enum {!{width: number, height: number}} */\nPage.PaperFormats = {\n  letter: {width: 8.5, height: 11},\n  legal: {width: 8.5, height: 14},\n  tabloid: {width: 11, height: 17},\n  ledger: {width: 17, height: 11},\n  a0: {width: 33.1, height: 46.8 },\n  a1: {width: 23.4, height: 33.1 },\n  a2: {width: 16.5, height: 23.4 },\n  a3: {width: 11.7, height: 16.5 },\n  a4: {width: 8.27, height: 11.7 },\n  a5: {width: 5.83, height: 8.27 },\n  a6: {width: 4.13, height: 5.83 },\n};\n\nconst unitToPixels = {\n  'px': 1,\n  'in': 96,\n  'cm': 37.8,\n  'mm': 3.78\n};\n\n/**\n * @param {(string|number|undefined)} parameter\n * @return {(number|undefined)}\n */\nfunction convertPrintParameterToInches(parameter) {\n  if (typeof parameter === 'undefined')\n    return undefined;\n  let pixels;\n  if (helper.isNumber(parameter)) {\n    // Treat numbers as pixel values to be aligned with phantom's paperSize.\n    pixels = /** @type {number} */ (parameter);\n  } else if (helper.isString(parameter)) {\n    const text = /** @type {string} */ (parameter);\n    let unit = text.substring(text.length - 2).toLowerCase();\n    let valueText = '';\n    if (unitToPixels.hasOwnProperty(unit)) {\n      valueText = text.substring(0, text.length - 2);\n    } else {\n      // In case of unknown unit try to parse the whole parameter as number of pixels.\n      // This is consistent with phantom's paperSize behavior.\n      unit = 'px';\n      valueText = text;\n    }\n    const value = Number(valueText);\n    assert(!isNaN(value), 'Failed to parse parameter value: ' + text);\n    pixels = value * unitToPixels[unit];\n  } else {\n    throw new Error('page.pdf() Cannot handle parameter type: ' + (typeof parameter));\n  }\n  return pixels / 96;\n}\n\nPage.Events = {\n  Close: 'close',\n  Console: 'console',\n  Dialog: 'dialog',\n  DOMContentLoaded: 'domcontentloaded',\n  Error: 'error',\n  // Can't use just 'error' due to node.js special treatment of error events.\n  // @see https://nodejs.org/api/events.html#events_error_events\n  PageError: 'pageerror',\n  Request: 'request',\n  Response: 'response',\n  RequestFailed: 'requestfailed',\n  RequestFinished: 'requestfinished',\n  FrameAttached: 'frameattached',\n  FrameDetached: 'framedetached',\n  FrameNavigated: 'framenavigated',\n  Load: 'load',\n  Metrics: 'metrics',\n  WorkerCreated: 'workercreated',\n  WorkerDestroyed: 'workerdestroyed',\n};\n\n\n/**\n * @typedef {Object} Network.Cookie\n * @property {string} name\n * @property {string} value\n * @property {string} domain\n * @property {string} path\n * @property {number} expires\n * @property {number} size\n * @property {boolean} httpOnly\n * @property {boolean} secure\n * @property {boolean} session\n * @property {(\"Strict\"|\"Lax\")=} sameSite\n */\n\n\n/**\n * @typedef {Object} Network.CookieParam\n * @property {string} name\n * @property {string} value\n * @property {string=} url\n * @property {string=} domain\n * @property {string=} path\n * @property {number=} expires\n * @property {boolean=} httpOnly\n * @property {boolean=} secure\n * @property {(\"Strict\"|\"Lax\")=} sameSite\n */\n\nclass ConsoleMessage {\n  /**\n   * @param {string} type\n   * @param {string} text\n   * @param {!Array<!Puppeteer.JSHandle>} args\n   */\n  constructor(type, text, args = []) {\n    this._type = type;\n    this._text = text;\n    this._args = args;\n  }\n\n  /**\n   * @return {string}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @return {string}\n   */\n  text() {\n    return this._text;\n  }\n\n  /**\n   * @return {!Array<!Puppeteer.JSHandle>}\n   */\n  args() {\n    return this._args;\n  }\n}\n\n\nmodule.exports = {Page};\nhelper.tracePublicAPI(Page);\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @template T\n * @template V\n */\nclass Multimap {\n  constructor() {\n    this._map = new Map();\n  }\n\n  /**\n   * @param {T} key\n   * @param {V} value\n   */\n  set(key, value) {\n    let set = this._map.get(key);\n    if (!set) {\n      set = new Set();\n      this._map.set(key, set);\n    }\n    set.add(value);\n  }\n\n  /**\n   * @param {T} key\n   * @return {!Set<V>}\n   */\n  get(key) {\n    let result = this._map.get(key);\n    if (!result)\n      result = new Set();\n    return result;\n  }\n\n  /**\n   * @param {T} key\n   * @return {boolean}\n   */\n  has(key) {\n    return this._map.has(key);\n  }\n\n  /**\n   * @param {T} key\n   * @param {V} value\n   * @return {boolean}\n   */\n  hasValue(key, value) {\n    const set = this._map.get(key);\n    if (!set)\n      return false;\n    return set.has(value);\n  }\n\n  /**\n   * @return {number}\n   */\n  get size() {\n    return this._map.size;\n  }\n\n  /**\n   * @param {T} key\n   * @param {V} value\n   * @return {boolean}\n   */\n  delete(key, value) {\n    const values = this.get(key);\n    const result = values.delete(value);\n    if (!values.size)\n      this._map.delete(key);\n    return result;\n  }\n\n  /**\n   * @param {T} key\n   */\n  deleteAll(key) {\n    this._map.delete(key);\n  }\n\n  /**\n   * @param {T} key\n   * @return {V}\n   */\n  firstValue(key) {\n    const set = this._map.get(key);\n    if (!set)\n      return null;\n    return set.values().next().value;\n  }\n\n  /**\n   * @return {T}\n   */\n  firstKey() {\n    return this._map.keys().next().value;\n  }\n\n  /**\n   * @return {!Array<V>}\n   */\n  valuesArray() {\n    const result = [];\n    for (const key of this._map.keys())\n      result.push(...Array.from(this._map.get(key).values()));\n    return result;\n  }\n\n  /**\n   * @return {!Array<T>}\n   */\n  keysArray() {\n    return Array.from(this._map.keys());\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n\nmodule.exports = Multimap;\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert} = require('./helper');\n\nclass Dialog {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {string} type\n   * @param {string} message\n   * @param {(string|undefined)} defaultValue\n   */\n  constructor(client, type, message, defaultValue = '') {\n    this._client = client;\n    this._type = type;\n    this._message = message;\n    this._handled = false;\n    this._defaultValue = defaultValue;\n  }\n\n  /**\n   * @return {string}\n   */\n  type() {\n    return this._type;\n  }\n\n  /**\n   * @return {string}\n   */\n  message() {\n    return this._message;\n  }\n\n  /**\n   * @return {string}\n   */\n  defaultValue() {\n    return this._defaultValue;\n  }\n\n  /**\n   * @param {string=} promptText\n   */\n  /* async */ accept(promptText) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(!this._handled, 'Cannot accept dialog which is already handled!');\n    this._handled = true;\n    (yield this._client.send('Page.handleJavaScriptDialog', {\n      accept: true,\n      promptText: promptText\n    }));\n  });}\n\n  /* async */ dismiss() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(!this._handled, 'Cannot dismiss dialog which is already handled!');\n    this._handled = true;\n    (yield this._client.send('Page.handleJavaScriptDialog', {\n      accept: false\n    }));\n  });}\n}\n\nDialog.Type = {\n  Alert: 'alert',\n  BeforeUnload: 'beforeunload',\n  Confirm: 'confirm',\n  Prompt: 'prompt'\n};\n\nmodule.exports = {Dialog};\nhelper.tracePublicAPI(Dialog);\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass EmulationManager {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._emulatingMobile = false;\n    this._hasTouch = false;\n  }\n\n  /**\n   * @param {!Puppeteer.Viewport} viewport\n   * @return {Promise<boolean>}\n   */\n  /* async */ emulateViewport(viewport) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const mobile = viewport.isMobile || false;\n    const width = viewport.width;\n    const height = viewport.height;\n    const deviceScaleFactor = viewport.deviceScaleFactor || 1;\n    /** @type {Protocol.Emulation.ScreenOrientation} */\n    const screenOrientation = viewport.isLandscape ? { angle: 90, type: 'landscapePrimary' } : { angle: 0, type: 'portraitPrimary' };\n    const hasTouch = viewport.hasTouch || false;\n\n    (yield Promise.all([\n      this._client.send('Emulation.setDeviceMetricsOverride', { mobile, width, height, deviceScaleFactor, screenOrientation }),\n      this._client.send('Emulation.setTouchEmulationEnabled', {\n        enabled: hasTouch\n      })\n    ]));\n\n    const reloadNeeded = this._emulatingMobile !== mobile || this._hasTouch !== hasTouch;\n    this._emulatingMobile = mobile;\n    this._hasTouch = hasTouch;\n    return reloadNeeded;\n  });}\n}\n\nmodule.exports = {EmulationManager};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst fs = require('fs');\nconst EventEmitter = require('events');\nconst {helper, assert} = require('./helper');\nconst {ExecutionContext} = require('./ExecutionContext');\nconst {TimeoutError} = require('./Errors');\nconst {NetworkManager} = require('./NetworkManager');\nconst {CDPSession} = require('./Connection');\n\nconst readFileAsync = helper.promisify(fs.readFile);\n\nclass FrameManager extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Page.FrameTree} frameTree\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.NetworkManager} networkManager\n   */\n  constructor(client, frameTree, page, networkManager) {\n    super();\n    this._client = client;\n    this._page = page;\n    this._networkManager = networkManager;\n    this._defaultNavigationTimeout = 30000;\n    /** @type {!Map<string, !Frame>} */\n    this._frames = new Map();\n    /** @type {!Map<number, !ExecutionContext>} */\n    this._contextIdToContext = new Map();\n\n    this._client.on('Page.frameAttached', event => this._onFrameAttached(event.frameId, event.parentFrameId));\n    this._client.on('Page.frameNavigated', event => this._onFrameNavigated(event.frame));\n    this._client.on('Page.navigatedWithinDocument', event => this._onFrameNavigatedWithinDocument(event.frameId, event.url));\n    this._client.on('Page.frameDetached', event => this._onFrameDetached(event.frameId));\n    this._client.on('Page.frameStoppedLoading', event => this._onFrameStoppedLoading(event.frameId));\n    this._client.on('Runtime.executionContextCreated', event => this._onExecutionContextCreated(event.context));\n    this._client.on('Runtime.executionContextDestroyed', event => this._onExecutionContextDestroyed(event.executionContextId));\n    this._client.on('Runtime.executionContextsCleared', event => this._onExecutionContextsCleared());\n    this._client.on('Page.lifecycleEvent', event => this._onLifecycleEvent(event));\n\n    this._handleFrameTree(frameTree);\n  }\n\n  /**\n   * @param {number} timeout\n   */\n  setDefaultNavigationTimeout(timeout) {\n    this._defaultNavigationTimeout = timeout;\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ navigateFrame(frame, url, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assertNoLegacyNavigationOptions(options);\n    const {\n      referer = this._networkManager.extraHTTPHeaders()['referer'],\n      waitUntil = ['load'],\n      timeout = this._defaultNavigationTimeout,\n    } = options;\n\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    let ensureNewDocumentNavigation = false;\n    let error = (yield Promise.race([\n      navigate(this._client, url, referer, frame._id),\n      watcher.timeoutOrTerminationPromise(),\n    ]));\n    if (!error) {\n      error = (yield Promise.race([\n        watcher.timeoutOrTerminationPromise(),\n        ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise(),\n      ]));\n    }\n    watcher.dispose();\n    if (error)\n      throw error;\n    return watcher.navigationResponse();\n\n    /**\n     * @param {!Puppeteer.CDPSession} client\n     * @param {string} url\n     * @param {string} referrer\n     * @param {string} frameId\n     * @return {!Promise<?Error>}\n     */\n    /* async */ function navigate(client, url, referrer, frameId) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      try {\n        const response = (yield client.send('Page.navigate', {url, referrer, frameId}));\n        ensureNewDocumentNavigation = !!response.loaderId;\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        return error;\n      }\n    });}\n  });}\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ waitForFrameNavigation(frame, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assertNoLegacyNavigationOptions(options);\n    const {\n      waitUntil = ['load'],\n      timeout = this._defaultNavigationTimeout,\n    } = options;\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    const error = (yield Promise.race([\n      watcher.timeoutOrTerminationPromise(),\n      watcher.sameDocumentNavigationPromise(),\n      watcher.newDocumentNavigationPromise()\n    ]));\n    watcher.dispose();\n    if (error)\n      throw error;\n    return watcher.navigationResponse();\n  });}\n\n  /**\n   * @param {!Protocol.Page.lifecycleEventPayload} event\n   */\n  _onLifecycleEvent(event) {\n    const frame = this._frames.get(event.frameId);\n    if (!frame)\n      return;\n    frame._onLifecycleEvent(event.loaderId, event.name);\n    this.emit(FrameManager.Events.LifecycleEvent, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   */\n  _onFrameStoppedLoading(frameId) {\n    const frame = this._frames.get(frameId);\n    if (!frame)\n      return;\n    frame._onLoadingStopped();\n    this.emit(FrameManager.Events.LifecycleEvent, frame);\n  }\n\n  /**\n   * @param {!Protocol.Page.FrameTree} frameTree\n   */\n  _handleFrameTree(frameTree) {\n    if (frameTree.frame.parentId)\n      this._onFrameAttached(frameTree.frame.id, frameTree.frame.parentId);\n    this._onFrameNavigated(frameTree.frame);\n    if (!frameTree.childFrames)\n      return;\n\n    for (const child of frameTree.childFrames)\n      this._handleFrameTree(child);\n  }\n\n  /**\n   * @return {!Puppeteer.Page}\n   */\n  page() {\n    return this._page;\n  }\n\n  /**\n   * @return {!Frame}\n   */\n  mainFrame() {\n    return this._mainFrame;\n  }\n\n  /**\n   * @return {!Array<!Frame>}\n   */\n  frames() {\n    return Array.from(this._frames.values());\n  }\n\n  /**\n   * @param {!string} frameId\n   * @return {?Frame}\n   */\n  frame(frameId) {\n    return this._frames.get(frameId) || null;\n  }\n\n  /**\n   * @param {string} frameId\n   * @param {?string} parentFrameId\n   */\n  _onFrameAttached(frameId, parentFrameId) {\n    if (this._frames.has(frameId))\n      return;\n    assert(parentFrameId);\n    const parentFrame = this._frames.get(parentFrameId);\n    const frame = new Frame(this, this._client, parentFrame, frameId);\n    this._frames.set(frame._id, frame);\n    this.emit(FrameManager.Events.FrameAttached, frame);\n  }\n\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n  _onFrameNavigated(framePayload) {\n    const isMainFrame = !framePayload.parentId;\n    let frame = isMainFrame ? this._mainFrame : this._frames.get(framePayload.id);\n    assert(isMainFrame || frame, 'We either navigate top level or have old version of the navigated frame');\n\n    // Detach all child frames first.\n    if (frame) {\n      for (const child of frame.childFrames())\n        this._removeFramesRecursively(child);\n    }\n\n    // Update or create main frame.\n    if (isMainFrame) {\n      if (frame) {\n        // Update frame id to retain frame identity on cross-process navigation.\n        this._frames.delete(frame._id);\n        frame._id = framePayload.id;\n      } else {\n        // Initial main frame navigation.\n        frame = new Frame(this, this._client, null, framePayload.id);\n      }\n      this._frames.set(framePayload.id, frame);\n      this._mainFrame = frame;\n    }\n\n    // Update frame payload.\n    frame._navigated(framePayload);\n\n    this.emit(FrameManager.Events.FrameNavigated, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   * @param {string} url\n   */\n  _onFrameNavigatedWithinDocument(frameId, url) {\n    const frame = this._frames.get(frameId);\n    if (!frame)\n      return;\n    frame._navigatedWithinDocument(url);\n    this.emit(FrameManager.Events.FrameNavigatedWithinDocument, frame);\n    this.emit(FrameManager.Events.FrameNavigated, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   */\n  _onFrameDetached(frameId) {\n    const frame = this._frames.get(frameId);\n    if (frame)\n      this._removeFramesRecursively(frame);\n  }\n\n  _onExecutionContextCreated(contextPayload) {\n    const frameId = contextPayload.auxData ? contextPayload.auxData.frameId : null;\n    const frame = this._frames.get(frameId) || null;\n    /** @type {!ExecutionContext} */\n    const context = new ExecutionContext(this._client, contextPayload, frame);\n    this._contextIdToContext.set(contextPayload.id, context);\n    if (frame)\n      frame._addExecutionContext(context);\n  }\n\n  /**\n   * @param {number} executionContextId\n   */\n  _onExecutionContextDestroyed(executionContextId) {\n    const context = this._contextIdToContext.get(executionContextId);\n    if (!context)\n      return;\n    this._contextIdToContext.delete(executionContextId);\n    if (context.frame())\n      context.frame()._removeExecutionContext(context);\n  }\n\n  _onExecutionContextsCleared() {\n    for (const context of this._contextIdToContext.values()) {\n      if (context.frame())\n        context.frame()._removeExecutionContext(context);\n    }\n    this._contextIdToContext.clear();\n  }\n\n  /**\n   * @param {number} contextId\n   * @return {!ExecutionContext}\n   */\n  executionContextById(contextId) {\n    const context = this._contextIdToContext.get(contextId);\n    assert(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n\n  /**\n   * @param {!Frame} frame\n   */\n  _removeFramesRecursively(frame) {\n    for (const child of frame.childFrames())\n      this._removeFramesRecursively(child);\n    frame._detach();\n    this._frames.delete(frame._id);\n    this.emit(FrameManager.Events.FrameDetached, frame);\n  }\n}\n\n/** @enum {string} */\nFrameManager.Events = {\n  FrameAttached: 'frameattached',\n  FrameNavigated: 'framenavigated',\n  FrameDetached: 'framedetached',\n  LifecycleEvent: 'lifecycleevent',\n  FrameNavigatedWithinDocument: 'framenavigatedwithindocument',\n  ExecutionContextCreated: 'executioncontextcreated',\n  ExecutionContextDestroyed: 'executioncontextdestroyed',\n};\n\n/**\n * @unrestricted\n */\nclass Frame {\n  /**\n   * @param {!FrameManager} frameManager\n   * @param {!Puppeteer.CDPSession} client\n   * @param {?Frame} parentFrame\n   * @param {string} frameId\n   */\n  constructor(frameManager, client, parentFrame, frameId) {\n    this._frameManager = frameManager;\n    this._client = client;\n    this._parentFrame = parentFrame;\n    this._url = '';\n    this._id = frameId;\n    this._detached = false;\n\n    /** @type {?Promise<!Puppeteer.ElementHandle>} */\n    this._documentPromise = null;\n    /** @type {!Promise<!ExecutionContext>} */\n    this._contextPromise;\n    this._contextResolveCallback = null;\n    this._setDefaultContext(null);\n\n\n    /** @type {!Set<!WaitTask>} */\n    this._waitTasks = new Set();\n    this._loaderId = '';\n    /** @type {!Set<string>} */\n    this._lifecycleEvents = new Set();\n\n    /** @type {!Set<!Frame>} */\n    this._childFrames = new Set();\n    if (this._parentFrame)\n      this._parentFrame._childFrames.add(this);\n  }\n\n  /**\n   * @param {!ExecutionContext} context\n   */\n  _addExecutionContext(context) {\n    if (context._isDefault)\n      this._setDefaultContext(context);\n  }\n\n  /**\n   * @param {!ExecutionContext} context\n   */\n  _removeExecutionContext(context) {\n    if (context._isDefault)\n      this._setDefaultContext(null);\n  }\n\n  /**\n   * @param {?ExecutionContext} context\n   */\n  _setDefaultContext(context) {\n    if (context) {\n      this._contextResolveCallback.call(null, context);\n      this._contextResolveCallback = null;\n      for (const waitTask of this._waitTasks)\n        waitTask.rerun();\n    } else {\n      this._documentPromise = null;\n      this._contextPromise = new Promise(fulfill => {\n        this._contextResolveCallback = fulfill;\n      });\n    }\n  }\n\n  /**\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ goto(url, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._frameManager.navigateFrame(this, url, options));\n  });}\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  /* async */ waitForNavigation(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._frameManager.waitForFrameNavigation(this, options));\n  });}\n\n  /**\n   * @return {!Promise<!ExecutionContext>}\n   */\n  executionContext() {\n    return this._contextPromise;\n  }\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  /* async */ evaluateHandle(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const context = (yield this._contextPromise);\n    return context.evaluateHandle(pageFunction, ...args);\n  });}\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n  /* async */ evaluate(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const context = (yield this._contextPromise);\n    return context.evaluate(pageFunction, ...args);\n  });}\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  /* async */ $(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const document = (yield this._document());\n    const value = (yield document.$(selector));\n    return value;\n  });}\n\n  /**\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  /* async */ _document() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    if (this._documentPromise)\n      return this._documentPromise;\n    this._documentPromise = this._contextPromise.then(/* async */ context => {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      const document = (yield context.evaluateHandle('document'));\n      return document.asElement();\n    });});\n    return this._documentPromise;\n  });}\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  /* async */ $x(expression) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const document = (yield this._document());\n    const value = (yield document.$x(expression));\n    return value;\n  });}\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  /* async */ $eval(selector, pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const document = (yield this._document());\n    return document.$eval(selector, pageFunction, ...args);\n  });}\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  /* async */ $$eval(selector, pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const document = (yield this._document());\n    const value = (yield document.$$eval(selector, pageFunction, ...args));\n    return value;\n  });}\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  /* async */ $$(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const document = (yield this._document());\n    const value = (yield document.$$(selector));\n    return value;\n  });}\n\n  /**\n   * @return {!Promise<String>}\n   */\n  /* async */ content() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this.evaluate(() => {\n      let retVal = '';\n      if (document.doctype)\n        retVal = new XMLSerializer().serializeToString(document.doctype);\n      if (document.documentElement)\n        retVal += document.documentElement.outerHTML;\n      return retVal;\n    }));\n  });}\n\n  /**\n   * @param {string} html\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   */\n  /* async */ setContent(html, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      waitUntil = ['load'],\n      timeout = 30000,\n    } = options;\n    // We rely upon the fact that document.open() will reset frame lifecycle with \"init\"\n    // lifecycle event. @see https://crrev.com/608658\n    (yield this.evaluate(html => {\n      document.open();\n      document.write(html);\n      document.close();\n    }, html));\n    const watcher = new LifecycleWatcher(this._frameManager, this, waitUntil, timeout);\n    const error = (yield Promise.race([\n      watcher.timeoutOrTerminationPromise(),\n      watcher.lifecyclePromise(),\n    ]));\n    watcher.dispose();\n    if (error)\n      throw error;\n  });}\n\n  /**\n   * @return {string}\n   */\n  name() {\n    return this._name || '';\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {?Frame}\n   */\n  parentFrame() {\n    return this._parentFrame;\n  }\n\n  /**\n   * @return {!Array.<!Frame>}\n   */\n  childFrames() {\n    return Array.from(this._childFrames);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isDetached() {\n    return this._detached;\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string, type?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  /* async */ addScriptTag(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      url = null,\n      path = null,\n      content = null,\n      type = ''\n    } = options;\n    if (url !== null) {\n      try {\n        const context = (yield this._contextPromise);\n        return ((yield context.evaluateHandle(addScriptUrl, url, type))).asElement();\n      } catch (error) {\n        throw new Error(`Loading script from ${url} failed`);\n      }\n    }\n\n    if (path !== null) {\n      let contents = (yield readFileAsync(path, 'utf8'));\n      contents += '//# sourceURL=' + path.replace(/\\n/g, '');\n      const context = (yield this._contextPromise);\n      return ((yield context.evaluateHandle(addScriptContent, contents, type))).asElement();\n    }\n\n    if (content !== null) {\n      const context = (yield this._contextPromise);\n      return ((yield context.evaluateHandle(addScriptContent, content, type))).asElement();\n    }\n\n    throw new Error('Provide an object with a `url`, `path` or `content` property');\n\n    /**\n     * @param {string} url\n     * @param {string} type\n     * @return {!Promise<!HTMLElement>}\n     */\n    /* async */ function addScriptUrl(url, type) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      const script = document.createElement('script');\n      script.src = url;\n      if (type)\n        script.type = type;\n      const promise = new Promise((res, rej) => {\n        script.onload = res;\n        script.onerror = rej;\n      });\n      document.head.appendChild(script);\n      (yield promise);\n      return script;\n    });}\n\n    /**\n     * @param {string} content\n     * @param {string} type\n     * @return {!HTMLElement}\n     */\n    function addScriptContent(content, type = 'text/javascript') {\n      const script = document.createElement('script');\n      script.type = type;\n      script.text = content;\n      let error = null;\n      script.onerror = e => error = e;\n      document.head.appendChild(script);\n      if (error)\n        throw error;\n      return script;\n    }\n  });}\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  /* async */ addStyleTag(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {\n      url = null,\n      path = null,\n      content = null\n    } = options;\n    if (url !== null) {\n      try {\n        const context = (yield this._contextPromise);\n        return ((yield context.evaluateHandle(addStyleUrl, url))).asElement();\n      } catch (error) {\n        throw new Error(`Loading style from ${url} failed`);\n      }\n    }\n\n    if (path !== null) {\n      let contents = (yield readFileAsync(path, 'utf8'));\n      contents += '/*# sourceURL=' + path.replace(/\\n/g, '') + '*/';\n      const context = (yield this._contextPromise);\n      return ((yield context.evaluateHandle(addStyleContent, contents))).asElement();\n    }\n\n    if (content !== null) {\n      const context = (yield this._contextPromise);\n      return ((yield context.evaluateHandle(addStyleContent, content))).asElement();\n    }\n\n    throw new Error('Provide an object with a `url`, `path` or `content` property');\n\n    /**\n     * @param {string} url\n     * @return {!Promise<!HTMLElement>}\n     */\n    /* async */ function addStyleUrl(url) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.href = url;\n      const promise = new Promise((res, rej) => {\n        link.onload = res;\n        link.onerror = rej;\n      });\n      document.head.appendChild(link);\n      (yield promise);\n      return link;\n    });}\n\n    /**\n     * @param {string} content\n     * @return {!Promise<!HTMLElement>}\n     */\n    /* async */ function addStyleContent(content) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      const style = document.createElement('style');\n      style.type = 'text/css';\n      style.appendChild(document.createTextNode(content));\n      const promise = new Promise((res, rej) => {\n        style.onload = res;\n        style.onerror = rej;\n      });\n      document.head.appendChild(style);\n      (yield promise);\n      return style;\n    });}\n  });}\n\n  /**\n   * @param {string} selector\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  /* async */ click(selector, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const handle = (yield this.$(selector));\n    assert(handle, 'No node found for selector: ' + selector);\n    (yield handle.click(options));\n    (yield handle.dispose());\n  });}\n\n  /**\n   * @param {string} selector\n   */\n  /* async */ focus(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const handle = (yield this.$(selector));\n    assert(handle, 'No node found for selector: ' + selector);\n    (yield handle.focus());\n    (yield handle.dispose());\n  });}\n\n  /**\n   * @param {string} selector\n   */\n  /* async */ hover(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const handle = (yield this.$(selector));\n    assert(handle, 'No node found for selector: ' + selector);\n    (yield handle.hover());\n    (yield handle.dispose());\n  });}\n\n  /**\n  * @param {string} selector\n  * @param {!Array<string>} values\n  * @return {!Promise<!Array<string>>}\n  */\n  select(selector, ...values){\n    for (const value of values)\n      assert(helper.isString(value), 'Values must be strings. Found value \"' + value + '\" of type \"' + (typeof value) + '\"');\n    return this.$eval(selector, (element, values) => {\n      if (element.nodeName.toLowerCase() !== 'select')\n        throw new Error('Element is not a <select> element.');\n\n      const options = Array.from(element.options);\n      element.value = undefined;\n      for (const option of options) {\n        option.selected = values.includes(option.value);\n        if (option.selected && !element.multiple)\n          break;\n      }\n      element.dispatchEvent(new Event('input', { 'bubbles': true }));\n      element.dispatchEvent(new Event('change', { 'bubbles': true }));\n      return options.filter(option => option.selected).map(option => option.value);\n    }, values);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  /* async */ tap(selector) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const handle = (yield this.$(selector));\n    assert(handle, 'No node found for selector: ' + selector);\n    (yield handle.tap());\n    (yield handle.dispose());\n  });}\n\n  /**\n   * @param {string} selector\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  /* async */ type(selector, text, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const handle = (yield this.$(selector));\n    assert(handle, 'No node found for selector: ' + selector);\n    (yield handle.type(text, options));\n    (yield handle.dispose());\n  });}\n\n  /**\n   * @param {(string|number|Function)} selectorOrFunctionOrTimeout\n   * @param {!Object=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitFor(selectorOrFunctionOrTimeout, options = {}, ...args) {\n    const xPathPattern = '//';\n\n    if (helper.isString(selectorOrFunctionOrTimeout)) {\n      const string = /** @type {string} */ (selectorOrFunctionOrTimeout);\n      if (string.startsWith(xPathPattern))\n        return this.waitForXPath(string, options);\n      return this.waitForSelector(string, options);\n    }\n    if (helper.isNumber(selectorOrFunctionOrTimeout))\n      return new Promise(fulfill => setTimeout(fulfill, /** @type {number} */ (selectorOrFunctionOrTimeout)));\n    if (typeof selectorOrFunctionOrTimeout === 'function')\n      return this.waitForFunction(selectorOrFunctionOrTimeout, options, ...args);\n    return Promise.reject(new Error('Unsupported target type: ' + (typeof selectorOrFunctionOrTimeout)));\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  waitForSelector(selector, options) {\n    return this._waitForSelectorOrXPath(selector, false, options);\n  }\n\n  /**\n   * @param {string} xpath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  waitForXPath(xpath, options) {\n    return this._waitForSelectorOrXPath(xpath, true, options);\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!{polling?: string|number, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitForFunction(pageFunction, options = {}, ...args) {\n    const {\n      polling = 'raf',\n      timeout = 30000\n    } = options;\n    return new WaitTask(this, pageFunction, 'function', polling, timeout, ...args).promise;\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  /* async */ title() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this.evaluate(() => document.title);\n  });}\n\n  /**\n   * @param {string} selectorOrXPath\n   * @param {boolean} isXPath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  _waitForSelectorOrXPath(selectorOrXPath, isXPath, options = {}) {\n    const {\n      visible: waitForVisible = false,\n      hidden: waitForHidden = false,\n      timeout = 30000,\n    } = options;\n    const polling = waitForVisible || waitForHidden ? 'raf' : 'mutation';\n    const title = `${isXPath ? 'XPath' : 'selector'} \"${selectorOrXPath}\"${waitForHidden ? ' to be hidden' : ''}`;\n    return new WaitTask(this, predicate, title, polling, timeout, selectorOrXPath, isXPath, waitForVisible, waitForHidden).promise;\n\n    /**\n     * @param {string} selectorOrXPath\n     * @param {boolean} isXPath\n     * @param {boolean} waitForVisible\n     * @param {boolean} waitForHidden\n     * @return {?Node|boolean}\n     */\n    function predicate(selectorOrXPath, isXPath, waitForVisible, waitForHidden) {\n      const node = isXPath\n        ? document.evaluate(selectorOrXPath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue\n        : document.querySelector(selectorOrXPath);\n      if (!node)\n        return waitForHidden;\n      if (!waitForVisible && !waitForHidden)\n        return node;\n      const element = /** @type {Element} */ (node.nodeType === Node.TEXT_NODE ? node.parentElement : node);\n\n      const style = window.getComputedStyle(element);\n      const isVisible = style && style.visibility !== 'hidden' && hasVisibleBoundingBox();\n      const success = (waitForVisible === isVisible || waitForHidden === !isVisible);\n      return success ? node : null;\n\n      /**\n       * @return {boolean}\n       */\n      function hasVisibleBoundingBox() {\n        const rect = element.getBoundingClientRect();\n        return !!(rect.top || rect.bottom || rect.width || rect.height);\n      }\n    }\n  }\n\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n  _navigated(framePayload) {\n    this._name = framePayload.name;\n    // TODO(lushnikov): remove this once requestInterception has loaderId exposed.\n    this._navigationURL = framePayload.url;\n    this._url = framePayload.url;\n  }\n\n  /**\n   * @param {string} url\n   */\n  _navigatedWithinDocument(url) {\n    this._url = url;\n  }\n\n  /**\n   * @param {string} loaderId\n   * @param {string} name\n   */\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n\n  _detach() {\n    for (const waitTask of this._waitTasks)\n      waitTask.terminate(new Error('waitForFunction failed: frame got detached.'));\n    this._detached = true;\n    if (this._parentFrame)\n      this._parentFrame._childFrames.delete(this);\n    this._parentFrame = null;\n  }\n}\nhelper.tracePublicAPI(Frame);\n\nclass WaitTask {\n  /**\n   * @param {!Frame} frame\n   * @param {Function|string} predicateBody\n   * @param {string|number} polling\n   * @param {number} timeout\n   * @param {!Array<*>} args\n   */\n  constructor(frame, predicateBody, title, polling, timeout, ...args) {\n    if (helper.isString(polling))\n      assert(polling === 'raf' || polling === 'mutation', 'Unknown polling option: ' + polling);\n    else if (helper.isNumber(polling))\n      assert(polling > 0, 'Cannot poll with non-positive interval: ' + polling);\n    else\n      throw new Error('Unknown polling options: ' + polling);\n\n    this._frame = frame;\n    this._polling = polling;\n    this._timeout = timeout;\n    this._predicateBody = helper.isString(predicateBody) ? 'return ' + predicateBody : 'return (' + predicateBody + ')(...args)';\n    this._args = args;\n    this._runCount = 0;\n    frame._waitTasks.add(this);\n    this.promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n    // Since page navigation requires us to re-install the pageScript, we should track\n    // timeout on our end.\n    if (timeout) {\n      const timeoutError = new TimeoutError(`waiting for ${title} failed: timeout ${timeout}ms exceeded`);\n      this._timeoutTimer = setTimeout(() => this.terminate(timeoutError), timeout);\n    }\n    this.rerun();\n  }\n\n  /**\n   * @param {!Error} error\n   */\n  terminate(error) {\n    this._terminated = true;\n    this._reject(error);\n    this._cleanup();\n  }\n\n  /* async */ rerun() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const runCount = ++this._runCount;\n    /** @type {?Puppeteer.JSHandle} */\n    let success = null;\n    let error = null;\n    try {\n      success = (yield ((yield this._frame.executionContext())).evaluateHandle(waitForPredicatePageFunction, this._predicateBody, this._polling, this._timeout, ...this._args));\n    } catch (e) {\n      error = e;\n    }\n\n    if (this._terminated || runCount !== this._runCount) {\n      if (success)\n        (yield success.dispose());\n      return;\n    }\n\n    // Ignore timeouts in pageScript - we track timeouts ourselves.\n    // If the frame's execution context has already changed, `frame.evaluate` will\n    // throw an error - ignore this predicate run altogether.\n    if (!error && (yield this._frame.evaluate(s => !s, success).catch(e => true))) {\n      (yield success.dispose());\n      return;\n    }\n\n    // When the page is navigated, the promise is rejected.\n    // We will try again in the new execution context.\n    if (error && error.message.includes('Execution context was destroyed'))\n      return;\n\n    // We could have tried to evaluate in a context which was already\n    // destroyed.\n    if (error && error.message.includes('Cannot find context with specified id'))\n      return;\n\n    if (error)\n      this._reject(error);\n    else\n      this._resolve(success);\n\n    this._cleanup();\n  });}\n\n  _cleanup() {\n    clearTimeout(this._timeoutTimer);\n    this._frame._waitTasks.delete(this);\n    this._runningTask = null;\n  }\n}\n\n/**\n * @param {string} predicateBody\n * @param {string} polling\n * @param {number} timeout\n * @return {!Promise<*>}\n */\n/* async */ function waitForPredicatePageFunction(predicateBody, polling, timeout, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n  const predicate = new Function('...args', predicateBody);\n  let timedOut = false;\n  if (timeout)\n    setTimeout(() => timedOut = true, timeout);\n  if (polling === 'raf')\n    return (yield pollRaf());\n  if (polling === 'mutation')\n    return (yield pollMutation());\n  if (typeof polling === 'number')\n    return (yield pollInterval(polling));\n\n  /**\n   * @return {!Promise<*>}\n   */\n  function pollMutation() {\n    const success = predicate.apply(null, args);\n    if (success)\n      return Promise.resolve(success);\n\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    const observer = new MutationObserver(mutations => {\n      if (timedOut) {\n        observer.disconnect();\n        fulfill();\n      }\n      const success = predicate.apply(null, args);\n      if (success) {\n        observer.disconnect();\n        fulfill(success);\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true,\n      attributes: true\n    });\n    return result;\n  }\n\n  /**\n   * @return {!Promise<*>}\n   */\n  function pollRaf() {\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    onRaf();\n    return result;\n\n    function onRaf() {\n      if (timedOut) {\n        fulfill();\n        return;\n      }\n      const success = predicate.apply(null, args);\n      if (success)\n        fulfill(success);\n      else\n        requestAnimationFrame(onRaf);\n    }\n  }\n\n  /**\n   * @param {number} pollInterval\n   * @return {!Promise<*>}\n   */\n  function pollInterval(pollInterval) {\n    let fulfill;\n    const result = new Promise(x => fulfill = x);\n    onTimeout();\n    return result;\n\n    function onTimeout() {\n      if (timedOut) {\n        fulfill();\n        return;\n      }\n      const success = predicate.apply(null, args);\n      if (success)\n        fulfill(success);\n      else\n        setTimeout(onTimeout, pollInterval);\n    }\n  }\n});}\n\nfunction assertNoLegacyNavigationOptions(options) {\n  assert(options['networkIdleTimeout'] === undefined, 'ERROR: networkIdleTimeout option is no longer supported.');\n  assert(options['networkIdleInflight'] === undefined, 'ERROR: networkIdleInflight option is no longer supported.');\n  assert(options.waitUntil !== 'networkidle', 'ERROR: \"networkidle\" option is no longer supported. Use \"networkidle2\" instead');\n}\n\nclass LifecycleWatcher {\n  /**\n   * @param {!FrameManager} frameManager\n   * @param {!Puppeteer.Frame} frame\n   * @param {string|!Array<string>} waitUntil\n   * @param {number} timeout\n   */\n  constructor(frameManager, frame, waitUntil, timeout) {\n    if (Array.isArray(waitUntil))\n      waitUntil = waitUntil.slice();\n    else if (typeof waitUntil === 'string')\n      waitUntil = [waitUntil];\n    this._expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle[value];\n      assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent;\n    });\n\n    this._frameManager = frameManager;\n    this._networkManager = frameManager._networkManager;\n    this._frame = frame;\n    this._initialLoaderId = frame._loaderId;\n    this._timeout = timeout;\n    /** @type {?Puppeteer.Request} */\n    this._navigationRequest = null;\n    this._eventListeners = [\n      helper.addEventListener(frameManager._client, CDPSession.Events.Disconnected, () => this._terminate(new Error('Navigation failed because browser has disconnected!'))),\n      helper.addEventListener(this._frameManager, FrameManager.Events.LifecycleEvent, this._checkLifecycleComplete.bind(this)),\n      helper.addEventListener(this._frameManager, FrameManager.Events.FrameNavigatedWithinDocument, this._navigatedWithinDocument.bind(this)),\n      helper.addEventListener(this._frameManager, FrameManager.Events.FrameDetached, this._onFrameDetached.bind(this)),\n      helper.addEventListener(this._networkManager, NetworkManager.Events.Request, this._onRequest.bind(this)),\n    ];\n\n    this._sameDocumentNavigationPromise = new Promise(fulfill => {\n      this._sameDocumentNavigationCompleteCallback = fulfill;\n    });\n\n    this._lifecyclePromise = new Promise(fulfill => {\n      this._lifecycleCallback = fulfill;\n    });\n\n    this._newDocumentNavigationPromise = new Promise(fulfill => {\n      this._newDocumentNavigationCompleteCallback = fulfill;\n    });\n\n    this._timeoutPromise = this._createTimeoutPromise();\n    this._terminationPromise = new Promise(fulfill => {\n      this._terminationCallback = fulfill;\n    });\n  }\n\n  /**\n   * @param {!Puppeteer.Request} request\n   */\n  _onRequest(request) {\n    if (request.frame() !== this._frame || !request.isNavigationRequest())\n      return;\n    this._navigationRequest = request;\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   */\n  _onFrameDetached(frame) {\n    if (this._frame === frame) {\n      this._terminationCallback.call(null, new Error('Navigating frame was detached'));\n      return;\n    }\n    this._checkLifecycleComplete();\n  }\n\n  /**\n   * @return {?Puppeteer.Response}\n   */\n  navigationResponse() {\n    return this._navigationRequest ? this._navigationRequest.response() : null;\n  }\n\n  /**\n   * @param {!Error} error\n   */\n  _terminate(error) {\n    this._terminationCallback.call(null, error);\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  sameDocumentNavigationPromise() {\n    return this._sameDocumentNavigationPromise;\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  newDocumentNavigationPromise() {\n    return this._newDocumentNavigationPromise;\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  lifecyclePromise() {\n    return this._lifecyclePromise;\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  timeoutOrTerminationPromise() {\n    return Promise.race([this._timeoutPromise, this._terminationPromise]);\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  _createTimeoutPromise() {\n    if (!this._timeout)\n      return new Promise(() => {});\n    const errorMessage = 'Navigation Timeout Exceeded: ' + this._timeout + 'ms exceeded';\n    return new Promise(fulfill => this._maximumTimer = setTimeout(fulfill, this._timeout))\n        .then(() => new TimeoutError(errorMessage));\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   */\n  _navigatedWithinDocument(frame) {\n    if (frame !== this._frame)\n      return;\n    this._hasSameDocumentNavigation = true;\n    this._checkLifecycleComplete();\n  }\n\n  _checkLifecycleComplete() {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this._frame, this._expectedLifecycle))\n      return;\n    this._lifecycleCallback();\n    if (this._frame._loaderId === this._initialLoaderId && !this._hasSameDocumentNavigation)\n      return;\n    if (this._hasSameDocumentNavigation)\n      this._sameDocumentNavigationCompleteCallback();\n    if (this._frame._loaderId !== this._initialLoaderId)\n      this._newDocumentNavigationCompleteCallback();\n\n    /**\n     * @param {!Puppeteer.Frame} frame\n     * @param {!Array<string>} expectedLifecycle\n     * @return {boolean}\n     */\n    function checkLifecycle(frame, expectedLifecycle) {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event))\n          return false;\n      }\n      for (const child of frame.childFrames()) {\n        if (!checkLifecycle(child, expectedLifecycle))\n          return false;\n      }\n      return true;\n    }\n  }\n\n  dispose() {\n    helper.removeEventListeners(this._eventListeners);\n    clearTimeout(this._maximumTimer);\n  }\n}\n\nconst puppeteerToProtocolLifecycle = {\n  'load': 'load',\n  'domcontentloaded': 'DOMContentLoaded',\n  'networkidle0': 'networkIdle',\n  'networkidle2': 'networkAlmostIdle',\n};\n\nmodule.exports = {FrameManager, Frame};\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert} = require('./helper');\nconst keyDefinitions = require('./USKeyboardLayout');\n\n/**\n * @typedef {Object} KeyDescription\n * @property {number} keyCode\n * @property {string} key\n * @property {string} text\n * @property {string} code\n * @property {number} location\n */\n\nclass Keyboard {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._modifiers = 0;\n    this._pressedKeys = new Set();\n  }\n\n  /**\n   * @param {string} key\n   * @param {{text?: string}=} options\n   */\n  /* async */ down(key, options = { text: undefined }) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const description = this._keyDescriptionForString(key);\n\n    const autoRepeat = this._pressedKeys.has(description.code);\n    this._pressedKeys.add(description.code);\n    this._modifiers |= this._modifierBit(description.key);\n\n    const text = options.text === undefined ? description.text : options.text;\n    (yield this._client.send('Input.dispatchKeyEvent', {\n      type: text ? 'keyDown' : 'rawKeyDown',\n      modifiers: this._modifiers,\n      windowsVirtualKeyCode: description.keyCode,\n      code: description.code,\n      key: description.key,\n      text: text,\n      unmodifiedText: text,\n      autoRepeat,\n      location: description.location,\n      isKeypad: description.location === 3\n    }));\n  });}\n\n  /**\n   * @param {string} key\n   * @return {number}\n   */\n  _modifierBit(key) {\n    if (key === 'Alt')\n      return 1;\n    if (key === 'Control')\n      return 2;\n    if (key === 'Meta')\n      return 4;\n    if (key === 'Shift')\n      return 8;\n    return 0;\n  }\n\n  /**\n   * @param {string} keyString\n   * @return {KeyDescription}\n   */\n  _keyDescriptionForString(keyString) {\n    const shift = this._modifiers & 8;\n    const description = {\n      key: '',\n      keyCode: 0,\n      code: '',\n      text: '',\n      location: 0\n    };\n\n    const definition = keyDefinitions[keyString];\n    assert(definition, `Unknown key: \"${keyString}\"`);\n\n    if (definition.key)\n      description.key = definition.key;\n    if (shift && definition.shiftKey)\n      description.key = definition.shiftKey;\n\n    if (definition.keyCode)\n      description.keyCode = definition.keyCode;\n    if (shift && definition.shiftKeyCode)\n      description.keyCode = definition.shiftKeyCode;\n\n    if (definition.code)\n      description.code = definition.code;\n\n    if (definition.location)\n      description.location = definition.location;\n\n    if (description.key.length === 1)\n      description.text = description.key;\n\n    if (definition.text)\n      description.text = definition.text;\n    if (shift && definition.shiftText)\n      description.text = definition.shiftText;\n\n    // if any modifiers besides shift are pressed, no text should be sent\n    if (this._modifiers & ~8)\n      description.text = '';\n\n    return description;\n  }\n\n  /**\n   * @param {string} key\n   */\n  /* async */ up(key) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const description = this._keyDescriptionForString(key);\n\n    this._modifiers &= ~this._modifierBit(description.key);\n    this._pressedKeys.delete(description.code);\n    (yield this._client.send('Input.dispatchKeyEvent', {\n      type: 'keyUp',\n      modifiers: this._modifiers,\n      key: description.key,\n      windowsVirtualKeyCode: description.keyCode,\n      code: description.code,\n      location: description.location\n    }));\n  });}\n\n  /**\n   * @param {string} char\n   */\n  /* async */ sendCharacter(char) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    (yield this._client.send('Input.insertText', {text: char}));\n  });}\n\n  /**\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  /* async */ type(text, options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    let delay = 0;\n    if (options && options.delay)\n      delay = options.delay;\n    for (const char of text) {\n      if (keyDefinitions[char])\n        (yield this.press(char, {delay}));\n      else\n        (yield this.sendCharacter(char));\n      if (delay)\n        (yield new Promise(f => setTimeout(f, delay)));\n    }\n  });}\n\n  /**\n   * @param {string} key\n   * @param {!{delay?: number, text?: string}=} options\n   */\n  /* async */ press(key, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {delay = null} = options;\n    (yield this.down(key, options));\n    if (delay !== null)\n      (yield new Promise(f => setTimeout(f, options.delay)));\n    (yield this.up(key));\n  });}\n}\n\nclass Mouse {\n  /**\n   * @param {Puppeteer.CDPSession} client\n   * @param {!Keyboard} keyboard\n   */\n  constructor(client, keyboard) {\n    this._client = client;\n    this._keyboard = keyboard;\n    this._x = 0;\n    this._y = 0;\n    /** @type {'none'|'left'|'right'|'middle'} */\n    this._button = 'none';\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {!{steps?: number}=} options\n   */\n  /* async */ move(x, y, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {steps = 1} = options;\n    const fromX = this._x, fromY = this._y;\n    this._x = x;\n    this._y = y;\n    for (let i = 1; i <= steps; i++) {\n      (yield this._client.send('Input.dispatchMouseEvent', {\n        type: 'mouseMoved',\n        button: this._button,\n        x: fromX + (this._x - fromX) * (i / steps),\n        y: fromY + (this._y - fromY) * (i / steps),\n        modifiers: this._keyboard._modifiers\n      }));\n    }\n  });}\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  /* async */ click(x, y, options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {delay = null} = options;\n    this.move(x, y);\n    this.down(options);\n    if (delay !== null)\n      (yield new Promise(f => setTimeout(f, delay)));\n    (yield this.up(options));\n  });}\n\n  /**\n   * @param {!{button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  /* async */ down(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {button = 'left', clickCount = 1} = options;\n    this._button = button;\n    (yield this._client.send('Input.dispatchMouseEvent', {\n      type: 'mousePressed',\n      button,\n      x: this._x,\n      y: this._y,\n      modifiers: this._keyboard._modifiers,\n      clickCount\n    }));\n  });}\n\n  /**\n   * @param {!{button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  /* async */ up(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {button = 'left', clickCount = 1} = options;\n    this._button = 'none';\n    (yield this._client.send('Input.dispatchMouseEvent', {\n      type: 'mouseReleased',\n      button,\n      x: this._x,\n      y: this._y,\n      modifiers: this._keyboard._modifiers,\n      clickCount\n    }));\n  });}\n}\n\nclass Touchscreen {\n  /**\n   * @param {Puppeteer.CDPSession} client\n   * @param {Keyboard} keyboard\n   */\n  constructor(client, keyboard) {\n    this._client = client;\n    this._keyboard = keyboard;\n  }\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   */\n  /* async */ tap(x, y) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    // Touches appear to be lost during the first frame after navigation.\n    // This waits a frame before sending the tap.\n    // @see https://crbug.com/613219\n    (yield this._client.send('Runtime.evaluate', {\n      expression: 'new Promise(x => requestAnimationFrame(() => requestAnimationFrame(x)))',\n      awaitPromise: true\n    }));\n\n    const touchPoints = [{x: Math.round(x), y: Math.round(y)}];\n    (yield this._client.send('Input.dispatchTouchEvent', {\n      type: 'touchStart',\n      touchPoints,\n      modifiers: this._keyboard._modifiers\n    }));\n    (yield this._client.send('Input.dispatchTouchEvent', {\n      type: 'touchEnd',\n      touchPoints: [],\n      modifiers: this._keyboard._modifiers\n    }));\n  });}\n}\n\nmodule.exports = { Keyboard, Mouse, Touchscreen};\nhelper.tracePublicAPI(Keyboard);\nhelper.tracePublicAPI(Mouse);\nhelper.tracePublicAPI(Touchscreen);\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} KeyDefinition\n * @property {number=} keyCode\n * @property {number=} shiftKeyCode\n * @property {string=} key\n * @property {string=} shiftKey\n * @property {string=} code\n * @property {string=} text\n * @property {string=} shiftText\n * @property {number=} location\n */\n\n/**\n * @type {Object<string, KeyDefinition>}\n */\nmodule.exports = {\n  '0': {'keyCode': 48, 'key': '0', 'code': 'Digit0'},\n  '1': {'keyCode': 49, 'key': '1', 'code': 'Digit1'},\n  '2': {'keyCode': 50, 'key': '2', 'code': 'Digit2'},\n  '3': {'keyCode': 51, 'key': '3', 'code': 'Digit3'},\n  '4': {'keyCode': 52, 'key': '4', 'code': 'Digit4'},\n  '5': {'keyCode': 53, 'key': '5', 'code': 'Digit5'},\n  '6': {'keyCode': 54, 'key': '6', 'code': 'Digit6'},\n  '7': {'keyCode': 55, 'key': '7', 'code': 'Digit7'},\n  '8': {'keyCode': 56, 'key': '8', 'code': 'Digit8'},\n  '9': {'keyCode': 57, 'key': '9', 'code': 'Digit9'},\n  'Power': {'key': 'Power', 'code': 'Power'},\n  'Eject': {'key': 'Eject', 'code': 'Eject'},\n  'Abort': {'keyCode': 3, 'code': 'Abort', 'key': 'Cancel'},\n  'Help': {'keyCode': 6, 'code': 'Help', 'key': 'Help'},\n  'Backspace': {'keyCode': 8, 'code': 'Backspace', 'key': 'Backspace'},\n  'Tab': {'keyCode': 9, 'code': 'Tab', 'key': 'Tab'},\n  'Numpad5': {'keyCode': 12, 'shiftKeyCode': 101, 'key': 'Clear', 'code': 'Numpad5', 'shiftKey': '5', 'location': 3},\n  'NumpadEnter': {'keyCode': 13, 'code': 'NumpadEnter', 'key': 'Enter', 'text': '\\r', 'location': 3},\n  'Enter': {'keyCode': 13, 'code': 'Enter', 'key': 'Enter', 'text': '\\r'},\n  '\\r': {'keyCode': 13, 'code': 'Enter', 'key': 'Enter', 'text': '\\r'},\n  '\\n': {'keyCode': 13, 'code': 'Enter', 'key': 'Enter', 'text': '\\r'},\n  'ShiftLeft': {'keyCode': 16, 'code': 'ShiftLeft', 'key': 'Shift', 'location': 1},\n  'ShiftRight': {'keyCode': 16, 'code': 'ShiftRight', 'key': 'Shift', 'location': 2},\n  'ControlLeft': {'keyCode': 17, 'code': 'ControlLeft', 'key': 'Control', 'location': 1},\n  'ControlRight': {'keyCode': 17, 'code': 'ControlRight', 'key': 'Control', 'location': 2},\n  'AltLeft': {'keyCode': 18, 'code': 'AltLeft', 'key': 'Alt', 'location': 1},\n  'AltRight': {'keyCode': 18, 'code': 'AltRight', 'key': 'Alt', 'location': 2},\n  'Pause': {'keyCode': 19, 'code': 'Pause', 'key': 'Pause'},\n  'CapsLock': {'keyCode': 20, 'code': 'CapsLock', 'key': 'CapsLock'},\n  'Escape': {'keyCode': 27, 'code': 'Escape', 'key': 'Escape'},\n  'Convert': {'keyCode': 28, 'code': 'Convert', 'key': 'Convert'},\n  'NonConvert': {'keyCode': 29, 'code': 'NonConvert', 'key': 'NonConvert'},\n  'Space': {'keyCode': 32, 'code': 'Space', 'key': ' '},\n  'Numpad9': {'keyCode': 33, 'shiftKeyCode': 105, 'key': 'PageUp', 'code': 'Numpad9', 'shiftKey': '9', 'location': 3},\n  'PageUp': {'keyCode': 33, 'code': 'PageUp', 'key': 'PageUp'},\n  'Numpad3': {'keyCode': 34, 'shiftKeyCode': 99, 'key': 'PageDown', 'code': 'Numpad3', 'shiftKey': '3', 'location': 3},\n  'PageDown': {'keyCode': 34, 'code': 'PageDown', 'key': 'PageDown'},\n  'End': {'keyCode': 35, 'code': 'End', 'key': 'End'},\n  'Numpad1': {'keyCode': 35, 'shiftKeyCode': 97, 'key': 'End', 'code': 'Numpad1', 'shiftKey': '1', 'location': 3},\n  'Home': {'keyCode': 36, 'code': 'Home', 'key': 'Home'},\n  'Numpad7': {'keyCode': 36, 'shiftKeyCode': 103, 'key': 'Home', 'code': 'Numpad7', 'shiftKey': '7', 'location': 3},\n  'ArrowLeft': {'keyCode': 37, 'code': 'ArrowLeft', 'key': 'ArrowLeft'},\n  'Numpad4': {'keyCode': 37, 'shiftKeyCode': 100, 'key': 'ArrowLeft', 'code': 'Numpad4', 'shiftKey': '4', 'location': 3},\n  'Numpad8': {'keyCode': 38, 'shiftKeyCode': 104, 'key': 'ArrowUp', 'code': 'Numpad8', 'shiftKey': '8', 'location': 3},\n  'ArrowUp': {'keyCode': 38, 'code': 'ArrowUp', 'key': 'ArrowUp'},\n  'ArrowRight': {'keyCode': 39, 'code': 'ArrowRight', 'key': 'ArrowRight'},\n  'Numpad6': {'keyCode': 39, 'shiftKeyCode': 102, 'key': 'ArrowRight', 'code': 'Numpad6', 'shiftKey': '6', 'location': 3},\n  'Numpad2': {'keyCode': 40, 'shiftKeyCode': 98, 'key': 'ArrowDown', 'code': 'Numpad2', 'shiftKey': '2', 'location': 3},\n  'ArrowDown': {'keyCode': 40, 'code': 'ArrowDown', 'key': 'ArrowDown'},\n  'Select': {'keyCode': 41, 'code': 'Select', 'key': 'Select'},\n  'Open': {'keyCode': 43, 'code': 'Open', 'key': 'Execute'},\n  'PrintScreen': {'keyCode': 44, 'code': 'PrintScreen', 'key': 'PrintScreen'},\n  'Insert': {'keyCode': 45, 'code': 'Insert', 'key': 'Insert'},\n  'Numpad0': {'keyCode': 45, 'shiftKeyCode': 96, 'key': 'Insert', 'code': 'Numpad0', 'shiftKey': '0', 'location': 3},\n  'Delete': {'keyCode': 46, 'code': 'Delete', 'key': 'Delete'},\n  'NumpadDecimal': {'keyCode': 46, 'shiftKeyCode': 110, 'code': 'NumpadDecimal', 'key': '\\u0000', 'shiftKey': '.', 'location': 3},\n  'Digit0': {'keyCode': 48, 'code': 'Digit0', 'shiftKey': ')', 'key': '0'},\n  'Digit1': {'keyCode': 49, 'code': 'Digit1', 'shiftKey': '!', 'key': '1'},\n  'Digit2': {'keyCode': 50, 'code': 'Digit2', 'shiftKey': '@', 'key': '2'},\n  'Digit3': {'keyCode': 51, 'code': 'Digit3', 'shiftKey': '#', 'key': '3'},\n  'Digit4': {'keyCode': 52, 'code': 'Digit4', 'shiftKey': '$', 'key': '4'},\n  'Digit5': {'keyCode': 53, 'code': 'Digit5', 'shiftKey': '%', 'key': '5'},\n  'Digit6': {'keyCode': 54, 'code': 'Digit6', 'shiftKey': '^', 'key': '6'},\n  'Digit7': {'keyCode': 55, 'code': 'Digit7', 'shiftKey': '&', 'key': '7'},\n  'Digit8': {'keyCode': 56, 'code': 'Digit8', 'shiftKey': '*', 'key': '8'},\n  'Digit9': {'keyCode': 57, 'code': 'Digit9', 'shiftKey': '\\(', 'key': '9'},\n  'KeyA': {'keyCode': 65, 'code': 'KeyA', 'shiftKey': 'A', 'key': 'a'},\n  'KeyB': {'keyCode': 66, 'code': 'KeyB', 'shiftKey': 'B', 'key': 'b'},\n  'KeyC': {'keyCode': 67, 'code': 'KeyC', 'shiftKey': 'C', 'key': 'c'},\n  'KeyD': {'keyCode': 68, 'code': 'KeyD', 'shiftKey': 'D', 'key': 'd'},\n  'KeyE': {'keyCode': 69, 'code': 'KeyE', 'shiftKey': 'E', 'key': 'e'},\n  'KeyF': {'keyCode': 70, 'code': 'KeyF', 'shiftKey': 'F', 'key': 'f'},\n  'KeyG': {'keyCode': 71, 'code': 'KeyG', 'shiftKey': 'G', 'key': 'g'},\n  'KeyH': {'keyCode': 72, 'code': 'KeyH', 'shiftKey': 'H', 'key': 'h'},\n  'KeyI': {'keyCode': 73, 'code': 'KeyI', 'shiftKey': 'I', 'key': 'i'},\n  'KeyJ': {'keyCode': 74, 'code': 'KeyJ', 'shiftKey': 'J', 'key': 'j'},\n  'KeyK': {'keyCode': 75, 'code': 'KeyK', 'shiftKey': 'K', 'key': 'k'},\n  'KeyL': {'keyCode': 76, 'code': 'KeyL', 'shiftKey': 'L', 'key': 'l'},\n  'KeyM': {'keyCode': 77, 'code': 'KeyM', 'shiftKey': 'M', 'key': 'm'},\n  'KeyN': {'keyCode': 78, 'code': 'KeyN', 'shiftKey': 'N', 'key': 'n'},\n  'KeyO': {'keyCode': 79, 'code': 'KeyO', 'shiftKey': 'O', 'key': 'o'},\n  'KeyP': {'keyCode': 80, 'code': 'KeyP', 'shiftKey': 'P', 'key': 'p'},\n  'KeyQ': {'keyCode': 81, 'code': 'KeyQ', 'shiftKey': 'Q', 'key': 'q'},\n  'KeyR': {'keyCode': 82, 'code': 'KeyR', 'shiftKey': 'R', 'key': 'r'},\n  'KeyS': {'keyCode': 83, 'code': 'KeyS', 'shiftKey': 'S', 'key': 's'},\n  'KeyT': {'keyCode': 84, 'code': 'KeyT', 'shiftKey': 'T', 'key': 't'},\n  'KeyU': {'keyCode': 85, 'code': 'KeyU', 'shiftKey': 'U', 'key': 'u'},\n  'KeyV': {'keyCode': 86, 'code': 'KeyV', 'shiftKey': 'V', 'key': 'v'},\n  'KeyW': {'keyCode': 87, 'code': 'KeyW', 'shiftKey': 'W', 'key': 'w'},\n  'KeyX': {'keyCode': 88, 'code': 'KeyX', 'shiftKey': 'X', 'key': 'x'},\n  'KeyY': {'keyCode': 89, 'code': 'KeyY', 'shiftKey': 'Y', 'key': 'y'},\n  'KeyZ': {'keyCode': 90, 'code': 'KeyZ', 'shiftKey': 'Z', 'key': 'z'},\n  'MetaLeft': {'keyCode': 91, 'code': 'MetaLeft', 'key': 'Meta', 'location': 1},\n  'MetaRight': {'keyCode': 92, 'code': 'MetaRight', 'key': 'Meta', 'location': 2},\n  'ContextMenu': {'keyCode': 93, 'code': 'ContextMenu', 'key': 'ContextMenu'},\n  'NumpadMultiply': {'keyCode': 106, 'code': 'NumpadMultiply', 'key': '*', 'location': 3},\n  'NumpadAdd': {'keyCode': 107, 'code': 'NumpadAdd', 'key': '+', 'location': 3},\n  'NumpadSubtract': {'keyCode': 109, 'code': 'NumpadSubtract', 'key': '-', 'location': 3},\n  'NumpadDivide': {'keyCode': 111, 'code': 'NumpadDivide', 'key': '/', 'location': 3},\n  'F1': {'keyCode': 112, 'code': 'F1', 'key': 'F1'},\n  'F2': {'keyCode': 113, 'code': 'F2', 'key': 'F2'},\n  'F3': {'keyCode': 114, 'code': 'F3', 'key': 'F3'},\n  'F4': {'keyCode': 115, 'code': 'F4', 'key': 'F4'},\n  'F5': {'keyCode': 116, 'code': 'F5', 'key': 'F5'},\n  'F6': {'keyCode': 117, 'code': 'F6', 'key': 'F6'},\n  'F7': {'keyCode': 118, 'code': 'F7', 'key': 'F7'},\n  'F8': {'keyCode': 119, 'code': 'F8', 'key': 'F8'},\n  'F9': {'keyCode': 120, 'code': 'F9', 'key': 'F9'},\n  'F10': {'keyCode': 121, 'code': 'F10', 'key': 'F10'},\n  'F11': {'keyCode': 122, 'code': 'F11', 'key': 'F11'},\n  'F12': {'keyCode': 123, 'code': 'F12', 'key': 'F12'},\n  'F13': {'keyCode': 124, 'code': 'F13', 'key': 'F13'},\n  'F14': {'keyCode': 125, 'code': 'F14', 'key': 'F14'},\n  'F15': {'keyCode': 126, 'code': 'F15', 'key': 'F15'},\n  'F16': {'keyCode': 127, 'code': 'F16', 'key': 'F16'},\n  'F17': {'keyCode': 128, 'code': 'F17', 'key': 'F17'},\n  'F18': {'keyCode': 129, 'code': 'F18', 'key': 'F18'},\n  'F19': {'keyCode': 130, 'code': 'F19', 'key': 'F19'},\n  'F20': {'keyCode': 131, 'code': 'F20', 'key': 'F20'},\n  'F21': {'keyCode': 132, 'code': 'F21', 'key': 'F21'},\n  'F22': {'keyCode': 133, 'code': 'F22', 'key': 'F22'},\n  'F23': {'keyCode': 134, 'code': 'F23', 'key': 'F23'},\n  'F24': {'keyCode': 135, 'code': 'F24', 'key': 'F24'},\n  'NumLock': {'keyCode': 144, 'code': 'NumLock', 'key': 'NumLock'},\n  'ScrollLock': {'keyCode': 145, 'code': 'ScrollLock', 'key': 'ScrollLock'},\n  'AudioVolumeMute': {'keyCode': 173, 'code': 'AudioVolumeMute', 'key': 'AudioVolumeMute'},\n  'AudioVolumeDown': {'keyCode': 174, 'code': 'AudioVolumeDown', 'key': 'AudioVolumeDown'},\n  'AudioVolumeUp': {'keyCode': 175, 'code': 'AudioVolumeUp', 'key': 'AudioVolumeUp'},\n  'MediaTrackNext': {'keyCode': 176, 'code': 'MediaTrackNext', 'key': 'MediaTrackNext'},\n  'MediaTrackPrevious': {'keyCode': 177, 'code': 'MediaTrackPrevious', 'key': 'MediaTrackPrevious'},\n  'MediaStop': {'keyCode': 178, 'code': 'MediaStop', 'key': 'MediaStop'},\n  'MediaPlayPause': {'keyCode': 179, 'code': 'MediaPlayPause', 'key': 'MediaPlayPause'},\n  'Semicolon': {'keyCode': 186, 'code': 'Semicolon', 'shiftKey': ':', 'key': ';'},\n  'Equal': {'keyCode': 187, 'code': 'Equal', 'shiftKey': '+', 'key': '='},\n  'NumpadEqual': {'keyCode': 187, 'code': 'NumpadEqual', 'key': '=', 'location': 3},\n  'Comma': {'keyCode': 188, 'code': 'Comma', 'shiftKey': '\\<', 'key': ','},\n  'Minus': {'keyCode': 189, 'code': 'Minus', 'shiftKey': '_', 'key': '-'},\n  'Period': {'keyCode': 190, 'code': 'Period', 'shiftKey': '>', 'key': '.'},\n  'Slash': {'keyCode': 191, 'code': 'Slash', 'shiftKey': '?', 'key': '/'},\n  'Backquote': {'keyCode': 192, 'code': 'Backquote', 'shiftKey': '~', 'key': '`'},\n  'BracketLeft': {'keyCode': 219, 'code': 'BracketLeft', 'shiftKey': '{', 'key': '['},\n  'Backslash': {'keyCode': 220, 'code': 'Backslash', 'shiftKey': '|', 'key': '\\\\'},\n  'BracketRight': {'keyCode': 221, 'code': 'BracketRight', 'shiftKey': '}', 'key': ']'},\n  'Quote': {'keyCode': 222, 'code': 'Quote', 'shiftKey': '\"', 'key': '\\''},\n  'AltGraph': {'keyCode': 225, 'code': 'AltGraph', 'key': 'AltGraph'},\n  'Props': {'keyCode': 247, 'code': 'Props', 'key': 'CrSel'},\n  'Cancel': {'keyCode': 3, 'key': 'Cancel', 'code': 'Abort'},\n  'Clear': {'keyCode': 12, 'key': 'Clear', 'code': 'Numpad5', 'location': 3},\n  'Shift': {'keyCode': 16, 'key': 'Shift', 'code': 'ShiftLeft', 'location': 1},\n  'Control': {'keyCode': 17, 'key': 'Control', 'code': 'ControlLeft', 'location': 1},\n  'Alt': {'keyCode': 18, 'key': 'Alt', 'code': 'AltLeft', 'location': 1},\n  'Accept': {'keyCode': 30, 'key': 'Accept'},\n  'ModeChange': {'keyCode': 31, 'key': 'ModeChange'},\n  ' ': {'keyCode': 32, 'key': ' ', 'code': 'Space'},\n  'Print': {'keyCode': 42, 'key': 'Print'},\n  'Execute': {'keyCode': 43, 'key': 'Execute', 'code': 'Open'},\n  '\\u0000': {'keyCode': 46, 'key': '\\u0000', 'code': 'NumpadDecimal', 'location': 3},\n  'a': {'keyCode': 65, 'key': 'a', 'code': 'KeyA'},\n  'b': {'keyCode': 66, 'key': 'b', 'code': 'KeyB'},\n  'c': {'keyCode': 67, 'key': 'c', 'code': 'KeyC'},\n  'd': {'keyCode': 68, 'key': 'd', 'code': 'KeyD'},\n  'e': {'keyCode': 69, 'key': 'e', 'code': 'KeyE'},\n  'f': {'keyCode': 70, 'key': 'f', 'code': 'KeyF'},\n  'g': {'keyCode': 71, 'key': 'g', 'code': 'KeyG'},\n  'h': {'keyCode': 72, 'key': 'h', 'code': 'KeyH'},\n  'i': {'keyCode': 73, 'key': 'i', 'code': 'KeyI'},\n  'j': {'keyCode': 74, 'key': 'j', 'code': 'KeyJ'},\n  'k': {'keyCode': 75, 'key': 'k', 'code': 'KeyK'},\n  'l': {'keyCode': 76, 'key': 'l', 'code': 'KeyL'},\n  'm': {'keyCode': 77, 'key': 'm', 'code': 'KeyM'},\n  'n': {'keyCode': 78, 'key': 'n', 'code': 'KeyN'},\n  'o': {'keyCode': 79, 'key': 'o', 'code': 'KeyO'},\n  'p': {'keyCode': 80, 'key': 'p', 'code': 'KeyP'},\n  'q': {'keyCode': 81, 'key': 'q', 'code': 'KeyQ'},\n  'r': {'keyCode': 82, 'key': 'r', 'code': 'KeyR'},\n  's': {'keyCode': 83, 'key': 's', 'code': 'KeyS'},\n  't': {'keyCode': 84, 'key': 't', 'code': 'KeyT'},\n  'u': {'keyCode': 85, 'key': 'u', 'code': 'KeyU'},\n  'v': {'keyCode': 86, 'key': 'v', 'code': 'KeyV'},\n  'w': {'keyCode': 87, 'key': 'w', 'code': 'KeyW'},\n  'x': {'keyCode': 88, 'key': 'x', 'code': 'KeyX'},\n  'y': {'keyCode': 89, 'key': 'y', 'code': 'KeyY'},\n  'z': {'keyCode': 90, 'key': 'z', 'code': 'KeyZ'},\n  'Meta': {'keyCode': 91, 'key': 'Meta', 'code': 'MetaLeft', 'location': 1},\n  '*': {'keyCode': 106, 'key': '*', 'code': 'NumpadMultiply', 'location': 3},\n  '+': {'keyCode': 107, 'key': '+', 'code': 'NumpadAdd', 'location': 3},\n  '-': {'keyCode': 109, 'key': '-', 'code': 'NumpadSubtract', 'location': 3},\n  '/': {'keyCode': 111, 'key': '/', 'code': 'NumpadDivide', 'location': 3},\n  ';': {'keyCode': 186, 'key': ';', 'code': 'Semicolon'},\n  '=': {'keyCode': 187, 'key': '=', 'code': 'Equal'},\n  ',': {'keyCode': 188, 'key': ',', 'code': 'Comma'},\n  '.': {'keyCode': 190, 'key': '.', 'code': 'Period'},\n  '`': {'keyCode': 192, 'key': '`', 'code': 'Backquote'},\n  '[': {'keyCode': 219, 'key': '[', 'code': 'BracketLeft'},\n  '\\\\': {'keyCode': 220, 'key': '\\\\', 'code': 'Backslash'},\n  ']': {'keyCode': 221, 'key': ']', 'code': 'BracketRight'},\n  '\\'': {'keyCode': 222, 'key': '\\'', 'code': 'Quote'},\n  'Attn': {'keyCode': 246, 'key': 'Attn'},\n  'CrSel': {'keyCode': 247, 'key': 'CrSel', 'code': 'Props'},\n  'ExSel': {'keyCode': 248, 'key': 'ExSel'},\n  'EraseEof': {'keyCode': 249, 'key': 'EraseEof'},\n  'Play': {'keyCode': 250, 'key': 'Play'},\n  'ZoomOut': {'keyCode': 251, 'key': 'ZoomOut'},\n  ')': {'keyCode': 48, 'key': ')', 'code': 'Digit0'},\n  '!': {'keyCode': 49, 'key': '!', 'code': 'Digit1'},\n  '@': {'keyCode': 50, 'key': '@', 'code': 'Digit2'},\n  '#': {'keyCode': 51, 'key': '#', 'code': 'Digit3'},\n  '$': {'keyCode': 52, 'key': '$', 'code': 'Digit4'},\n  '%': {'keyCode': 53, 'key': '%', 'code': 'Digit5'},\n  '^': {'keyCode': 54, 'key': '^', 'code': 'Digit6'},\n  '&': {'keyCode': 55, 'key': '&', 'code': 'Digit7'},\n  '(': {'keyCode': 57, 'key': '\\(', 'code': 'Digit9'},\n  'A': {'keyCode': 65, 'key': 'A', 'code': 'KeyA'},\n  'B': {'keyCode': 66, 'key': 'B', 'code': 'KeyB'},\n  'C': {'keyCode': 67, 'key': 'C', 'code': 'KeyC'},\n  'D': {'keyCode': 68, 'key': 'D', 'code': 'KeyD'},\n  'E': {'keyCode': 69, 'key': 'E', 'code': 'KeyE'},\n  'F': {'keyCode': 70, 'key': 'F', 'code': 'KeyF'},\n  'G': {'keyCode': 71, 'key': 'G', 'code': 'KeyG'},\n  'H': {'keyCode': 72, 'key': 'H', 'code': 'KeyH'},\n  'I': {'keyCode': 73, 'key': 'I', 'code': 'KeyI'},\n  'J': {'keyCode': 74, 'key': 'J', 'code': 'KeyJ'},\n  'K': {'keyCode': 75, 'key': 'K', 'code': 'KeyK'},\n  'L': {'keyCode': 76, 'key': 'L', 'code': 'KeyL'},\n  'M': {'keyCode': 77, 'key': 'M', 'code': 'KeyM'},\n  'N': {'keyCode': 78, 'key': 'N', 'code': 'KeyN'},\n  'O': {'keyCode': 79, 'key': 'O', 'code': 'KeyO'},\n  'P': {'keyCode': 80, 'key': 'P', 'code': 'KeyP'},\n  'Q': {'keyCode': 81, 'key': 'Q', 'code': 'KeyQ'},\n  'R': {'keyCode': 82, 'key': 'R', 'code': 'KeyR'},\n  'S': {'keyCode': 83, 'key': 'S', 'code': 'KeyS'},\n  'T': {'keyCode': 84, 'key': 'T', 'code': 'KeyT'},\n  'U': {'keyCode': 85, 'key': 'U', 'code': 'KeyU'},\n  'V': {'keyCode': 86, 'key': 'V', 'code': 'KeyV'},\n  'W': {'keyCode': 87, 'key': 'W', 'code': 'KeyW'},\n  'X': {'keyCode': 88, 'key': 'X', 'code': 'KeyX'},\n  'Y': {'keyCode': 89, 'key': 'Y', 'code': 'KeyY'},\n  'Z': {'keyCode': 90, 'key': 'Z', 'code': 'KeyZ'},\n  ':': {'keyCode': 186, 'key': ':', 'code': 'Semicolon'},\n  '<': {'keyCode': 188, 'key': '\\<', 'code': 'Comma'},\n  '_': {'keyCode': 189, 'key': '_', 'code': 'Minus'},\n  '>': {'keyCode': 190, 'key': '>', 'code': 'Period'},\n  '?': {'keyCode': 191, 'key': '?', 'code': 'Slash'},\n  '~': {'keyCode': 192, 'key': '~', 'code': 'Backquote'},\n  '{': {'keyCode': 219, 'key': '{', 'code': 'BracketLeft'},\n  '|': {'keyCode': 220, 'key': '|', 'code': 'Backslash'},\n  '}': {'keyCode': 221, 'key': '}', 'code': 'BracketRight'},\n  '\"': {'keyCode': 222, 'key': '\"', 'code': 'Quote'}\n};","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper, assert} = require('./helper');\nconst fs = require('fs');\n\nconst openAsync = helper.promisify(fs.open);\nconst writeAsync = helper.promisify(fs.write);\nconst closeAsync = helper.promisify(fs.close);\n\nclass Tracing {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._recording = false;\n    this._path = '';\n  }\n\n  /**\n   * @param {!{path: string, screenshots?: boolean, categories?: !Array<string>}} options\n   */\n  /* async */ start(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(!this._recording, 'Cannot start recording trace while already recording trace.');\n\n    const defaultCategories = [\n      '-*', 'devtools.timeline', 'v8.execute', 'disabled-by-default-devtools.timeline',\n      'disabled-by-default-devtools.timeline.frame', 'toplevel',\n      'blink.console', 'blink.user_timing', 'latencyInfo', 'disabled-by-default-devtools.timeline.stack',\n      'disabled-by-default-v8.cpu_profiler', 'disabled-by-default-v8.cpu_profiler.hires'\n    ];\n    const {\n      path = null,\n      screenshots = false,\n      categories = defaultCategories,\n    } = options;\n\n    if (screenshots)\n      categories.push('disabled-by-default-devtools.screenshot');\n\n    this._path = path;\n    this._recording = true;\n    (yield this._client.send('Tracing.start', {\n      transferMode: 'ReturnAsStream',\n      categories: categories.join(',')\n    }));\n  });}\n\n  /**\n   * @return {!Promise<!Buffer>}\n   */\n  /* async */ stop() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    let fulfill;\n    const contentPromise = new Promise(x => fulfill = x);\n    this._client.once('Tracing.tracingComplete', event => {\n      this._readStream(event.stream, this._path).then(fulfill);\n    });\n    (yield this._client.send('Tracing.end'));\n    this._recording = false;\n    return contentPromise;\n  });}\n\n  /**\n   * @param {string} handle\n   * @param {string} path\n   */\n  /* async */ _readStream(handle, path) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    let eof = false;\n    let file;\n    if (path)\n      file = (yield openAsync(path, 'w'));\n    const bufs = [];\n    while (!eof) {\n      const response = (yield this._client.send('IO.read', {handle}));\n      eof = response.eof;\n      bufs.push(Buffer.from(response.data));\n      if (path)\n        (yield writeAsync(file, response.data));\n    }\n    if (path)\n      (yield closeAsync(file));\n    (yield this._client.send('IO.close', {handle}));\n    let resultBuffer = null;\n    try {\n      resultBuffer = Buffer.concat(bufs);\n    } finally {\n      return resultBuffer;\n    }\n  });}\n}\nhelper.tracePublicAPI(Tracing);\n\nmodule.exports = Tracing;\n","/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, debugError, assert} = require('./helper');\n\nconst {EVALUATION_SCRIPT_URL} = require('./ExecutionContext');\n\n/**\n * @typedef {Object} CoverageEntry\n * @property {string} url\n * @property {string} text\n * @property {!Array<!{start: number, end: number}>} ranges\n */\n\nclass Coverage {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._jsCoverage = new JSCoverage(client);\n    this._cssCoverage = new CSSCoverage(client);\n  }\n\n  /**\n   * @param {!{resetOnNavigation?: boolean, reportAnonymousScripts?: boolean}} options\n   */\n  /* async */ startJSCoverage(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._jsCoverage.start(options));\n  });}\n\n  /**\n   * @return {!Promise<!Array<!CoverageEntry>>}\n   */\n  /* async */ stopJSCoverage() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._jsCoverage.stop());\n  });}\n\n  /**\n   * @param {{resetOnNavigation?: boolean}=} options\n   */\n  /* async */ startCSSCoverage(options) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._cssCoverage.start(options));\n  });}\n\n  /**\n   * @return {!Promise<!Array<!CoverageEntry>>}\n   */\n  /* async */ stopCSSCoverage() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return (yield this._cssCoverage.stop());\n  });}\n}\n\nmodule.exports = {Coverage};\nhelper.tracePublicAPI(Coverage);\n\nclass JSCoverage {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._enabled = false;\n    this._scriptURLs = new Map();\n    this._scriptSources = new Map();\n    this._eventListeners = [];\n    this._resetOnNavigation = false;\n  }\n\n  /**\n   * @param {!{resetOnNavigation?: boolean, reportAnonymousScripts?: boolean}} options\n   */\n  /* async */ start(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(!this._enabled, 'JSCoverage is already enabled');\n    const {\n      resetOnNavigation = true,\n      reportAnonymousScripts = false\n    } = options;\n    this._resetOnNavigation = resetOnNavigation;\n    this._reportAnonymousScripts = reportAnonymousScripts;\n    this._enabled = true;\n    this._scriptURLs.clear();\n    this._scriptSources.clear();\n    this._eventListeners = [\n      helper.addEventListener(this._client, 'Debugger.scriptParsed', this._onScriptParsed.bind(this)),\n      helper.addEventListener(this._client, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this)),\n    ];\n    (yield Promise.all([\n      this._client.send('Profiler.enable'),\n      this._client.send('Profiler.startPreciseCoverage', {callCount: false, detailed: true}),\n      this._client.send('Debugger.enable'),\n      this._client.send('Debugger.setSkipAllPauses', {skip: true})\n    ]));\n  });}\n\n  _onExecutionContextsCleared() {\n    if (!this._resetOnNavigation)\n      return;\n    this._scriptURLs.clear();\n    this._scriptSources.clear();\n  }\n\n  /**\n   * @param {!Protocol.Debugger.scriptParsedPayload} event\n   */\n  /* async */ _onScriptParsed(event) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    // Ignore puppeteer-injected scripts\n    if (event.url === EVALUATION_SCRIPT_URL)\n      return;\n    // Ignore other anonymous scripts unless the reportAnonymousScripts option is true.\n    if (!event.url && !this._reportAnonymousScripts)\n      return;\n    try {\n      const response = (yield this._client.send('Debugger.getScriptSource', {scriptId: event.scriptId}));\n      this._scriptURLs.set(event.scriptId, event.url);\n      this._scriptSources.set(event.scriptId, response.scriptSource);\n    } catch (e) {\n      // This might happen if the page has already navigated away.\n      debugError(e);\n    }\n  });}\n\n  /**\n   * @return {!Promise<!Array<!CoverageEntry>>}\n   */\n  /* async */ stop() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(this._enabled, 'JSCoverage is not enabled');\n    this._enabled = false;\n    const [profileResponse] = (yield Promise.all([\n      this._client.send('Profiler.takePreciseCoverage'),\n      this._client.send('Profiler.stopPreciseCoverage'),\n      this._client.send('Profiler.disable'),\n      this._client.send('Debugger.disable'),\n    ]));\n    helper.removeEventListeners(this._eventListeners);\n\n    const coverage = [];\n    for (const entry of profileResponse.result) {\n      let url = this._scriptURLs.get(entry.scriptId);\n      if (!url && this._reportAnonymousScripts)\n        url = 'debugger://VM' + entry.scriptId;\n      const text = this._scriptSources.get(entry.scriptId);\n      if (text === undefined || url === undefined)\n        continue;\n      const flattenRanges = [];\n      for (const func of entry.functions)\n        flattenRanges.push(...func.ranges);\n      const ranges = convertToDisjointRanges(flattenRanges);\n      coverage.push({url, ranges, text});\n    }\n    return coverage;\n  });}\n}\n\nclass CSSCoverage {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n    this._enabled = false;\n    this._stylesheetURLs = new Map();\n    this._stylesheetSources = new Map();\n    this._eventListeners = [];\n    this._resetOnNavigation = false;\n  }\n\n  /**\n   * @param {{resetOnNavigation?: boolean}=} options\n   */\n  /* async */ start(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(!this._enabled, 'CSSCoverage is already enabled');\n    const {resetOnNavigation = true} = options;\n    this._resetOnNavigation = resetOnNavigation;\n    this._enabled = true;\n    this._stylesheetURLs.clear();\n    this._stylesheetSources.clear();\n    this._eventListeners = [\n      helper.addEventListener(this._client, 'CSS.styleSheetAdded', this._onStyleSheet.bind(this)),\n      helper.addEventListener(this._client, 'Runtime.executionContextsCleared', this._onExecutionContextsCleared.bind(this)),\n    ];\n    (yield Promise.all([\n      this._client.send('DOM.enable'),\n      this._client.send('CSS.enable'),\n      this._client.send('CSS.startRuleUsageTracking'),\n    ]));\n  });}\n\n  _onExecutionContextsCleared() {\n    if (!this._resetOnNavigation)\n      return;\n    this._stylesheetURLs.clear();\n    this._stylesheetSources.clear();\n  }\n\n  /**\n   * @param {!Protocol.CSS.styleSheetAddedPayload} event\n   */\n  /* async */ _onStyleSheet(event) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const header = event.header;\n    // Ignore anonymous scripts\n    if (!header.sourceURL)\n      return;\n    try {\n      const response = (yield this._client.send('CSS.getStyleSheetText', {styleSheetId: header.styleSheetId}));\n      this._stylesheetURLs.set(header.styleSheetId, header.sourceURL);\n      this._stylesheetSources.set(header.styleSheetId, response.text);\n    } catch (e) {\n      // This might happen if the page has already navigated away.\n      debugError(e);\n    }\n  });}\n\n  /**\n   * @return {!Promise<!Array<!CoverageEntry>>}\n   */\n  /* async */ stop() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    assert(this._enabled, 'CSSCoverage is not enabled');\n    this._enabled = false;\n    const ruleTrackingResponse = (yield this._client.send('CSS.stopRuleUsageTracking'));\n    (yield Promise.all([\n      this._client.send('CSS.disable'),\n      this._client.send('DOM.disable'),\n    ]));\n    helper.removeEventListeners(this._eventListeners);\n\n    // aggregate by styleSheetId\n    const styleSheetIdToCoverage = new Map();\n    for (const entry of ruleTrackingResponse.ruleUsage) {\n      let ranges = styleSheetIdToCoverage.get(entry.styleSheetId);\n      if (!ranges) {\n        ranges = [];\n        styleSheetIdToCoverage.set(entry.styleSheetId, ranges);\n      }\n      ranges.push({\n        startOffset: entry.startOffset,\n        endOffset: entry.endOffset,\n        count: entry.used ? 1 : 0,\n      });\n    }\n\n    const coverage = [];\n    for (const styleSheetId of this._stylesheetURLs.keys()) {\n      const url = this._stylesheetURLs.get(styleSheetId);\n      const text = this._stylesheetSources.get(styleSheetId);\n      const ranges = convertToDisjointRanges(styleSheetIdToCoverage.get(styleSheetId) || []);\n      coverage.push({url, ranges, text});\n    }\n\n    return coverage;\n  });}\n}\n\n/**\n * @param {!Array<!{startOffset:number, endOffset:number, count:number}>} nestedRanges\n * @return {!Array<!{start:number, end:number}>}\n */\nfunction convertToDisjointRanges(nestedRanges) {\n  const points = [];\n  for (const range of nestedRanges) {\n    points.push({ offset: range.startOffset, type: 0, range });\n    points.push({ offset: range.endOffset, type: 1, range });\n  }\n  // Sort points to form a valid parenthesis sequence.\n  points.sort((a, b) => {\n    // Sort with increasing offsets.\n    if (a.offset !== b.offset)\n      return a.offset - b.offset;\n    // All \"end\" points should go before \"start\" points.\n    if (a.type !== b.type)\n      return b.type - a.type;\n    const aLength = a.range.endOffset - a.range.startOffset;\n    const bLength = b.range.endOffset - b.range.startOffset;\n    // For two \"start\" points, the one with longer range goes first.\n    if (a.type === 0)\n      return bLength - aLength;\n    // For two \"end\" points, the one with shorter range goes first.\n    return aLength - bLength;\n  });\n\n  const hitCountStack = [];\n  const results = [];\n  let lastOffset = 0;\n  // Run scanning line to intersect all ranges.\n  for (const point of points) {\n    if (hitCountStack.length && lastOffset < point.offset && hitCountStack[hitCountStack.length - 1] > 0) {\n      const lastResult = results.length ? results[results.length - 1] : null;\n      if (lastResult && lastResult.end === lastOffset)\n        lastResult.end = point.offset;\n      else\n        results.push({start: lastOffset, end: point.offset});\n    }\n    lastOffset = point.offset;\n    if (point.type === 0)\n      hitCountStack.push(point.range.count);\n    else\n      hitCountStack.pop();\n  }\n  // Filter out empty ranges.\n  return results.filter(range => range.end - range.start > 1);\n}\n\n","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst EventEmitter = require('events');\nconst {helper, debugError} = require('./helper');\nconst {ExecutionContext, JSHandle} = require('./ExecutionContext');\n\nclass Worker extends EventEmitter {\n  /**\n   * @param {Puppeteer.CDPSession} client\n   * @param {string} url\n   * @param {function(!string, !Array<!JSHandle>)} consoleAPICalled\n   * @param {function(!Protocol.Runtime.ExceptionDetails)} exceptionThrown\n   */\n  constructor(client, url, consoleAPICalled, exceptionThrown) {\n    super();\n    this._client = client;\n    this._url = url;\n    this._executionContextPromise = new Promise(x => this._executionContextCallback = x);\n    /** @type {function(!Protocol.Runtime.RemoteObject):!JSHandle} */\n    let jsHandleFactory;\n    this._client.once('Runtime.executionContextCreated', /* async */ event => {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n      jsHandleFactory = remoteObject => new JSHandle(executionContext, client, remoteObject);\n      const executionContext = new ExecutionContext(client, event.context, null);\n      this._executionContextCallback(executionContext);\n    });});\n    // This might fail if the target is closed before we recieve all execution contexts.\n    this._client.send('Runtime.enable', {}).catch(debugError);\n\n    this._client.on('Runtime.consoleAPICalled', event => consoleAPICalled(event.type, event.args.map(jsHandleFactory)));\n    this._client.on('Runtime.exceptionThrown', exception => exceptionThrown(exception.exceptionDetails));\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {!Promise<ExecutionContext>}\n   */\n  /* async */ executionContext() {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return this._executionContextPromise;\n  });}\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n  /* async */ evaluate(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return ((yield this._executionContextPromise)).evaluate(pageFunction, ...args);\n  });}\n\n  /**\n   * @param {function()|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!JSHandle>}\n   */\n  /* async */ evaluateHandle(pageFunction, ...args) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    return ((yield this._executionContextPromise)).evaluateHandle(pageFunction, ...args);\n  });}\n}\n\nmodule.exports = {Worker};\nhelper.tracePublicAPI(Worker);\n","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper} = require('./helper');\n\n/**\n * @typedef {Object} SerializedAXNode\n * @property {string} role\n *\n * @property {string=} name\n * @property {string|number=} value\n * @property {string=} description\n *\n * @property {string=} keyshortcuts\n * @property {string=} roledescription\n * @property {string=} valuetext\n *\n * @property {boolean=} disabled\n * @property {boolean=} expanded\n * @property {boolean=} focused\n * @property {boolean=} modal\n * @property {boolean=} multiline\n * @property {boolean=} multiselectable\n * @property {boolean=} readonly\n * @property {boolean=} required\n * @property {boolean=} selected\n *\n * @property {boolean|\"mixed\"=} checked\n * @property {boolean|\"mixed\"=} pressed\n *\n * @property {number=} level\n * @property {number=} valuemin\n * @property {number=} valuemax\n *\n * @property {string=} autocomplete\n * @property {string=} haspopup\n * @property {string=} invalid\n * @property {string=} orientation\n *\n * @property {Array<SerializedAXNode>=} children\n */\n\nclass Accessibility {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   */\n  constructor(client) {\n    this._client = client;\n  }\n\n  /**\n   * @param {{interestingOnly?: boolean}=} options\n   * @return {!Promise<!SerializedAXNode>}\n   */\n  /* async */ snapshot(options = {}) {return (fn => {\n  const gen = fn.call(this);\n  return new Promise((resolve, reject) => {\n    function step(key, arg) {\n      let info, value;\n      try {\n        info = gen[key](arg);\n        value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n      if (info.done) {\n        resolve(value);\n      } else {\n        return Promise.resolve(value).then(\n            value => {\n              step('next', value);\n            },\n            err => {\n              step('throw', err);\n            });\n      }\n    }\n    return step('next');\n  });\n})(function*(){\n    const {interestingOnly = true} = options;\n    const {nodes} = (yield this._client.send('Accessibility.getFullAXTree'));\n    const root = AXNode.createTree(nodes);\n    if (!interestingOnly)\n      return serializeTree(root)[0];\n\n    /** @type {!Set<!AXNode>} */\n    const interestingNodes = new Set();\n    collectInterestingNodes(interestingNodes, root, false);\n    return serializeTree(root, interestingNodes)[0];\n  });}\n}\n\n/**\n * @param {!Set<!AXNode>} collection\n * @param {!AXNode} node\n * @param {boolean} insideControl\n */\nfunction collectInterestingNodes(collection, node, insideControl) {\n  if (node.isInteresting(insideControl))\n    collection.add(node);\n  if (node.isLeafNode())\n    return;\n  insideControl = insideControl || node.isControl();\n  for (const child of node._children)\n    collectInterestingNodes(collection, child, insideControl);\n}\n\n/**\n * @param {!AXNode} node\n * @param {!Set<!AXNode>=} whitelistedNodes\n * @return {!Array<!SerializedAXNode>}\n */\nfunction serializeTree(node, whitelistedNodes) {\n  /** @type {!Array<!SerializedAXNode>} */\n  const children = [];\n  for (const child of node._children)\n    children.push(...serializeTree(child, whitelistedNodes));\n\n  if (whitelistedNodes && !whitelistedNodes.has(node))\n    return children;\n\n  const serializedNode = node.serialize();\n  if (children.length)\n    serializedNode.children = children;\n  return [serializedNode];\n}\n\n\nclass AXNode {\n  /**\n   * @param {!Protocol.Accessibility.AXNode} payload\n   */\n  constructor(payload) {\n    this._payload = payload;\n\n    /** @type {!Array<!AXNode>} */\n    this._children = [];\n\n    this._richlyEditable = false;\n    this._editable = false;\n    this._focusable = false;\n    this._expanded = false;\n    this._name = this._payload.name ? this._payload.name.value : '';\n    this._role = this._payload.role ? this._payload.role.value : 'Unknown';\n    this._cachedHasFocusableChild;\n\n    for (const property of this._payload.properties || []) {\n      if (property.name === 'editable') {\n        this._richlyEditable = property.value.value === 'richtext';\n        this._editable = true;\n      }\n      if (property.name === 'focusable')\n        this._focusable = property.value.value;\n      if (property.name === 'expanded')\n        this._expanded = property.value.value;\n    }\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _isPlainTextField() {\n    if (this._richlyEditable)\n      return false;\n    if (this._editable)\n      return true;\n    return this._role === 'textbox' || this._role === 'ComboBox' || this._role === 'searchbox';\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _isTextOnlyObject() {\n    const role = this._role;\n    return (role === 'LineBreak' || role === 'text' ||\n            role === 'InlineTextBox');\n  }\n\n  /**\n   * @return {boolean}\n   */\n  _hasFocusableChild() {\n    if (this._cachedHasFocusableChild === undefined) {\n      this._cachedHasFocusableChild = false;\n      for (const child of this._children) {\n        if (child._focusable || child._hasFocusableChild()) {\n          this._cachedHasFocusableChild = true;\n          break;\n        }\n      }\n    }\n    return this._cachedHasFocusableChild;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isLeafNode() {\n    if (!this._children.length)\n      return true;\n\n    // These types of objects may have children that we use as internal\n    // implementation details, but we want to expose them as leaves to platform\n    // accessibility APIs because screen readers might be confused if they find\n    // any children.\n    if (this._isPlainTextField() || this._isTextOnlyObject())\n      return true;\n\n    // Roles whose children are only presentational according to the ARIA and\n    // HTML5 Specs should be hidden from screen readers.\n    // (Note that whilst ARIA buttons can have only presentational children, HTML5\n    // buttons are allowed to have content.)\n    switch (this._role) {\n      case 'doc-cover':\n      case 'graphics-symbol':\n      case 'img':\n      case 'Meter':\n      case 'scrollbar':\n      case 'slider':\n      case 'separator':\n      case 'progressbar':\n        return true;\n      default:\n        break;\n    }\n\n    // Here and below: Android heuristics\n    if (this._hasFocusableChild())\n      return false;\n    if (this._focusable && this._name)\n      return true;\n    if (this._role === 'heading' && this._name)\n      return true;\n    return false;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isControl() {\n    switch (this._role) {\n      case 'button':\n      case 'checkbox':\n      case 'ColorWell':\n      case 'combobox':\n      case 'DisclosureTriangle':\n      case 'listbox':\n      case 'menu':\n      case 'menubar':\n      case 'menuitem':\n      case 'menuitemcheckbox':\n      case 'menuitemradio':\n      case 'radio':\n      case 'scrollbar':\n      case 'searchbox':\n      case 'slider':\n      case 'spinbutton':\n      case 'switch':\n      case 'tab':\n      case 'textbox':\n      case 'tree':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * @param {boolean} insideControl\n   * @return {boolean}\n   */\n  isInteresting(insideControl) {\n    const role = this._role;\n    if (role === 'Ignored')\n      return false;\n\n    if (this._focusable || this._richlyEditable)\n      return true;\n\n    // If it's not focusable but has a control role, then it's interesting.\n    if (this.isControl())\n      return true;\n\n    // A non focusable child of a control is not interesting\n    if (insideControl)\n      return false;\n\n    return this.isLeafNode() && !!this._name;\n  }\n\n  /**\n   * @return {!SerializedAXNode}\n   */\n  serialize() {\n    /** @type {!Map<string, number|string|boolean>} */\n    const properties = new Map();\n    for (const property of this._payload.properties || [])\n      properties.set(property.name.toLowerCase(), property.value.value);\n    if (this._payload.name)\n      properties.set('name', this._payload.name.value);\n    if (this._payload.value)\n      properties.set('value', this._payload.value.value);\n    if (this._payload.description)\n      properties.set('description', this._payload.description.value);\n\n    /** @type {SerializedAXNode} */\n    const node = {\n      role: this._role\n    };\n\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const userStringProperties = [\n      'name',\n      'value',\n      'description',\n      'keyshortcuts',\n      'roledescription',\n      'valuetext',\n    ];\n    for (const userStringProperty of userStringProperties) {\n      if (!properties.has(userStringProperty))\n        continue;\n      node[userStringProperty] = properties.get(userStringProperty);\n    }\n\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const booleanProperties = [\n      'disabled',\n      'expanded',\n      'focused',\n      'modal',\n      'multiline',\n      'multiselectable',\n      'readonly',\n      'required',\n      'selected',\n    ];\n    for (const booleanProperty of booleanProperties) {\n      // WebArea's treat focus differently than other nodes. They report whether their frame  has focus,\n      // not whether focus is specifically on the root node.\n      if (booleanProperty === 'focused' && this._role === 'WebArea')\n        continue;\n      const value = properties.get(booleanProperty);\n      if (!value)\n        continue;\n      node[booleanProperty] = value;\n    }\n\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const tristateProperties = [\n      'checked',\n      'pressed',\n    ];\n    for (const tristateProperty of tristateProperties) {\n      if (!properties.has(tristateProperty))\n        continue;\n      const value = properties.get(tristateProperty);\n      node[tristateProperty] = value === 'mixed' ? 'mixed' : value === 'true' ? true : false;\n    }\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const numericalProperties = [\n      'level',\n      'valuemax',\n      'valuemin',\n    ];\n    for (const numericalProperty of numericalProperties) {\n      if (!properties.has(numericalProperty))\n        continue;\n      node[numericalProperty] = properties.get(numericalProperty);\n    }\n    /** @type {!Array<keyof SerializedAXNode>} */\n    const tokenProperties = [\n      'autocomplete',\n      'haspopup',\n      'invalid',\n      'orientation',\n    ];\n    for (const tokenProperty of tokenProperties) {\n      const value = properties.get(tokenProperty);\n      if (!value || value === 'false')\n        continue;\n      node[tokenProperty] = value;\n    }\n    return node;\n  }\n\n  /**\n   * @param {!Array<!Protocol.Accessibility.AXNode>} payloads\n   * @return {!AXNode}\n   */\n  static createTree(payloads) {\n    /** @type {!Map<string, !AXNode>} */\n    const nodeById = new Map();\n    for (const payload of payloads)\n      nodeById.set(payload.nodeId, new AXNode(payload));\n    for (const node of nodeById.values()) {\n      for (const childId of node._payload.childIds || [])\n        node._children.push(nodeById.get(childId));\n    }\n    return nodeById.values().next().value;\n  }\n}\n\nmodule.exports = {Accessibility};\nhelper.tracePublicAPI(Accessibility);\n","class TaskQueue {\n  constructor() {\n    this._chain = Promise.resolve();\n  }\n\n  /**\n   * @param {function()} task\n   * @return {!Promise}\n   */\n  postTask(task) {\n    const result = this._chain.then(task);\n    this._chain = result.catch(() => {});\n    return result;\n  }\n}\n\nmodule.exports = {TaskQueue};","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst WebSocket = require('ws');\n\n/**\n * @implements {!Puppeteer.ConnectionTransport}\n */\nclass WebSocketTransport {\n  /**\n   * @param {string} url\n   * @return {!Promise<!WebSocketTransport>}\n   */\n  static create(url) {\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(url, [], { perMessageDeflate: false });\n      ws.addEventListener('open', () => resolve(new WebSocketTransport(ws)));\n      ws.addEventListener('error', reject);\n    });\n  }\n\n  /**\n   * @param {!WebSocket} ws\n   */\n  constructor(ws) {\n    this._ws = ws;\n    this._ws.addEventListener('message', event => {\n      if (this.onmessage)\n        this.onmessage.call(null, event.data);\n    });\n    this._ws.addEventListener('close', event => {\n      if (this.onclose)\n        this.onclose.call(null);\n    });\n    // Silently ignore all errors - we don't know what to do with them.\n    this._ws.addEventListener('error', () => {});\n    this.onmessage = null;\n    this.onclose = null;\n  }\n\n  /**\n   * @param {string} message\n   */\n  send(message) {\n    this._ws.send(message);\n  }\n\n  close() {\n    this._ws.close();\n  }\n}\n\nmodule.exports = WebSocketTransport;\n","/**\n * Copyright 2018 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {helper} = require('./helper');\n\n/**\n * @implements {!Puppeteer.ConnectionTransport}\n */\nclass PipeTransport {\n  /**\n   * @param {!NodeJS.WritableStream} pipeWrite\n   * @param {!NodeJS.ReadableStream} pipeRead\n   */\n  constructor(pipeWrite, pipeRead) {\n    this._pipeWrite = pipeWrite;\n    this._pendingMessage = '';\n    this._eventListeners = [\n      helper.addEventListener(pipeRead, 'data', buffer => this._dispatch(buffer)),\n      helper.addEventListener(pipeRead, 'close', () => {\n        if (this.onclose)\n          this.onclose.call(null);\n      })\n    ];\n    this.onmessage = null;\n    this.onclose = null;\n  }\n\n  /**\n   * @param {string} message\n   */\n  send(message) {\n    this._pipeWrite.write(message);\n    this._pipeWrite.write('\\0');\n  }\n\n  /**\n   * @param {!Buffer} buffer\n   */\n  _dispatch(buffer) {\n    let end = buffer.indexOf('\\0');\n    if (end === -1) {\n      this._pendingMessage += buffer.toString();\n      return;\n    }\n    const message = this._pendingMessage + buffer.toString(undefined, 0, end);\n    if (this.onmessage)\n      this.onmessage.call(null, message);\n\n    let start = end + 1;\n    end = buffer.indexOf('\\0', start);\n    while (end !== -1) {\n      if (this.onmessage)\n        this.onmessage.call(null, buffer.toString(undefined, start, end));\n      start = end + 1;\n      end = buffer.indexOf('\\0', start);\n    }\n    this._pendingMessage = buffer.toString(undefined, start);\n  }\n\n  close() {\n    this._pipeWrite = null;\n    helper.removeEventListeners(this._eventListeners);\n  }\n}\n\nmodule.exports = PipeTransport;\n","'use strict';\n\nconst MongoError = require('mongodb-core').MongoError;\nconst ReadPreference = require('mongodb-core').ReadPreference;\n\nvar shallowClone = function(obj) {\n  var copy = {};\n  for (var name in obj) copy[name] = obj[name];\n  return copy;\n};\n\n// Figure out the read preference\nvar translateReadPreference = function(options) {\n  var r = null;\n  if (options.readPreference) {\n    r = options.readPreference;\n  } else {\n    return options;\n  }\n\n  if (typeof r === 'string') {\n    options.readPreference = new ReadPreference(r);\n  } else if (r && !(r instanceof ReadPreference) && typeof r === 'object') {\n    const mode = r.mode || r.preference;\n    if (mode && typeof mode === 'string') {\n      options.readPreference = new ReadPreference(mode, r.tags, {\n        maxStalenessSeconds: r.maxStalenessSeconds\n      });\n    }\n  } else if (!(r instanceof ReadPreference)) {\n    throw new TypeError('Invalid read preference: ' + r);\n  }\n\n  return options;\n};\n\n// Set simple property\nvar getSingleProperty = function(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    enumerable: true,\n    get: function() {\n      return value;\n    }\n  });\n};\n\nvar formatSortValue = (exports.formatSortValue = function(sortDirection) {\n  var value = ('' + sortDirection).toLowerCase();\n\n  switch (value) {\n    case 'ascending':\n    case 'asc':\n    case '1':\n      return 1;\n    case 'descending':\n    case 'desc':\n    case '-1':\n      return -1;\n    default:\n      throw new Error(\n        'Illegal sort clause, must be of the form ' +\n          \"[['field1', '(ascending|descending)'], \" +\n          \"['field2', '(ascending|descending)']]\"\n      );\n  }\n});\n\nvar formattedOrderClause = (exports.formattedOrderClause = function(sortValue) {\n  var orderBy = {};\n  if (sortValue == null) return null;\n  if (Array.isArray(sortValue)) {\n    if (sortValue.length === 0) {\n      return null;\n    }\n\n    for (var i = 0; i < sortValue.length; i++) {\n      if (sortValue[i].constructor === String) {\n        orderBy[sortValue[i]] = 1;\n      } else {\n        orderBy[sortValue[i][0]] = formatSortValue(sortValue[i][1]);\n      }\n    }\n  } else if (sortValue != null && typeof sortValue === 'object') {\n    orderBy = sortValue;\n  } else if (typeof sortValue === 'string') {\n    orderBy[sortValue] = 1;\n  } else {\n    throw new Error(\n      'Illegal sort clause, must be of the form ' +\n        \"[['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\"\n    );\n  }\n\n  return orderBy;\n});\n\nvar checkCollectionName = function checkCollectionName(collectionName) {\n  if ('string' !== typeof collectionName) {\n    throw new MongoError('collection name must be a String');\n  }\n\n  if (!collectionName || collectionName.indexOf('..') !== -1) {\n    throw new MongoError('collection names cannot be empty');\n  }\n\n  if (\n    collectionName.indexOf('$') !== -1 &&\n    collectionName.match(/((^\\$cmd)|(oplog\\.\\$main))/) == null\n  ) {\n    throw new MongoError(\"collection names must not contain '$'\");\n  }\n\n  if (collectionName.match(/^\\.|\\.$/) != null) {\n    throw new MongoError(\"collection names must not start or end with '.'\");\n  }\n\n  // Validate that we are not passing 0x00 in the colletion name\n  if (collectionName.indexOf('\\x00') !== -1) {\n    throw new MongoError('collection names cannot contain a null character');\n  }\n};\n\nvar handleCallback = function(callback, err, value1, value2) {\n  try {\n    if (callback == null) return;\n\n    if (callback) {\n      return value2 ? callback(err, value1, value2) : callback(err, value1);\n    }\n  } catch (err) {\n    process.nextTick(function() {\n      throw err;\n    });\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Wrap a Mongo error document in an Error instance\n * @ignore\n * @api private\n */\nvar toError = function(error) {\n  if (error instanceof Error) return error;\n\n  var msg = error.err || error.errmsg || error.errMessage || error;\n  var e = MongoError.create({ message: msg, driver: true });\n\n  // Get all object keys\n  var keys = typeof error === 'object' ? Object.keys(error) : [];\n\n  for (var i = 0; i < keys.length; i++) {\n    try {\n      e[keys[i]] = error[keys[i]];\n    } catch (err) {\n      // continue\n    }\n  }\n\n  return e;\n};\n\n/**\n * @ignore\n */\nvar normalizeHintField = function normalizeHintField(hint) {\n  var finalHint = null;\n\n  if (typeof hint === 'string') {\n    finalHint = hint;\n  } else if (Array.isArray(hint)) {\n    finalHint = {};\n\n    hint.forEach(function(param) {\n      finalHint[param] = 1;\n    });\n  } else if (hint != null && typeof hint === 'object') {\n    finalHint = {};\n    for (var name in hint) {\n      finalHint[name] = hint[name];\n    }\n  }\n\n  return finalHint;\n};\n\n/**\n * Create index name based on field spec\n *\n * @ignore\n * @api private\n */\nvar parseIndexOptions = function(fieldOrSpec) {\n  var fieldHash = {};\n  var indexes = [];\n  var keys;\n\n  // Get all the fields accordingly\n  if ('string' === typeof fieldOrSpec) {\n    // 'type'\n    indexes.push(fieldOrSpec + '_' + 1);\n    fieldHash[fieldOrSpec] = 1;\n  } else if (Array.isArray(fieldOrSpec)) {\n    fieldOrSpec.forEach(function(f) {\n      if ('string' === typeof f) {\n        // [{location:'2d'}, 'type']\n        indexes.push(f + '_' + 1);\n        fieldHash[f] = 1;\n      } else if (Array.isArray(f)) {\n        // [['location', '2d'],['type', 1]]\n        indexes.push(f[0] + '_' + (f[1] || 1));\n        fieldHash[f[0]] = f[1] || 1;\n      } else if (isObject(f)) {\n        // [{location:'2d'}, {type:1}]\n        keys = Object.keys(f);\n        keys.forEach(function(k) {\n          indexes.push(k + '_' + f[k]);\n          fieldHash[k] = f[k];\n        });\n      } else {\n        // undefined (ignore)\n      }\n    });\n  } else if (isObject(fieldOrSpec)) {\n    // {location:'2d', type:1}\n    keys = Object.keys(fieldOrSpec);\n    keys.forEach(function(key) {\n      indexes.push(key + '_' + fieldOrSpec[key]);\n      fieldHash[key] = fieldOrSpec[key];\n    });\n  }\n\n  return {\n    name: indexes.join('_'),\n    keys: keys,\n    fieldHash: fieldHash\n  };\n};\n\nvar isObject = (exports.isObject = function(arg) {\n  return '[object Object]' === Object.prototype.toString.call(arg);\n});\n\nvar debugOptions = function(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n};\n\nvar decorateCommand = function(command, options, exclude) {\n  for (var name in options) {\n    if (exclude.indexOf(name) === -1) command[name] = options[name];\n  }\n\n  return command;\n};\n\nvar mergeOptions = function(target, source) {\n  for (var name in source) {\n    target[name] = source[name];\n  }\n\n  return target;\n};\n\n// Merge options with translation\nvar translateOptions = function(target, source) {\n  var translations = {\n    // SSL translation options\n    sslCA: 'ca',\n    sslCRL: 'crl',\n    sslValidate: 'rejectUnauthorized',\n    sslKey: 'key',\n    sslCert: 'cert',\n    sslPass: 'passphrase',\n    // SocketTimeout translation options\n    socketTimeoutMS: 'socketTimeout',\n    connectTimeoutMS: 'connectionTimeout',\n    // Replicaset options\n    replicaSet: 'setName',\n    rs_name: 'setName',\n    secondaryAcceptableLatencyMS: 'acceptableLatency',\n    connectWithNoPrimary: 'secondaryOnlyConnectionAllowed',\n    // Mongos options\n    acceptableLatencyMS: 'localThresholdMS'\n  };\n\n  for (var name in source) {\n    if (translations[name]) {\n      target[translations[name]] = source[name];\n    } else {\n      target[name] = source[name];\n    }\n  }\n\n  return target;\n};\n\nvar filterOptions = function(options, names) {\n  var filterOptions = {};\n\n  for (var name in options) {\n    if (names.indexOf(name) !== -1) filterOptions[name] = options[name];\n  }\n\n  // Filtered options\n  return filterOptions;\n};\n\n// Write concern keys\nvar writeConcernKeys = ['w', 'j', 'wtimeout', 'fsync'];\n\n// Merge the write concern options\nvar mergeOptionsAndWriteConcern = function(targetOptions, sourceOptions, keys, mergeWriteConcern) {\n  // Mix in any allowed options\n  for (var i = 0; i < keys.length; i++) {\n    if (!targetOptions[keys[i]] && sourceOptions[keys[i]] !== undefined) {\n      targetOptions[keys[i]] = sourceOptions[keys[i]];\n    }\n  }\n\n  // No merging of write concern\n  if (!mergeWriteConcern) return targetOptions;\n\n  // Found no write Concern options\n  var found = false;\n  for (i = 0; i < writeConcernKeys.length; i++) {\n    if (targetOptions[writeConcernKeys[i]]) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) {\n    for (i = 0; i < writeConcernKeys.length; i++) {\n      if (sourceOptions[writeConcernKeys[i]]) {\n        targetOptions[writeConcernKeys[i]] = sourceOptions[writeConcernKeys[i]];\n      }\n    }\n  }\n\n  return targetOptions;\n};\n\n/**\n * Executes the given operation with provided arguments.\n *\n * This method reduces large amounts of duplication in the entire codebase by providing\n * a single point for determining whether callbacks or promises should be used. Additionally\n * it allows for a single point of entry to provide features such as implicit sessions, which\n * are required by the Driver Sessions specification in the event that a ClientSession is\n * not provided\n *\n * @param {object} topology The topology to execute this operation on\n * @param {function} operation The operation to execute\n * @param {array} args Arguments to apply the provided operation\n * @param {object} [options] Options that modify the behavior of the method\n * @param {function]} [options.resultMutator] Allows for the result of the operation to be changed for custom return types\n */\nconst executeOperation = (topology, operation, args, options) => {\n  if (topology == null) {\n    throw new TypeError('This method requires a valid topology instance');\n  }\n\n  if (!Array.isArray(args)) {\n    throw new TypeError('This method requires an array of arguments to apply');\n  }\n\n  options = options || {};\n  const Promise = topology.s.promiseLibrary;\n  let resultMutator = options.resultMutator;\n  let callback = args[args.length - 1];\n\n  // The driver sessions spec mandates that we implicitly create sessions for operations\n  // that are not explicitly provided with a session.\n  let session, opOptions, owner;\n  if (!options.skipSessions && topology.hasSessionSupport()) {\n    opOptions = args[args.length - 2];\n    if (opOptions == null || opOptions.session == null) {\n      owner = Symbol();\n      session = topology.startSession({ owner });\n      const optionsIndex = args.length - 2;\n      args[optionsIndex] = Object.assign({}, args[optionsIndex], { session: session });\n    } else if (opOptions.session && opOptions.session.hasEnded) {\n      throw new MongoError('Use of expired sessions is not permitted');\n    }\n  }\n\n  const makeExecuteCallback = (resolve, reject) =>\n    function executeCallback(err, result) {\n      if (session && session.owner === owner && !options.returnsCursor) {\n        session.endSession(() => {\n          delete opOptions.session;\n          if (err) return reject(err);\n          if (resultMutator) return resolve(resultMutator(result));\n          resolve(result);\n        });\n      } else {\n        if (err) return reject(err);\n        if (resultMutator) return resolve(resultMutator(result));\n        resolve(result);\n      }\n    };\n\n  // Execute using callback\n  if (typeof callback === 'function') {\n    callback = args.pop();\n    const handler = makeExecuteCallback(\n      result => callback(null, result),\n      err => callback(err, null)\n    );\n    args.push(handler);\n\n    try {\n      return operation.apply(null, args);\n    } catch (e) {\n      handler(e);\n      throw e;\n    }\n  }\n\n  // Return a Promise\n  if (args[args.length - 1] != null) {\n    throw new TypeError('final argument to `executeOperation` must be a callback');\n  }\n\n  return new Promise(function(resolve, reject) {\n    const handler = makeExecuteCallback(resolve, reject);\n    args[args.length - 1] = handler;\n\n    try {\n      return operation.apply(null, args);\n    } catch (e) {\n      handler(e);\n    }\n  });\n};\n\n/**\n * Applies retryWrites: true to a command if retryWrites is set on the command's database.\n *\n * @param {object} target The target command to which we will apply retryWrites.\n * @param {object} db The database from which we can inherit a retryWrites value.\n */\nfunction applyRetryableWrites(target, db) {\n  if (db && db.s.options.retryWrites) {\n    target.retryWrites = true;\n  }\n\n  return target;\n}\n\n/**\n * Applies a write concern to a command based on well defined inheritance rules, optionally\n * detecting support for the write concern in the first place.\n *\n * @param {Object} target the target command we will be applying the write concern to\n * @param {Object} sources sources where we can inherit default write concerns from\n * @param {Object} [options] optional settings passed into a command for write concern overrides\n * @returns {Object} the (now) decorated target\n */\nfunction applyWriteConcern(target, sources, options) {\n  options = options || {};\n  const db = sources.db;\n  const coll = sources.collection;\n\n  if (options.session && options.session.inTransaction()) {\n    // writeConcern is not allowed within a multi-statement transaction\n    if (target.writeConcern) {\n      delete target.writeConcern;\n    }\n\n    return target;\n  }\n\n  if (options.w != null || options.j != null || options.fsync != null) {\n    const writeConcern = {};\n    if (options.w != null) writeConcern.w = options.w;\n    if (options.wtimeout != null) writeConcern.wtimeout = options.wtimeout;\n    if (options.j != null) writeConcern.j = options.j;\n    if (options.fsync != null) writeConcern.fsync = options.fsync;\n    return Object.assign(target, { writeConcern });\n  }\n\n  if (\n    coll &&\n    (coll.writeConcern.w != null || coll.writeConcern.j != null || coll.writeConcern.fsync != null)\n  ) {\n    return Object.assign(target, { writeConcern: Object.assign({}, coll.writeConcern) });\n  }\n\n  if (\n    db &&\n    (db.writeConcern.w != null || db.writeConcern.j != null || db.writeConcern.fsync != null)\n  ) {\n    return Object.assign(target, { writeConcern: Object.assign({}, db.writeConcern) });\n  }\n\n  return target;\n}\n\n/**\n * Resolves a read preference based on well-defined inheritance rules. This method will not only\n * determine the read preference (if there is one), but will also ensure the returned value is a\n * properly constructed instance of `ReadPreference`.\n *\n * @param {Object} options The options passed into the method, potentially containing a read preference\n * @param {Object} sources Sources from which we can inherit a read preference\n * @returns {(ReadPreference|null)} The resolved read preference\n */\nfunction resolveReadPreference(options, sources) {\n  options = options || {};\n  sources = sources || {};\n\n  const db = sources.db;\n  const coll = sources.collection;\n  const defaultReadPreference = sources.default;\n  const session = options.session;\n\n  let readPreference;\n  if (options.readPreference) {\n    readPreference = options.readPreference;\n  } else if (session && session.inTransaction() && session.transaction.options.readPreference) {\n    // The transaction’s read preference MUST override all other user configurable read preferences.\n    readPreference = session.transaction.options.readPreference;\n  } else {\n    if (coll && coll.s.readPreference) {\n      readPreference = coll.s.readPreference;\n    } else if (db && db.s.readPreference) {\n      readPreference = db.s.readPreference;\n    } else if (defaultReadPreference) {\n      readPreference = defaultReadPreference;\n    }\n  }\n\n  // do we even have a read preference?\n  if (readPreference == null) {\n    return null;\n  }\n\n  // now attempt to convert the read preference if necessary\n  if (typeof readPreference === 'string') {\n    readPreference = new ReadPreference(readPreference);\n  } else if (\n    readPreference &&\n    !(readPreference instanceof ReadPreference) &&\n    typeof readPreference === 'object'\n  ) {\n    const mode = readPreference.mode || readPreference.preference;\n    if (mode && typeof mode === 'string') {\n      readPreference = new ReadPreference(mode, readPreference.tags, {\n        maxStalenessSeconds: readPreference.maxStalenessSeconds\n      });\n    }\n  } else if (!(readPreference instanceof ReadPreference)) {\n    throw new TypeError('Invalid read preference: ' + readPreference);\n  }\n\n  return readPreference;\n}\n\n/**\n * Checks if a given value is a Promise\n *\n * @param {*} maybePromise\n * @return true if the provided value is a Promise\n */\nfunction isPromiseLike(maybePromise) {\n  return maybePromise && typeof maybePromise.then === 'function';\n}\n\n/**\n * Applies collation to a given command.\n *\n * @param {object} [command] the command on which to apply collation\n * @param {(Cursor|Collection)} [target] target of command\n * @param {object} [options] options containing collation settings\n */\nfunction decorateWithCollation(command, target, options) {\n  const topology = target.s && target.s.topology;\n\n  if (!topology) {\n    throw new TypeError('parameter \"target\" is missing a topology');\n  }\n\n  const capabilities = target.s.topology.capabilities();\n  if (options.collation && typeof options.collation === 'object') {\n    if (capabilities && capabilities.commandsTakeCollation) {\n      command.collation = options.collation;\n    } else {\n      throw new MongoError(`server ${topology.s.coreTopology.name} does not support collation`);\n    }\n  }\n}\n\n/**\n * Applies a read concern to a given command.\n *\n * @param {object} command the command on which to apply the read concern\n * @param {Collection} coll the parent collection of the operation calling this method\n */\nfunction decorateWithReadConcern(command, coll) {\n  let readConcern = Object.assign({}, command.readConcern || {});\n  if (coll.s.readConcern) {\n    Object.assign(readConcern, coll.s.readConcern);\n  }\n\n  if (Object.keys(readConcern).length > 0) {\n    Object.assign(command, { readConcern: readConcern });\n  }\n}\n\nconst emitProcessWarning = msg => process.emitWarning(msg, 'DeprecationWarning');\nconst emitConsoleWarning = msg => console.error(msg);\nconst emitDeprecationWarning = process.emitWarning ? emitProcessWarning : emitConsoleWarning;\n\n/**\n * Default message handler for generating deprecation warnings.\n *\n * @param {string} name function name\n * @param {string} option option name\n * @return {string} warning message\n * @ignore\n * @api private\n */\nfunction defaultMsgHandler(name, option) {\n  return `${name} option [${option}] is deprecated and will be removed in a later version.`;\n}\n\n/**\n * Deprecates a given function's options.\n *\n * @param {object} config configuration for deprecation\n * @param {string} config.name function name\n * @param {Array} config.deprecatedOptions options to deprecate\n * @param {number} config.optionsIndex index of options object in function arguments array\n * @param {function} [config.msgHandler] optional custom message handler to generate warnings\n * @param {function} fn the target function of deprecation\n * @return {function} modified function that warns once per deprecated option, and executes original function\n * @ignore\n * @api private\n */\nfunction deprecateOptions(config, fn) {\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  const msgHandler = config.msgHandler ? config.msgHandler : defaultMsgHandler;\n\n  const optionsWarned = new Set();\n  function deprecated() {\n    const options = arguments[config.optionsIndex];\n\n    // ensure options is a valid, non-empty object, otherwise short-circuit\n    if (!isObject(options) || Object.keys(options).length === 0) {\n      return fn.apply(this, arguments);\n    }\n\n    config.deprecatedOptions.forEach(deprecatedOption => {\n      if (options.hasOwnProperty(deprecatedOption) && !optionsWarned.has(deprecatedOption)) {\n        optionsWarned.add(deprecatedOption);\n        const msg = msgHandler(config.name, deprecatedOption);\n        emitDeprecationWarning(msg);\n        if (this && this.getLogger) {\n          const logger = this.getLogger();\n          if (logger) {\n            logger.warn(msg);\n          }\n        }\n      }\n    });\n\n    return fn.apply(this, arguments);\n  }\n\n  // These lines copied from https://github.com/nodejs/node/blob/25e5ae41688676a5fd29b2e2e7602168eee4ceb5/lib/internal/util.js#L73-L80\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\n  Object.setPrototypeOf(deprecated, fn);\n  if (fn.prototype) {\n    // Setting this (rather than using Object.setPrototype, as above) ensures\n    // that calling the unwrapped constructor gives an instanceof the wrapped\n    // constructor.\n    deprecated.prototype = fn.prototype;\n  }\n\n  return deprecated;\n}\n\nmodule.exports = {\n  filterOptions,\n  mergeOptions,\n  translateOptions,\n  shallowClone,\n  getSingleProperty,\n  checkCollectionName,\n  toError,\n  formattedOrderClause,\n  parseIndexOptions,\n  normalizeHintField,\n  handleCallback,\n  decorateCommand,\n  isObject,\n  debugOptions,\n  MAX_JS_INT: Number.MAX_SAFE_INTEGER + 1,\n  mergeOptionsAndWriteConcern,\n  translateReadPreference,\n  executeOperation,\n  applyRetryableWrites,\n  applyWriteConcern,\n  resolveReadPreference,\n  isPromiseLike,\n  decorateWithCollation,\n  decorateWithReadConcern,\n  deprecateOptions\n};\n","'use strict';\n\nvar BSON = require('bson');\nvar require_optional = require('require_optional');\nconst EJSON = require('./lib/utils').retrieveEJSON();\n\ntry {\n  // Attempt to grab the native BSON parser\n  var BSONNative = require_optional('bson-ext');\n  // If we got the native parser, use it instead of the\n  // Javascript one\n  if (BSONNative) {\n    BSON = BSONNative;\n  }\n} catch (err) {} // eslint-disable-line\n\nmodule.exports = {\n  // Errors\n  MongoError: require('./lib/error').MongoError,\n  MongoNetworkError: require('./lib/error').MongoNetworkError,\n  MongoParseError: require('./lib/error').MongoParseError,\n  MongoTimeoutError: require('./lib/error').MongoTimeoutError,\n  MongoWriteConcernError: require('./lib/error').MongoWriteConcernError,\n  mongoErrorContextSymbol: require('./lib/error').mongoErrorContextSymbol,\n  // Core\n  Connection: require('./lib/connection/connection'),\n  Server: require('./lib/topologies/server'),\n  ReplSet: require('./lib/topologies/replset'),\n  Mongos: require('./lib/topologies/mongos'),\n  Logger: require('./lib/connection/logger'),\n  Cursor: require('./lib/cursor'),\n  ReadPreference: require('./lib/topologies/read_preference'),\n  Sessions: require('./lib/sessions'),\n  BSON: BSON,\n  EJSON: EJSON,\n  // Raw operations\n  Query: require('./lib/connection/commands').Query,\n  // Auth mechanisms\n  defaultAuthProviders: require('./lib/auth/defaultAuthProviders').defaultAuthProviders,\n  MongoCR: require('./lib/auth/mongocr'),\n  X509: require('./lib/auth/x509'),\n  Plain: require('./lib/auth/plain'),\n  GSSAPI: require('./lib/auth/gssapi'),\n  ScramSHA1: require('./lib/auth/scram').ScramSHA1,\n  ScramSHA256: require('./lib/auth/scram').ScramSHA256,\n  // Utilities\n  parseConnectionString: require('./lib/uri_parser')\n};\n","'use strict';\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst applyRetryableWrites = require('../utils').applyRetryableWrites;\nconst checkCollectionName = require('../utils').checkCollectionName;\nconst Code = require('mongodb-core').BSON.Code;\nconst createIndexDb = require('./db_ops').createIndex;\nconst decorateCommand = require('../utils').decorateCommand;\nconst decorateWithCollation = require('../utils').decorateWithCollation;\nconst decorateWithReadConcern = require('../utils').decorateWithReadConcern;\nconst ensureIndexDb = require('./db_ops').ensureIndex;\nconst evaluate = require('./db_ops').evaluate;\nconst executeCommand = require('./db_ops').executeCommand;\nconst executeDbAdminCommand = require('./db_ops').executeDbAdminCommand;\nconst formattedOrderClause = require('../utils').formattedOrderClause;\nconst resolveReadPreference = require('../utils').resolveReadPreference;\nconst handleCallback = require('../utils').handleCallback;\nconst indexInformationDb = require('./db_ops').indexInformation;\nconst isObject = require('../utils').isObject;\nconst Long = require('mongodb-core').BSON.Long;\nconst MongoError = require('mongodb-core').MongoError;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst toError = require('../utils').toError;\n\n/**\n * Group function helper\n * @ignore\n */\n// var groupFunction = function () {\n//   var c = db[ns].find(condition);\n//   var map = new Map();\n//   var reduce_function = reduce;\n//\n//   while (c.hasNext()) {\n//     var obj = c.next();\n//     var key = {};\n//\n//     for (var i = 0, len = keys.length; i < len; ++i) {\n//       var k = keys[i];\n//       key[k] = obj[k];\n//     }\n//\n//     var aggObj = map.get(key);\n//\n//     if (aggObj == null) {\n//       var newObj = Object.extend({}, key);\n//       aggObj = Object.extend(newObj, initial);\n//       map.put(key, aggObj);\n//     }\n//\n//     reduce_function(obj, aggObj);\n//   }\n//\n//   return { \"result\": map.values() };\n// }.toString();\nconst groupFunction =\n  'function () {\\nvar c = db[ns].find(condition);\\nvar map = new Map();\\nvar reduce_function = reduce;\\n\\nwhile (c.hasNext()) {\\nvar obj = c.next();\\nvar key = {};\\n\\nfor (var i = 0, len = keys.length; i < len; ++i) {\\nvar k = keys[i];\\nkey[k] = obj[k];\\n}\\n\\nvar aggObj = map.get(key);\\n\\nif (aggObj == null) {\\nvar newObj = Object.extend({}, key);\\naggObj = Object.extend(newObj, initial);\\nmap.put(key, aggObj);\\n}\\n\\nreduce_function(obj, aggObj);\\n}\\n\\nreturn { \"result\": map.values() };\\n}';\n\n/**\n * Perform a bulkWrite operation. See Collection.prototype.bulkWrite for more information.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object[]} operations Bulk operations to perform.\n * @param {object} [options] Optional settings. See Collection.prototype.bulkWrite for a list of options.\n * @param {Collection~bulkWriteOpCallback} [callback] The command result callback\n */\nfunction bulkWrite(coll, operations, options, callback) {\n  // Add ignoreUndfined\n  if (coll.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = coll.s.options.ignoreUndefined;\n  }\n\n  // Create the bulk operation\n  const bulk =\n    options.ordered === true || options.ordered == null\n      ? coll.initializeOrderedBulkOp(options)\n      : coll.initializeUnorderedBulkOp(options);\n\n  // Do we have a collation\n  let collation = false;\n\n  // for each op go through and add to the bulk\n  try {\n    for (let i = 0; i < operations.length; i++) {\n      // Get the operation type\n      const key = Object.keys(operations[i])[0];\n      // Check if we have a collation\n      if (operations[i][key].collation) {\n        collation = true;\n      }\n\n      // Pass to the raw bulk\n      bulk.raw(operations[i]);\n    }\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  const writeCon = finalOptions.writeConcern ? finalOptions.writeConcern : {};\n  const capabilities = coll.s.topology.capabilities();\n\n  // Did the user pass in a collation, check if our write server supports it\n  if (collation && capabilities && !capabilities.commandsTakeCollation) {\n    return callback(new MongoError('server/primary/mongos does not support collation'));\n  }\n\n  // Execute the bulk\n  bulk.execute(writeCon, finalOptions, (err, r) => {\n    // We have connection level error\n    if (!r && err) {\n      return callback(err, null);\n    }\n\n    r.insertedCount = r.nInserted;\n    r.matchedCount = r.nMatched;\n    r.modifiedCount = r.nModified || 0;\n    r.deletedCount = r.nRemoved;\n    r.upsertedCount = r.getUpsertedIds().length;\n    r.upsertedIds = {};\n    r.insertedIds = {};\n\n    // Update the n\n    r.n = r.insertedCount;\n\n    // Inserted documents\n    const inserted = r.getInsertedIds();\n    // Map inserted ids\n    for (let i = 0; i < inserted.length; i++) {\n      r.insertedIds[inserted[i].index] = inserted[i]._id;\n    }\n\n    // Upserted documents\n    const upserted = r.getUpsertedIds();\n    // Map upserted ids\n    for (let i = 0; i < upserted.length; i++) {\n      r.upsertedIds[upserted[i].index] = upserted[i]._id;\n    }\n\n    // Return the results\n    callback(null, r);\n  });\n}\n\n// Check the update operation to ensure it has atomic operators.\nfunction checkForAtomicOperators(update) {\n  const keys = Object.keys(update);\n\n  // same errors as the server would give for update doc lacking atomic operators\n  if (keys.length === 0) {\n    return toError('The update operation document must contain at least one atomic operator.');\n  }\n\n  if (keys[0][0] !== '$') {\n    return toError('the update operation document must contain atomic operators.');\n  }\n}\n\n/**\n * Count the number of documents in the collection that match the query.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} query The query for the count.\n * @param {object} [options] Optional settings. See Collection.prototype.count for a list of options.\n * @param {Collection~countCallback} [callback] The command result callback\n */\nfunction count(coll, query, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n  options.collectionName = coll.s.name;\n\n  options.readPreference = resolveReadPreference(options, {\n    db: coll.s.db,\n    collection: coll\n  });\n\n  let cmd;\n  try {\n    cmd = buildCountCommand(coll, query, options);\n  } catch (err) {\n    return callback(err);\n  }\n\n  executeCommand(coll.s.db, cmd, options, (err, result) => {\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.n);\n  });\n}\n\nfunction countDocuments(coll, query, options, callback) {\n  const skip = options.skip;\n  const limit = options.limit;\n  options = Object.assign({}, options);\n\n  const pipeline = [{ $match: query }];\n\n  // Add skip and limit if defined\n  if (typeof skip === 'number') {\n    pipeline.push({ $skip: skip });\n  }\n\n  if (typeof limit === 'number') {\n    pipeline.push({ $limit: limit });\n  }\n\n  pipeline.push({ $group: { _id: null, n: { $sum: 1 } } });\n\n  delete options.limit;\n  delete options.skip;\n\n  coll.aggregate(pipeline, options).toArray((err, docs) => {\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, docs.length ? docs[0].n : 0);\n  });\n}\n\n/**\n * Build the count command.\n *\n * @method\n * @param {collectionOrCursor} an instance of a collection or cursor\n * @param {object} query The query for the count.\n * @param {object} [options] Optional settings. See Collection.prototype.count and Cursor.prototype.count for a list of options.\n */\nfunction buildCountCommand(collectionOrCursor, query, options) {\n  const skip = options.skip;\n  const limit = options.limit;\n  let hint = options.hint;\n  const maxTimeMS = options.maxTimeMS;\n  query = query || {};\n\n  // Final query\n  const cmd = {\n    count: options.collectionName,\n    query: query\n  };\n\n  // check if collectionOrCursor is a cursor by using cursor.s.numberOfRetries\n  if (collectionOrCursor.s.numberOfRetries) {\n    if (collectionOrCursor.s.options.hint) {\n      hint = collectionOrCursor.s.options.hint;\n    } else if (collectionOrCursor.s.cmd.hint) {\n      hint = collectionOrCursor.s.cmd.hint;\n    }\n    decorateWithCollation(cmd, collectionOrCursor, collectionOrCursor.s.cmd);\n  } else {\n    decorateWithCollation(cmd, collectionOrCursor, options);\n  }\n\n  // Add limit, skip and maxTimeMS if defined\n  if (typeof skip === 'number') cmd.skip = skip;\n  if (typeof limit === 'number') cmd.limit = limit;\n  if (typeof maxTimeMS === 'number') cmd.maxTimeMS = maxTimeMS;\n  if (hint) cmd.hint = hint;\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(cmd, collectionOrCursor);\n\n  return cmd;\n}\n\n/**\n * Create an index on the db and collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Collection.prototype.createIndex for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction createIndex(coll, fieldOrSpec, options, callback) {\n  createIndexDb(coll.s.db, coll.s.name, fieldOrSpec, options, callback);\n}\n\n/**\n * Create multiple indexes in the collection. This method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {array} indexSpecs An array of index specifications to be created\n * @param {Object} [options] Optional settings. See Collection.prototype.createIndexes for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction createIndexes(coll, indexSpecs, options, callback) {\n  const capabilities = coll.s.topology.capabilities();\n\n  // Ensure we generate the correct name if the parameter is not set\n  for (let i = 0; i < indexSpecs.length; i++) {\n    if (indexSpecs[i].name == null) {\n      const keys = [];\n\n      // Did the user pass in a collation, check if our write server supports it\n      if (indexSpecs[i].collation && capabilities && !capabilities.commandsTakeCollation) {\n        return callback(new MongoError('server/primary/mongos does not support collation'));\n      }\n\n      for (let name in indexSpecs[i].key) {\n        keys.push(`${name}_${indexSpecs[i].key[name]}`);\n      }\n\n      // Set the name\n      indexSpecs[i].name = keys.join('_');\n    }\n  }\n\n  options = Object.assign({}, options, { readPreference: ReadPreference.PRIMARY });\n\n  // Execute the index\n  executeCommand(\n    coll.s.db,\n    {\n      createIndexes: coll.s.name,\n      indexes: indexSpecs\n    },\n    options,\n    callback\n  );\n}\n\nfunction deleteCallback(err, r, callback) {\n  if (callback == null) return;\n  if (err && callback) return callback(err);\n  if (r == null) return callback(null, { result: { ok: 1 } });\n  r.deletedCount = r.result.n;\n  if (callback) callback(null, r);\n}\n\n/**\n * Delete multiple documents from the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} filter The Filter used to select the documents to remove\n * @param {object} [options] Optional settings. See Collection.prototype.deleteMany for a list of options.\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n */\nfunction deleteMany(coll, filter, options, callback) {\n  options.single = false;\n\n  removeDocuments(coll, filter, options, (err, r) => deleteCallback(err, r, callback));\n}\n\n/**\n * Delete a single document from the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options] Optional settings. See Collection.prototype.deleteOne for a list of options.\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n */\nfunction deleteOne(coll, filter, options, callback) {\n  options.single = true;\n  removeDocuments(coll, filter, options, (err, r) => deleteCallback(err, r, callback));\n}\n\n/**\n * Return a list of distinct values for the given key across a collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {string} key Field of the document to find distinct values for.\n * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @param {object} [options] Optional settings. See Collection.prototype.distinct for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction distinct(coll, key, query, options, callback) {\n  // maxTimeMS option\n  const maxTimeMS = options.maxTimeMS;\n\n  // Distinct command\n  const cmd = {\n    distinct: coll.s.name,\n    key: key,\n    query: query\n  };\n\n  options = Object.assign({}, options);\n  // Ensure we have the right read preference inheritance\n  options.readPreference = resolveReadPreference(options, { db: coll.s.db, collection: coll });\n\n  // Add maxTimeMS if defined\n  if (typeof maxTimeMS === 'number') cmd.maxTimeMS = maxTimeMS;\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(cmd, coll, options);\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(cmd, coll, options);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Execute the command\n  executeCommand(coll.s.db, cmd, options, (err, result) => {\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.values);\n  });\n}\n\n/**\n * Drop an index from this collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {string} indexName Name of the index to drop.\n * @param {object} [options] Optional settings. See Collection.prototype.dropIndex for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction dropIndex(coll, indexName, options, callback) {\n  // Delete index command\n  const cmd = { dropIndexes: coll.s.name, index: indexName };\n\n  // Decorate command with writeConcern if supported\n  applyWriteConcern(cmd, { db: coll.s.db, collection: coll }, options);\n\n  // Execute command\n  executeCommand(coll.s.db, cmd, options, (err, result) => {\n    if (typeof callback !== 'function') return;\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Drop all indexes from this collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {Object} [options] Optional settings. See Collection.prototype.dropIndexes for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction dropIndexes(coll, options, callback) {\n  dropIndex(coll, '*', options, err => {\n    if (err) return handleCallback(callback, err, false);\n    handleCallback(callback, null, true);\n  });\n}\n\n/**\n * Ensure that an index exists. If the index does not exist, this function creates it.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Collection.prototype.ensureIndex for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction ensureIndex(coll, fieldOrSpec, options, callback) {\n  ensureIndexDb(coll.s.db, coll.s.name, fieldOrSpec, options, callback);\n}\n\n/**\n * Find and update a document.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options] Optional settings. See Collection.prototype.findAndModify for a list of options.\n * @param {Collection~findAndModifyCallback} [callback] The command result callback\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead\n */\nfunction findAndModify(coll, query, sort, doc, options, callback) {\n  // Create findAndModify command object\n  const queryObject = {\n    findAndModify: coll.s.name,\n    query: query\n  };\n\n  sort = formattedOrderClause(sort);\n  if (sort) {\n    queryObject.sort = sort;\n  }\n\n  queryObject.new = options.new ? true : false;\n  queryObject.remove = options.remove ? true : false;\n  queryObject.upsert = options.upsert ? true : false;\n\n  const projection = options.projection || options.fields;\n\n  if (projection) {\n    queryObject.fields = projection;\n  }\n\n  if (options.arrayFilters) {\n    queryObject.arrayFilters = options.arrayFilters;\n    delete options.arrayFilters;\n  }\n\n  if (doc && !options.remove) {\n    queryObject.update = doc;\n  }\n\n  if (options.maxTimeMS) queryObject.maxTimeMS = options.maxTimeMS;\n\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  options.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  // No check on the documents\n  options.checkKeys = false;\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // Decorate the findAndModify command with the write Concern\n  if (finalOptions.writeConcern) {\n    queryObject.writeConcern = finalOptions.writeConcern;\n  }\n\n  // Have we specified bypassDocumentValidation\n  if (finalOptions.bypassDocumentValidation === true) {\n    queryObject.bypassDocumentValidation = finalOptions.bypassDocumentValidation;\n  }\n\n  finalOptions.readPreference = ReadPreference.primary;\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(queryObject, coll, finalOptions);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Execute the command\n  executeCommand(coll.s.db, queryObject, finalOptions, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n\n    return handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Find and remove a document.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} [options] Optional settings. See Collection.prototype.findAndRemove for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @deprecated use findOneAndDelete instead\n */\nfunction findAndRemove(coll, query, sort, options, callback) {\n  // Add the remove option\n  options.remove = true;\n  // Execute the callback\n  findAndModify(coll, query, sort, null, options, callback);\n}\n\n/**\n * Fetch the first document that matches the query.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} query Query for find Operation\n * @param {object} [options] Optional settings. See Collection.prototype.findOne for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction findOne(coll, query, options, callback) {\n  const cursor = coll\n    .find(query, options)\n    .limit(-1)\n    .batchSize(1);\n\n  // Return the item\n  cursor.next((err, item) => {\n    if (err != null) return handleCallback(callback, toError(err), null);\n    handleCallback(callback, null, item);\n  });\n}\n\n/**\n * Find a document and delete it in one atomic operation. This requires a write lock for the duration of the operation.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} filter Document selection filter.\n * @param {object} [options] Optional settings. See Collection.prototype.findOneAndDelete for a list of options.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n */\nfunction findOneAndDelete(coll, filter, options, callback) {\n  // Final options\n  const finalOptions = Object.assign({}, options);\n  finalOptions.fields = options.projection;\n  finalOptions.remove = true;\n  // Execute find and Modify\n  findAndModify(coll, filter, options.sort, null, finalOptions, callback);\n}\n\n/**\n * Find a document and replace it in one atomic operation. This requires a write lock for the duration of the operation.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} filter Document selection filter.\n * @param {object} replacement Document replacing the matching document.\n * @param {object} [options] Optional settings. See Collection.prototype.findOneAndReplace for a list of options.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n */\nfunction findOneAndReplace(coll, filter, replacement, options, callback) {\n  // Final options\n  const finalOptions = Object.assign({}, options);\n  finalOptions.fields = options.projection;\n  finalOptions.update = true;\n  finalOptions.new = options.returnOriginal !== void 0 ? !options.returnOriginal : false;\n  finalOptions.upsert = options.upsert !== void 0 ? !!options.upsert : false;\n\n  // Execute findAndModify\n  findAndModify(coll, filter, options.sort, replacement, finalOptions, callback);\n}\n\n/**\n * Find a document and update it in one atomic operation. This requires a write lock for the duration of the operation.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} filter Document selection filter.\n * @param {object} update Update operations to be performed on the document\n * @param {object} [options] Optional settings. See Collection.prototype.findOneAndUpdate for a list of options.\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n */\nfunction findOneAndUpdate(coll, filter, update, options, callback) {\n  // Final options\n  const finalOptions = Object.assign({}, options);\n  finalOptions.fields = options.projection;\n  finalOptions.update = true;\n  finalOptions.new = typeof options.returnOriginal === 'boolean' ? !options.returnOriginal : false;\n  finalOptions.upsert = typeof options.upsert === 'boolean' ? options.upsert : false;\n\n  // Execute findAndModify\n  findAndModify(coll, filter, options.sort, update, finalOptions, callback);\n}\n\n/**\n * Execute a geo search using a geo haystack index on a collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options] Optional settings. See Collection.prototype.geoHaystackSearch for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction geoHaystackSearch(coll, x, y, options, callback) {\n  // Build command object\n  let commandObject = {\n    geoSearch: coll.s.name,\n    near: [x, y]\n  };\n\n  // Remove read preference from hash if it exists\n  commandObject = decorateCommand(commandObject, options, ['readPreference', 'session']);\n\n  options = Object.assign({}, options);\n  // Ensure we have the right read preference inheritance\n  options.readPreference = resolveReadPreference(options, { db: coll.s.db, collection: coll });\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(commandObject, coll, options);\n\n  // Execute the command\n  executeCommand(coll.s.db, commandObject, options, (err, res) => {\n    if (err) return handleCallback(callback, err);\n    if (res.err || res.errmsg) handleCallback(callback, toError(res));\n    // should we only be returning res.results here? Not sure if the user\n    // should see the other return information\n    handleCallback(callback, null, res);\n  });\n}\n\n/**\n * Run a group command across a collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options] Optional settings. See Collection.prototype.group for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @deprecated MongoDB 3.6 or higher will no longer support the group command. We recommend rewriting using the aggregation framework.\n */\nfunction group(coll, keys, condition, initial, reduce, finalize, command, options, callback) {\n  // Execute using the command\n  if (command) {\n    const reduceFunction = reduce && reduce._bsontype === 'Code' ? reduce : new Code(reduce);\n\n    const selector = {\n      group: {\n        ns: coll.s.name,\n        $reduce: reduceFunction,\n        cond: condition,\n        initial: initial,\n        out: 'inline'\n      }\n    };\n\n    // if finalize is defined\n    if (finalize != null) selector.group['finalize'] = finalize;\n    // Set up group selector\n    if ('function' === typeof keys || (keys && keys._bsontype === 'Code')) {\n      selector.group.$keyf = keys && keys._bsontype === 'Code' ? keys : new Code(keys);\n    } else {\n      const hash = {};\n      keys.forEach(key => {\n        hash[key] = 1;\n      });\n      selector.group.key = hash;\n    }\n\n    options = Object.assign({}, options);\n    // Ensure we have the right read preference inheritance\n    options.readPreference = resolveReadPreference(options, { db: coll.s.db, collection: coll });\n\n    // Do we have a readConcern specified\n    decorateWithReadConcern(selector, coll, options);\n\n    // Have we specified collation\n    try {\n      decorateWithCollation(selector, coll, options);\n    } catch (err) {\n      return callback(err, null);\n    }\n\n    // Execute command\n    executeCommand(coll.s.db, selector, options, (err, result) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, result.retval);\n    });\n  } else {\n    // Create execution scope\n    const scope = reduce != null && reduce._bsontype === 'Code' ? reduce.scope : {};\n\n    scope.ns = coll.s.name;\n    scope.keys = keys;\n    scope.condition = condition;\n    scope.initial = initial;\n\n    // Pass in the function text to execute within mongodb.\n    const groupfn = groupFunction.replace(/ reduce;/, reduce.toString() + ';');\n\n    evaluate(coll.s.db, new Code(groupfn, scope), null, options, (err, results) => {\n      if (err) return handleCallback(callback, err, null);\n      handleCallback(callback, null, results.result || results);\n    });\n  }\n}\n\n/**\n * Retrieve all the indexes on the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {Object} [options] Optional settings. See Collection.prototype.indexes for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexes(coll, options, callback) {\n  options = Object.assign({}, { full: true }, options);\n  indexInformationDb(coll.s.db, coll.s.name, options, callback);\n}\n\n/**\n * Check if one or more indexes exist on the collection. This fails on the first index that doesn't exist.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Object} [options] Optional settings. See Collection.prototype.indexExists for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexExists(coll, indexes, options, callback) {\n  indexInformation(coll, options, (err, indexInformation) => {\n    // If we have an error return\n    if (err != null) return handleCallback(callback, err, null);\n    // Let's check for the index names\n    if (!Array.isArray(indexes))\n      return handleCallback(callback, null, indexInformation[indexes] != null);\n    // Check in list of indexes\n    for (let i = 0; i < indexes.length; i++) {\n      if (indexInformation[indexes[i]] == null) {\n        return handleCallback(callback, null, false);\n      }\n    }\n\n    // All keys found return true\n    return handleCallback(callback, null, true);\n  });\n}\n\n/**\n * Retrieve this collection's index info.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} [options] Optional settings. See Collection.prototype.indexInformation for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction indexInformation(coll, options, callback) {\n  indexInformationDb(coll.s.db, coll.s.name, options, callback);\n}\n\nfunction insertDocuments(coll, docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Ensure we are operating on an array op docs\n  docs = Array.isArray(docs) ? docs : [docs];\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // If keep going set unordered\n  if (finalOptions.keepGoing === true) finalOptions.ordered = false;\n  finalOptions.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  docs = prepareDocs(coll, docs, options);\n\n  // File inserts\n  coll.s.topology.insert(coll.s.namespace, docs, finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Add docs to the list\n    result.ops = docs;\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Insert a single document into the collection. See Collection.prototype.insertOne for more information.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} doc Document to insert.\n * @param {object} [options] Optional settings. See Collection.prototype.insertOne for a list of options.\n * @param {Collection~insertOneWriteOpCallback} [callback] The command result callback\n */\nfunction insertOne(coll, doc, options, callback) {\n  if (Array.isArray(doc)) {\n    return callback(\n      MongoError.create({ message: 'doc parameter must be an object', driver: true })\n    );\n  }\n\n  insertDocuments(coll, [doc], options, (err, r) => {\n    if (callback == null) return;\n    if (err && callback) return callback(err);\n    // Workaround for pre 2.6 servers\n    if (r == null) return callback(null, { result: { ok: 1 } });\n    // Add values to top level to ensure crud spec compatibility\n    r.insertedCount = r.result.n;\n    r.insertedId = doc._id;\n    if (callback) callback(null, r);\n  });\n}\n\n/**\n * Determine whether the collection is a capped collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {Object} [options] Optional settings. See Collection.prototype.isCapped for a list of options.\n * @param {Collection~resultCallback} [callback] The results callback\n */\nfunction isCapped(coll, options, callback) {\n  optionsOp(coll, options, (err, document) => {\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, !!(document && document.capped));\n  });\n}\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {(function|string)} map The mapping function.\n * @param {(function|string)} reduce The reduce function.\n * @param {object} [options] Optional settings. See Collection.prototype.mapReduce for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction mapReduce(coll, map, reduce, options, callback) {\n  const mapCommandHash = {\n    mapreduce: coll.s.name,\n    map: map,\n    reduce: reduce\n  };\n\n  // Exclusion list\n  const exclusionList = ['readPreference', 'session', 'bypassDocumentValidation'];\n\n  // Add any other options passed in\n  for (let n in options) {\n    if ('scope' === n) {\n      mapCommandHash[n] = processScope(options[n]);\n    } else {\n      // Only include if not in exclusion list\n      if (exclusionList.indexOf(n) === -1) {\n        mapCommandHash[n] = options[n];\n      }\n    }\n  }\n\n  options = Object.assign({}, options);\n\n  // Ensure we have the right read preference inheritance\n  options.readPreference = resolveReadPreference(options, { db: coll.s.db, collection: coll });\n\n  // If we have a read preference and inline is not set as output fail hard\n  if (\n    options.readPreference !== false &&\n    options.readPreference !== 'primary' &&\n    options['out'] &&\n    (options['out'].inline !== 1 && options['out'] !== 'inline')\n  ) {\n    // Force readPreference to primary\n    options.readPreference = 'primary';\n    // Decorate command with writeConcern if supported\n    applyWriteConcern(mapCommandHash, { db: coll.s.db, collection: coll }, options);\n  } else {\n    decorateWithReadConcern(mapCommandHash, coll, options);\n  }\n\n  // Is bypassDocumentValidation specified\n  if (options.bypassDocumentValidation === true) {\n    mapCommandHash.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(mapCommandHash, coll, options);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Execute command\n  executeCommand(coll.s.db, mapCommandHash, options, (err, result) => {\n    if (err) return handleCallback(callback, err);\n    // Check if we have an error\n    if (1 !== result.ok || result.err || result.errmsg) {\n      return handleCallback(callback, toError(result));\n    }\n\n    // Create statistics value\n    const stats = {};\n    if (result.timeMillis) stats['processtime'] = result.timeMillis;\n    if (result.counts) stats['counts'] = result.counts;\n    if (result.timing) stats['timing'] = result.timing;\n\n    // invoked with inline?\n    if (result.results) {\n      // If we wish for no verbosity\n      if (options['verbose'] == null || !options['verbose']) {\n        return handleCallback(callback, null, result.results);\n      }\n\n      return handleCallback(callback, null, { results: result.results, stats: stats });\n    }\n\n    // The returned collection\n    let collection = null;\n\n    // If we have an object it's a different db\n    if (result.result != null && typeof result.result === 'object') {\n      const doc = result.result;\n      // Return a collection from another db\n      const Db = require('../db');\n      collection = new Db(doc.db, coll.s.db.s.topology, coll.s.db.s.options).collection(\n        doc.collection\n      );\n    } else {\n      // Create a collection object that wraps the result collection\n      collection = coll.s.db.collection(result.result);\n    }\n\n    // If we wish for no verbosity\n    if (options['verbose'] == null || !options['verbose']) {\n      return handleCallback(callback, err, collection);\n    }\n\n    // Return stats as third set of values\n    handleCallback(callback, err, { collection: collection, stats: stats });\n  });\n}\n\n/**\n * Return the options of the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {Object} [options] Optional settings. See Collection.prototype.options for a list of options.\n * @param {Collection~resultCallback} [callback] The results callback\n */\nfunction optionsOp(coll, opts, callback) {\n  coll.s.db.listCollections({ name: coll.s.name }, opts).toArray((err, collections) => {\n    if (err) return handleCallback(callback, err);\n    if (collections.length === 0) {\n      return handleCallback(\n        callback,\n        MongoError.create({ message: `collection ${coll.s.namespace} not found`, driver: true })\n      );\n    }\n\n    handleCallback(callback, err, collections[0].options || null);\n  });\n}\n\n/**\n * Return N parallel cursors for a collection to allow parallel reading of the entire collection. There are\n * no ordering guarantees for returned results.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} [options] Optional settings. See Collection.prototype.parallelCollectionScan for a list of options.\n * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback\n */\nfunction parallelCollectionScan(coll, options, callback) {\n  // Create command object\n  const commandObject = {\n    parallelCollectionScan: coll.s.name,\n    numCursors: options.numCursors\n  };\n\n  // Do we have a readConcern specified\n  decorateWithReadConcern(commandObject, coll, options);\n\n  // Store the raw value\n  const raw = options.raw;\n  delete options['raw'];\n\n  // Execute the command\n  executeCommand(coll.s.db, commandObject, options, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n    if (result == null)\n      return handleCallback(\n        callback,\n        new Error('no result returned for parallelCollectionScan'),\n        null\n      );\n\n    options = Object.assign({ explicitlyIgnoreSession: true }, options);\n\n    const cursors = [];\n    // Add the raw back to the option\n    if (raw) options.raw = raw;\n    // Create command cursors for each item\n    for (let i = 0; i < result.cursors.length; i++) {\n      const rawId = result.cursors[i].cursor.id;\n      // Convert cursorId to Long if needed\n      const cursorId = typeof rawId === 'number' ? Long.fromNumber(rawId) : rawId;\n      // Add a command cursor\n      cursors.push(coll.s.topology.cursor(coll.s.namespace, cursorId, options));\n    }\n\n    handleCallback(callback, null, cursors);\n  });\n}\n\n// modifies documents before being inserted or updated\nfunction prepareDocs(coll, docs, options) {\n  const forceServerObjectId =\n    typeof options.forceServerObjectId === 'boolean'\n      ? options.forceServerObjectId\n      : coll.s.db.options.forceServerObjectId;\n\n  // no need to modify the docs if server sets the ObjectId\n  if (forceServerObjectId === true) {\n    return docs;\n  }\n\n  return docs.map(doc => {\n    if (forceServerObjectId !== true && doc._id == null) {\n      doc._id = coll.s.pkFactory.createPk();\n    }\n\n    return doc;\n  });\n}\n\n/**\n * Functions that are passed as scope args must\n * be converted to Code instances.\n * @ignore\n */\nfunction processScope(scope) {\n  if (!isObject(scope) || scope._bsontype === 'ObjectID') {\n    return scope;\n  }\n\n  const keys = Object.keys(scope);\n  let key;\n  const new_scope = {};\n\n  for (let i = keys.length - 1; i >= 0; i--) {\n    key = keys[i];\n    if ('function' === typeof scope[key]) {\n      new_scope[key] = new Code(String(scope[key]));\n    } else {\n      new_scope[key] = processScope(scope[key]);\n    }\n  }\n\n  return new_scope;\n}\n\n/**\n * Reindex all indexes on the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {Object} [options] Optional settings. See Collection.prototype.reIndex for a list of options.\n * @param {Collection~resultCallback} [callback] The command result callback\n */\nfunction reIndex(coll, options, callback) {\n  // Reindex\n  const cmd = { reIndex: coll.s.name };\n\n  // Execute the command\n  executeCommand(coll.s.db, cmd, options, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n}\n\nfunction removeDocuments(coll, selector, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {});\n  } else if (typeof selector === 'function') {\n    callback = selector;\n    options = {};\n    selector = {};\n  }\n\n  // Create an empty options object if the provided one is null\n  options = options || {};\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // If selector is null set empty\n  if (selector == null) selector = {};\n\n  // Build the op\n  const op = { q: selector, limit: 0 };\n  if (options.single) {\n    op.limit = 1;\n  } else if (finalOptions.retryWrites) {\n    finalOptions.retryWrites = false;\n  }\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(finalOptions, coll, options);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Execute the remove\n  coll.s.topology.remove(coll.s.namespace, [op], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Rename the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {string} newName New name of of the collection.\n * @param {object} [options] Optional settings. See Collection.prototype.rename for a list of options.\n * @param {Collection~collectionResultCallback} [callback] The results callback\n */\nfunction rename(coll, newName, options, callback) {\n  const Collection = require('../collection');\n  // Check the collection name\n  checkCollectionName(newName);\n  // Build the command\n  const renameCollection = `${coll.s.dbName}.${coll.s.name}`;\n  const toCollection = `${coll.s.dbName}.${newName}`;\n  const dropTarget = typeof options.dropTarget === 'boolean' ? options.dropTarget : false;\n  const cmd = { renameCollection: renameCollection, to: toCollection, dropTarget: dropTarget };\n\n  // Decorate command with writeConcern if supported\n  applyWriteConcern(cmd, { db: coll.s.db, collection: coll }, options);\n\n  // Execute against admin\n  executeDbAdminCommand(coll.s.db.admin().s.db, cmd, options, (err, doc) => {\n    if (err) return handleCallback(callback, err, null);\n    // We have an error\n    if (doc.errmsg) return handleCallback(callback, toError(doc), null);\n    try {\n      return handleCallback(\n        callback,\n        null,\n        new Collection(\n          coll.s.db,\n          coll.s.topology,\n          coll.s.dbName,\n          newName,\n          coll.s.pkFactory,\n          coll.s.options\n        )\n      );\n    } catch (err) {\n      return handleCallback(callback, toError(err), null);\n    }\n  });\n}\n\n/**\n * Replace a document in the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} filter The Filter used to select the document to update\n * @param {object} doc The Document that replaces the matching document\n * @param {object} [options] Optional settings. See Collection.prototype.replaceOne for a list of options.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n */\nfunction replaceOne(coll, filter, doc, options, callback) {\n  // Set single document update\n  options.multi = false;\n\n  // Execute update\n  updateDocuments(coll, filter, doc, options, (err, r) => {\n    if (callback == null) return;\n    if (err && callback) return callback(err);\n    if (r == null) return callback(null, { result: { ok: 1 } });\n\n    r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n    r.upsertedId =\n      Array.isArray(r.result.upserted) && r.result.upserted.length > 0\n        ? r.result.upserted[0] // FIXME(major): should be `r.result.upserted[0]._id`\n        : null;\n    r.upsertedCount =\n      Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n    r.matchedCount =\n      Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n    r.ops = [doc];\n    if (callback) callback(null, r);\n  });\n}\n\n/**\n * Save a document.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} doc Document to save\n * @param {object} [options] Optional settings. See Collection.prototype.save for a list of options.\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @deprecated use insertOne, insertMany, updateOne or updateMany\n */\nfunction save(coll, doc, options, callback) {\n  // Get the write concern options\n  const finalOptions = applyWriteConcern(\n    Object.assign({}, options),\n    { db: coll.s.db, collection: coll },\n    options\n  );\n  // Establish if we need to perform an insert or update\n  if (doc._id != null) {\n    finalOptions.upsert = true;\n    return updateDocuments(coll, { _id: doc._id }, doc, finalOptions, callback);\n  }\n\n  // Insert the document\n  insertDocuments(coll, [doc], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (doc == null) return handleCallback(callback, null, null);\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Get all the collection statistics.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} [options] Optional settings. See Collection.prototype.stats for a list of options.\n * @param {Collection~resultCallback} [callback] The collection result callback\n */\nfunction stats(coll, options, callback) {\n  // Build command object\n  const commandObject = {\n    collStats: coll.s.name\n  };\n\n  // Check if we have the scale value\n  if (options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  options = Object.assign({}, options);\n  // Ensure we have the right read preference inheritance\n  options.readPreference = resolveReadPreference(options, { db: coll.s.db, collection: coll });\n\n  // Execute the command\n  executeCommand(coll.s.db, commandObject, options, callback);\n}\n\nfunction updateCallback(err, r, callback) {\n  if (callback == null) return;\n  if (err) return callback(err);\n  if (r == null) return callback(null, { result: { ok: 1 } });\n  r.modifiedCount = r.result.nModified != null ? r.result.nModified : r.result.n;\n  r.upsertedId =\n    Array.isArray(r.result.upserted) && r.result.upserted.length > 0\n      ? r.result.upserted[0] // FIXME(major): should be `r.result.upserted[0]._id`\n      : null;\n  r.upsertedCount =\n    Array.isArray(r.result.upserted) && r.result.upserted.length ? r.result.upserted.length : 0;\n  r.matchedCount =\n    Array.isArray(r.result.upserted) && r.result.upserted.length > 0 ? 0 : r.result.n;\n  callback(null, r);\n}\n\nfunction updateDocuments(coll, selector, document, options, callback) {\n  if ('function' === typeof options) (callback = options), (options = null);\n  if (options == null) options = {};\n  if (!('function' === typeof callback)) callback = null;\n\n  // If we are not providing a selector or document throw\n  if (selector == null || typeof selector !== 'object')\n    return callback(toError('selector must be a valid JavaScript object'));\n  if (document == null || typeof document !== 'object')\n    return callback(toError('document must be a valid JavaScript object'));\n\n  // Final options for retryable writes and write concern\n  let finalOptions = Object.assign({}, options);\n  finalOptions = applyRetryableWrites(finalOptions, coll.s.db);\n  finalOptions = applyWriteConcern(finalOptions, { db: coll.s.db, collection: coll }, options);\n\n  // Do we return the actual result document\n  // Either use override on the function, or go back to default on either the collection\n  // level or db\n  finalOptions.serializeFunctions = options.serializeFunctions || coll.s.serializeFunctions;\n\n  // Execute the operation\n  const op = { q: selector, u: document };\n  op.upsert = options.upsert !== void 0 ? !!options.upsert : false;\n  op.multi = options.multi !== void 0 ? !!options.multi : false;\n\n  if (finalOptions.arrayFilters) {\n    op.arrayFilters = finalOptions.arrayFilters;\n    delete finalOptions.arrayFilters;\n  }\n\n  if (finalOptions.retryWrites && op.multi) {\n    finalOptions.retryWrites = false;\n  }\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(finalOptions, coll, options);\n  } catch (err) {\n    return callback(err, null);\n  }\n\n  // Update options\n  coll.s.topology.update(coll.s.namespace, [op], finalOptions, (err, result) => {\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    if (result == null) return handleCallback(callback, null, null);\n    if (result.result.code) return handleCallback(callback, toError(result.result));\n    if (result.result.writeErrors)\n      return handleCallback(callback, toError(result.result.writeErrors[0]));\n    // Return the results\n    handleCallback(callback, null, result);\n  });\n}\n\n/**\n * Update multiple documents in the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} filter The Filter used to select the documents to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options] Optional settings. See Collection.prototype.updateMany for a list of options.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n */\nfunction updateMany(coll, filter, update, options, callback) {\n  // Set single document update\n  options.multi = true;\n  // Execute update\n  updateDocuments(coll, filter, update, options, (err, r) => updateCallback(err, r, callback));\n}\n\n/**\n * Update a single document in the collection.\n *\n * @method\n * @param {Collection} a Collection instance.\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options] Optional settings. See Collection.prototype.updateOne for a list of options.\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n */\nfunction updateOne(coll, filter, update, options, callback) {\n  // Set single document update\n  options.multi = false;\n  // Execute update\n  updateDocuments(coll, filter, update, options, (err, r) => updateCallback(err, r, callback));\n}\n\nmodule.exports = {\n  bulkWrite,\n  checkForAtomicOperators,\n  count,\n  countDocuments,\n  buildCountCommand,\n  createIndex,\n  createIndexes,\n  deleteMany,\n  deleteOne,\n  distinct,\n  dropIndex,\n  dropIndexes,\n  ensureIndex,\n  findAndModify,\n  findAndRemove,\n  findOne,\n  findOneAndDelete,\n  findOneAndReplace,\n  findOneAndUpdate,\n  geoHaystackSearch,\n  group,\n  indexes,\n  indexExists,\n  indexInformation,\n  insertOne,\n  isCapped,\n  mapReduce,\n  optionsOp,\n  parallelCollectionScan,\n  prepareDocs,\n  reIndex,\n  removeDocuments,\n  rename,\n  replaceOne,\n  save,\n  stats,\n  updateDocuments,\n  updateMany,\n  updateOne\n};\n","'use strict';\n\nconst mongoErrorContextSymbol = Symbol('mongoErrorContextSymbol');\n\n/**\n * Creates a new MongoError\n *\n * @augments Error\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n */\nclass MongoError extends Error {\n  constructor(message) {\n    if (message instanceof Error) {\n      super(message.message);\n      this.stack = message.stack;\n    } else {\n      if (typeof message === 'string') {\n        super(message);\n      } else {\n        super(message.message || message.errmsg || message.$err || 'n/a');\n        for (var name in message) {\n          this[name] = message[name];\n        }\n      }\n\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'MongoError';\n    this[mongoErrorContextSymbol] = this[mongoErrorContextSymbol] || {};\n  }\n\n  /**\n   * Creates a new MongoError object\n   *\n   * @param {Error|string|object} options The options used to create the error.\n   * @return {MongoError} A MongoError instance\n   * @deprecated Use `new MongoError()` instead.\n   */\n  static create(options) {\n    return new MongoError(options);\n  }\n}\n\n/**\n * Creates a new MongoNetworkError\n *\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n * @property {string} stack The error call stack\n */\nclass MongoNetworkError extends MongoError {\n  constructor(message) {\n    super(message);\n    this.name = 'MongoNetworkError';\n\n    // This is added as part of the transactions specification\n    this.errorLabels = ['TransientTransactionError'];\n  }\n}\n\n/**\n * An error used when attempting to parse a value (like a connection string)\n *\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n */\nclass MongoParseError extends MongoError {\n  constructor(message) {\n    super(message);\n    this.name = 'MongoParseError';\n  }\n}\n\n/**\n * An error signifying a timeout event\n *\n * @param {Error|string|object} message The error message\n * @property {string} message The error message\n */\nclass MongoTimeoutError extends MongoError {\n  constructor(message) {\n    super(message);\n    this.name = 'MongoTimeoutError';\n  }\n}\n\n/**\n * An error thrown when the server reports a writeConcernError\n *\n * @param {Error|string|object} message The error message\n * @param {object} result The result document (provided if ok: 1)\n * @property {string} message The error message\n * @property {object} [result] The result document (provided if ok: 1)\n */\nclass MongoWriteConcernError extends MongoError {\n  constructor(message, result) {\n    super(message);\n    this.name = 'MongoWriteConcernError';\n\n    if (result != null) {\n      this.result = result;\n    }\n  }\n}\n\n// see: https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#terms\nconst RETRYABLE_ERROR_CODES = new Set([\n  6, // HostUnreachable\n  7, // HostNotFound\n  89, // NetworkTimeout\n  91, // ShutdownInProgress\n  189, // PrimarySteppedDown\n  9001, // SocketException\n  10107, // NotMaster\n  11600, // InterruptedAtShutdown\n  11602, // InterruptedDueToReplStateChange\n  13435, // NotMasterNoSlaveOk\n  13436 // NotMasterOrSecondary\n]);\n\n/**\n * Determines whether an error is something the driver should attempt to retry\n *\n * @param {MongoError|Error} error\n */\nfunction isRetryableError(error) {\n  return (\n    RETRYABLE_ERROR_CODES.has(error.code) ||\n    error instanceof MongoNetworkError ||\n    error.message.match(/not master/) ||\n    error.message.match(/node is recovering/)\n  );\n}\n\nmodule.exports = {\n  MongoError,\n  MongoNetworkError,\n  MongoParseError,\n  MongoTimeoutError,\n  MongoWriteConcernError,\n  mongoErrorContextSymbol,\n  isRetryableError\n};\n","'use strict';\n\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst Code = require('mongodb-core').BSON.Code;\nconst resolveReadPreference = require('../utils').resolveReadPreference;\nconst crypto = require('crypto');\nconst debugOptions = require('../utils').debugOptions;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('mongodb-core').MongoError;\nconst parseIndexOptions = require('../utils').parseIndexOptions;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst toError = require('../utils').toError;\nconst CONSTANTS = require('../constants');\n\nconst count = require('./collection_ops').count;\nconst findOne = require('./collection_ops').findOne;\nconst remove = require('./collection_ops').remove;\nconst updateOne = require('./collection_ops').updateOne;\n\nconst debugFields = [\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'native_parser',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'raw',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'bufferMaxEntries',\n  'numberOfRetries',\n  'retryMiliSeconds',\n  'readPreference',\n  'pkFactory',\n  'parentDb',\n  'promiseLibrary',\n  'noListener'\n];\n\n// Filter out any write concern options\nconst illegalCommandFields = [\n  'w',\n  'wtimeout',\n  'j',\n  'fsync',\n  'autoIndexId',\n  'strict',\n  'serializeFunctions',\n  'pkFactory',\n  'raw',\n  'readPreference',\n  'session'\n];\n\n/**\n * Add a user to the database.\n * @method\n * @param {Db} db The Db instance on which to add a user.\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options] Optional settings. See Db.prototype.addUser for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction addUser(db, username, password, options, callback) {\n  const Db = require('../db');\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Attempt to execute auth command\n  executeAuthCreateUserCommand(db, username, password, options, (err, r) => {\n    // We need to perform the backward compatible insert operation\n    if (err && err.code === -5000) {\n      const finalOptions = applyWriteConcern(Object.assign({}, options), { db }, options);\n\n      // Use node md5 generator\n      const md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(username + ':mongo:' + password);\n      const userPassword = md5.digest('hex');\n\n      // If we have another db set\n      const db = options.dbName ? new Db(options.dbName, db.s.topology, db.s.options) : db;\n\n      // Fetch a user collection\n      const collection = db.collection(CONSTANTS.SYSTEM_USER_COLLECTION);\n\n      // Check if we are inserting the first user\n      count(collection, {}, finalOptions, (err, count) => {\n        // We got an error (f.ex not authorized)\n        if (err != null) return handleCallback(callback, err, null);\n        // Check if the user exists and update i\n        const findOptions = Object.assign({ projection: { dbName: 1 } }, finalOptions);\n        collection.find({ user: username }, findOptions).toArray(err => {\n          // We got an error (f.ex not authorized)\n          if (err != null) return handleCallback(callback, err, null);\n          // Add command keys\n          finalOptions.upsert = true;\n\n          // We have a user, let's update the password or upsert if not\n          updateOne(\n            collection,\n            { user: username },\n            { $set: { user: username, pwd: userPassword } },\n            finalOptions,\n            err => {\n              if (count === 0 && err)\n                return handleCallback(callback, null, [{ user: username, pwd: userPassword }]);\n              if (err) return handleCallback(callback, err, null);\n              handleCallback(callback, null, [{ user: username, pwd: userPassword }]);\n            }\n          );\n        });\n      });\n\n      return;\n    }\n\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, err, r);\n  });\n}\n\n/**\n * Fetch all collections for the current db.\n *\n * @method\n * @param {Db} db The Db instance on which to fetch collections.\n * @param {object} [options] Optional settings. See Db.prototype.collections for a list of options.\n * @param {Db~collectionsResultCallback} [callback] The results callback\n */\nfunction collections(db, options, callback) {\n  const Collection = require('../collection');\n\n  options = Object.assign({}, options, { nameOnly: true });\n  // Let's get the collection names\n  db.listCollections({}, options).toArray((err, documents) => {\n    if (err != null) return handleCallback(callback, err, null);\n    // Filter collections removing any illegal ones\n    documents = documents.filter(doc => {\n      return doc.name.indexOf('$') === -1;\n    });\n\n    // Return the collection objects\n    handleCallback(\n      callback,\n      null,\n      documents.map(d => {\n        return new Collection(\n          db,\n          db.s.topology,\n          db.s.databaseName,\n          d.name,\n          db.s.pkFactory,\n          db.s.options\n        );\n      })\n    );\n  });\n}\n\n/**\n * Create a new collection on a server with the specified options. Use this to create capped collections.\n * More information about command options available at https://docs.mongodb.com/manual/reference/command/create/\n *\n * @method\n * @param {Db} db The Db instance on which to create the collection.\n * @param {string} name The collection name to create.\n * @param {object} [options] Optional settings. See Db.prototype.createCollection for a list of options.\n * @param {Db~collectionResultCallback} [callback] The results callback\n */\nfunction createCollection(db, name, options, callback) {\n  const Collection = require('../collection');\n\n  // Get the write concern options\n  const finalOptions = applyWriteConcern(Object.assign({}, options), { db }, options);\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed()) {\n    return callback(new MongoError('topology was destroyed'));\n  }\n\n  const listCollectionOptions = Object.assign({}, finalOptions, { nameOnly: true });\n\n  // Check if we have the name\n  db\n    .listCollections({ name }, listCollectionOptions)\n    .setReadPreference(ReadPreference.PRIMARY)\n    .toArray((err, collections) => {\n      if (err != null) return handleCallback(callback, err, null);\n      if (collections.length > 0 && finalOptions.strict) {\n        return handleCallback(\n          callback,\n          MongoError.create({\n            message: `Collection ${name} already exists. Currently in strict mode.`,\n            driver: true\n          }),\n          null\n        );\n      } else if (collections.length > 0) {\n        try {\n          return handleCallback(\n            callback,\n            null,\n            new Collection(db, db.s.topology, db.s.databaseName, name, db.s.pkFactory, options)\n          );\n        } catch (err) {\n          return handleCallback(callback, err);\n        }\n      }\n\n      // Create collection command\n      const cmd = { create: name };\n\n      // Decorate command with writeConcern if supported\n      applyWriteConcern(cmd, { db }, options);\n\n      // Add all optional parameters\n      for (let n in options) {\n        if (\n          options[n] != null &&\n          typeof options[n] !== 'function' &&\n          illegalCommandFields.indexOf(n) === -1\n        ) {\n          cmd[n] = options[n];\n        }\n      }\n\n      // Force a primary read Preference\n      finalOptions.readPreference = ReadPreference.PRIMARY;\n      // Execute command\n      executeCommand(db, cmd, finalOptions, err => {\n        if (err) return handleCallback(callback, err);\n        handleCallback(\n          callback,\n          null,\n          new Collection(db, db.s.topology, db.s.databaseName, name, db.s.pkFactory, options)\n        );\n      });\n    });\n}\n\n/**\n * Creates an index on the db and collection.\n * @method\n * @param {Db} db The Db instance on which to create an index.\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Db.prototype.createIndex for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction createIndex(db, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  let finalOptions = Object.assign({}, { readPreference: ReadPreference.PRIMARY }, options);\n  finalOptions = applyWriteConcern(finalOptions, { db }, options);\n\n  // Ensure we have a callback\n  if (finalOptions.writeConcern && typeof callback !== 'function') {\n    throw MongoError.create({\n      message: 'Cannot use a writeConcern without a provided callback',\n      driver: true\n    });\n  }\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // Attempt to run using createIndexes command\n  createIndexUsingCreateIndexes(db, name, fieldOrSpec, finalOptions, (err, result) => {\n    if (err == null) return handleCallback(callback, err, result);\n\n    /**\n     * The following errors mean that the server recognized `createIndex` as a command so we don't need to fallback to an insert:\n     * 67 = 'CannotCreateIndex' (malformed index options)\n     * 85 = 'IndexOptionsConflict' (index already exists with different options)\n     * 86 = 'IndexKeySpecsConflict' (index already exists with the same name)\n     * 11000 = 'DuplicateKey' (couldn't build unique index because of dupes)\n     * 11600 = 'InterruptedAtShutdown' (interrupted at shutdown)\n     * 197 = 'InvalidIndexSpecificationOption' (`_id` with `background: true`)\n     */\n    if (\n      err.code === 67 ||\n      err.code === 11000 ||\n      err.code === 85 ||\n      err.code === 86 ||\n      err.code === 11600 ||\n      err.code === 197\n    ) {\n      return handleCallback(callback, err, result);\n    }\n\n    // Create command\n    const doc = createCreateIndexCommand(db, name, fieldOrSpec, options);\n    // Set no key checking\n    finalOptions.checkKeys = false;\n    // Insert document\n    db.s.topology.insert(\n      `${db.s.databaseName}.${CONSTANTS.SYSTEM_INDEX_COLLECTION}`,\n      doc,\n      finalOptions,\n      (err, result) => {\n        if (callback == null) return;\n        if (err) return handleCallback(callback, err);\n        if (result == null) return handleCallback(callback, null, null);\n        if (result.result.writeErrors)\n          return handleCallback(callback, MongoError.create(result.result.writeErrors[0]), null);\n        handleCallback(callback, null, doc.name);\n      }\n    );\n  });\n}\n\n// Add listeners to topology\nfunction createListener(db, e, object) {\n  function listener(err) {\n    if (object.listeners(e).length > 0) {\n      object.emit(e, err, db);\n\n      // Emit on all associated db's if available\n      for (let i = 0; i < db.s.children.length; i++) {\n        db.s.children[i].emit(e, err, db.s.children[i]);\n      }\n    }\n  }\n  return listener;\n}\n\n/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {Db} db The Db instance on which to drop the collection.\n * @param {string} name Name of collection to drop\n * @param {Object} [options] Optional settings. See Db.prototype.dropCollection for a list of options.\n * @param {Db~resultCallback} [callback] The results callback\n */\nfunction dropCollection(db, name, options, callback) {\n  executeCommand(db, name, options, (err, result) => {\n    // Did the user destroy the topology\n    if (db.serverConfig && db.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    if (err) return handleCallback(callback, err);\n    if (result.ok) return handleCallback(callback, null, true);\n    handleCallback(callback, null, false);\n  });\n}\n\n/**\n * Drop a database, removing it permanently from the server.\n *\n * @method\n * @param {Db} db The Db instance to drop.\n * @param {Object} cmd The command document.\n * @param {Object} [options] Optional settings. See Db.prototype.dropDatabase for a list of options.\n * @param {Db~resultCallback} [callback] The results callback\n */\nfunction dropDatabase(db, cmd, options, callback) {\n  executeCommand(db, cmd, options, (err, result) => {\n    // Did the user destroy the topology\n    if (db.serverConfig && db.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    if (callback == null) return;\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n}\n\n/**\n * Ensures that an index exists. If it does not, creates it.\n *\n * @method\n * @param {Db} db The Db instance on which to ensure the index.\n * @param {string} name The index name\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings. See Db.prototype.ensureIndex for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction ensureIndex(db, name, fieldOrSpec, options, callback) {\n  // Get the write concern options\n  const finalOptions = applyWriteConcern({}, { db }, options);\n  // Create command\n  const selector = createCreateIndexCommand(db, name, fieldOrSpec, options);\n  const index_name = selector.name;\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // Merge primary readPreference\n  finalOptions.readPreference = ReadPreference.PRIMARY;\n\n  // Check if the index already exists\n  indexInformation(db, name, finalOptions, (err, indexInformation) => {\n    if (err != null && err.code !== 26) return handleCallback(callback, err, null);\n    // If the index does not exist, create it\n    if (indexInformation == null || !indexInformation[index_name]) {\n      createIndex(db, name, fieldOrSpec, options, callback);\n    } else {\n      if (typeof callback === 'function') return handleCallback(callback, null, index_name);\n    }\n  });\n}\n\n/**\n * Evaluate JavaScript on the server\n *\n * @method\n * @param {Db} db The Db instance.\n * @param {Code} code JavaScript to execute on server.\n * @param {(object|array)} parameters The parameters for the call.\n * @param {object} [options] Optional settings. See Db.prototype.eval for a list of options.\n * @param {Db~resultCallback} [callback] The results callback\n * @deprecated Eval is deprecated on MongoDB 3.2 and forward\n */\nfunction evaluate(db, code, parameters, options, callback) {\n  let finalCode = code;\n  let finalParameters = [];\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // If not a code object translate to one\n  if (!(finalCode && finalCode._bsontype === 'Code')) finalCode = new Code(finalCode);\n  // Ensure the parameters are correct\n  if (parameters != null && !Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = [parameters];\n  } else if (parameters != null && Array.isArray(parameters) && typeof parameters !== 'function') {\n    finalParameters = parameters;\n  }\n\n  // Create execution selector\n  let cmd = { $eval: finalCode, args: finalParameters };\n  // Check if the nolock parameter is passed in\n  if (options['nolock']) {\n    cmd['nolock'] = options['nolock'];\n  }\n\n  // Set primary read preference\n  options.readPreference = new ReadPreference(ReadPreference.PRIMARY);\n\n  // Execute the command\n  executeCommand(db, cmd, options, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n    if (result && result.ok === 1) return handleCallback(callback, null, result.retval);\n    if (result)\n      return handleCallback(\n        callback,\n        MongoError.create({ message: `eval failed: ${result.errmsg}`, driver: true }),\n        null\n      );\n    handleCallback(callback, err, result);\n  });\n}\n\n/**\n * Execute a command\n *\n * @method\n * @param {Db} db The Db instance on which to execute the command.\n * @param {object} command The command hash\n * @param {object} [options] Optional settings. See Db.prototype.command for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction executeCommand(db, command, options, callback) {\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Get the db name we are executing against\n  const dbName = options.dbName || options.authdb || db.s.databaseName;\n\n  // Convert the readPreference if its not a write\n  options.readPreference = resolveReadPreference(options, { db, default: ReadPreference.primary });\n\n  // Debug information\n  if (db.s.logger.isDebug())\n    db.s.logger.debug(\n      `executing command ${JSON.stringify(\n        command\n      )} against ${dbName}.$cmd with options [${JSON.stringify(\n        debugOptions(debugFields, options)\n      )}]`\n    );\n\n  // Execute command\n  db.s.topology.command(`${dbName}.$cmd`, command, options, (err, result) => {\n    if (err) return handleCallback(callback, err);\n    if (options.full) return handleCallback(callback, null, result);\n    handleCallback(callback, null, result.result);\n  });\n}\n\n/**\n * Runs a command on the database as admin.\n *\n * @method\n * @param {Db} db The Db instance on which to execute the command.\n * @param {object} command The command hash\n * @param {object} [options] Optional settings. See Db.prototype.executeDbAdminCommand for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction executeDbAdminCommand(db, command, options, callback) {\n  db.s.topology.command('admin.$cmd', command, options, (err, result) => {\n    // Did the user destroy the topology\n    if (db.serverConfig && db.serverConfig.isDestroyed()) {\n      return callback(new MongoError('topology was destroyed'));\n    }\n\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, result.result);\n  });\n}\n\n/**\n * Retrieves this collections index info.\n *\n * @method\n * @param {Db} db The Db instance on which to retrieve the index info.\n * @param {string} name The name of the collection.\n * @param {object} [options] Optional settings. See Db.prototype.indexInformation for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction indexInformation(db, name, options, callback) {\n  // If we specified full information\n  const full = options['full'] == null ? false : options['full'];\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Process all the results from the index command and collection\n  function processResults(indexes) {\n    // Contains all the information\n    let info = {};\n    // Process all the indexes\n    for (let i = 0; i < indexes.length; i++) {\n      const index = indexes[i];\n      // Let's unpack the object\n      info[index.name] = [];\n      for (let name in index.key) {\n        info[index.name].push([name, index.key[name]]);\n      }\n    }\n\n    return info;\n  }\n\n  // Get the list of indexes of the specified collection\n  db\n    .collection(name)\n    .listIndexes(options)\n    .toArray((err, indexes) => {\n      if (err) return callback(toError(err));\n      if (!Array.isArray(indexes)) return handleCallback(callback, null, []);\n      if (full) return handleCallback(callback, null, indexes);\n      handleCallback(callback, null, processResults(indexes));\n    });\n}\n\n// Transformation methods for cursor results\nfunction listCollectionsTransforms(databaseName) {\n  const matching = `${databaseName}.`;\n\n  return {\n    doc: doc => {\n      const index = doc.name.indexOf(matching);\n      // Remove database name if available\n      if (doc.name && index === 0) {\n        doc.name = doc.name.substr(index + matching.length);\n      }\n\n      return doc;\n    }\n  };\n}\n\n/**\n * Retrive the current profiling information for MongoDB\n *\n * @method\n * @param {Db} db The Db instance on which to retrieve the profiling info.\n * @param {Object} [options] Optional settings. See Db.protoype.profilingInfo for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback.\n * @deprecated Query the system.profile collection directly.\n */\nfunction profilingInfo(db, options, callback) {\n  try {\n    db\n      .collection('system.profile')\n      .find({}, options)\n      .toArray(callback);\n  } catch (err) {\n    return callback(err, null);\n  }\n}\n\n/**\n * Retrieve the current profiling level for MongoDB\n *\n * @method\n * @param {Db} db The Db instance on which to retrieve the profiling level.\n * @param {Object} [options] Optional settings. See Db.prototype.profilingLevel for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction profilingLevel(db, options, callback) {\n  executeCommand(db, { profile: -1 }, options, (err, doc) => {\n    if (err == null && doc.ok === 1) {\n      const was = doc.was;\n      if (was === 0) return callback(null, 'off');\n      if (was === 1) return callback(null, 'slow_only');\n      if (was === 2) return callback(null, 'all');\n      return callback(new Error('Error: illegal profiling level value ' + was), null);\n    } else {\n      err != null ? callback(err, null) : callback(new Error('Error with profile command'), null);\n    }\n  });\n}\n\n/**\n * Remove a user from a database\n *\n * @method\n * @param {Db} db The Db instance on which to remove the user.\n * @param {string} username The username.\n * @param {object} [options] Optional settings. See Db.prototype.removeUser for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction removeUser(db, username, options, callback) {\n  const Db = require('../db');\n\n  // Attempt to execute command\n  executeAuthRemoveUserCommand(db, username, options, (err, result) => {\n    if (err && err.code === -5000) {\n      const finalOptions = applyWriteConcern(Object.assign({}, options), { db }, options);\n      // If we have another db set\n      const db = options.dbName ? new Db(options.dbName, db.s.topology, db.s.options) : db;\n\n      // Fetch a user collection\n      const collection = db.collection(CONSTANTS.SYSTEM_USER_COLLECTION);\n\n      // Locate the user\n      findOne(collection, { user: username }, finalOptions, (err, user) => {\n        if (user == null) return handleCallback(callback, err, false);\n        remove(collection, { user: username }, finalOptions, err => {\n          handleCallback(callback, err, true);\n        });\n      });\n\n      return;\n    }\n\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, err, result);\n  });\n}\n\n/**\n * Set the current profiling level of MongoDB\n *\n * @method\n * @param {Db} db The Db instance on which to execute the command.\n * @param {string} level The new profiling level (off, slow_only, all).\n * @param {Object} [options] Optional settings. See Db.prototype.setProfilingLevel for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback.\n */\nfunction setProfilingLevel(db, level, options, callback) {\n  const command = {};\n  let profile = 0;\n\n  if (level === 'off') {\n    profile = 0;\n  } else if (level === 'slow_only') {\n    profile = 1;\n  } else if (level === 'all') {\n    profile = 2;\n  } else {\n    return callback(new Error('Error: illegal profiling level value ' + level));\n  }\n\n  // Set up the profile number\n  command['profile'] = profile;\n\n  executeCommand(db, command, options, (err, doc) => {\n    if (err == null && doc.ok === 1) return callback(null, level);\n    return err != null\n      ? callback(err, null)\n      : callback(new Error('Error with profile command'), null);\n  });\n}\n\n// Validate the database name\nfunction validateDatabaseName(databaseName) {\n  if (typeof databaseName !== 'string')\n    throw MongoError.create({ message: 'database name must be a string', driver: true });\n  if (databaseName.length === 0)\n    throw MongoError.create({ message: 'database name cannot be the empty string', driver: true });\n  if (databaseName === '$external') return;\n\n  const invalidChars = [' ', '.', '$', '/', '\\\\'];\n  for (let i = 0; i < invalidChars.length; i++) {\n    if (databaseName.indexOf(invalidChars[i]) !== -1)\n      throw MongoError.create({\n        message: \"database names cannot contain the character '\" + invalidChars[i] + \"'\",\n        driver: true\n      });\n  }\n}\n\n/**\n * Create the command object for Db.prototype.createIndex.\n *\n * @param {Db} db The Db instance on which to create the command.\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {Object} [options] Optional settings. See Db.prototype.createIndex for a list of options.\n * @return {Object} The insert command object.\n */\nfunction createCreateIndexCommand(db, name, fieldOrSpec, options) {\n  const indexParameters = parseIndexOptions(fieldOrSpec);\n  const fieldHash = indexParameters.fieldHash;\n\n  // Generate the index name\n  const indexName = typeof options.name === 'string' ? options.name : indexParameters.name;\n  const selector = {\n    ns: db.databaseName + '.' + name,\n    key: fieldHash,\n    name: indexName\n  };\n\n  // Ensure we have a correct finalUnique\n  const finalUnique = options == null || 'object' === typeof options ? false : options;\n  // Set up options\n  options = options == null || typeof options === 'boolean' ? {} : options;\n\n  // Add all the options\n  const keysToOmit = Object.keys(selector);\n  for (let optionName in options) {\n    if (keysToOmit.indexOf(optionName) === -1) {\n      selector[optionName] = options[optionName];\n    }\n  }\n\n  if (selector['unique'] == null) selector['unique'] = finalUnique;\n\n  // Remove any write concern operations\n  const removeKeys = ['w', 'wtimeout', 'j', 'fsync', 'readPreference', 'session'];\n  for (let i = 0; i < removeKeys.length; i++) {\n    delete selector[removeKeys[i]];\n  }\n\n  // Return the command creation selector\n  return selector;\n}\n\n/**\n * Create index using the createIndexes command.\n *\n * @param {Db} db The Db instance on which to execute the command.\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {Object} [options] Optional settings. See Db.prototype.createIndex for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback.\n */\nfunction createIndexUsingCreateIndexes(db, name, fieldOrSpec, options, callback) {\n  // Build the index\n  const indexParameters = parseIndexOptions(fieldOrSpec);\n  // Generate the index name\n  const indexName = typeof options.name === 'string' ? options.name : indexParameters.name;\n  // Set up the index\n  const indexes = [{ name: indexName, key: indexParameters.fieldHash }];\n  // merge all the options\n  const keysToOmit = Object.keys(indexes[0]).concat([\n    'writeConcern',\n    'w',\n    'wtimeout',\n    'j',\n    'fsync',\n    'readPreference',\n    'session'\n  ]);\n\n  for (let optionName in options) {\n    if (keysToOmit.indexOf(optionName) === -1) {\n      indexes[0][optionName] = options[optionName];\n    }\n  }\n\n  // Get capabilities\n  const capabilities = db.s.topology.capabilities();\n\n  // Did the user pass in a collation, check if our write server supports it\n  if (indexes[0].collation && capabilities && !capabilities.commandsTakeCollation) {\n    // Create a new error\n    const error = new MongoError('server/primary/mongos does not support collation');\n    error.code = 67;\n    // Return the error\n    return callback(error);\n  }\n\n  // Create command, apply write concern to command\n  const cmd = applyWriteConcern({ createIndexes: name, indexes }, { db }, options);\n\n  // ReadPreference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  // Build the command\n  executeCommand(db, cmd, options, (err, result) => {\n    if (err) return handleCallback(callback, err, null);\n    if (result.ok === 0) return handleCallback(callback, toError(result), null);\n    // Return the indexName for backward compatibility\n    handleCallback(callback, null, indexName);\n  });\n}\n\n/**\n * Run the createUser command.\n *\n * @param {Db} db The Db instance on which to execute the command.\n * @param {string} username The username of the user to add.\n * @param {string} password The password of the user to add.\n * @param {object} [options] Optional settings. See Db.prototype.addUser for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction executeAuthCreateUserCommand(db, username, password, options, callback) {\n  // Special case where there is no password ($external users)\n  if (typeof username === 'string' && password != null && typeof password === 'object') {\n    options = password;\n    password = null;\n  }\n\n  // Unpack all options\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Error out if we digestPassword set\n  if (options.digestPassword != null) {\n    return callback(\n      toError(\n        \"The digestPassword option is not supported via add_user. Please use db.command('createUser', ...) instead for this option.\"\n      )\n    );\n  }\n\n  // Get additional values\n  const customData = options.customData != null ? options.customData : {};\n  let roles = Array.isArray(options.roles) ? options.roles : [];\n  const maxTimeMS = typeof options.maxTimeMS === 'number' ? options.maxTimeMS : null;\n\n  // If not roles defined print deprecated message\n  if (roles.length === 0) {\n    console.log('Creating a user without roles is deprecated in MongoDB >= 2.6');\n  }\n\n  // Get the error options\n  const commandOptions = { writeCommand: true };\n  if (options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Add maxTimeMS to options if set\n  if (maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Check the db name and add roles if needed\n  if (\n    (db.databaseName.toLowerCase() === 'admin' || options.dbName === 'admin') &&\n    !Array.isArray(options.roles)\n  ) {\n    roles = ['root'];\n  } else if (!Array.isArray(options.roles)) {\n    roles = ['dbOwner'];\n  }\n\n  const digestPassword = db.s.topology.lastIsMaster().maxWireVersion >= 7;\n\n  // Build the command to execute\n  let command = {\n    createUser: username,\n    customData: customData,\n    roles: roles,\n    digestPassword\n  };\n\n  // Apply write concern to command\n  command = applyWriteConcern(command, { db }, options);\n\n  let userPassword = password;\n\n  if (!digestPassword) {\n    // Use node md5 generator\n    const md5 = crypto.createHash('md5');\n    // Generate keys used for authentication\n    md5.update(username + ':mongo:' + password);\n    userPassword = md5.digest('hex');\n  }\n\n  // No password\n  if (typeof password === 'string') {\n    command.pwd = userPassword;\n  }\n\n  // Force write using primary\n  commandOptions.readPreference = ReadPreference.primary;\n\n  // Execute the command\n  executeCommand(db, command, commandOptions, (err, result) => {\n    if (err && err.ok === 0 && err.code === undefined)\n      return handleCallback(callback, { code: -5000 }, null);\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(\n      callback,\n      !result.ok ? toError(result) : null,\n      result.ok ? [{ user: username, pwd: '' }] : null\n    );\n  });\n}\n\n/**\n * Run the dropUser command.\n *\n * @param {Db} db The Db instance on which to execute the command.\n * @param {string} username The username of the user to remove.\n * @param {object} [options] Optional settings. See Db.prototype.removeUser for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction executeAuthRemoveUserCommand(db, username, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Did the user destroy the topology\n  if (db.serverConfig && db.serverConfig.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n  // Get the error options\n  const commandOptions = { writeCommand: true };\n  if (options['dbName']) commandOptions.dbName = options['dbName'];\n\n  // Get additional values\n  const maxTimeMS = typeof options.maxTimeMS === 'number' ? options.maxTimeMS : null;\n\n  // Add maxTimeMS to options if set\n  if (maxTimeMS != null) commandOptions.maxTimeMS = maxTimeMS;\n\n  // Build the command to execute\n  let command = {\n    dropUser: username\n  };\n\n  // Apply write concern to command\n  command = applyWriteConcern(command, { db }, options);\n\n  // Force write using primary\n  commandOptions.readPreference = ReadPreference.primary;\n\n  // Execute the command\n  executeCommand(db, command, commandOptions, (err, result) => {\n    if (err && !err.ok && err.code === undefined) return handleCallback(callback, { code: -5000 });\n    if (err) return handleCallback(callback, err, null);\n    handleCallback(callback, null, result.ok ? true : false);\n  });\n}\n\nmodule.exports = {\n  addUser,\n  collections,\n  createCollection,\n  createListener,\n  createIndex,\n  dropCollection,\n  dropDatabase,\n  ensureIndex,\n  evaluate,\n  executeCommand,\n  executeDbAdminCommand,\n  listCollectionsTransforms,\n  indexInformation,\n  profilingInfo,\n  profilingLevel,\n  removeUser,\n  setProfilingLevel,\n  validateDatabaseName\n};\n","'use strict';\n\nconst os = require('os');\nconst f = require('util').format;\nconst ReadPreference = require('./read_preference');\nconst Buffer = require('safe-buffer').Buffer;\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n// Get package.json variable\nvar driverVersion = require('../../package.json').version;\nvar nodejsversion = f('Node.js %s, %s', process.version, os.endianness());\nvar type = os.type();\nvar name = process.platform;\nvar architecture = process.arch;\nvar release = os.release();\n\nfunction createClientInfo(options) {\n  // Build default client information\n  var clientInfo = options.clientInfo\n    ? clone(options.clientInfo)\n    : {\n        driver: {\n          name: 'nodejs-core',\n          version: driverVersion\n        },\n        os: {\n          type: type,\n          name: name,\n          architecture: architecture,\n          version: release\n        }\n      };\n\n  // Is platform specified\n  if (clientInfo.platform && clientInfo.platform.indexOf('mongodb-core') === -1) {\n    clientInfo.platform = f('%s, mongodb-core: %s', clientInfo.platform, driverVersion);\n  } else if (!clientInfo.platform) {\n    clientInfo.platform = nodejsversion;\n  }\n\n  // Do we have an application specific string\n  if (options.appname) {\n    // Cut at 128 bytes\n    var buffer = Buffer.from(options.appname);\n    // Return the truncated appname\n    var appname = buffer.length > 128 ? buffer.slice(0, 128).toString('utf8') : options.appname;\n    // Add to the clientInfo\n    clientInfo.application = { name: appname };\n  }\n\n  return clientInfo;\n}\n\nfunction createCompressionInfo(options) {\n  if (!options.compression || !options.compression.compressors) {\n    return [];\n  }\n\n  // Check that all supplied compressors are valid\n  options.compression.compressors.forEach(function(compressor) {\n    if (compressor !== 'snappy' && compressor !== 'zlib') {\n      throw new Error('compressors must be at least one of snappy or zlib');\n    }\n  });\n\n  return options.compression.compressors;\n}\n\nfunction clone(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nvar getPreviousDescription = function(self) {\n  if (!self.s.serverDescription) {\n    self.s.serverDescription = {\n      address: self.name,\n      arbiters: [],\n      hosts: [],\n      passives: [],\n      type: 'Unknown'\n    };\n  }\n\n  return self.s.serverDescription;\n};\n\nvar emitServerDescriptionChanged = function(self, description) {\n  if (self.listeners('serverDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('serverDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar getPreviousTopologyDescription = function(self) {\n  if (!self.s.topologyDescription) {\n    self.s.topologyDescription = {\n      topologyType: 'Unknown',\n      servers: [\n        {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: 'Unknown'\n        }\n      ]\n    };\n  }\n\n  return self.s.topologyDescription;\n};\n\nvar emitTopologyDescriptionChanged = function(self, description) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    // Emit the server description changed events\n    self.emit('topologyDescriptionChanged', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name,\n      previousDescription: getPreviousTopologyDescription(self),\n      newDescription: description\n    });\n\n    self.s.serverDescription = description;\n  }\n};\n\nvar changedIsMaster = function(self, currentIsmaster, ismaster) {\n  var currentType = getTopologyType(self, currentIsmaster);\n  var newType = getTopologyType(self, ismaster);\n  if (newType !== currentType) return true;\n  return false;\n};\n\nvar getTopologyType = function(self, ismaster) {\n  if (!ismaster) {\n    ismaster = self.ismaster;\n  }\n\n  if (!ismaster) return 'Unknown';\n  if (ismaster.ismaster && ismaster.msg === 'isdbgrid') return 'Mongos';\n  if (ismaster.ismaster && !ismaster.hosts) return 'Standalone';\n  if (ismaster.ismaster) return 'RSPrimary';\n  if (ismaster.secondary) return 'RSSecondary';\n  if (ismaster.arbiterOnly) return 'RSArbiter';\n  return 'Unknown';\n};\n\nvar inquireServerState = function(self) {\n  return function(callback) {\n    if (self.s.state === 'destroyed') return;\n    // Record response time\n    var start = new Date().getTime();\n\n    // emitSDAMEvent\n    emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: self.name });\n\n    // Attempt to execute ismaster command\n    self.command('admin.$cmd', { ismaster: true }, { monitoring: true }, function(err, r) {\n      if (!err) {\n        // Legacy event sender\n        self.emit('ismaster', r, self);\n\n        // Calculate latencyMS\n        var latencyMS = new Date().getTime() - start;\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: self.name\n        });\n\n        // Did the server change\n        if (changedIsMaster(self, self.s.ismaster, r.result)) {\n          // Emit server description changed if something listening\n          emitServerDescriptionChanged(self, {\n            address: self.name,\n            arbiters: [],\n            hosts: [],\n            passives: [],\n            type: !self.s.inTopology ? 'Standalone' : getTopologyType(self)\n          });\n        }\n\n        // Updat ismaster view\n        self.s.ismaster = r.result;\n\n        // Set server response time\n        self.s.isMasterLatencyMS = latencyMS;\n      } else {\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: self.name\n        });\n      }\n\n      // Peforming an ismaster monitoring callback operation\n      if (typeof callback === 'function') {\n        return callback(err, r);\n      }\n\n      // Perform another sweep\n      self.s.inquireServerStateTimeout = setTimeout(inquireServerState(self), self.s.haInterval);\n    });\n  };\n};\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for (var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n};\n\nfunction Interval(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setInterval(fn, time);\n    }\n\n    return this;\n  };\n\n  this.stop = function() {\n    clearInterval(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    return timer !== false;\n  };\n}\n\nfunction Timeout(fn, time) {\n  var timer = false;\n\n  this.start = function() {\n    if (!this.isRunning()) {\n      timer = setTimeout(fn, time);\n    }\n    return this;\n  };\n\n  this.stop = function() {\n    clearTimeout(timer);\n    timer = false;\n    return this;\n  };\n\n  this.isRunning = function() {\n    if (timer && timer._called) return false;\n    return timer !== false;\n  };\n}\n\nfunction diff(previous, current) {\n  // Difference document\n  var diff = {\n    servers: []\n  };\n\n  // Previous entry\n  if (!previous) {\n    previous = { servers: [] };\n  }\n\n  // Check if we have any previous servers missing in the current ones\n  for (var i = 0; i < previous.servers.length; i++) {\n    var found = false;\n\n    for (var j = 0; j < current.servers.length; j++) {\n      if (current.servers[j].address.toLowerCase() === previous.servers[i].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    if (!found) {\n      // Add to the diff\n      diff.servers.push({\n        address: previous.servers[i].address,\n        from: previous.servers[i].type,\n        to: 'Unknown'\n      });\n    }\n  }\n\n  // Check if there are any severs that don't exist\n  for (j = 0; j < current.servers.length; j++) {\n    found = false;\n\n    // Go over all the previous servers\n    for (i = 0; i < previous.servers.length; i++) {\n      if (previous.servers[i].address.toLowerCase() === current.servers[j].address.toLowerCase()) {\n        found = true;\n        break;\n      }\n    }\n\n    // Add the server to the diff\n    if (!found) {\n      diff.servers.push({\n        address: current.servers[j].address,\n        from: 'Unknown',\n        to: current.servers[j].type\n      });\n    }\n  }\n\n  // Got through all the servers\n  for (i = 0; i < previous.servers.length; i++) {\n    var prevServer = previous.servers[i];\n\n    // Go through all current servers\n    for (j = 0; j < current.servers.length; j++) {\n      var currServer = current.servers[j];\n\n      // Matching server\n      if (prevServer.address.toLowerCase() === currServer.address.toLowerCase()) {\n        // We had a change in state\n        if (prevServer.type !== currServer.type) {\n          diff.servers.push({\n            address: prevServer.address,\n            from: prevServer.type,\n            to: currServer.type\n          });\n        }\n      }\n    }\n  }\n\n  // Return difference\n  return diff;\n}\n\n/**\n * Shared function to determine clusterTime for a given topology\n *\n * @param {*} topology\n * @param {*} clusterTime\n */\nfunction resolveClusterTime(topology, $clusterTime) {\n  if (topology.clusterTime == null) {\n    topology.clusterTime = $clusterTime;\n  } else {\n    if ($clusterTime.clusterTime.greaterThan(topology.clusterTime.clusterTime)) {\n      topology.clusterTime = $clusterTime;\n    }\n  }\n}\n\n// NOTE: this is a temporary move until the topologies can be more formally refactored\n//       to share code.\nconst SessionMixins = {\n  endSessions: function(sessions, callback) {\n    if (!Array.isArray(sessions)) {\n      sessions = [sessions];\n    }\n\n    // TODO:\n    //   When connected to a sharded cluster the endSessions command\n    //   can be sent to any mongos. When connected to a replica set the\n    //   endSessions command MUST be sent to the primary if the primary\n    //   is available, otherwise it MUST be sent to any available secondary.\n    //   Is it enough to use: ReadPreference.primaryPreferred ?\n    this.command(\n      'admin.$cmd',\n      { endSessions: sessions },\n      { readPreference: ReadPreference.primaryPreferred },\n      () => {\n        // intentionally ignored, per spec\n        if (typeof callback === 'function') callback();\n      }\n    );\n  }\n};\n\nconst RETRYABLE_WIRE_VERSION = 6;\n\n/**\n * Determines whether the provided topology supports retryable writes\n *\n * @param {Mongos|Replset} topology\n */\nconst isRetryableWritesSupported = function(topology) {\n  const maxWireVersion = topology.lastIsMaster().maxWireVersion;\n  if (maxWireVersion < RETRYABLE_WIRE_VERSION) {\n    return false;\n  }\n\n  if (!topology.logicalSessionTimeoutMinutes) {\n    return false;\n  }\n\n  return true;\n};\n\nmodule.exports.SessionMixins = SessionMixins;\nmodule.exports.resolveClusterTime = resolveClusterTime;\nmodule.exports.inquireServerState = inquireServerState;\nmodule.exports.getTopologyType = getTopologyType;\nmodule.exports.emitServerDescriptionChanged = emitServerDescriptionChanged;\nmodule.exports.emitTopologyDescriptionChanged = emitTopologyDescriptionChanged;\nmodule.exports.cloneOptions = cloneOptions;\nmodule.exports.createClientInfo = createClientInfo;\nmodule.exports.createCompressionInfo = createCompressionInfo;\nmodule.exports.clone = clone;\nmodule.exports.diff = diff;\nmodule.exports.Interval = Interval;\nmodule.exports.Timeout = Timeout;\nmodule.exports.isRetryableWritesSupported = isRetryableWritesSupported;\n","'use strict';\n\nvar retrieveBSON = require('./utils').retrieveBSON;\nvar BSON = retrieveBSON();\nvar Long = BSON.Long;\nconst MongoError = require('../error').MongoError;\nconst Buffer = require('safe-buffer').Buffer;\n\n// Incrementing request id\nvar _requestId = 0;\n\n// Wire command operation ids\nvar opcodes = require('../wireprotocol/shared').opcodes;\n\n// Query flags\nvar OPTS_TAILABLE_CURSOR = 2;\nvar OPTS_SLAVE = 4;\nvar OPTS_OPLOG_REPLAY = 8;\nvar OPTS_NO_CURSOR_TIMEOUT = 16;\nvar OPTS_AWAIT_DATA = 32;\nvar OPTS_EXHAUST = 64;\nvar OPTS_PARTIAL = 128;\n\n// Response flags\nvar CURSOR_NOT_FOUND = 0;\nvar QUERY_FAILURE = 2;\nvar SHARD_CONFIG_STALE = 4;\nvar AWAIT_CAPABLE = 8;\n\n/**************************************************************\n * QUERY\n **************************************************************/\nvar Query = function(bson, ns, query, options) {\n  var self = this;\n  // Basic options needed to be passed in\n  if (ns == null) throw new Error('ns must be specified for query');\n  if (query == null) throw new Error('query must be specified for query');\n\n  // Validate that we are not passing 0x00 in the collection name\n  if (ns.indexOf('\\x00') !== -1) {\n    throw new Error('namespace cannot contain a null character');\n  }\n\n  // Basic options\n  this.bson = bson;\n  this.ns = ns;\n  this.query = query;\n\n  // Ensure empty options\n  this.options = options || {};\n\n  // Additional options\n  this.numberToSkip = options.numberToSkip || 0;\n  this.numberToReturn = options.numberToReturn || 0;\n  this.returnFieldSelector = options.returnFieldSelector || null;\n  this.requestId = Query.getRequestId();\n\n  // special case for pre-3.2 find commands, delete ASAP\n  this.pre32Limit = options.pre32Limit;\n\n  // Serialization option\n  this.serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  this.ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n  this.maxBsonSize = options.maxBsonSize || 1024 * 1024 * 16;\n  this.checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : true;\n  this.batchSize = self.numberToReturn;\n\n  // Flags\n  this.tailable = false;\n  this.slaveOk = typeof options.slaveOk === 'boolean' ? options.slaveOk : false;\n  this.oplogReplay = false;\n  this.noCursorTimeout = false;\n  this.awaitData = false;\n  this.exhaust = false;\n  this.partial = false;\n};\n\n//\n// Assign a new request Id\nQuery.prototype.incRequestId = function() {\n  this.requestId = _requestId++;\n};\n\n//\n// Assign a new request Id\nQuery.nextRequestId = function() {\n  return _requestId + 1;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nQuery.prototype.toBin = function() {\n  var self = this;\n  var buffers = [];\n  var projection = null;\n\n  // Set up the flags\n  var flags = 0;\n  if (this.tailable) {\n    flags |= OPTS_TAILABLE_CURSOR;\n  }\n\n  if (this.slaveOk) {\n    flags |= OPTS_SLAVE;\n  }\n\n  if (this.oplogReplay) {\n    flags |= OPTS_OPLOG_REPLAY;\n  }\n\n  if (this.noCursorTimeout) {\n    flags |= OPTS_NO_CURSOR_TIMEOUT;\n  }\n\n  if (this.awaitData) {\n    flags |= OPTS_AWAIT_DATA;\n  }\n\n  if (this.exhaust) {\n    flags |= OPTS_EXHAUST;\n  }\n\n  if (this.partial) {\n    flags |= OPTS_PARTIAL;\n  }\n\n  // If batchSize is different to self.numberToReturn\n  if (self.batchSize !== self.numberToReturn) self.numberToReturn = self.batchSize;\n\n  // Allocate write protocol header buffer\n  var header = Buffer.alloc(\n    4 * 4 + // Header\n    4 + // Flags\n    Buffer.byteLength(self.ns) +\n    1 + // namespace\n    4 + // numberToSkip\n      4 // numberToReturn\n  );\n\n  // Add header to buffers\n  buffers.push(header);\n\n  // Serialize the query\n  var query = self.bson.serialize(this.query, {\n    checkKeys: this.checkKeys,\n    serializeFunctions: this.serializeFunctions,\n    ignoreUndefined: this.ignoreUndefined\n  });\n\n  // Add query document\n  buffers.push(query);\n\n  if (self.returnFieldSelector && Object.keys(self.returnFieldSelector).length > 0) {\n    // Serialize the projection document\n    projection = self.bson.serialize(this.returnFieldSelector, {\n      checkKeys: this.checkKeys,\n      serializeFunctions: this.serializeFunctions,\n      ignoreUndefined: this.ignoreUndefined\n    });\n    // Add projection document\n    buffers.push(projection);\n  }\n\n  // Total message size\n  var totalLength = header.length + query.length + (projection ? projection.length : 0);\n\n  // Set up the index\n  var index = 4;\n\n  // Write total document length\n  header[3] = (totalLength >> 24) & 0xff;\n  header[2] = (totalLength >> 16) & 0xff;\n  header[1] = (totalLength >> 8) & 0xff;\n  header[0] = totalLength & 0xff;\n\n  // Write header information requestId\n  header[index + 3] = (this.requestId >> 24) & 0xff;\n  header[index + 2] = (this.requestId >> 16) & 0xff;\n  header[index + 1] = (this.requestId >> 8) & 0xff;\n  header[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // Write header information responseTo\n  header[index + 3] = (0 >> 24) & 0xff;\n  header[index + 2] = (0 >> 16) & 0xff;\n  header[index + 1] = (0 >> 8) & 0xff;\n  header[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write header information OP_QUERY\n  header[index + 3] = (opcodes.OP_QUERY >> 24) & 0xff;\n  header[index + 2] = (opcodes.OP_QUERY >> 16) & 0xff;\n  header[index + 1] = (opcodes.OP_QUERY >> 8) & 0xff;\n  header[index] = opcodes.OP_QUERY & 0xff;\n  index = index + 4;\n\n  // Write header information flags\n  header[index + 3] = (flags >> 24) & 0xff;\n  header[index + 2] = (flags >> 16) & 0xff;\n  header[index + 1] = (flags >> 8) & 0xff;\n  header[index] = flags & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + header.write(this.ns, index, 'utf8') + 1;\n  header[index - 1] = 0;\n\n  // Write header information flags numberToSkip\n  header[index + 3] = (this.numberToSkip >> 24) & 0xff;\n  header[index + 2] = (this.numberToSkip >> 16) & 0xff;\n  header[index + 1] = (this.numberToSkip >> 8) & 0xff;\n  header[index] = this.numberToSkip & 0xff;\n  index = index + 4;\n\n  // Write header information flags numberToReturn\n  header[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  header[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  header[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  header[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Return the buffers\n  return buffers;\n};\n\nQuery.getRequestId = function() {\n  return ++_requestId;\n};\n\n/**************************************************************\n * GETMORE\n **************************************************************/\nvar GetMore = function(bson, ns, cursorId, opts) {\n  opts = opts || {};\n  this.numberToReturn = opts.numberToReturn || 0;\n  this.requestId = _requestId++;\n  this.bson = bson;\n  this.ns = ns;\n  this.cursorId = cursorId;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nGetMore.prototype.toBin = function() {\n  var length = 4 + Buffer.byteLength(this.ns) + 1 + 4 + 8 + 4 * 4;\n  // Create command buffer\n  var index = 0;\n  // Allocate buffer\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_GETMORE);\n  _buffer[index + 3] = (opcodes.OP_GETMORE >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_GETMORE >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_GETMORE >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_GETMORE & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write collection name\n  index = index + _buffer.write(this.ns, index, 'utf8') + 1;\n  _buffer[index - 1] = 0;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, numberToReturn);\n  _buffer[index + 3] = (this.numberToReturn >> 24) & 0xff;\n  _buffer[index + 2] = (this.numberToReturn >> 16) & 0xff;\n  _buffer[index + 1] = (this.numberToReturn >> 8) & 0xff;\n  _buffer[index] = this.numberToReturn & 0xff;\n  index = index + 4;\n\n  // Write cursor id\n  // index = write32bit(index, _buffer, cursorId.getLowBits());\n  _buffer[index + 3] = (this.cursorId.getLowBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getLowBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getLowBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getLowBits() & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, cursorId.getHighBits());\n  _buffer[index + 3] = (this.cursorId.getHighBits() >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorId.getHighBits() >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorId.getHighBits() >> 8) & 0xff;\n  _buffer[index] = this.cursorId.getHighBits() & 0xff;\n  index = index + 4;\n\n  // Return buffer\n  return _buffer;\n};\n\n/**************************************************************\n * KILLCURSOR\n **************************************************************/\nvar KillCursor = function(bson, ns, cursorIds) {\n  this.ns = ns;\n  this.requestId = _requestId++;\n  this.cursorIds = cursorIds;\n};\n\n//\n// Uses a single allocated buffer for the process, avoiding multiple memory allocations\nKillCursor.prototype.toBin = function() {\n  var length = 4 + 4 + 4 * 4 + this.cursorIds.length * 8;\n\n  // Create command buffer\n  var index = 0;\n  var _buffer = Buffer.alloc(length);\n\n  // Write header information\n  // index = write32bit(index, _buffer, length);\n  _buffer[index + 3] = (length >> 24) & 0xff;\n  _buffer[index + 2] = (length >> 16) & 0xff;\n  _buffer[index + 1] = (length >> 8) & 0xff;\n  _buffer[index] = length & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, requestId);\n  _buffer[index + 3] = (this.requestId >> 24) & 0xff;\n  _buffer[index + 2] = (this.requestId >> 16) & 0xff;\n  _buffer[index + 1] = (this.requestId >> 8) & 0xff;\n  _buffer[index] = this.requestId & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, OP_KILL_CURSORS);\n  _buffer[index + 3] = (opcodes.OP_KILL_CURSORS >> 24) & 0xff;\n  _buffer[index + 2] = (opcodes.OP_KILL_CURSORS >> 16) & 0xff;\n  _buffer[index + 1] = (opcodes.OP_KILL_CURSORS >> 8) & 0xff;\n  _buffer[index] = opcodes.OP_KILL_CURSORS & 0xff;\n  index = index + 4;\n\n  // index = write32bit(index, _buffer, 0);\n  _buffer[index + 3] = (0 >> 24) & 0xff;\n  _buffer[index + 2] = (0 >> 16) & 0xff;\n  _buffer[index + 1] = (0 >> 8) & 0xff;\n  _buffer[index] = 0 & 0xff;\n  index = index + 4;\n\n  // Write batch size\n  // index = write32bit(index, _buffer, this.cursorIds.length);\n  _buffer[index + 3] = (this.cursorIds.length >> 24) & 0xff;\n  _buffer[index + 2] = (this.cursorIds.length >> 16) & 0xff;\n  _buffer[index + 1] = (this.cursorIds.length >> 8) & 0xff;\n  _buffer[index] = this.cursorIds.length & 0xff;\n  index = index + 4;\n\n  // Write all the cursor ids into the array\n  for (var i = 0; i < this.cursorIds.length; i++) {\n    // Write cursor id\n    // index = write32bit(index, _buffer, cursorIds[i].getLowBits());\n    _buffer[index + 3] = (this.cursorIds[i].getLowBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getLowBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getLowBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getLowBits() & 0xff;\n    index = index + 4;\n\n    // index = write32bit(index, _buffer, cursorIds[i].getHighBits());\n    _buffer[index + 3] = (this.cursorIds[i].getHighBits() >> 24) & 0xff;\n    _buffer[index + 2] = (this.cursorIds[i].getHighBits() >> 16) & 0xff;\n    _buffer[index + 1] = (this.cursorIds[i].getHighBits() >> 8) & 0xff;\n    _buffer[index] = this.cursorIds[i].getHighBits() & 0xff;\n    index = index + 4;\n  }\n\n  // Return buffer\n  return _buffer;\n};\n\nvar Response = function(bson, message, msgHeader, msgBody, opts) {\n  opts = opts || { promoteLongs: true, promoteValues: true, promoteBuffers: false };\n  this.parsed = false;\n  this.raw = message;\n  this.data = msgBody;\n  this.bson = bson;\n  this.opts = opts;\n\n  // Read the message header\n  this.length = msgHeader.length;\n  this.requestId = msgHeader.requestId;\n  this.responseTo = msgHeader.responseTo;\n  this.opCode = msgHeader.opCode;\n  this.fromCompressed = msgHeader.fromCompressed;\n\n  // Read the message body\n  this.responseFlags = msgBody.readInt32LE(0);\n  this.cursorId = new Long(msgBody.readInt32LE(4), msgBody.readInt32LE(8));\n  this.startingFrom = msgBody.readInt32LE(12);\n  this.numberReturned = msgBody.readInt32LE(16);\n\n  // Preallocate document array\n  this.documents = new Array(this.numberReturned);\n\n  // Flag values\n  this.cursorNotFound = (this.responseFlags & CURSOR_NOT_FOUND) !== 0;\n  this.queryFailure = (this.responseFlags & QUERY_FAILURE) !== 0;\n  this.shardConfigStale = (this.responseFlags & SHARD_CONFIG_STALE) !== 0;\n  this.awaitCapable = (this.responseFlags & AWAIT_CAPABLE) !== 0;\n  this.promoteLongs = typeof opts.promoteLongs === 'boolean' ? opts.promoteLongs : true;\n  this.promoteValues = typeof opts.promoteValues === 'boolean' ? opts.promoteValues : true;\n  this.promoteBuffers = typeof opts.promoteBuffers === 'boolean' ? opts.promoteBuffers : false;\n};\n\nResponse.prototype.isParsed = function() {\n  return this.parsed;\n};\n\nResponse.prototype.parse = function(options) {\n  // Don't parse again if not needed\n  if (this.parsed) return;\n  options = options || {};\n\n  // Allow the return of raw documents instead of parsing\n  var raw = options.raw || false;\n  var documentsReturnedIn = options.documentsReturnedIn || null;\n  var promoteLongs =\n    typeof options.promoteLongs === 'boolean' ? options.promoteLongs : this.opts.promoteLongs;\n  var promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : this.opts.promoteValues;\n  var promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : this.opts.promoteBuffers;\n  var bsonSize, _options;\n\n  // Set up the options\n  _options = {\n    promoteLongs: promoteLongs,\n    promoteValues: promoteValues,\n    promoteBuffers: promoteBuffers\n  };\n\n  // Position within OP_REPLY at which documents start\n  // (See https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#wire-op-reply)\n  this.index = 20;\n\n  //\n  // Single document and documentsReturnedIn set\n  //\n  if (this.numberReturned === 1 && documentsReturnedIn != null && raw) {\n    // Calculate the bson size\n    bsonSize =\n      this.data[this.index] |\n      (this.data[this.index + 1] << 8) |\n      (this.data[this.index + 2] << 16) |\n      (this.data[this.index + 3] << 24);\n    // Slice out the buffer containing the command result document\n    var document = this.data.slice(this.index, this.index + bsonSize);\n    // Set up field we wish to keep as raw\n    var fieldsAsRaw = {};\n    fieldsAsRaw[documentsReturnedIn] = true;\n    _options.fieldsAsRaw = fieldsAsRaw;\n\n    // Deserialize but keep the array of documents in non-parsed form\n    var doc = this.bson.deserialize(document, _options);\n\n    if (doc instanceof Error) {\n      throw doc;\n    }\n\n    if (doc.errmsg) {\n      throw new MongoError(doc.errmsg);\n    }\n\n    if (!doc.cursor) {\n      throw new MongoError('Cursor not found');\n    }\n\n    // Get the documents\n    this.documents = doc.cursor[documentsReturnedIn];\n    this.numberReturned = this.documents.length;\n    // Ensure we have a Long valie cursor id\n    this.cursorId =\n      typeof doc.cursor.id === 'number' ? Long.fromNumber(doc.cursor.id) : doc.cursor.id;\n\n    // Adjust the index\n    this.index = this.index + bsonSize;\n\n    // Set as parsed\n    this.parsed = true;\n    return;\n  }\n\n  //\n  // Parse Body\n  //\n  for (var i = 0; i < this.numberReturned; i++) {\n    bsonSize =\n      this.data[this.index] |\n      (this.data[this.index + 1] << 8) |\n      (this.data[this.index + 2] << 16) |\n      (this.data[this.index + 3] << 24);\n\n    // If we have raw results specified slice the return document\n    if (raw) {\n      this.documents[i] = this.data.slice(this.index, this.index + bsonSize);\n    } else {\n      this.documents[i] = this.bson.deserialize(\n        this.data.slice(this.index, this.index + bsonSize),\n        _options\n      );\n    }\n\n    // Adjust the index\n    this.index = this.index + bsonSize;\n  }\n\n  // Set parsed\n  this.parsed = true;\n};\n\nmodule.exports = {\n  Query: Query,\n  GetMore: GetMore,\n  Response: Response,\n  KillCursor: KillCursor\n};\n","'use strict';\n\nvar f = require('util').format,\n  require_optional = require('require_optional');\n\n// Set property function\nvar setProperty = function(obj, prop, flag, values) {\n  Object.defineProperty(obj, prop.name, {\n    enumerable: true,\n    set: function(value) {\n      if (typeof value !== 'boolean') throw new Error(f('%s required a boolean', prop.name));\n      // Flip the bit to 1\n      if (value === true) values.flags |= flag;\n      // Flip the bit to 0 if it's set, otherwise ignore\n      if (value === false && (values.flags & flag) === flag) values.flags ^= flag;\n      prop.value = value;\n    },\n    get: function() {\n      return prop.value;\n    }\n  });\n};\n\n// Set property function\nvar getProperty = function(obj, propName, fieldName, values, func) {\n  Object.defineProperty(obj, propName, {\n    enumerable: true,\n    get: function() {\n      // Not parsed yet, parse it\n      if (values[fieldName] == null && obj.isParsed && !obj.isParsed()) {\n        obj.parse();\n      }\n\n      // Do we have a post processing function\n      if (typeof func === 'function') return func(values[fieldName]);\n      // Return raw value\n      return values[fieldName];\n    }\n  });\n};\n\n// Set simple property\nvar getSingleProperty = function(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    enumerable: true,\n    get: function() {\n      return value;\n    }\n  });\n};\n\n// Shallow copy\nvar copy = function(fObj, tObj) {\n  tObj = tObj || {};\n  for (var name in fObj) tObj[name] = fObj[name];\n  return tObj;\n};\n\nvar debugOptions = function(debugFields, options) {\n  var finaloptions = {};\n  debugFields.forEach(function(n) {\n    finaloptions[n] = options[n];\n  });\n\n  return finaloptions;\n};\n\nvar retrieveBSON = function() {\n  var BSON = require('bson');\n  BSON.native = false;\n\n  try {\n    var optionalBSON = require_optional('bson-ext');\n    if (optionalBSON) {\n      optionalBSON.native = true;\n      return optionalBSON;\n    }\n  } catch (err) {} // eslint-disable-line\n\n  return BSON;\n};\n\n// Throw an error if an attempt to use Snappy is made when Snappy is not installed\nvar noSnappyWarning = function() {\n  throw new Error(\n    'Attempted to use Snappy compression, but Snappy is not installed. Install or disable Snappy compression and try again.'\n  );\n};\n\n// Facilitate loading Snappy optionally\nvar retrieveSnappy = function() {\n  var snappy = null;\n  try {\n    snappy = require_optional('snappy');\n  } catch (error) {} // eslint-disable-line\n  if (!snappy) {\n    snappy = {\n      compress: noSnappyWarning,\n      uncompress: noSnappyWarning,\n      compressSync: noSnappyWarning,\n      uncompressSync: noSnappyWarning\n    };\n  }\n  return snappy;\n};\n\nexports.setProperty = setProperty;\nexports.getProperty = getProperty;\nexports.getSingleProperty = getSingleProperty;\nexports.copy = copy;\nexports.debugOptions = debugOptions;\nexports.retrieveBSON = retrieveBSON;\nexports.retrieveSnappy = retrieveSnappy;\n","'use strict';\n\nconst crypto = require('crypto');\nconst requireOptional = require('require_optional');\n\n/**\n * Generate a UUIDv4\n */\nconst uuidV4 = () => {\n  const result = crypto.randomBytes(16);\n  result[6] = (result[6] & 0x0f) | 0x40;\n  result[8] = (result[8] & 0x3f) | 0x80;\n  return result;\n};\n\n/**\n * Returns the duration calculated from two high resolution timers in milliseconds\n *\n * @param {Object} started A high resolution timestamp created from `process.hrtime()`\n * @returns {Number} The duration in milliseconds\n */\nconst calculateDurationInMs = started => {\n  const hrtime = process.hrtime(started);\n  return (hrtime[0] * 1e9 + hrtime[1]) / 1e6;\n};\n\n/**\n * Relays events for a given listener and emitter\n *\n * @param {EventEmitter} listener the EventEmitter to listen to the events from\n * @param {EventEmitter} emitter the EventEmitter to relay the events to\n */\nfunction relayEvents(listener, emitter, events) {\n  events.forEach(eventName => listener.on(eventName, event => emitter.emit(eventName, event)));\n}\n\nfunction retrieveKerberos() {\n  let kerberos;\n\n  try {\n    kerberos = requireOptional('kerberos');\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      throw new Error('The `kerberos` module was not found. Please install it and try again.');\n    }\n\n    throw err;\n  }\n\n  return kerberos;\n}\n\n// Throw an error if an attempt to use EJSON is made when it is not installed\nconst noEJSONError = function() {\n  throw new Error('The `mongodb-extjson` module was not found. Please install it and try again.');\n};\n\n// Facilitate loading EJSON optionally\nfunction retrieveEJSON() {\n  let EJSON = null;\n  try {\n    EJSON = requireOptional('mongodb-extjson');\n  } catch (error) {} // eslint-disable-line\n  if (!EJSON) {\n    EJSON = {\n      parse: noEJSONError,\n      deserialize: noEJSONError,\n      serialize: noEJSONError,\n      stringify: noEJSONError,\n      setBSONModule: noEJSONError,\n      BSON: noEJSONError\n    };\n  }\n\n  return EJSON;\n}\n\n/*\n * Checks that collation is supported by server.\n *\n * @param {Server} [server] to check against\n * @param {object} [cmd] object where collation may be specified\n * @param {function} [callback] callback function\n * @return true if server does not support collation\n */\nfunction collationNotSupported(server, cmd) {\n  return cmd && cmd.collation && server.ismaster && server.ismaster.maxWireVersion < 5;\n}\n\nmodule.exports = {\n  uuidV4,\n  calculateDurationInMs,\n  relayEvents,\n  collationNotSupported,\n  retrieveEJSON,\n  retrieveKerberos\n};\n","'use strict';\n\nconst Transform = require('stream').Transform;\nconst PassThrough = require('stream').PassThrough;\nconst inherits = require('util').inherits;\nconst deprecate = require('util').deprecate;\nconst handleCallback = require('./utils').handleCallback;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst MongoError = require('mongodb-core').MongoError;\nconst Readable = require('stream').Readable;\nconst CoreCursor = require('mongodb-core').Cursor;\nconst Map = require('mongodb-core').BSON.Map;\nconst executeOperation = require('./utils').executeOperation;\n\nconst count = require('./operations/cursor_ops').count;\nconst each = require('./operations/cursor_ops').each;\nconst hasNext = require('./operations/cursor_ops').hasNext;\nconst next = require('./operations/cursor_ops').next;\nconst toArray = require('./operations/cursor_ops').toArray;\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n *\n * **CURSORS Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // Show that duplicate records got dropped\n *     col.find({}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external CoreCursor\n * @external Readable\n */\n\n// Flags allowed for cursor\nconst flags = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];\nconst fields = ['numberOfRetries', 'tailableRetryInterval'];\n\n/**\n * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class Cursor\n * @extends external:CoreCursor\n * @extends external:Readable\n * @property {string} sortValue Cursor query sort setting.\n * @property {boolean} timeout Is Cursor able to time out.\n * @property {ReadPreference} readPreference Get cursor ReadPreference.\n * @fires Cursor#data\n * @fires Cursor#end\n * @fires Cursor#close\n * @fires Cursor#readable\n * @return {Cursor} a Cursor instance.\n * @example\n * Cursor cursor options.\n *\n * collection.find({}).project({a:1})                             // Create a projection of field a\n * collection.find({}).skip(1).limit(10)                          // Skip 1 and limit 10\n * collection.find({}).batchSize(5)                               // Set batchSize on cursor to 5\n * collection.find({}).filter({a:1})                              // Set query on the cursor\n * collection.find({}).comment('add a comment')                   // Add a comment to the query, allowing to correlate queries\n * collection.find({}).addCursorFlag('tailable', true)            // Set cursor as tailable\n * collection.find({}).addCursorFlag('oplogReplay', true)         // Set cursor as oplogReplay\n * collection.find({}).addCursorFlag('noCursorTimeout', true)     // Set cursor as noCursorTimeout\n * collection.find({}).addCursorFlag('awaitData', true)           // Set cursor as awaitData\n * collection.find({}).addCursorFlag('partial', true)             // Set cursor as partial\n * collection.find({}).addQueryModifier('$orderby', {a:1})        // Set $orderby {a:1}\n * collection.find({}).max(10)                                    // Set the cursor max\n * collection.find({}).maxTimeMS(1000)                            // Set the cursor maxTimeMS\n * collection.find({}).min(100)                                   // Set the cursor min\n * collection.find({}).returnKey(true)                            // Set the cursor returnKey\n * collection.find({}).setReadPreference(ReadPreference.PRIMARY)  // Set the cursor readPreference\n * collection.find({}).showRecordId(true)                         // Set the cursor showRecordId\n * collection.find({}).sort([['a', 1]])                           // Sets the sort order of the cursor query\n * collection.find({}).hint('a_1')                                // Set the cursor hint\n *\n * All options are chainable, so one can do the following.\n *\n * collection.find({}).maxTimeMS(1000).maxScan(100).skip(1).toArray(..)\n */\nfunction Cursor(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  const state = Cursor.INIT;\n  const streamOptions = {};\n\n  // Tailable cursor options\n  const numberOfRetries = options.numberOfRetries || 5;\n  const tailableRetryInterval = options.tailableRetryInterval || 500;\n  const currentNumberOfRetries = numberOfRetries;\n\n  // Get the promiseLibrary\n  const promiseLibrary = options.promiseLibrary || Promise;\n\n  // Set up\n  Readable.call(this, { objectMode: true });\n\n  // Internal cursor state\n  this.s = {\n    // Tailable cursor options\n    numberOfRetries: numberOfRetries,\n    tailableRetryInterval: tailableRetryInterval,\n    currentNumberOfRetries: currentNumberOfRetries,\n    // State\n    state: state,\n    // Stream options\n    streamOptions: streamOptions,\n    // BSON\n    bson: bson,\n    // Namespace\n    ns: ns,\n    // Command\n    cmd: cmd,\n    // Options\n    options: options,\n    // Topology\n    topology: topology,\n    // Topology options\n    topologyOptions: topologyOptions,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Current doc\n    currentDoc: null,\n    // explicitlyIgnoreSession\n    explicitlyIgnoreSession: options.explicitlyIgnoreSession\n  };\n\n  // Optional ClientSession\n  if (!options.explicitlyIgnoreSession && options.session) {\n    this.s.session = options.session;\n  }\n\n  // Translate correctly\n  if (this.s.options.noCursorTimeout === true) {\n    this.addCursorFlag('noCursorTimeout', true);\n  }\n\n  // Set the sort value\n  this.sortValue = this.s.cmd.sort;\n\n  // Get the batchSize\n  const batchSize =\n    cmd.cursor && cmd.cursor.batchSize\n      ? cmd.cursor && cmd.cursor.batchSize\n      : options.cursor && options.cursor.batchSize\n        ? options.cursor.batchSize\n        : 1000;\n\n  // Set the batchSize\n  this.setCursorBatchSize(batchSize);\n}\n\n/**\n * Cursor stream data event, fired for each document in the cursor.\n *\n * @event Cursor#data\n * @type {object}\n */\n\n/**\n * Cursor stream end event\n *\n * @event Cursor#end\n * @type {null}\n */\n\n/**\n * Cursor stream close event\n *\n * @event Cursor#close\n * @type {null}\n */\n\n/**\n * Cursor stream readable event\n *\n * @event Cursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(Cursor, Readable);\n\n// Map core cursor _next method so we can apply mapping\nCursor.prototype._next = function() {\n  if (this._initImplicitSession) {\n    this._initImplicitSession();\n  }\n  return CoreCursor.prototype.next.apply(this, arguments);\n};\n\nfor (let name in CoreCursor.prototype) {\n  Cursor.prototype[name] = CoreCursor.prototype[name];\n}\n\nCursor.prototype._initImplicitSession = function() {\n  if (!this.s.explicitlyIgnoreSession && !this.s.session && this.s.topology.hasSessionSupport()) {\n    this.s.session = this.s.topology.startSession({ owner: this });\n    this.cursorState.session = this.s.session;\n  }\n};\n\nCursor.prototype._endSession = function() {\n  const didCloseCursor = CoreCursor.prototype._endSession.apply(this, arguments);\n  if (didCloseCursor) {\n    this.s.session = undefined;\n  }\n};\n\n/**\n * Check if there is any document still available in the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.hasNext = function(callback) {\n  return executeOperation(this.s.topology, hasNext, [this, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.next = function(callback) {\n  return executeOperation(this.s.topology, next, [this, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * Set the cursor query\n * @method\n * @param {object} filter The filter object used for the cursor.\n * @return {Cursor}\n */\nCursor.prototype.filter = function(filter) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.query = filter;\n  return this;\n};\n\n/**\n * Set the cursor maxScan\n * @method\n * @param {object} maxScan Constrains the query to only scan the specified number of documents when fulfilling the query\n * @deprecated as of MongoDB 4.0\n * @return {Cursor}\n */\nCursor.prototype.maxScan = deprecate(function(maxScan) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.maxScan = maxScan;\n  return this;\n}, 'Cursor.maxScan is deprecated, and will be removed in a later version');\n\n/**\n * Set the cursor hint\n * @method\n * @param {object} hint If specified, then the query system will only consider plans using the hinted index.\n * @return {Cursor}\n */\nCursor.prototype.hint = function(hint) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.hint = hint;\n  return this;\n};\n\n/**\n * Set the cursor min\n * @method\n * @param {object} min Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n * @return {Cursor}\n */\nCursor.prototype.min = function(min) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead())\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  this.s.cmd.min = min;\n  return this;\n};\n\n/**\n * Set the cursor max\n * @method\n * @param {object} max Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n * @return {Cursor}\n */\nCursor.prototype.max = function(max) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.max = max;\n  return this;\n};\n\n/**\n * Set the cursor returnKey. If set to true, modifies the cursor to only return the index field or fields for the results of the query, rather than documents. If set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields.\n * @method\n * @param {bool} returnKey the returnKey value.\n * @return {Cursor}\n */\nCursor.prototype.returnKey = function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.returnKey = value;\n  return this;\n};\n\n/**\n * Set the cursor showRecordId\n * @method\n * @param {object} showRecordId The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n * @return {Cursor}\n */\nCursor.prototype.showRecordId = function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.showDiskLoc = value;\n  return this;\n};\n\n/**\n * Set the cursor snapshot\n * @method\n * @param {object} snapshot The $snapshot operator prevents the cursor from returning a document more than once because an intervening write operation results in a move of the document.\n * @deprecated as of MongoDB 4.0\n * @return {Cursor}\n */\nCursor.prototype.snapshot = deprecate(function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.snapshot = value;\n  return this;\n}, 'Cursor Snapshot is deprecated, and will be removed in a later version');\n\n/**\n * Set a node.js specific cursor option\n * @method\n * @param {string} field The cursor option to set ['numberOfRetries', 'tailableRetryInterval'].\n * @param {object} value The field value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setCursorOption = function(field, value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (fields.indexOf(field) === -1) {\n    throw MongoError.create({\n      message: `option ${field} is not a supported option ${fields}`,\n      driver: true\n    });\n  }\n\n  this.s[field] = value;\n  if (field === 'numberOfRetries') this.s.currentNumberOfRetries = value;\n  return this;\n};\n\n/**\n * Add a cursor flag to the cursor\n * @method\n * @param {string} flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial'].\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addCursorFlag = function(flag, value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (flags.indexOf(flag) === -1) {\n    throw MongoError.create({\n      message: `flag ${flag} is not a supported flag ${flags}`,\n      driver: true\n    });\n  }\n\n  if (typeof value !== 'boolean') {\n    throw MongoError.create({ message: `flag ${flag} must be a boolean value`, driver: true });\n  }\n\n  this.s.cmd[flag] = value;\n  return this;\n};\n\n/**\n * Add a query modifier to the cursor query\n * @method\n * @param {string} name The query modifier (must start with $, such as $orderby etc)\n * @param {string|boolean|number} value The modifier value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addQueryModifier = function(name, value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (name[0] !== '$') {\n    throw MongoError.create({ message: `${name} is not a valid query modifier`, driver: true });\n  }\n\n  // Strip of the $\n  const field = name.substr(1);\n  // Set on the command\n  this.s.cmd[field] = value;\n  // Deal with the special case for sort\n  if (field === 'orderby') this.s.cmd.sort = this.s.cmd[field];\n  return this;\n};\n\n/**\n * Add a comment to the cursor query allowing for tracking the comment in the log.\n * @method\n * @param {string} value The comment attached to this query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.comment = function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.comment = value;\n  return this;\n};\n\n/**\n * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n * @method\n * @param {number} value Number of milliseconds to wait before aborting the tailed query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.maxAwaitTimeMS = function(value) {\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'maxAwaitTimeMS must be a number', driver: true });\n  }\n\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.maxAwaitTimeMS = value;\n  return this;\n};\n\n/**\n * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n * @method\n * @param {number} value Number of milliseconds to wait before aborting the query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.maxTimeMS = function(value) {\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'maxTimeMS must be a number', driver: true });\n  }\n\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.maxTimeMS = value;\n  return this;\n};\n\nCursor.prototype.maxTimeMs = Cursor.prototype.maxTimeMS;\n\n/**\n * Sets a field projection for the query.\n * @method\n * @param {object} value The field projection object.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.project = function(value) {\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  this.s.cmd.fields = value;\n  return this;\n};\n\n/**\n * Sets the sort order of the cursor query.\n * @method\n * @param {(string|array|object)} keyOrList The key or keys set for the sort.\n * @param {number} [direction] The direction of the sorting (1 or -1).\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.sort = function(keyOrList, direction) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({ message: \"Tailable cursor doesn't support sorting\", driver: true });\n  }\n\n  if (this.s.state === Cursor.CLOSED || this.s.state === Cursor.OPEN || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  let order = keyOrList;\n\n  // We have an array of arrays, we need to preserve the order of the sort\n  // so we will us a Map\n  if (Array.isArray(order) && Array.isArray(order[0])) {\n    order = new Map(\n      order.map(x => {\n        const value = [x[0], null];\n        if (x[1] === 'asc') {\n          value[1] = 1;\n        } else if (x[1] === 'desc') {\n          value[1] = -1;\n        } else if (x[1] === 1 || x[1] === -1 || x[1].$meta) {\n          value[1] = x[1];\n        } else {\n          throw new MongoError(\n            \"Illegal sort clause, must be of the form [['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\"\n          );\n        }\n\n        return value;\n      })\n    );\n  }\n\n  if (direction != null) {\n    order = [[keyOrList, direction]];\n  }\n\n  this.s.cmd.sort = order;\n  this.sortValue = order;\n  return this;\n};\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.batchSize = function(value) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({ message: \"Tailable cursor doesn't support batchSize\", driver: true });\n  }\n\n  if (this.s.state === Cursor.CLOSED || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'batchSize requires an integer', driver: true });\n  }\n\n  this.s.cmd.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n};\n\n/**\n * Set the collation options for the cursor.\n * @method\n * @param {object} value The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.collation = function(value) {\n  this.s.cmd.collation = value;\n  return this;\n};\n\n/**\n * Set the limit for the cursor.\n * @method\n * @param {number} value The limit for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.limit = function(value) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({ message: \"Tailable cursor doesn't support limit\", driver: true });\n  }\n\n  if (this.s.state === Cursor.OPEN || this.s.state === Cursor.CLOSED || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'limit requires an integer', driver: true });\n  }\n\n  this.s.cmd.limit = value;\n  // this.cursorLimit = value;\n  this.setCursorLimit(value);\n  return this;\n};\n\n/**\n * Set the skip for the cursor.\n * @method\n * @param {number} value The skip for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.skip = function(value) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({ message: \"Tailable cursor doesn't support skip\", driver: true });\n  }\n\n  if (this.s.state === Cursor.OPEN || this.s.state === Cursor.CLOSED || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (typeof value !== 'number') {\n    throw MongoError.create({ message: 'skip requires an integer', driver: true });\n  }\n\n  this.s.cmd.skip = value;\n  this.setCursorSkip(value);\n  return this;\n};\n\n/**\n * The callback format for results\n * @callback Cursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null|boolean)} result The result object if the command was executed successfully.\n */\n\n/**\n * Clone the cursor\n * @function external:CoreCursor#clone\n * @return {Cursor}\n */\n\n/**\n * Resets the cursor\n * @function external:CoreCursor#rewind\n * @return {null}\n */\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method\n * @deprecated\n * @param {Cursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.each = deprecate(function(callback) {\n  // Rewind cursor state\n  this.rewind();\n  // Set current cursor to INIT\n  this.s.state = Cursor.INIT;\n  // Run the query\n  each(this, callback);\n}, 'Cursor.each is deprecated. Use Cursor.forEach instead.');\n\n/**\n * The callback format for the forEach iterator method\n * @callback Cursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback Cursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/**\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method\n * @param {Cursor~iteratorCallback} iterator The iteration callback.\n * @param {Cursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {Promise} if no callback supplied\n */\nCursor.prototype.forEach = function(iterator, callback) {\n  // Rewind cursor state\n  this.rewind();\n\n  // Set current cursor to INIT\n  this.s.state = Cursor.INIT;\n\n  if (typeof callback === 'function') {\n    each(this, (err, doc) => {\n      if (err) {\n        callback(err);\n        return false;\n      }\n      if (doc != null) {\n        iterator(doc);\n        return true;\n      }\n      if (doc == null && callback) {\n        const internalCallback = callback;\n        callback = null;\n        internalCallback(null);\n        return false;\n      }\n    });\n  } else {\n    return new this.s.promiseLibrary((fulfill, reject) => {\n      each(this, (err, doc) => {\n        if (err) {\n          reject(err);\n          return false;\n        } else if (doc == null) {\n          fulfill(null);\n          return false;\n        } else {\n          iterator(doc);\n          return true;\n        }\n      });\n    });\n  }\n};\n\n/**\n * Set the ReadPreference for the cursor.\n * @method\n * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setReadPreference = function(readPreference) {\n  if (this.s.state !== Cursor.INIT) {\n    throw MongoError.create({\n      message: 'cannot change cursor readPreference after cursor has been accessed',\n      driver: true\n    });\n  }\n\n  if (readPreference instanceof ReadPreference) {\n    this.s.options.readPreference = readPreference;\n  } else if (typeof readPreference === 'string') {\n    this.s.options.readPreference = new ReadPreference(readPreference);\n  } else {\n    throw new TypeError('Invalid read preference: ' + readPreference);\n  }\n\n  return this;\n};\n\n/**\n * The callback format for results\n * @callback Cursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contains partial\n * results when this cursor had been previouly accessed. In that case,\n * cursor.rewind() can be used to reset the cursor.\n * @method\n * @param {Cursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.toArray = function(callback) {\n  if (this.s.options.tailable) {\n    throw MongoError.create({\n      message: 'Tailable cursor cannot be converted to array',\n      driver: true\n    });\n  }\n\n  return executeOperation(this.s.topology, toArray, [this, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * The callback format for results\n * @callback Cursor~countResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} count The count of documents.\n */\n\n/**\n * Get the count of documents for this cursor\n * @method\n * @param {boolean} [applySkipLimit=true] Should the count command apply limit and skip settings on the cursor or in the passed in options.\n * @param {object} [options] Optional settings.\n * @param {number} [options.skip] The number of documents to skip.\n * @param {number} [options.limit] The maximum amounts to count before aborting.\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {string} [options.hint] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Cursor~countResultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.count = function(applySkipLimit, opts, callback) {\n  if (this.s.cmd.query == null)\n    throw MongoError.create({ message: 'count can only be used with find command', driver: true });\n  if (typeof opts === 'function') (callback = opts), (opts = {});\n  opts = opts || {};\n\n  if (typeof applySkipLimit === 'function') {\n    callback = applySkipLimit;\n    applySkipLimit = true;\n  }\n\n  if (this.s.session) {\n    opts = Object.assign({}, opts, { session: this.s.session });\n  }\n\n  return executeOperation(this.s.topology, count, [this, applySkipLimit, opts, callback], {\n    skipSessions: !!this.s.session\n  });\n};\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.skipKillCursors] Bypass calling killCursors when closing the cursor.\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.close = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, { skipKillCursors: false }, options);\n\n  this.s.state = Cursor.CLOSED;\n  if (!options.skipKillCursors) {\n    // Kill the cursor\n    this.kill();\n  }\n\n  const completeClose = () => {\n    // Emit the close event for the cursor\n    this.emit('close');\n\n    // Callback if provided\n    if (typeof callback === 'function') {\n      return handleCallback(callback, null, this);\n    }\n\n    // Return a Promise\n    return new this.s.promiseLibrary(resolve => {\n      resolve();\n    });\n  };\n\n  if (this.s.session) {\n    if (typeof callback === 'function') {\n      return this._endSession(() => completeClose());\n    }\n\n    return new this.s.promiseLibrary(resolve => {\n      this._endSession(() => completeClose().then(resolve));\n    });\n  }\n\n  return completeClose();\n};\n\n/**\n * Map all documents using the provided function\n * @method\n * @param {function} [transform] The mapping transformation method.\n * @return {Cursor}\n */\nCursor.prototype.map = function(transform) {\n  if (this.cursorState.transforms && this.cursorState.transforms.doc) {\n    const oldTransform = this.cursorState.transforms.doc;\n    this.cursorState.transforms.doc = doc => {\n      return transform(oldTransform(doc));\n    };\n  } else {\n    this.cursorState.transforms = { doc: transform };\n  }\n  return this;\n};\n\n/**\n * Is the cursor closed\n * @method\n * @return {boolean}\n */\nCursor.prototype.isClosed = function() {\n  return this.isDead();\n};\n\nCursor.prototype.destroy = function(err) {\n  if (err) this.emit('error', err);\n  this.pause();\n  this.close();\n};\n\n/**\n * Return a modified Readable stream including a possible transform method.\n * @method\n * @param {object} [options] Optional settings.\n * @param {function} [options.transform] A transformation method applied to each document emitted by the stream.\n * @return {Cursor}\n * TODO: replace this method with transformStream in next major release\n */\nCursor.prototype.stream = function(options) {\n  this.s.streamOptions = options || {};\n  return this;\n};\n\n/**\n * Return a modified Readable stream that applies a given transform function, if supplied. If none supplied,\n * returns a stream of unmodified docs.\n * @method\n * @param {object} [options] Optional settings.\n * @param {function} [options.transform] A transformation method applied to each document emitted by the stream.\n * @return {stream}\n */\nCursor.prototype.transformStream = function(options) {\n  const streamOptions = options || {};\n  if (typeof streamOptions.transform === 'function') {\n    const stream = new Transform({\n      objectMode: true,\n      transform: function(chunk, encoding, callback) {\n        this.push(streamOptions.transform(chunk));\n        callback();\n      }\n    });\n\n    return this.pipe(stream);\n  }\n  return this.pipe(new PassThrough({ objectMode: true }));\n};\n\n/**\n * Execute the explain for the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.explain = function(callback) {\n  this.s.cmd.explain = true;\n\n  // Do we have a readConcern\n  if (this.s.cmd.readConcern) {\n    delete this.s.cmd['readConcern'];\n  }\n\n  return executeOperation(this.s.topology, this._next.bind(this), [callback], {\n    skipSessions: true\n  });\n};\n\nCursor.prototype._read = function() {\n  if (this.s.state === Cursor.CLOSED || this.isDead()) {\n    return this.push(null);\n  }\n\n  // Get the next item\n  this.next((err, result) => {\n    if (err) {\n      if (this.listeners('error') && this.listeners('error').length > 0) {\n        this.emit('error', err);\n      }\n      if (!this.isDead()) this.close();\n\n      // Emit end event\n      this.emit('end');\n      return this.emit('finish');\n    }\n\n    // If we provided a transformation method\n    if (typeof this.s.streamOptions.transform === 'function' && result != null) {\n      return this.push(this.s.streamOptions.transform(result));\n    }\n\n    // If we provided a map function\n    if (\n      this.cursorState.transforms &&\n      typeof this.cursorState.transforms.doc === 'function' &&\n      result != null\n    ) {\n      return this.push(this.cursorState.transforms.doc(result));\n    }\n\n    // Return the result\n    this.push(result);\n\n    if (result === null && this.isDead()) {\n      this.once('end', () => {\n        this.close();\n        this.emit('finish');\n      });\n    }\n  });\n};\n\n/**\n * Return the cursor logger\n * @method\n * @return {Logger} return the cursor logger\n * @ignore\n */\nCursor.prototype.getLogger = function() {\n  return this.logger;\n};\n\nObject.defineProperty(Cursor.prototype, 'readPreference', {\n  enumerable: true,\n  get: function() {\n    if (!this || !this.s) {\n      return null;\n    }\n\n    return this.s.options.readPreference;\n  }\n});\n\nObject.defineProperty(Cursor.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    if (!this || !this.s) {\n      return null;\n    }\n\n    // TODO: refactor this logic into core\n    const ns = this.s.ns || '';\n    const firstDot = ns.indexOf('.');\n    if (firstDot < 0) {\n      return {\n        database: this.s.ns,\n        collection: ''\n      };\n    }\n    return {\n      database: ns.substr(0, firstDot),\n      collection: ns.substr(firstDot + 1)\n    };\n  }\n});\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Readable#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Readable#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Readable#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Readable#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Readable#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Readable#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Readable#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Readable#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\nCursor.INIT = 0;\nCursor.OPEN = 1;\nCursor.CLOSED = 2;\nCursor.GET_MORE = 3;\n\nmodule.exports = Cursor;\n","'use strict';\n\nvar ReadPreference = require('../topologies/read_preference'),\n  MongoError = require('../error').MongoError;\n\nvar MESSAGE_HEADER_SIZE = 16;\n\n// OPCODE Numbers\n// Defined at https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#request-opcodes\nvar opcodes = {\n  OP_REPLY: 1,\n  OP_UPDATE: 2001,\n  OP_INSERT: 2002,\n  OP_QUERY: 2004,\n  OP_GETMORE: 2005,\n  OP_DELETE: 2006,\n  OP_KILL_CURSORS: 2007,\n  OP_COMPRESSED: 2012\n};\n\nvar getReadPreference = function(cmd, options) {\n  // Default to command version of the readPreference\n  var readPreference = cmd.readPreference || new ReadPreference('primary');\n  // If we have an option readPreference override the command one\n  if (options.readPreference) {\n    readPreference = options.readPreference;\n  }\n\n  if (typeof readPreference === 'string') {\n    readPreference = new ReadPreference(readPreference);\n  }\n\n  if (!(readPreference instanceof ReadPreference)) {\n    throw new MongoError('read preference must be a ReadPreference instance');\n  }\n\n  return readPreference;\n};\n\n// Parses the header of a wire protocol message\nvar parseHeader = function(message) {\n  return {\n    length: message.readInt32LE(0),\n    requestId: message.readInt32LE(4),\n    responseTo: message.readInt32LE(8),\n    opCode: message.readInt32LE(12)\n  };\n};\n\nmodule.exports = {\n  getReadPreference: getReadPreference,\n  MESSAGE_HEADER_SIZE: MESSAGE_HEADER_SIZE,\n  opcodes: opcodes,\n  parseHeader: parseHeader\n};\n","'use strict';\n\n/**\n * The **ReadPreference** class is a class that represents a MongoDB ReadPreference and is\n * used to construct connections.\n * @class\n * @param {string} mode A string describing the read preference mode (primary|primaryPreferred|secondary|secondaryPreferred|nearest)\n * @param {array} tags The tags object\n * @param {object} [options] Additional read preference options\n * @param {number} [options.maxStalenessSeconds] Max secondary read staleness in seconds, Minimum value is 90 seconds.\n * @return {ReadPreference}\n * @example\n * const ReplSet = require('mongodb-core').ReplSet,\n *   ReadPreference = require('mongodb-core').ReadPreference,\n *   assert = require('assert');\n *\n * const server = new ReplSet([{host: 'localhost', port: 30000}], {setName: 'rs'});\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   const cursor = server.cursor(\n *     'db.test',\n *     { find: 'db.test', query: {} },\n *     { readPreference: new ReadPreference('secondary') }\n *   );\n *\n *   cursor.next(function(err, doc) {\n *     server.destroy();\n *   });\n * });\n *\n * // Start connecting\n * server.connect();\n * @see https://docs.mongodb.com/manual/core/read-preference/\n */\nconst ReadPreference = function(mode, tags, options) {\n  // TODO(major): tags MUST be an array of tagsets\n  if (tags && !Array.isArray(tags)) {\n    console.warn(\n      'ReadPreference tags must be an array, this will change in the next major version'\n    );\n\n    if (typeof tags.maxStalenessSeconds !== 'undefined') {\n      // this is likely an options object\n      options = tags;\n      tags = undefined;\n    } else {\n      tags = [tags];\n    }\n  }\n\n  this.mode = mode;\n  this.tags = tags;\n\n  options = options || {};\n  if (options.maxStalenessSeconds != null) {\n    if (options.maxStalenessSeconds <= 0) {\n      throw new TypeError('maxStalenessSeconds must be a positive integer');\n    }\n\n    this.maxStalenessSeconds = options.maxStalenessSeconds;\n\n    // NOTE: The minimum required wire version is 5 for this read preference. If the existing\n    //       topology has a lower value then a MongoError will be thrown during server selection.\n    this.minWireVersion = 5;\n  }\n\n  if (this.mode === ReadPreference.PRIMARY || this.mode === true) {\n    if (this.tags && Array.isArray(this.tags) && this.tags.length > 0) {\n      throw new TypeError('Primary read preference cannot be combined with tags');\n    }\n\n    if (this.maxStalenessSeconds) {\n      throw new TypeError('Primary read preference cannot be combined with maxStalenessSeconds');\n    }\n  }\n};\n\n// Support the deprecated `preference` property introduced in the porcelain layer\nObject.defineProperty(ReadPreference.prototype, 'preference', {\n  enumerable: true,\n  get: function() {\n    return this.mode;\n  }\n});\n\n/*\n * Read preference mode constants\n */\nReadPreference.PRIMARY = 'primary';\nReadPreference.PRIMARY_PREFERRED = 'primaryPreferred';\nReadPreference.SECONDARY = 'secondary';\nReadPreference.SECONDARY_PREFERRED = 'secondaryPreferred';\nReadPreference.NEAREST = 'nearest';\n\nconst VALID_MODES = [\n  ReadPreference.PRIMARY,\n  ReadPreference.PRIMARY_PREFERRED,\n  ReadPreference.SECONDARY,\n  ReadPreference.SECONDARY_PREFERRED,\n  ReadPreference.NEAREST,\n  true,\n  false,\n  null\n];\n\n/**\n * Validate if a mode is legal\n *\n * @method\n * @param {string} mode The string representing the read preference mode.\n * @return {boolean} True if a mode is valid\n */\nReadPreference.isValid = function(mode) {\n  return VALID_MODES.indexOf(mode) !== -1;\n};\n\n/**\n * Validate if a mode is legal\n *\n * @method\n * @param {string} mode The string representing the read preference mode.\n * @return {boolean} True if a mode is valid\n */\nReadPreference.prototype.isValid = function(mode) {\n  return ReadPreference.isValid(typeof mode === 'string' ? mode : this.mode);\n};\n\nconst needSlaveOk = ['primaryPreferred', 'secondary', 'secondaryPreferred', 'nearest'];\n\n/**\n * Indicates that this readPreference needs the \"slaveOk\" bit when sent over the wire\n * @method\n * @return {boolean}\n * @see https://docs.mongodb.com/manual/reference/mongodb-wire-protocol/#op-query\n */\nReadPreference.prototype.slaveOk = function() {\n  return needSlaveOk.indexOf(this.mode) !== -1;\n};\n\n/**\n * Are the two read preference equal\n * @method\n * @param {ReadPreference} readPreference The read preference with which to check equality\n * @return {boolean} True if the two ReadPreferences are equivalent\n */\nReadPreference.prototype.equals = function(readPreference) {\n  return readPreference.mode === this.mode;\n};\n\n/**\n * Return JSON representation\n * @method\n * @return {Object} A JSON representation of the ReadPreference\n */\nReadPreference.prototype.toJSON = function() {\n  const readPreference = { mode: this.mode };\n  if (Array.isArray(this.tags)) readPreference.tags = this.tags;\n  if (this.maxStalenessSeconds) readPreference.maxStalenessSeconds = this.maxStalenessSeconds;\n  return readPreference;\n};\n\n/**\n * Primary read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.primary = new ReadPreference('primary');\n/**\n * Primary Preferred read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.primaryPreferred = new ReadPreference('primaryPreferred');\n/**\n * Secondary read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.secondary = new ReadPreference('secondary');\n/**\n * Secondary Preferred read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.secondaryPreferred = new ReadPreference('secondaryPreferred');\n/**\n * Nearest read preference\n * @member\n * @type {ReadPreference}\n */\nReadPreference.nearest = new ReadPreference('nearest');\n\nmodule.exports = ReadPreference;\n","'use strict';\n\nvar f = require('util').format,\n  MongoError = require('../error').MongoError;\n\n// Filters for classes\nvar classFilters = {};\nvar filteredClasses = {};\nvar level = null;\n// Save the process id\nvar pid = process.pid;\n// current logger\nvar currentLogger = null;\n\n/**\n * Creates a new Logger instance\n * @class\n * @param {string} className The Class name associated with the logging instance\n * @param {object} [options=null] Optional settings.\n * @param {Function} [options.logger=null] Custom logger function;\n * @param {string} [options.loggerLevel=error] Override default global log level.\n * @return {Logger} a Logger instance.\n */\nvar Logger = function(className, options) {\n  if (!(this instanceof Logger)) return new Logger(className, options);\n  options = options || {};\n\n  // Current reference\n  this.className = className;\n\n  // Current logger\n  if (options.logger) {\n    currentLogger = options.logger;\n  } else if (currentLogger == null) {\n    currentLogger = console.log;\n  }\n\n  // Set level of logging, default is error\n  if (options.loggerLevel) {\n    level = options.loggerLevel || 'error';\n  }\n\n  // Add all class names\n  if (filteredClasses[this.className] == null) classFilters[this.className] = true;\n};\n\n/**\n * Log a message at the debug level\n * @method\n * @param {string} message The message to log\n * @param {object} object additional meta data to log\n * @return {null}\n */\nLogger.prototype.debug = function(message, object) {\n  if (\n    this.isDebug() &&\n    ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n      (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n  ) {\n    var dateTime = new Date().getTime();\n    var msg = f('[%s-%s:%s] %s %s', 'DEBUG', this.className, pid, dateTime, message);\n    var state = {\n      type: 'debug',\n      message: message,\n      className: this.className,\n      pid: pid,\n      date: dateTime\n    };\n    if (object) state.meta = object;\n    currentLogger(msg, state);\n  }\n};\n\n/**\n * Log a message at the warn level\n * @method\n * @param {string} message The message to log\n * @param {object} object additional meta data to log\n * @return {null}\n */\n(Logger.prototype.warn = function(message, object) {\n  if (\n    this.isWarn() &&\n    ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n      (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n  ) {\n    var dateTime = new Date().getTime();\n    var msg = f('[%s-%s:%s] %s %s', 'WARN', this.className, pid, dateTime, message);\n    var state = {\n      type: 'warn',\n      message: message,\n      className: this.className,\n      pid: pid,\n      date: dateTime\n    };\n    if (object) state.meta = object;\n    currentLogger(msg, state);\n  }\n}),\n  /**\n   * Log a message at the info level\n   * @method\n   * @param {string} message The message to log\n   * @param {object} object additional meta data to log\n   * @return {null}\n   */\n  (Logger.prototype.info = function(message, object) {\n    if (\n      this.isInfo() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      var dateTime = new Date().getTime();\n      var msg = f('[%s-%s:%s] %s %s', 'INFO', this.className, pid, dateTime, message);\n      var state = {\n        type: 'info',\n        message: message,\n        className: this.className,\n        pid: pid,\n        date: dateTime\n      };\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }),\n  /**\n   * Log a message at the error level\n   * @method\n   * @param {string} message The message to log\n   * @param {object} object additional meta data to log\n   * @return {null}\n   */\n  (Logger.prototype.error = function(message, object) {\n    if (\n      this.isError() &&\n      ((Object.keys(filteredClasses).length > 0 && filteredClasses[this.className]) ||\n        (Object.keys(filteredClasses).length === 0 && classFilters[this.className]))\n    ) {\n      var dateTime = new Date().getTime();\n      var msg = f('[%s-%s:%s] %s %s', 'ERROR', this.className, pid, dateTime, message);\n      var state = {\n        type: 'error',\n        message: message,\n        className: this.className,\n        pid: pid,\n        date: dateTime\n      };\n      if (object) state.meta = object;\n      currentLogger(msg, state);\n    }\n  }),\n  /**\n   * Is the logger set at info level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isInfo = function() {\n    return level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at error level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isError = function() {\n    return level === 'error' || level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at error level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isWarn = function() {\n    return level === 'error' || level === 'warn' || level === 'info' || level === 'debug';\n  }),\n  /**\n   * Is the logger set at debug level\n   * @method\n   * @return {boolean}\n   */\n  (Logger.prototype.isDebug = function() {\n    return level === 'debug';\n  });\n\n/**\n * Resets the logger to default settings, error and no filtered classes\n * @method\n * @return {null}\n */\nLogger.reset = function() {\n  level = 'error';\n  filteredClasses = {};\n};\n\n/**\n * Get the current logger function\n * @method\n * @return {function}\n */\nLogger.currentLogger = function() {\n  return currentLogger;\n};\n\n/**\n * Set the current logger function\n * @method\n * @param {function} logger Logger function.\n * @return {null}\n */\nLogger.setCurrentLogger = function(logger) {\n  if (typeof logger !== 'function') throw new MongoError('current logger must be a function');\n  currentLogger = logger;\n};\n\n/**\n * Set what classes to log.\n * @method\n * @param {string} type The type of filter (currently only class)\n * @param {string[]} values The filters to apply\n * @return {null}\n */\nLogger.filter = function(type, values) {\n  if (type === 'class' && Array.isArray(values)) {\n    filteredClasses = {};\n\n    values.forEach(function(x) {\n      filteredClasses[x] = true;\n    });\n  }\n};\n\n/**\n * Set the current log level\n * @method\n * @param {string} level Set current log level (debug, info, error)\n * @return {null}\n */\nLogger.setLevel = function(_level) {\n  if (_level !== 'info' && _level !== 'error' && _level !== 'debug' && _level !== 'warn') {\n    throw new Error(f('%s is an illegal logging level', _level));\n  }\n\n  level = _level;\n};\n\nmodule.exports = Logger;\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * Defines a Long class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Long\". This\n * implementation is derived from LongLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Longs.\n *\n * The internal representation of a Long is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Long.\n * @param {number} high the high (signed) 32 bits of the Long.\n * @return {Long}\n */\nfunction Long(low, high) {\n  if (!(this instanceof Long)) return new Long(low, high);\n\n  this._bsontype = 'Long';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0; // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0; // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @method\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nLong.prototype.toInt = function() {\n  return this.low_;\n};\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nLong.prototype.toNumber = function() {\n  return this.high_ * Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n};\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {string} the JSON representation.\n */\nLong.prototype.toJSON = function() {\n  return this.toString();\n};\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {string} the textual representation of this value.\n */\nLong.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      // We need to change the Long value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixLong = Long.fromNumber(radix);\n      var div = this.div(radixLong);\n      var rem = div.multiply(radixLong).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 6));\n\n  rem = this;\n  var result = '';\n\n  while (!rem.isZero()) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nLong.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nLong.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nLong.prototype.getLowBitsUnsigned = function() {\n  return this.low_ >= 0 ? this.low_ : Long.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Long.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Long.\n */\nLong.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Long.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ !== 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) !== 0) {\n        break;\n      }\n    }\n    return this.high_ !== 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {boolean} whether this value is zero.\n */\nLong.prototype.isZero = function() {\n  return this.high_ === 0 && this.low_ === 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {boolean} whether this value is negative.\n */\nLong.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {boolean} whether this value is odd.\n */\nLong.prototype.isOdd = function() {\n  return (this.low_ & 1) === 1;\n};\n\n/**\n * Return whether this Long equals the other\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long equals the other\n */\nLong.prototype.equals = function(other) {\n  return this.high_ === other.high_ && this.low_ === other.low_;\n};\n\n/**\n * Return whether this Long does not equal the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long does not equal the other.\n */\nLong.prototype.notEquals = function(other) {\n  return this.high_ !== other.high_ || this.low_ !== other.low_;\n};\n\n/**\n * Return whether this Long is less than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is less than the other.\n */\nLong.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Long is less than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is less than or equal to the other.\n */\nLong.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Long is greater than the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is greater than the other.\n */\nLong.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Long is greater than or equal to the other.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} whether this Long is greater than or equal to the other.\n */\nLong.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Long with the given one.\n *\n * @method\n * @param {Long} other Long to compare against.\n * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nLong.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Long} the negation of this value.\n */\nLong.prototype.negate = function() {\n  if (this.equals(Long.MIN_VALUE)) {\n    return Long.MIN_VALUE;\n  } else {\n    return this.not().add(Long.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Long.\n *\n * @method\n * @param {Long} other Long to add to this one.\n * @return {Long} the sum of this and the given Long.\n */\nLong.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 + b48;\n  c48 &= 0xffff;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Long.\n *\n * @method\n * @param {Long} other Long to subtract from this.\n * @return {Long} the difference of this and the given Long.\n */\nLong.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Long.\n *\n * @method\n * @param {Long} other Long to multiply with this.\n * @return {Long} the product of this and the other.\n */\nLong.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Long.ZERO;\n  } else if (other.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    return other.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return this.isOdd() ? Long.MIN_VALUE : Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate()\n        .multiply(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Longs are small, use float multiplication\n  if (this.lessThan(Long.TWO_PWR_24_) && other.lessThan(Long.TWO_PWR_24_)) {\n    return Long.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Long into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xffff;\n  return Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Long divided by the given one.\n *\n * @method\n * @param {Long} other Long by which to divide.\n * @return {Long} this Long divided by the given one.\n */\nLong.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Long.ZERO;\n  }\n\n  if (this.equals(Long.MIN_VALUE)) {\n    if (other.equals(Long.ONE) || other.equals(Long.NEG_ONE)) {\n      return Long.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Long.MIN_VALUE)) {\n      return Long.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Long.ZERO)) {\n        return other.isNegative() ? Long.ONE : Long.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Long.MIN_VALUE)) {\n    return Long.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate()\n        .div(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Long.ZERO;\n  rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Long.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Long.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Long.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Long modulo the given one.\n *\n * @method\n * @param {Long} other Long by which to mod.\n * @return {Long} this Long modulo the given one.\n */\nLong.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Long} the bitwise-NOT of this value.\n */\nLong.prototype.not = function() {\n  return Long.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to AND.\n * @return {Long} the bitwise-AND of this and the other.\n */\nLong.prototype.and = function(other) {\n  return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to OR.\n * @return {Long} the bitwise-OR of this and the other.\n */\nLong.prototype.or = function(other) {\n  return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Long and the given one.\n *\n * @method\n * @param {Long} other the Long with which to XOR.\n * @return {Long} the bitwise-XOR of this and the other.\n */\nLong.prototype.xor = function(other) {\n  return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the left by the given amount.\n */\nLong.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Long.fromBits(low << numBits, (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Long.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount.\n */\nLong.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >> numBits);\n    } else {\n      return Long.fromBits(high >> (numBits - 32), high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Long with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Long} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nLong.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Long.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits);\n    } else if (numBits === 32) {\n      return Long.fromBits(high, 0);\n    } else {\n      return Long.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Long representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Long.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Long(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Long.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Long} the corresponding Long value.\n */\nLong.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Long.ZERO;\n  } else if (value <= -Long.TWO_PWR_63_DBL_) {\n    return Long.MIN_VALUE;\n  } else if (value + 1 >= Long.TWO_PWR_63_DBL_) {\n    return Long.MAX_VALUE;\n  } else if (value < 0) {\n    return Long.fromNumber(-value).negate();\n  } else {\n    return new Long((value % Long.TWO_PWR_32_DBL_) | 0, (value / Long.TWO_PWR_32_DBL_) | 0);\n  }\n};\n\n/**\n * Returns a Long representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Long} the corresponding Long value.\n */\nLong.fromBits = function(lowBits, highBits) {\n  return new Long(lowBits, highBits);\n};\n\n/**\n * Returns a Long representation of the given string, written using the given radix.\n *\n * @method\n * @param {string} str the textual representation of the Long.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Long} the corresponding Long value.\n */\nLong.fromString = function(str, opt_radix) {\n  if (str.length === 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) === '-') {\n    return Long.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Long.fromNumber(Math.pow(radix, 8));\n\n  var result = Long.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Long.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Long.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Long.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n/**\n * A cache of the Long representations of small integer values.\n * @type {Object}\n * @ignore\n */\nLong.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_32_DBL_ = Long.TWO_PWR_16_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_31_DBL_ = Long.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_48_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_64_DBL_ = Long.TWO_PWR_32_DBL_ * Long.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nLong.TWO_PWR_63_DBL_ = Long.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Long} */\nLong.ZERO = Long.fromInt(0);\n\n/** @type {Long} */\nLong.ONE = Long.fromInt(1);\n\n/** @type {Long} */\nLong.NEG_ONE = Long.fromInt(-1);\n\n/** @type {Long} */\nLong.MAX_VALUE = Long.fromBits(0xffffffff | 0, 0x7fffffff | 0);\n\n/** @type {Long} */\nLong.MIN_VALUE = Long.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Long}\n * @ignore\n */\nLong.TWO_PWR_24_ = Long.fromInt(1 << 24);\n\n/**\n * Expose.\n */\nmodule.exports = Long;\nmodule.exports.Long = Long;\n","'use strict';\n\nconst deprecate = require('util').deprecate;\nconst deprecateOptions = require('./utils').deprecateOptions;\nconst checkCollectionName = require('./utils').checkCollectionName;\nconst ObjectID = require('mongodb-core').BSON.ObjectID;\nconst AggregationCursor = require('./aggregation_cursor');\nconst MongoError = require('mongodb-core').MongoError;\nconst toError = require('./utils').toError;\nconst normalizeHintField = require('./utils').normalizeHintField;\nconst handleCallback = require('./utils').handleCallback;\nconst decorateCommand = require('./utils').decorateCommand;\nconst decorateWithCollation = require('./utils').decorateWithCollation;\nconst decorateWithReadConcern = require('./utils').decorateWithReadConcern;\nconst formattedOrderClause = require('./utils').formattedOrderClause;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst CommandCursor = require('./command_cursor');\nconst unordered = require('./bulk/unordered');\nconst ordered = require('./bulk/ordered');\nconst ChangeStream = require('./change_stream');\nconst executeOperation = require('./utils').executeOperation;\nconst applyWriteConcern = require('./utils').applyWriteConcern;\nconst resolveReadPreference = require('./utils').resolveReadPreference;\n\n// Operations\nconst bulkWrite = require('./operations/collection_ops').bulkWrite;\nconst checkForAtomicOperators = require('./operations/collection_ops').checkForAtomicOperators;\nconst count = require('./operations/collection_ops').count;\nconst countDocuments = require('./operations/collection_ops').countDocuments;\nconst createIndex = require('./operations/collection_ops').createIndex;\nconst createIndexes = require('./operations/collection_ops').createIndexes;\nconst deleteMany = require('./operations/collection_ops').deleteMany;\nconst deleteOne = require('./operations/collection_ops').deleteOne;\nconst distinct = require('./operations/collection_ops').distinct;\nconst dropIndex = require('./operations/collection_ops').dropIndex;\nconst dropIndexes = require('./operations/collection_ops').dropIndexes;\nconst ensureIndex = require('./operations/collection_ops').ensureIndex;\nconst findAndModify = require('./operations/collection_ops').findAndModify;\nconst findAndRemove = require('./operations/collection_ops').findAndRemove;\nconst findOne = require('./operations/collection_ops').findOne;\nconst findOneAndDelete = require('./operations/collection_ops').findOneAndDelete;\nconst findOneAndReplace = require('./operations/collection_ops').findOneAndReplace;\nconst findOneAndUpdate = require('./operations/collection_ops').findOneAndUpdate;\nconst geoHaystackSearch = require('./operations/collection_ops').geoHaystackSearch;\nconst group = require('./operations/collection_ops').group;\nconst indexes = require('./operations/collection_ops').indexes;\nconst indexExists = require('./operations/collection_ops').indexExists;\nconst indexInformation = require('./operations/collection_ops').indexInformation;\nconst insertOne = require('./operations/collection_ops').insertOne;\nconst isCapped = require('./operations/collection_ops').isCapped;\nconst mapReduce = require('./operations/collection_ops').mapReduce;\nconst optionsOp = require('./operations/collection_ops').optionsOp;\nconst parallelCollectionScan = require('./operations/collection_ops').parallelCollectionScan;\nconst prepareDocs = require('./operations/collection_ops').prepareDocs;\nconst reIndex = require('./operations/collection_ops').reIndex;\nconst removeDocuments = require('./operations/collection_ops').removeDocuments;\nconst rename = require('./operations/collection_ops').rename;\nconst replaceOne = require('./operations/collection_ops').replaceOne;\nconst save = require('./operations/collection_ops').save;\nconst stats = require('./operations/collection_ops').stats;\nconst updateDocuments = require('./operations/collection_ops').updateDocuments;\nconst updateMany = require('./operations/collection_ops').updateMany;\nconst updateOne = require('./operations/collection_ops').updateOne;\n\n/**\n * @fileOverview The **Collection** class is an internal class that embodies a MongoDB collection\n * allowing for insert/update/remove/find and other command operation on that MongoDB collection.\n *\n * **COLLECTION Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Show that duplicate records got dropped\n *   col.find({}).toArray(function(err, items) {\n *     test.equal(null, err);\n *     test.equal(4, items.length);\n *     client.close();\n *   });\n * });\n */\n\nconst mergeKeys = ['ignoreUndefined'];\n\n/**\n * Create a new Collection instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {string} collectionName Get the collection name.\n * @property {string} namespace Get the full collection namespace.\n * @property {object} writeConcern The current write concern values.\n * @property {object} readConcern The current read concern values.\n * @property {object} hint Get current index hint for collection.\n * @return {Collection} a Collection instance.\n */\nfunction Collection(db, topology, dbName, name, pkFactory, options) {\n  checkCollectionName(name);\n\n  // Unpack variables\n  const internalHint = null;\n  const slaveOk = options == null || options.slaveOk == null ? db.slaveOk : options.slaveOk;\n  const serializeFunctions =\n    options == null || options.serializeFunctions == null\n      ? db.s.options.serializeFunctions\n      : options.serializeFunctions;\n  const raw = options == null || options.raw == null ? db.s.options.raw : options.raw;\n  const promoteLongs =\n    options == null || options.promoteLongs == null\n      ? db.s.options.promoteLongs\n      : options.promoteLongs;\n  const promoteValues =\n    options == null || options.promoteValues == null\n      ? db.s.options.promoteValues\n      : options.promoteValues;\n  const promoteBuffers =\n    options == null || options.promoteBuffers == null\n      ? db.s.options.promoteBuffers\n      : options.promoteBuffers;\n  let readPreference = null;\n  const collectionHint = null;\n  const namespace = `${dbName}.${name}`;\n\n  // Get the promiseLibrary\n  const promiseLibrary = options.promiseLibrary || Promise;\n\n  // Assign the right collection level readPreference\n  if (options && options.readPreference) {\n    readPreference = options.readPreference;\n  } else if (db.options.readPreference) {\n    readPreference = db.options.readPreference;\n  }\n\n  // Set custom primary key factory if provided\n  pkFactory = pkFactory == null ? ObjectID : pkFactory;\n\n  // Internal state\n  this.s = {\n    // Set custom primary key factory if provided\n    pkFactory: pkFactory,\n    // Db\n    db: db,\n    // Topology\n    topology: topology,\n    // dbName\n    dbName: dbName,\n    // Options\n    options: options,\n    // Namespace\n    namespace: namespace,\n    // Read preference\n    readPreference: readPreference,\n    // SlaveOK\n    slaveOk: slaveOk,\n    // Serialize functions\n    serializeFunctions: serializeFunctions,\n    // Raw\n    raw: raw,\n    // promoteLongs\n    promoteLongs: promoteLongs,\n    // promoteValues\n    promoteValues: promoteValues,\n    // promoteBuffers\n    promoteBuffers: promoteBuffers,\n    // internalHint\n    internalHint: internalHint,\n    // collectionHint\n    collectionHint: collectionHint,\n    // Name\n    name: name,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Read Concern\n    readConcern: options.readConcern,\n    // Write Concern\n    writeConcern: options.writeConcern\n  };\n}\n\nObject.defineProperty(Collection.prototype, 'dbName', {\n  enumerable: true,\n  get: function() {\n    return this.s.dbName;\n  }\n});\n\nObject.defineProperty(Collection.prototype, 'collectionName', {\n  enumerable: true,\n  get: function() {\n    return this.s.name;\n  }\n});\n\nObject.defineProperty(Collection.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    return this.s.namespace;\n  }\n});\n\nObject.defineProperty(Collection.prototype, 'readConcern', {\n  enumerable: true,\n  get: function() {\n    return this.s.readConcern || { level: 'local' };\n  }\n});\n\nObject.defineProperty(Collection.prototype, 'writeConcern', {\n  enumerable: true,\n  get: function() {\n    let ops = {};\n    if (this.s.writeConcern) {\n      return this.s.writeConcern;\n    }\n\n    if (this.s.options.w != null) ops.w = this.s.options.w;\n    if (this.s.options.j != null) ops.j = this.s.options.j;\n    if (this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if (this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * @ignore\n */\nObject.defineProperty(Collection.prototype, 'hint', {\n  enumerable: true,\n  get: function() {\n    return this.s.collectionHint;\n  },\n  set: function(v) {\n    this.s.collectionHint = normalizeHintField(v);\n  }\n});\n\nconst DEPRECATED_FIND_OPTIONS = ['maxScan', 'fields', 'snapshot'];\n\n/**\n * Creates a cursor for a query that can be used to iterate over results from MongoDB\n * @method\n * @param {object} [query={}] The cursor query object.\n * @param {object} [options] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.projection] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n * @param {object} [options.fields] **Deprecated** Use `options.projection` instead\n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.explain=false] Explain the query instead of returning the data.\n * @param {boolean} [options.snapshot=false] DEPRECATED: Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan] DEPRECATED: Limit the number of items to scan.\n * @param {number} [options.min] Set index bounds.\n * @param {number} [options.max] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @throws {MongoError}\n * @return {Cursor}\n */\nCollection.prototype.find = deprecateOptions(\n  {\n    name: 'collection.find',\n    deprecatedOptions: DEPRECATED_FIND_OPTIONS,\n    optionsIndex: 1\n  },\n  function(query, options, callback) {\n    if (typeof callback === 'object') {\n      // TODO(MAJOR): throw in the future\n      console.warn('Third parameter to `find()` must be a callback or undefined');\n    }\n\n    let selector = query;\n    // figuring out arguments\n    if (typeof callback !== 'function') {\n      if (typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      } else if (options == null) {\n        callback = typeof selector === 'function' ? selector : undefined;\n        selector = typeof selector === 'object' ? selector : undefined;\n      }\n    }\n\n    // Ensure selector is not null\n    selector = selector == null ? {} : selector;\n    // Validate correctness off the selector\n    const object = selector;\n    if (Buffer.isBuffer(object)) {\n      const object_size = object[0] | (object[1] << 8) | (object[2] << 16) | (object[3] << 24);\n      if (object_size !== object.length) {\n        const error = new Error(\n          'query selector raw message size does not match message header size [' +\n            object.length +\n            '] != [' +\n            object_size +\n            ']'\n        );\n        error.name = 'MongoError';\n        throw error;\n      }\n    }\n\n    // Check special case where we are using an objectId\n    if (selector != null && selector._bsontype === 'ObjectID') {\n      selector = { _id: selector };\n    }\n\n    if (!options) options = {};\n\n    let projection = options.projection || options.fields;\n\n    if (projection && !Buffer.isBuffer(projection) && Array.isArray(projection)) {\n      projection = projection.length\n        ? projection.reduce((result, field) => {\n            result[field] = 1;\n            return result;\n          }, {})\n        : { _id: 1 };\n    }\n\n    // Make a shallow copy of options\n    let newOptions = Object.assign({}, options);\n\n    // Make a shallow copy of the collection options\n    for (let key in this.s.options) {\n      if (mergeKeys.indexOf(key) !== -1) {\n        newOptions[key] = this.s.options[key];\n      }\n    }\n\n    // Unpack options\n    newOptions.skip = options.skip ? options.skip : 0;\n    newOptions.limit = options.limit ? options.limit : 0;\n    newOptions.raw = typeof options.raw === 'boolean' ? options.raw : this.s.raw;\n    newOptions.hint =\n      options.hint != null ? normalizeHintField(options.hint) : this.s.collectionHint;\n    newOptions.timeout = typeof options.timeout === 'undefined' ? undefined : options.timeout;\n    // // If we have overridden slaveOk otherwise use the default db setting\n    newOptions.slaveOk = options.slaveOk != null ? options.slaveOk : this.s.db.slaveOk;\n\n    // Add read preference if needed\n    newOptions.readPreference = resolveReadPreference(newOptions, {\n      db: this.s.db,\n      collection: this\n    });\n\n    // Set slave ok to true if read preference different from primary\n    if (\n      newOptions.readPreference != null &&\n      (newOptions.readPreference !== 'primary' || newOptions.readPreference.mode !== 'primary')\n    ) {\n      newOptions.slaveOk = true;\n    }\n\n    // Ensure the query is an object\n    if (selector != null && typeof selector !== 'object') {\n      throw MongoError.create({ message: 'query selector must be an object', driver: true });\n    }\n\n    // Build the find command\n    const findCommand = {\n      find: this.s.namespace,\n      limit: newOptions.limit,\n      skip: newOptions.skip,\n      query: selector\n    };\n\n    // Ensure we use the right await data option\n    if (typeof newOptions.awaitdata === 'boolean') {\n      newOptions.awaitData = newOptions.awaitdata;\n    }\n\n    // Translate to new command option noCursorTimeout\n    if (typeof newOptions.timeout === 'boolean') newOptions.noCursorTimeout = newOptions.timeout;\n\n    decorateCommand(findCommand, newOptions, ['session', 'collation']);\n\n    if (projection) findCommand.fields = projection;\n\n    // Add db object to the new options\n    newOptions.db = this.s.db;\n\n    // Add the promise library\n    newOptions.promiseLibrary = this.s.promiseLibrary;\n\n    // Set raw if available at collection level\n    if (newOptions.raw == null && typeof this.s.raw === 'boolean') newOptions.raw = this.s.raw;\n    // Set promoteLongs if available at collection level\n    if (newOptions.promoteLongs == null && typeof this.s.promoteLongs === 'boolean')\n      newOptions.promoteLongs = this.s.promoteLongs;\n    if (newOptions.promoteValues == null && typeof this.s.promoteValues === 'boolean')\n      newOptions.promoteValues = this.s.promoteValues;\n    if (newOptions.promoteBuffers == null && typeof this.s.promoteBuffers === 'boolean')\n      newOptions.promoteBuffers = this.s.promoteBuffers;\n\n    // Sort options\n    if (findCommand.sort) {\n      findCommand.sort = formattedOrderClause(findCommand.sort);\n    }\n\n    // Set the readConcern\n    decorateWithReadConcern(findCommand, this, options);\n\n    // Decorate find command with collation options\n    try {\n      decorateWithCollation(findCommand, this, options);\n    } catch (err) {\n      if (typeof callback === 'function') return callback(err, null);\n      throw err;\n    }\n\n    const cursor = this.s.topology.cursor(this.s.namespace, findCommand, newOptions);\n\n    return typeof callback === 'function' ? handleCallback(callback, null, cursor) : cursor;\n  }\n);\n\n/**\n * Inserts a single document into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object} doc Document to insert.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertOneWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertOne = function(doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, insertOne, [this, doc, options, callback]);\n};\n\nfunction mapInsertManyResults(docs, r) {\n  const finalResult = {\n    result: { ok: 1, n: r.insertedCount },\n    ops: docs,\n    insertedCount: r.insertedCount,\n    insertedIds: r.insertedIds\n  };\n\n  if (r.getLastOp()) {\n    finalResult.result.opTime = r.getLastOp();\n  }\n\n  return finalResult;\n}\n\n/**\n * Inserts an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} docs Documents to insert.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.ordered=true] If true, when an insert fails, don't execute the remaining writes. If false, continue with remaining inserts when one fails.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.insertMany = function(docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? Object.assign({}, options) : { ordered: true };\n\n  if (!Array.isArray(docs) && typeof callback === 'function') {\n    return callback(\n      MongoError.create({ message: 'docs parameter must be an array of documents', driver: true })\n    );\n  } else if (!Array.isArray(docs)) {\n    return new this.s.promiseLibrary((resolve, reject) => {\n      reject(\n        MongoError.create({ message: 'docs parameter must be an array of documents', driver: true })\n      );\n    });\n  }\n\n  // If keep going set unordered\n  options['serializeFunctions'] = options['serializeFunctions'] || this.s.serializeFunctions;\n\n  docs = prepareDocs(this, docs, options);\n\n  // Generate the bulk write operations\n  const operations = [\n    {\n      insertMany: docs\n    }\n  ];\n\n  return executeOperation(this.s.topology, bulkWrite, [this, operations, options, callback], {\n    resultMutator: result => mapInsertManyResults(docs, result)\n  });\n};\n\n/**\n * @typedef {Object} Collection~BulkWriteOpResult\n * @property {number} insertedCount Number of documents inserted.\n * @property {number} matchedCount Number of documents matched for update.\n * @property {number} modifiedCount Number of documents modified.\n * @property {number} deletedCount Number of documents deleted.\n * @property {number} upsertedCount Number of documents upserted.\n * @property {object} insertedIds Inserted document generated Id's, hash key is the index of the originating operation\n * @property {object} upsertedIds Upserted document generated Id's, hash key is the index of the originating operation\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~bulkWriteOpCallback\n * @param {BulkWriteError} error An error instance representing the error during the execution.\n * @param {Collection~BulkWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Perform a bulkWrite operation without a fluent API\n *\n * Legal operation types are\n *\n *  { insertOne: { document: { a: 1 } } }\n *\n *  { updateOne: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { updateMany: { filter: {a:2}, update: {$set: {a:2}}, upsert:true } }\n *\n *  { deleteOne: { filter: {c:1} } }\n *\n *  { deleteMany: { filter: {c:1} } }\n *\n *  { replaceOne: { filter: {c:3}, replacement: {c:4}, upsert:true}}\n *\n * If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {object[]} operations Bulk operations to perform.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.ordered=true] Execute write operation in ordered or unordered fashion.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~bulkWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.bulkWrite = function(operations, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || { ordered: true };\n\n  if (!Array.isArray(operations)) {\n    throw MongoError.create({ message: 'operations must be an array of documents', driver: true });\n  }\n\n  return executeOperation(this.s.topology, bulkWrite, [this, operations, options, callback]);\n};\n\n/**\n * @typedef {Object} Collection~WriteOpResult\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The command result object.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~writeOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~WriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * @typedef {Object} Collection~insertWriteOpResult\n * @property {Number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {Object.<Number, ObjectId>} insertedIds Map of the index of the inserted document to the id of the inserted document.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents inserted.\n */\n\n/**\n * @typedef {Object} Collection~insertOneWriteOpResult\n * @property {Number} insertedCount The total amount of documents inserted.\n * @property {object[]} ops All the documents inserted using insertOne/insertMany/replaceOne. Documents contain the _id field if forceServerObjectId == false for insertOne/insertMany\n * @property {ObjectId} insertedId The driver generated ObjectId for the insert operation.\n * @property {object} connection The connection object used for the operation.\n * @property {object} result The raw command result object returned from MongoDB (content might vary by server version).\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents inserted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~insertOneWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~insertOneWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Inserts a single document or a an array of documents into MongoDB. If documents passed in do not contain the **_id** field,\n * one will be added to each of the documents missing it by the driver, mutating the document. This behavior\n * can be overridden by setting the **forceServerObjectId** flag.\n *\n * @method\n * @param {(object|object[])} docs Documents to insert.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~insertWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use insertOne, insertMany or bulkWrite\n */\nCollection.prototype.insert = deprecate(function(docs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || { ordered: false };\n  docs = !Array.isArray(docs) ? [docs] : docs;\n\n  if (options.keepGoing === true) {\n    options.ordered = false;\n  }\n\n  return this.insertMany(docs, options, callback);\n}, 'collection.insert is deprecated. Use insertOne, insertMany or bulkWrite instead.');\n\n/**\n * @typedef {Object} Collection~updateWriteOpResult\n * @property {Object} result The raw result returned from MongoDB. Will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents scanned.\n * @property {Number} result.nModified The total count of documents modified.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} matchedCount The number of documents that matched the filter.\n * @property {Number} modifiedCount The number of documents that were modified.\n * @property {Number} upsertedCount The number of documents upserted.\n * @property {Object} upsertedId The upserted id.\n * @property {ObjectId} upsertedId._id The upserted _id returned from the server.\n * @property {Object} message\n * @property {Array} ops\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~updateWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~updateWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Update a single document in a collection\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update The update operations to be applied to the document\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.updateOne = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const err = checkForAtomicOperators(update);\n  if (err) {\n    if (typeof callback === 'function') return callback(err);\n    return this.s.promiseLibrary.reject(err);\n  }\n\n  options = Object.assign({}, options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, updateOne, [this, filter, update, options, callback]);\n};\n\n/**\n * Replace a document in a collection with another document\n * @method\n * @param {object} filter The Filter used to select the document to replace\n * @param {object} doc The Document that replaces the matching document\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise<Collection~updatewriteOpResultObject>} returns Promise if no callback passed\n */\nCollection.prototype.replaceOne = function(filter, doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, replaceOne, [this, filter, doc, options, callback]);\n};\n\n/**\n * Update multiple documents in a collection\n * @method\n * @param {object} filter The Filter used to select the documents to update\n * @param {object} update The update operations to be applied to the documents\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~updateWriteOpCallback} [callback] The command result callback\n * @return {Promise<Collection~updateWriteOpResultObject>} returns Promise if no callback passed\n */\nCollection.prototype.updateMany = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const err = checkForAtomicOperators(update);\n  if (err) {\n    if (typeof callback === 'function') return callback(err);\n    return this.s.promiseLibrary.reject(err);\n  }\n\n  options = Object.assign({}, options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, updateMany, [this, filter, update, options, callback]);\n};\n\n/**\n * Updates documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} document The update document.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.upsert=false] Update operation is an upsert.\n * @param {boolean} [options.multi=false] Update one/all documents with operation.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use updateOne, updateMany or bulkWrite\n */\nCollection.prototype.update = deprecate(function(selector, document, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, updateDocuments, [\n    this,\n    selector,\n    document,\n    options,\n    callback\n  ]);\n}, 'collection.update is deprecated. Use updateOne, updateMany, or bulkWrite instead.');\n\n/**\n * @typedef {Object} Collection~deleteWriteOpResult\n * @property {Object} result The raw result returned from MongoDB. Will vary depending on server version.\n * @property {Number} result.ok Is 1 if the command executed correctly.\n * @property {Number} result.n The total count of documents deleted.\n * @property {Object} connection The connection object used for the operation.\n * @property {Number} deletedCount The number of documents deleted.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~deleteWriteOpCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~deleteWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Delete a document from a collection\n * @method\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteOne = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, deleteOne, [this, filter, options, callback]);\n};\n\nCollection.prototype.removeOne = Collection.prototype.deleteOne;\n\n/**\n * Delete multiple documents from a collection\n * @method\n * @param {object} filter The Filter used to select the documents to remove\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~deleteWriteOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.deleteMany = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, deleteMany, [this, filter, options, callback]);\n};\n\nCollection.prototype.removeMany = Collection.prototype.deleteMany;\n\n/**\n * Remove documents.\n * @method\n * @param {object} selector The selector for the update operation.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.single=false] Removes the first document found.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use deleteOne, deleteMany or bulkWrite\n */\nCollection.prototype.remove = deprecate(function(selector, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, removeDocuments, [this, selector, options, callback]);\n}, 'collection.remove is deprecated. Use deleteOne, deleteMany, or bulkWrite instead.');\n\n/**\n * Save a document. Simple full document replacement function. Not recommended for efficiency, use atomic\n * operators and update instead for more efficient operations.\n * @method\n * @param {object} doc Document to save\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~writeOpCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use insertOne, insertMany, updateOne or updateMany\n */\nCollection.prototype.save = deprecate(function(doc, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Add ignoreUndfined\n  if (this.s.options.ignoreUndefined) {\n    options = Object.assign({}, options);\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  return executeOperation(this.s.topology, save, [this, doc, options, callback]);\n}, 'collection.save is deprecated. Use insertOne, insertMany, updateOne, or updateMany instead.');\n\n/**\n * The callback format for results\n * @callback Collection~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * The callback format for an aggregation call\n * @callback Collection~aggregationCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {AggregationCursor} cursor The cursor if the aggregation command was executed successfully.\n */\n\n/**\n * Fetches the first document that matches the query\n * @method\n * @param {object} query Query for find Operation\n * @param {object} [options] Optional settings.\n * @param {number} [options.limit=0] Sets the limit of documents returned in the query.\n * @param {(array|object)} [options.sort] Set to sort the documents coming back from the query. Array of indexes, [['a', 1]] etc.\n * @param {object} [options.projection] The fields to return in the query. Object of fields to include or exclude (not both), {'a':1}\n * @param {object} [options.fields] **Deprecated** Use `options.projection` instead\n * @param {number} [options.skip=0] Set to skip N documents ahead in your query (useful for pagination).\n * @param {Object} [options.hint] Tell the query to use specific indexes in the query. Object of indexes to use, {'_id':1}\n * @param {boolean} [options.explain=false] Explain the query instead of returning the data.\n * @param {boolean} [options.snapshot=false] DEPRECATED: Snapshot query.\n * @param {boolean} [options.timeout=false] Specify if the cursor can timeout.\n * @param {boolean} [options.tailable=false] Specify if the cursor is tailable.\n * @param {number} [options.batchSize=0] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {boolean} [options.returnKey=false] Only return the index key.\n * @param {number} [options.maxScan] DEPRECATED: Limit the number of items to scan.\n * @param {number} [options.min] Set index bounds.\n * @param {number} [options.max] Set index bounds.\n * @param {boolean} [options.showDiskLoc=false] Show disk location of results.\n * @param {string} [options.comment] You can put a $comment field on a query to make looking in the profiler logs simpler.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.partial=false] Specify if the cursor should return partial results when querying against a sharded system\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.findOne = deprecateOptions(\n  {\n    name: 'collection.find',\n    deprecatedOptions: DEPRECATED_FIND_OPTIONS,\n    optionsIndex: 1\n  },\n  function(query, options, callback) {\n    if (typeof callback === 'object') {\n      // TODO(MAJOR): throw in the future\n      console.warn('Third parameter to `findOne()` must be a callback or undefined');\n    }\n\n    if (typeof query === 'function') (callback = query), (query = {}), (options = {});\n    if (typeof options === 'function') (callback = options), (options = {});\n    query = query || {};\n    options = options || {};\n\n    return executeOperation(this.s.topology, findOne, [this, query, options, callback]);\n  }\n);\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Collection~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\n/**\n * Rename the collection.\n *\n * @method\n * @param {string} newName New name of of the collection.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.rename = function(newName, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options, { readPreference: ReadPreference.PRIMARY });\n\n  return executeOperation(this.s.topology, rename, [this, newName, options, callback]);\n};\n\n/**\n * Drop the collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.drop = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, this.s.db.dropCollection.bind(this.s.db), [\n    this.s.name,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Returns the options of the collection.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.options = function(opts, callback) {\n  if (typeof opts === 'function') (callback = opts), (opts = {});\n  opts = opts || {};\n\n  return executeOperation(this.s.topology, optionsOp, [this, opts, callback]);\n};\n\n/**\n * Returns if the collection is a capped collection\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.isCapped = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, isCapped, [this, options, callback]);\n};\n\n/**\n * Creates an index on the db and collection collection.\n * @method\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {string} [options.name] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.createIndex = function(fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, createIndex, [this, fieldOrSpec, options, callback]);\n};\n\n/**\n * Creates multiple indexes in the collection, this method is only supported for\n * MongoDB 2.6 or higher. Earlier version of MongoDB will throw a command not supported\n * error. Index specifications are defined at http://docs.mongodb.org/manual/reference/command/createIndexes/.\n * @method\n * @param {array} indexSpecs An array of index specifications to be created\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.createIndexes = function(indexSpecs, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n\n  options = options ? Object.assign({}, options) : {};\n  if (typeof options.maxTimeMS !== 'number') delete options.maxTimeMS;\n\n  return executeOperation(this.s.topology, createIndexes, [this, indexSpecs, options, callback]);\n};\n\n/**\n * Drops an index from this collection.\n * @method\n * @param {string} indexName Name of the index to drop.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndex = function(indexName, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  options = args.length ? args.shift() || {} : {};\n  // Run only against primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  return executeOperation(this.s.topology, dropIndex, [this, indexName, options, callback]);\n};\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.dropIndexes = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? Object.assign({}, options) : {};\n\n  if (typeof options.maxTimeMS !== 'number') delete options.maxTimeMS;\n\n  return executeOperation(this.s.topology, dropIndexes, [this, options, callback]);\n};\n\n/**\n * Drops all indexes from this collection.\n * @method\n * @deprecated use dropIndexes\n * @param {Collection~resultCallback} callback The command result callback\n * @return {Promise} returns Promise if no [callback] passed\n */\nCollection.prototype.dropAllIndexes = deprecate(\n  Collection.prototype.dropIndexes,\n  'collection.dropAllIndexes is deprecated. Use dropIndexes instead.'\n);\n\n/**\n * Reindex all indexes on the collection\n * Warning: reIndex is a blocking operation (indexes are rebuilt in the foreground) and will be slow for large collections.\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.reIndex = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, reIndex, [this, options, callback]);\n};\n\n/**\n * Get the list of all indexes information for the collection.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {number} [options.batchSize] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {CommandCursor}\n */\nCollection.prototype.listIndexes = function(options) {\n  options = options || {};\n  // Clone the options\n  options = Object.assign({}, options);\n  // Determine the read preference in the options.\n  options.readPreference = resolveReadPreference(options, { db: this.s.db, collection: this });\n  // Set the CommandCursor constructor\n  options.cursorFactory = CommandCursor;\n  // Set the promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  if (!this.s.topology.capabilities()) {\n    throw new MongoError('cannot connect to server');\n  }\n\n  // Cursor options\n  let cursor = options.batchSize ? { batchSize: options.batchSize } : {};\n\n  // We have a list collections command\n  if (this.s.topology.capabilities().hasListIndexesCommand) {\n    // Build the command\n    const command = { listIndexes: this.s.name, cursor: cursor };\n    // Execute the cursor\n    cursor = this.s.topology.cursor(`${this.s.dbName}.$cmd`, command, options);\n    // Do we have a readPreference, apply it\n    if (options.readPreference) cursor.setReadPreference(options.readPreference);\n    // Return the cursor\n    return cursor;\n  }\n\n  // Get the namespace\n  const ns = `${this.s.dbName}.system.indexes`;\n  // Get the query\n  cursor = this.s.topology.cursor(ns, { find: ns, query: { ns: this.s.namespace } }, options);\n  // Do we have a readPreference, apply it\n  if (options.readPreference) cursor.setReadPreference(options.readPreference);\n  // Set the passed in batch size if one was provided\n  if (options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // Return the cursor\n  return cursor;\n};\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated use createIndexes instead\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.ensureIndex = deprecate(function(fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, ensureIndex, [this, fieldOrSpec, options, callback]);\n}, 'collection.ensureIndex is deprecated. Use createIndexes instead.');\n\n/**\n * Checks if one or more indexes exist on the collection, fails on first non-existing index\n * @method\n * @param {(string|array)} indexes One or more index names to check.\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexExists = function(indexes, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, indexExists, [this, indexes, options, callback]);\n};\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexInformation = function(options, callback) {\n  const args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, indexInformation, [this, options, callback]);\n};\n\n/**\n * The callback format for results\n * @callback Collection~countCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} result The count of documents that matched the query.\n */\n\n/**\n * Count number of matching documents in the db to a query.\n * @method\n * @param {object} [query={}] The query for the count.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.limit] The limit of documents to count.\n * @param {boolean} [options.skip] The number of documents to skip for the count.\n * @param {string} [options.hint] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~countCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use {@link Collection#countDocuments countDocuments} or {@link Collection#estimatedDocumentCount estimatedDocumentCount} instead\n */\nCollection.prototype.count = deprecate(function(query, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  query = args.length ? args.shift() || {} : {};\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, count, [this, query, options, callback]);\n}, 'collection.count is deprecated, and will be removed in a future version.' +\n  ' Use collection.countDocuments or collection.estimatedDocumentCount instead');\n\n/**\n * Gets an estimate of the count of documents in a collection using collection metadata.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the operation to run.\n * @param {Collection~countCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed.\n */\nCollection.prototype.estimatedDocumentCount = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, count, [this, null, options, callback]);\n};\n\n/**\n * Gets the number of documents matching the filter.\n *\n * **Note**: When migrating from {@link Collection#count count} to {@link Collection#countDocuments countDocuments}\n * the following query operators must be replaced:\n *\n * | Operator | Replacement |\n * | -------- | ----------- |\n * | `$where`   | [`$expr`][1] |\n * | `$near`    | [`$geoWithin`][2] with [`$center`][3] |\n * | `$nearSphere` | [`$geoWithin`][2] with [`$centerSphere`][4] |\n *\n * [1]: https://docs.mongodb.com/manual/reference/operator/query/expr/\n * [2]: https://docs.mongodb.com/manual/reference/operator/query/geoWithin/\n * [3]: https://docs.mongodb.com/manual/reference/operator/query/center/#op._S_center\n * [4]: https://docs.mongodb.com/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n *\n * @param {object} [query] the query for the count\n * @param {object} [options] Optional settings.\n * @param {object} [options.collation] Specifies a collation.\n * @param {string|object} [options.hint] The index to use.\n * @param {number} [options.limit] The maximum number of document to count.\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the operation to run.\n * @param {number} [options.skip] The number of documents to skip before counting.\n * @param {Collection~countCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed.\n * @see https://docs.mongodb.com/manual/reference/operator/query/expr/\n * @see https://docs.mongodb.com/manual/reference/operator/query/geoWithin/\n * @see https://docs.mongodb.com/manual/reference/operator/query/center/#op._S_center\n * @see https://docs.mongodb.com/manual/reference/operator/query/centerSphere/#op._S_centerSphere\n */\n\nCollection.prototype.countDocuments = function(query, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  query = args.length ? args.shift() || {} : {};\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, countDocuments, [this, query, options, callback]);\n};\n\n/**\n * The distinct command returns returns a list of distinct values for the given key across a collection.\n * @method\n * @param {string} key Field of the document to find distinct values for.\n * @param {object} query The query for filtering the set of documents to which we apply the distinct filter.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS] Number of miliseconds to wait before aborting the query.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.distinct = function(key, query, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  const queryOption = args.length ? args.shift() || {} : {};\n  const optionsOption = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, distinct, [\n    this,\n    key,\n    queryOption,\n    optionsOption,\n    callback\n  ]);\n};\n\n/**\n * Retrieve all the indexes on the collection.\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.indexes = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, indexes, [this, options, callback]);\n};\n\n/**\n * Get all the collection statistics.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {number} [options.scale] Divide the returned sizes by scale value.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.stats = function(options, callback) {\n  const args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, stats, [this, options, callback]);\n};\n\n/**\n * @typedef {Object} Collection~findAndModifyWriteOpResult\n * @property {object} value Document returned from findAndModify command.\n * @property {object} lastErrorObject The raw lastErrorObject returned from the command.\n * @property {Number} ok Is 1 if the command executed correctly.\n */\n\n/**\n * The callback format for inserts\n * @callback Collection~findAndModifyCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection~findAndModifyWriteOpResult} result The result object if the command was executed successfully.\n */\n\n/**\n * Find a document and delete it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter The Filter used to select the document to remove\n * @param {object} [options] Optional settings.\n * @param {object} [options.projection] Limits the fields to return for all matching documents.\n * @param {object} [options.sort] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the query to run.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise<Collection~findAndModifyWriteOpResultObject>} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndDelete = function(filter, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Basic validation\n  if (filter == null || typeof filter !== 'object')\n    throw toError('filter parameter must be an object');\n\n  return executeOperation(this.s.topology, findOneAndDelete, [this, filter, options, callback]);\n};\n\n/**\n * Find a document and replace it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter The Filter used to select the document to replace\n * @param {object} replacement The Document that replaces the matching document\n * @param {object} [options] Optional settings.\n * @param {object} [options.projection] Limits the fields to return for all matching documents.\n * @param {object} [options.sort] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise<Collection~findAndModifyWriteOpResultObject>} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndReplace = function(filter, replacement, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Basic validation\n  if (filter == null || typeof filter !== 'object')\n    throw toError('filter parameter must be an object');\n  if (replacement == null || typeof replacement !== 'object')\n    throw toError('replacement parameter must be an object');\n\n  return executeOperation(this.s.topology, findOneAndReplace, [\n    this,\n    filter,\n    replacement,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Find a document and update it in one atomic operation. Requires a write lock for the duration of the operation.\n *\n * @method\n * @param {object} filter The Filter used to select the document to update\n * @param {object} update Update operations to be performed on the document\n * @param {object} [options] Optional settings.\n * @param {object} [options.projection] Limits the fields to return for all matching documents.\n * @param {object} [options.sort] Determines which document the operation modifies if the query selects multiple documents.\n * @param {number} [options.maxTimeMS] The maximum amount of time to allow the query to run.\n * @param {boolean} [options.upsert=false] Upsert the document if it does not exist.\n * @param {boolean} [options.returnOriginal=true] When false, returns the updated document rather than the original. The default is true.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {Collection~findAndModifyCallback} [callback] The collection result callback\n * @return {Promise<Collection~findAndModifyWriteOpResultObject>} returns Promise if no callback passed\n */\nCollection.prototype.findOneAndUpdate = function(filter, update, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Basic validation\n  if (filter == null || typeof filter !== 'object')\n    throw toError('filter parameter must be an object');\n  if (update == null || typeof update !== 'object')\n    throw toError('update parameter must be an object');\n\n  const err = checkForAtomicOperators(update);\n  if (err) {\n    if (typeof callback === 'function') return callback(err);\n    return this.s.promiseLibrary.reject(err);\n  }\n\n  return executeOperation(this.s.topology, findOneAndUpdate, [\n    this,\n    filter,\n    update,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Find and update a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} doc The fields/vals to be updated.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.remove=false] Set to true to remove the object before returning.\n * @param {boolean} [options.upsert=false] Perform an upsert operation.\n * @param {boolean} [options.new=false] Set to true if you want to return the modified object rather than the original. Ignored for remove.\n * @param {object} [options.projection] Object containing the field projection for the result returned from the operation.\n * @param {object} [options.fields] **Deprecated** Use `options.projection` instead\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Array} [options.arrayFilters] optional list of array filters referenced in filtered positional operators\n * @param {Collection~findAndModifyCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead\n */\nCollection.prototype.findAndModify = deprecate(function(query, sort, doc, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  sort = args.length ? args.shift() || [] : [];\n  doc = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Clone options\n  options = Object.assign({}, options);\n  // Force read preference primary\n  options.readPreference = ReadPreference.PRIMARY;\n\n  return executeOperation(this.s.topology, findAndModify, [\n    this,\n    query,\n    sort,\n    doc,\n    options,\n    callback\n  ]);\n}, 'collection.findAndModify is deprecated. Use findOneAndUpdate, findOneAndReplace or findOneAndDelete instead.');\n\n/**\n * Find and remove a document.\n * @method\n * @param {object} query Query object to locate the object to modify.\n * @param {array} sort If multiple docs match, choose the first one in the specified sort order as the object to manipulate.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated use findOneAndDelete instead\n */\nCollection.prototype.findAndRemove = deprecate(function(query, sort, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  sort = args.length ? args.shift() || [] : [];\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, findAndRemove, [this, query, sort, options, callback]);\n}, 'collection.findAndRemove is deprecated. Use findOneAndDelete instead.');\n\n/**\n * Execute an aggregation framework pipeline against the collection, needs MongoDB >= 2.2\n * @method\n * @param {object} [pipeline=[]] Array containing all the aggregation framework commands for the execution.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.cursor] Return the query as cursor, on 2.6 > it returns as a real cursor on pre 2.6 it returns as an emulated cursor.\n * @param {number} [options.cursor.batchSize] The batchSize for the cursor\n * @param {boolean} [options.explain=false] Explain returns the aggregation execution plan (requires mongodb 2.6 >).\n * @param {boolean} [options.allowDiskUse=false] allowDiskUse lets the server know if it can use disk to store temporary results for the aggregation (requires mongodb 2.6 >).\n * @param {number} [options.maxTimeMS] maxTimeMS specifies a cumulative time limit in milliseconds for processing operations on the cursor. MongoDB interrupts the operation at the earliest following interrupt point.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {string} [options.comment] Add a comment to an aggregation command\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~aggregationCallback} callback The command result callback\n * @return {(null|AggregationCursor)}\n */\nCollection.prototype.aggregate = function(pipeline, options, callback) {\n  if (Array.isArray(pipeline)) {\n    // Set up callback if one is provided\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    // If we have no options or callback we are doing\n    // a cursor based aggregation\n    if (options == null && callback == null) {\n      options = {};\n    }\n  } else {\n    // Aggregation pipeline passed as arguments on the method\n    const args = Array.prototype.slice.call(arguments, 0);\n    // Get the callback\n    callback = args.pop();\n    // Get the possible options object\n    const opts = args[args.length - 1];\n    // If it contains any of the admissible options pop it of the args\n    options =\n      opts &&\n      (opts.readPreference ||\n        opts.explain ||\n        opts.cursor ||\n        opts.out ||\n        opts.maxTimeMS ||\n        opts.hint ||\n        opts.allowDiskUse)\n        ? args.pop()\n        : {};\n    // Left over arguments is the pipeline\n    pipeline = args;\n  }\n\n  // Ignore readConcern option\n  let ignoreReadConcern = false;\n\n  // Build the command\n  const command = { aggregate: this.s.name, pipeline: pipeline };\n\n  // If out was specified\n  if (typeof options.out === 'string') {\n    pipeline.push({ $out: options.out });\n    // Ignore read concern\n    ignoreReadConcern = true;\n  } else if (pipeline.length > 0 && pipeline[pipeline.length - 1]['$out']) {\n    ignoreReadConcern = true;\n  }\n\n  // Decorate command with writeConcern if out has been specified\n  if (\n    pipeline.length > 0 &&\n    pipeline[pipeline.length - 1]['$out'] &&\n    this.s.topology.capabilities().commandsTakeWriteConcern\n  ) {\n    applyWriteConcern(command, { db: this.s.db, collection: this }, options);\n  }\n\n  // Have we specified collation\n  try {\n    decorateWithCollation(command, this, options);\n  } catch (err) {\n    if (typeof callback === 'function') return callback(err, null);\n    throw err;\n  }\n\n  // If we have bypassDocumentValidation set\n  if (options.bypassDocumentValidation === true) {\n    command.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Do we have a readConcern specified\n  if (!ignoreReadConcern) {\n    decorateWithReadConcern(command, this, options);\n  }\n\n  // If we have allowDiskUse defined\n  if (options.allowDiskUse) command.allowDiskUse = options.allowDiskUse;\n  if (typeof options.maxTimeMS === 'number') command.maxTimeMS = options.maxTimeMS;\n\n  // If we are giving a hint\n  if (options.hint) command.hint = options.hint;\n\n  options = Object.assign({}, options);\n  // Ensure we have the right read preference inheritance\n  options.readPreference = resolveReadPreference(options, { db: this.s.db, collection: this });\n\n  // If explain has been specified add it\n  if (options.explain) {\n    if (command.readConcern || command.writeConcern) {\n      throw toError('\"explain\" cannot be used on an aggregate call with readConcern/writeConcern');\n    }\n    command.explain = options.explain;\n  }\n\n  if (typeof options.comment === 'string') command.comment = options.comment;\n\n  // Validate that cursor options is valid\n  if (options.cursor != null && typeof options.cursor !== 'object') {\n    throw toError('cursor options must be an object');\n  }\n\n  options.cursor = options.cursor || {};\n  if (options.batchSize) options.cursor.batchSize = options.batchSize;\n  command.cursor = options.cursor;\n\n  // promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Set the AggregationCursor constructor\n  options.cursorFactory = AggregationCursor;\n  if (typeof callback !== 'function') {\n    if (!this.s.topology.capabilities()) {\n      throw new MongoError('cannot connect to server');\n    }\n\n    // Allow disk usage command\n    if (typeof options.allowDiskUse === 'boolean') command.allowDiskUse = options.allowDiskUse;\n    if (typeof options.maxTimeMS === 'number') command.maxTimeMS = options.maxTimeMS;\n\n    // Execute the cursor\n    return this.s.topology.cursor(this.s.namespace, command, options);\n  }\n\n  return handleCallback(callback, null, this.s.topology.cursor(this.s.namespace, command, options));\n};\n\n/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this collection.\n * @method\n * @since 3.0.0\n * @param {Array} [pipeline] An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n * @param {object} [options] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {object} [options.resumeAfter] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {number} [options.batchSize] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference] The read preference. Defaults to the read preference of the database or collection. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @param {Timestamp} [options.startAtClusterTime] receive change events that occur after the specified timestamp\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {ChangeStream} a ChangeStream instance.\n */\nCollection.prototype.watch = function(pipeline, options) {\n  pipeline = pipeline || [];\n  options = options || {};\n\n  // Allow optionally not specifying a pipeline\n  if (!Array.isArray(pipeline)) {\n    options = pipeline;\n    pipeline = [];\n  }\n\n  return new ChangeStream(this, pipeline, options);\n};\n\n/**\n * The callback format for results\n * @callback Collection~parallelCollectionScanCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Cursor[]} cursors A list of cursors returned allowing for parallel reading of collection.\n */\n\n/**\n * Return N number of parallel cursors for a collection allowing parallel reading of entire collection. There are\n * no ordering guarantees for returned results.\n * @method\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.batchSize] Set the batchSize for the getMoreCommand when iterating over the query results.\n * @param {number} [options.numCursors=1] The maximum number of parallel command cursors to return (the number of returned cursors will be in the range 1:numCursors)\n * @param {boolean} [options.raw=false] Return all BSON documents as Raw Buffer documents.\n * @param {Collection~parallelCollectionScanCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.parallelCollectionScan = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = { numCursors: 1 });\n  // Set number of cursors to 1\n  options.numCursors = options.numCursors || 1;\n  options.batchSize = options.batchSize || 1000;\n\n  options = Object.assign({}, options);\n  // Ensure we have the right read preference inheritance\n  options.readPreference = resolveReadPreference(options, { db: this.s.db, collection: this });\n\n  // Add a promiseLibrary\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  if (options.session) {\n    options.session = undefined;\n  }\n\n  return executeOperation(this.s.topology, parallelCollectionScan, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * Execute a geo search using a geo haystack index on a collection.\n *\n * @method\n * @param {number} x Point to search on the x axis, ensure the indexes are ordered in the same order.\n * @param {number} y Point to search on the y axis, ensure the indexes are ordered in the same order.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxDistance] Include results up to maxDistance from the point.\n * @param {object} [options.search] Filter the results by a query.\n * @param {number} [options.limit=false] Max number of results to return.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.geoHaystackSearch = function(x, y, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, geoHaystackSearch, [this, x, y, options, callback]);\n};\n\n/**\n * Run a group command across a collection\n *\n * @method\n * @param {(object|array|function|code)} keys An object, array or function expressing the keys to group by.\n * @param {object} condition An optional condition that must be true for a row to be considered.\n * @param {object} initial Initial value of the aggregation counter object.\n * @param {(function|Code)} reduce The reduce function aggregates (reduces) the objects iterated\n * @param {(function|Code)} finalize An optional function to be run on each item in the result set just before the item is returned.\n * @param {boolean} command Specify if you wish to run using the internal group command or using eval, default is true.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n * @deprecated MongoDB 3.6 or higher no longer supports the group command. We recommend rewriting using the aggregation framework.\n */\nCollection.prototype.group = deprecate(function(\n  keys,\n  condition,\n  initial,\n  reduce,\n  finalize,\n  command,\n  options,\n  callback\n) {\n  const args = Array.prototype.slice.call(arguments, 3);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  reduce = args.length ? args.shift() : null;\n  finalize = args.length ? args.shift() : null;\n  command = args.length ? args.shift() : null;\n  options = args.length ? args.shift() || {} : {};\n\n  // Make sure we are backward compatible\n  if (!(typeof finalize === 'function')) {\n    command = finalize;\n    finalize = null;\n  }\n\n  if (\n    !Array.isArray(keys) &&\n    keys instanceof Object &&\n    typeof keys !== 'function' &&\n    !(keys._bsontype === 'Code')\n  ) {\n    keys = Object.keys(keys);\n  }\n\n  if (typeof reduce === 'function') {\n    reduce = reduce.toString();\n  }\n\n  if (typeof finalize === 'function') {\n    finalize = finalize.toString();\n  }\n\n  // Set up the command as default\n  command = command == null ? true : command;\n\n  return executeOperation(this.s.topology, group, [\n    this,\n    keys,\n    condition,\n    initial,\n    reduce,\n    finalize,\n    command,\n    options,\n    callback\n  ]);\n},\n'MongoDB 3.6 or higher no longer supports the group command. We recommend rewriting using the aggregation framework.');\n\n/**\n * Run Map Reduce across a collection. Be aware that the inline option for out will return an array of results not a collection.\n *\n * @method\n * @param {(function|string)} map The mapping function.\n * @param {(function|string)} reduce The reduce function.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.out] Sets the output target for the map reduce job. *{inline:1} | {replace:'collectionName'} | {merge:'collectionName'} | {reduce:'collectionName'}*\n * @param {object} [options.query] Query filter object.\n * @param {object} [options.sort] Sorts the input objects using this key. Useful for optimization, like sorting by the emit key for fewer reduces.\n * @param {number} [options.limit] Number of objects to return from collection.\n * @param {boolean} [options.keeptemp=false] Keep temporary data.\n * @param {(function|string)} [options.finalize] Finalize function.\n * @param {object} [options.scope] Can pass in variables that can be access from map/reduce/finalize.\n * @param {boolean} [options.jsMode=false] It is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X.\n * @param {boolean} [options.verbose=false] Provide statistics on job execution time.\n * @param {boolean} [options.bypassDocumentValidation=false] Allow driver to bypass schema validation in MongoDB 3.2 or higher.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Collection~resultCallback} [callback] The command result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCollection.prototype.mapReduce = function(map, reduce, options, callback) {\n  if ('function' === typeof options) (callback = options), (options = {});\n  // Out must allways be defined (make sure we don't break weirdly on pre 1.8+ servers)\n  if (null == options.out) {\n    throw new Error(\n      'the out option parameter must be defined, see mongodb docs for possible values'\n    );\n  }\n\n  if ('function' === typeof map) {\n    map = map.toString();\n  }\n\n  if ('function' === typeof reduce) {\n    reduce = reduce.toString();\n  }\n\n  if ('function' === typeof options.finalize) {\n    options.finalize = options.finalize.toString();\n  }\n\n  return executeOperation(this.s.topology, mapReduce, [this, map, reduce, options, callback]);\n};\n\n/**\n * Initiate an Out of order batch write operation. All operations will be buffered into insert/update/remove commands executed out of order.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {UnorderedBulkOperation}\n */\nCollection.prototype.initializeUnorderedBulkOp = function(options) {\n  options = options || {};\n  options.promiseLibrary = this.s.promiseLibrary;\n  return unordered(this.s.topology, this, options);\n};\n\n/**\n * Initiate an In order bulk write operation. Operations will be serially executed in the order they are added, creating a new operation for each switch in types.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {OrderedBulkOperation} callback The command result callback\n * @return {null}\n */\nCollection.prototype.initializeOrderedBulkOp = function(options) {\n  options = options || {};\n  options.promiseLibrary = this.s.promiseLibrary;\n  return ordered(this.s.topology, this, options);\n};\n\n/**\n * Return the db logger\n * @method\n * @return {Logger} return the db logger\n * @ignore\n */\nCollection.prototype.getLogger = function() {\n  return this.s.db.s.logger;\n};\n\nmodule.exports = Collection;\n","'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\nconst inherits = require('util').inherits;\nconst getSingleProperty = require('./utils').getSingleProperty;\nconst CommandCursor = require('./command_cursor');\nconst handleCallback = require('./utils').handleCallback;\nconst filterOptions = require('./utils').filterOptions;\nconst toError = require('./utils').toError;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst MongoError = require('mongodb-core').MongoError;\nconst ObjectID = require('mongodb-core').ObjectID;\nconst Logger = require('mongodb-core').Logger;\nconst Collection = require('./collection');\nconst mergeOptionsAndWriteConcern = require('./utils').mergeOptionsAndWriteConcern;\nconst executeOperation = require('./utils').executeOperation;\nconst applyWriteConcern = require('./utils').applyWriteConcern;\nconst resolveReadPreference = require('./utils').resolveReadPreference;\nconst ChangeStream = require('./change_stream');\nconst deprecate = require('util').deprecate;\nconst deprecateOptions = require('./utils').deprecateOptions;\nconst CONSTANTS = require('./constants');\n\n// Operations\nconst addUser = require('./operations/db_ops').addUser;\nconst collections = require('./operations/db_ops').collections;\nconst createCollection = require('./operations/db_ops').createCollection;\nconst createIndex = require('./operations/db_ops').createIndex;\nconst createListener = require('./operations/db_ops').createListener;\nconst dropCollection = require('./operations/db_ops').dropCollection;\nconst dropDatabase = require('./operations/db_ops').dropDatabase;\nconst ensureIndex = require('./operations/db_ops').ensureIndex;\nconst evaluate = require('./operations/db_ops').evaluate;\nconst executeCommand = require('./operations/db_ops').executeCommand;\nconst executeDbAdminCommand = require('./operations/db_ops').executeDbAdminCommand;\nconst indexInformation = require('./operations/db_ops').indexInformation;\nconst listCollectionsTransforms = require('./operations/db_ops').listCollectionsTransforms;\nconst profilingInfo = require('./operations/db_ops').profilingInfo;\nconst profilingLevel = require('./operations/db_ops').profilingLevel;\nconst removeUser = require('./operations/db_ops').removeUser;\nconst setProfilingLevel = require('./operations/db_ops').setProfilingLevel;\nconst validateDatabaseName = require('./operations/db_ops').validateDatabaseName;\n\n/**\n * @fileOverview The **Db** class is a class that represents a MongoDB Database.\n *\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Select the database by name\n *   const testDb = client.db(dbName);\n *   client.close();\n * });\n */\n\n// Allowed parameters\nconst legalOptionNames = [\n  'w',\n  'wtimeout',\n  'fsync',\n  'j',\n  'readPreference',\n  'readPreferenceTags',\n  'native_parser',\n  'forceServerObjectId',\n  'pkFactory',\n  'serializeFunctions',\n  'raw',\n  'bufferMaxEntries',\n  'authSource',\n  'ignoreUndefined',\n  'promoteLongs',\n  'promiseLibrary',\n  'readConcern',\n  'retryMiliSeconds',\n  'numberOfRetries',\n  'parentDb',\n  'noListener',\n  'loggerLevel',\n  'logger',\n  'promoteBuffers',\n  'promoteLongs',\n  'promoteValues',\n  'compression',\n  'retryWrites'\n];\n\n/**\n * Creates a new Db instance\n * @class\n * @param {string} databaseName The name of the database this instance represents.\n * @param {(Server|ReplSet|Mongos)} topology The server topology for the database.\n * @param {object} [options] Optional settings.\n * @param {string} [options.authSource] If the database authentication is dependent on another databaseName.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver.\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {boolean} [options.promoteLongs=true] Promotes Long values to number if they fit inside the 53 bits resolution.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys.\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @property {(Server|ReplSet|Mongos)} serverConfig Get the current db topology.\n * @property {number} bufferMaxEntries Current bufferMaxEntries value for the database\n * @property {string} databaseName The name of the database this instance represents.\n * @property {object} options The options associated with the db instance.\n * @property {boolean} native_parser The current value of the parameter native_parser.\n * @property {boolean} slaveOk The current slaveOk value for the db instance.\n * @property {object} writeConcern The current write concern values.\n * @property {object} topology Access the topology object (single server, replicaset or mongos).\n * @fires Db#close\n * @fires Db#reconnect\n * @fires Db#error\n * @fires Db#timeout\n * @fires Db#parseError\n * @fires Db#fullsetup\n * @return {Db} a Db instance.\n */\nfunction Db(databaseName, topology, options) {\n  options = options || {};\n  if (!(this instanceof Db)) return new Db(databaseName, topology, options);\n  EventEmitter.call(this);\n\n  // Get the promiseLibrary\n  const promiseLibrary = options.promiseLibrary || Promise;\n\n  // Filter the options\n  options = filterOptions(options, legalOptionNames);\n\n  // Ensure we put the promiseLib in the options\n  options.promiseLibrary = promiseLibrary;\n\n  // Internal state of the db object\n  this.s = {\n    // Database name\n    databaseName: databaseName,\n    // DbCache\n    dbCache: {},\n    // Children db's\n    children: [],\n    // Topology\n    topology: topology,\n    // Options\n    options: options,\n    // Logger instance\n    logger: Logger('Db', options),\n    // Get the bson parser\n    bson: topology ? topology.bson : null,\n    // Unpack read preference\n    readPreference: options.readPreference,\n    // Set buffermaxEntries\n    bufferMaxEntries: typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : -1,\n    // Parent db (if chained)\n    parentDb: options.parentDb || null,\n    // Set up the primary key factory or fallback to ObjectID\n    pkFactory: options.pkFactory || ObjectID,\n    // Get native parser\n    nativeParser: options.nativeParser || options.native_parser,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // No listener\n    noListener: typeof options.noListener === 'boolean' ? options.noListener : false,\n    // ReadConcern\n    readConcern: options.readConcern\n  };\n\n  // Ensure we have a valid db name\n  validateDatabaseName(this.s.databaseName);\n\n  // Add a read Only property\n  getSingleProperty(this, 'serverConfig', this.s.topology);\n  getSingleProperty(this, 'bufferMaxEntries', this.s.bufferMaxEntries);\n  getSingleProperty(this, 'databaseName', this.s.databaseName);\n\n  // This is a child db, do not register any listeners\n  if (options.parentDb) return;\n  if (this.s.noListener) return;\n\n  // Add listeners\n  topology.on('error', createListener(this, 'error', this));\n  topology.on('timeout', createListener(this, 'timeout', this));\n  topology.on('close', createListener(this, 'close', this));\n  topology.on('parseError', createListener(this, 'parseError', this));\n  topology.once('open', createListener(this, 'open', this));\n  topology.once('fullsetup', createListener(this, 'fullsetup', this));\n  topology.once('all', createListener(this, 'all', this));\n  topology.on('reconnect', createListener(this, 'reconnect', this));\n}\n\ninherits(Db, EventEmitter);\n\n// Topology\nObject.defineProperty(Db.prototype, 'topology', {\n  enumerable: true,\n  get: function() {\n    return this.s.topology;\n  }\n});\n\n// Options\nObject.defineProperty(Db.prototype, 'options', {\n  enumerable: true,\n  get: function() {\n    return this.s.options;\n  }\n});\n\n// slaveOk specified\nObject.defineProperty(Db.prototype, 'slaveOk', {\n  enumerable: true,\n  get: function() {\n    if (\n      this.s.options.readPreference != null &&\n      (this.s.options.readPreference !== 'primary' ||\n        this.s.options.readPreference.mode !== 'primary')\n    ) {\n      return true;\n    }\n    return false;\n  }\n});\n\n// get the write Concern\nObject.defineProperty(Db.prototype, 'writeConcern', {\n  enumerable: true,\n  get: function() {\n    const ops = {};\n    if (this.s.options.w != null) ops.w = this.s.options.w;\n    if (this.s.options.j != null) ops.j = this.s.options.j;\n    if (this.s.options.fsync != null) ops.fsync = this.s.options.fsync;\n    if (this.s.options.wtimeout != null) ops.wtimeout = this.s.options.wtimeout;\n    return ops;\n  }\n});\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.command = function(command, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, options);\n\n  return executeOperation(this.s.topology, executeCommand, [this, command, options, callback]);\n};\n\n/**\n * Return the Admin db instance\n * @method\n * @return {Admin} return the new Admin db instance\n */\nDb.prototype.admin = function() {\n  const Admin = require('./admin');\n\n  return new Admin(this, this.s.topology, this.s.promiseLibrary);\n};\n\n/**\n * The callback format for the collection method, must be used if strict is specified\n * @callback Db~collectionResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection instance.\n */\n\nconst collectionKeys = [\n  'pkFactory',\n  'readPreference',\n  'serializeFunctions',\n  'strict',\n  'readConcern',\n  'ignoreUndefined',\n  'promoteValues',\n  'promoteBuffers',\n  'promoteLongs'\n];\n\n/**\n * Fetch a specific collection (containing the actual collection information). If the application does not use strict mode you\n * can use it without a callback in the following way: `const collection = db.collection('mycollection');`\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {object} [options.readConcern] Specify a read concern for the collection. (only MongoDB 3.2 or higher supported)\n * @param {object} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {Db~collectionResultCallback} [callback] The collection result callback\n * @return {Collection} return the new Collection instance if not in strict mode\n */\nDb.prototype.collection = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  options = Object.assign({}, options);\n\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // If we have not set a collection level readConcern set the db level one\n  options.readConcern = options.readConcern || this.s.readConcern;\n\n  // Do we have ignoreUndefined set\n  if (this.s.options.ignoreUndefined) {\n    options.ignoreUndefined = this.s.options.ignoreUndefined;\n  }\n\n  // Merge in all needed options and ensure correct writeConcern merging from db level\n  options = mergeOptionsAndWriteConcern(options, this.s.options, collectionKeys, true);\n\n  // Execute\n  if (options == null || !options.strict) {\n    try {\n      const collection = new Collection(\n        this,\n        this.s.topology,\n        this.s.databaseName,\n        name,\n        this.s.pkFactory,\n        options\n      );\n      if (callback) callback(null, collection);\n      return collection;\n    } catch (err) {\n      if (err instanceof MongoError && callback) return callback(err);\n      throw err;\n    }\n  }\n\n  // Strict mode\n  if (typeof callback !== 'function') {\n    throw toError(`A callback is required in strict mode. While getting collection ${name}`);\n  }\n\n  // Did the user destroy the topology\n  if (this.serverConfig && this.serverConfig.isDestroyed()) {\n    return callback(new MongoError('topology was destroyed'));\n  }\n\n  const listCollectionOptions = Object.assign({}, options, { nameOnly: true });\n\n  // Strict mode\n  this.listCollections({ name: name }, listCollectionOptions).toArray((err, collections) => {\n    if (err != null) return handleCallback(callback, err, null);\n    if (collections.length === 0)\n      return handleCallback(\n        callback,\n        toError(`Collection ${name} does not exist. Currently in strict mode.`),\n        null\n      );\n\n    try {\n      return handleCallback(\n        callback,\n        null,\n        new Collection(this, this.s.topology, this.s.databaseName, name, this.s.pkFactory, options)\n      );\n    } catch (err) {\n      return handleCallback(callback, err, null);\n    }\n  });\n};\n\n/**\n * Create a new collection on a server with the specified options. Use this to create capped collections.\n * More information about command options available at https://docs.mongodb.com/manual/reference/command/create/\n *\n * @method\n * @param {string} name the collection name we wish to access.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers.\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object.\n * @param {boolean} [options.strict=false] Returns an error if the collection does not exist\n * @param {boolean} [options.capped=false] Create a capped collection.\n * @param {boolean} [options.autoIndexId=true] DEPRECATED: Create an index on the _id field of the document, True by default on MongoDB 2.6 - 3.0\n * @param {number} [options.size] The size of the capped collection in bytes.\n * @param {number} [options.max] The maximum number of documents in the capped collection.\n * @param {number} [options.flags] Optional. Available for the MMAPv1 storage engine only to set the usePowerOf2Sizes and the noPadding flag.\n * @param {object} [options.storageEngine] Allows users to specify configuration to the storage engine on a per-collection basis when creating a collection on MongoDB 3.0 or higher.\n * @param {object} [options.validator] Allows users to specify validation rules or expressions for the collection. For more information, see Document Validation on MongoDB 3.2 or higher.\n * @param {string} [options.validationLevel] Determines how strictly MongoDB applies the validation rules to existing documents during an update on MongoDB 3.2 or higher.\n * @param {string} [options.validationAction] Determines whether to error on invalid documents or just warn about the violations but allow invalid documents to be inserted on MongoDB 3.2 or higher.\n * @param {object} [options.indexOptionDefaults] Allows users to specify a default configuration for indexes when creating a collection on MongoDB 3.2 or higher.\n * @param {string} [options.viewOn] The name of the source collection or view from which to create the view. The name is not the full namespace of the collection or view; i.e. does not include the database name and implies the same database as the view to create on MongoDB 3.4 or higher.\n * @param {array} [options.pipeline] An array that consists of the aggregation pipeline stage. create creates the view by applying the specified pipeline to the viewOn collection or view on MongoDB 3.4 or higher.\n * @param {object} [options.collation] Specify collation (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createCollection = deprecateOptions(\n  {\n    name: 'Db.createCollection',\n    deprecatedOptions: ['autoIndexId'],\n    optionsIndex: 1\n  },\n  function(name, options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n    options.promiseLibrary = options.promiseLibrary || this.s.promiseLibrary;\n\n    return executeOperation(this.s.topology, createCollection, [this, name, options, callback]);\n  }\n);\n\n/**\n * Get all the db statistics.\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {number} [options.scale] Divide the returned sizes by scale value.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The collection result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.stats = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Build command object\n  const commandObject = { dbStats: true };\n  // Check if we have the scale value\n  if (options['scale'] != null) commandObject['scale'] = options['scale'];\n\n  // If we have a readPreference set\n  if (options.readPreference == null && this.s.readPreference) {\n    options.readPreference = this.s.readPreference;\n  }\n\n  // Execute the command\n  return this.command(commandObject, options, callback);\n};\n\n/**\n * Get the list of all collection information for the specified db.\n *\n * @method\n * @param {object} [filter={}] Query to filter collections by\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.nameOnly=false] Since 4.0: If true, will only return the collection name in the response, and will omit additional info\n * @param {number} [options.batchSize] The batchSize for the returned command cursor or if pre 2.8 the systems batch collection\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {CommandCursor}\n */\nDb.prototype.listCollections = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  // Shallow clone the object\n  options = Object.assign({}, options);\n  // Set the promise library\n  options.promiseLibrary = this.s.promiseLibrary;\n\n  // Ensure valid readPreference\n  options.readPreference = resolveReadPreference(options, {\n    db: this,\n    default: ReadPreference.primary\n  });\n\n  // Cursor options\n  let cursor = options.batchSize ? { batchSize: options.batchSize } : {};\n\n  // We have a list collections command\n  if (this.serverConfig.capabilities().hasListCollectionsCommand) {\n    const nameOnly = typeof options.nameOnly === 'boolean' ? options.nameOnly : false;\n    // Build the command\n    const command = { listCollections: true, filter, cursor, nameOnly };\n    // Set the AggregationCursor constructor\n    options.cursorFactory = CommandCursor;\n    // Create the cursor\n    cursor = this.s.topology.cursor(`${this.s.databaseName}.$cmd`, command, options);\n    // Do we have a readPreference, apply it\n    if (options.readPreference) {\n      cursor.setReadPreference(options.readPreference);\n    }\n    // Return the cursor\n    return cursor;\n  }\n\n  // We cannot use the listCollectionsCommand\n  if (!this.serverConfig.capabilities().hasListCollectionsCommand) {\n    // If we have legacy mode and have not provided a full db name filter it\n    if (\n      typeof filter.name === 'string' &&\n      !new RegExp('^' + this.databaseName + '\\\\.').test(filter.name)\n    ) {\n      filter = Object.assign({}, filter);\n      filter.name = `${this.s.databaseName}.${filter.name}`;\n    }\n  }\n\n  // No filter, filter by current database\n  if (filter == null) {\n    filter.name = `/${this.s.databaseName}/`;\n  }\n\n  // Rewrite the filter to use $and to filter out indexes\n  if (filter.name) {\n    filter = { $and: [{ name: filter.name }, { name: /^((?!\\$).)*$/ }] };\n  } else {\n    filter = { name: /^((?!\\$).)*$/ };\n  }\n\n  // Return options\n  const _options = { transforms: listCollectionsTransforms(this.s.databaseName) };\n  // Get the cursor\n  cursor = this.collection(CONSTANTS.SYSTEM_NAMESPACE_COLLECTION).find(filter, _options);\n  // Do we have a readPreference, apply it\n  if (options.readPreference) cursor.setReadPreference(options.readPreference);\n  // Set the passed in batch size if one was provided\n  if (options.batchSize) cursor = cursor.batchSize(options.batchSize);\n  // We have a fallback mode using legacy systems collections\n  return cursor;\n};\n\n/**\n * Evaluate JavaScript on the server\n *\n * @method\n * @param {Code} code JavaScript to execute on server.\n * @param {(object|array)} parameters The parameters for the call.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.nolock=false] Tell MongoDB not to block on the evaulation of the javascript.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @deprecated Eval is deprecated on MongoDB 3.2 and forward\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.eval = deprecate(function(code, parameters, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  parameters = args.length ? args.shift() : parameters;\n  options = args.length ? args.shift() || {} : {};\n\n  return executeOperation(this.s.topology, evaluate, [this, code, parameters, options, callback]);\n}, 'Db.eval is deprecated as of MongoDB version 3.2');\n\n/**\n * Rename a collection.\n *\n * @method\n * @param {string} fromCollection Name of current collection to rename.\n * @param {string} toCollection New name of of the collection.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.dropTarget=false] Drop the target name collection if it previously exists.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.renameCollection = function(fromCollection, toCollection, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Add return new collection\n  options.new_collection = true;\n\n  const collection = this.collection(fromCollection);\n  return executeOperation(this.s.topology, collection.rename.bind(collection), [\n    toCollection,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Drop a collection from the database, removing it permanently. New accesses will create a new collection.\n *\n * @method\n * @param {string} name Name of collection to drop\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropCollection = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Command to execute\n  const cmd = { drop: name };\n\n  // Decorate with write concern\n  applyWriteConcern(cmd, { db: this }, options);\n\n  // options\n  const opts = Object.assign({}, this.s.options, { readPreference: ReadPreference.PRIMARY });\n  if (options.session) opts.session = options.session;\n\n  return executeOperation(this.s.topology, dropCollection, [this, cmd, opts, callback]);\n};\n\n/**\n * Drop a database, removing it permanently from the server.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.dropDatabase = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  // Drop database command\n  const cmd = { dropDatabase: 1 };\n\n  // Decorate with write concern\n  applyWriteConcern(cmd, { db: this }, options);\n\n  // Ensure primary only\n  const finalOptions = Object.assign({}, this.s.options, {\n    readPreference: ReadPreference.PRIMARY\n  });\n\n  if (options.session) {\n    finalOptions.session = options.session;\n  }\n\n  return executeOperation(this.s.topology, dropDatabase, [this, cmd, finalOptions, callback]);\n};\n\n/**\n * Fetch all collections for the current db.\n *\n * @method\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~collectionsResultCallback} [callback] The results callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.collections = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, collections, [this, options, callback]);\n};\n\n/**\n * Runs a command on the database as admin.\n * @method\n * @param {object} command The command hash\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.executeDbAdminCommand = function(selector, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n  options.readPreference = resolveReadPreference(options);\n\n  return executeOperation(this.s.topology, executeDbAdminCommand, [\n    this,\n    selector,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Creates an index on the db and collection.\n * @method\n * @param {string} name Name of the collection to create the index on.\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {object} [options.partialFilterExpression] Creates a partial index based on the given filter object (MongoDB 3.2 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.createIndex = function(name, fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options ? Object.assign({}, options) : {};\n\n  return executeOperation(this.s.topology, createIndex, [\n    this,\n    name,\n    fieldOrSpec,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Ensures that an index exists, if it does not it creates it\n * @method\n * @deprecated since version 2.0\n * @param {string} name The index name\n * @param {(string|object)} fieldOrSpec Defines the index.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.unique=false] Creates an unique index.\n * @param {boolean} [options.sparse=false] Creates a sparse index.\n * @param {boolean} [options.background=false] Creates the index in the background, yielding whenever possible.\n * @param {boolean} [options.dropDups=false] A unique index cannot be created on a key that has pre-existing duplicate values. If you would like to create the index anyway, keeping the first document the database indexes and deleting all subsequent documents that have duplicate value\n * @param {number} [options.min] For geospatial indexes set the lower bound for the co-ordinates.\n * @param {number} [options.max] For geospatial indexes set the high bound for the co-ordinates.\n * @param {number} [options.v] Specify the format version of the indexes.\n * @param {number} [options.expireAfterSeconds] Allows you to expire data on indexes applied to a data (MongoDB 2.2 or higher)\n * @param {number} [options.name] Override the autogenerated index name (useful if the resulting name is larger than 128 bytes)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.ensureIndex = deprecate(function(name, fieldOrSpec, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, ensureIndex, [\n    this,\n    name,\n    fieldOrSpec,\n    options,\n    callback\n  ]);\n}, 'Db.ensureIndex is deprecated as of MongoDB version 3.0 / driver version 2.0');\n\nDb.prototype.addChild = function(db) {\n  if (this.s.parentDb) return this.s.parentDb.addChild(db);\n  this.s.children.push(db);\n};\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {object} [options.customData] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.addUser = function(username, password, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, addUser, [this, username, password, options, callback]);\n};\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.removeUser = function(username, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, removeUser, [this, username, options, callback]);\n};\n\n/**\n * Set the current profiling level of MongoDB\n *\n * @param {string} level The new profiling level (off, slow_only, all).\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.setProfilingLevel = function(level, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, setProfilingLevel, [this, level, options, callback]);\n};\n\n/**\n * Retrive the current profiling information for MongoDB\n *\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Query the system.profile collection directly.\n */\nDb.prototype.profilingInfo = deprecate(function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, profilingInfo, [this, options, callback]);\n}, 'Db.profilingInfo is deprecated. Query the system.profile collection directly.');\n\n/**\n * Retrieve the current profiling Level for MongoDB\n *\n * @param {Object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.profilingLevel = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, profilingLevel, [this, options, callback]);\n};\n\n/**\n * Retrieves this collections index info.\n * @method\n * @param {string} name The name of the collection.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.full=false] Returns the full raw index information.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nDb.prototype.indexInformation = function(name, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.topology, indexInformation, [this, name, options, callback]);\n};\n\n/**\n * Unref all sockets\n * @method\n */\nDb.prototype.unref = function() {\n  this.s.topology.unref();\n};\n\n/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this database. Will ignore all changes to system collections.\n * @method\n * @since 3.1.0\n * @param {Array} [pipeline] An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n * @param {object} [options] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {object} [options.resumeAfter] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {number} [options.batchSize] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference] The read preference. Defaults to the read preference of the database. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @param {Timestamp} [options.startAtClusterTime] receive change events that occur after the specified timestamp\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {ChangeStream} a ChangeStream instance.\n */\nDb.prototype.watch = function(pipeline, options) {\n  pipeline = pipeline || [];\n  options = options || {};\n\n  // Allow optionally not specifying a pipeline\n  if (!Array.isArray(pipeline)) {\n    options = pipeline;\n    pipeline = [];\n  }\n\n  return new ChangeStream(this, pipeline, options);\n};\n\n/**\n * Return the db logger\n * @method\n * @return {Logger} return the db logger\n * @ignore\n */\nDb.prototype.getLogger = function() {\n  return this.s.logger;\n};\n\n/**\n * Db close event\n *\n * Emitted after a socket closed against a single server or mongos proxy.\n *\n * @event Db#close\n * @type {MongoError}\n */\n\n/**\n * Db reconnect event\n *\n *  * Server: Emitted when the driver has reconnected and re-authenticated.\n *  * ReplicaSet: N/A\n *  * Mongos: Emitted when the driver reconnects and re-authenticates successfully against a Mongos.\n *\n * @event Db#reconnect\n * @type {object}\n */\n\n/**\n * Db error event\n *\n * Emitted after an error occurred against a single server or mongos proxy.\n *\n * @event Db#error\n * @type {MongoError}\n */\n\n/**\n * Db timeout event\n *\n * Emitted after a socket timeout occurred against a single server or mongos proxy.\n *\n * @event Db#timeout\n * @type {MongoError}\n */\n\n/**\n * Db parseError event\n *\n * The parseError event is emitted if the driver detects illegal or corrupt BSON being received from the server.\n *\n * @event Db#parseError\n * @type {MongoError}\n */\n\n/**\n * Db fullsetup event, emitted when all servers in the topology have been connected to at start up time.\n *\n * * Server: Emitted when the driver has connected to the single server and has authenticated.\n * * ReplSet: Emitted after the driver has attempted to connect to all replicaset members.\n * * Mongos: Emitted after the driver has attempted to connect to all mongos proxies.\n *\n * @event Db#fullsetup\n * @type {Db}\n */\n\n// Constants\nDb.SYSTEM_NAMESPACE_COLLECTION = CONSTANTS.SYSTEM_NAMESPACE_COLLECTION;\nDb.SYSTEM_INDEX_COLLECTION = CONSTANTS.SYSTEM_INDEX_COLLECTION;\nDb.SYSTEM_PROFILE_COLLECTION = CONSTANTS.SYSTEM_PROFILE_COLLECTION;\nDb.SYSTEM_USER_COLLECTION = CONSTANTS.SYSTEM_USER_COLLECTION;\nDb.SYSTEM_COMMAND_COLLECTION = CONSTANTS.SYSTEM_COMMAND_COLLECTION;\nDb.SYSTEM_JS_COLLECTION = CONSTANTS.SYSTEM_JS_COLLECTION;\n\nmodule.exports = Db;\n","'use strict';\n\nconst EventEmitter = require('events'),\n  MongoError = require('mongodb-core').MongoError,\n  f = require('util').format,\n  os = require('os'),\n  translateReadPreference = require('../utils').translateReadPreference,\n  ClientSession = require('mongodb-core').Sessions.ClientSession;\n\n// The store of ops\nvar Store = function(topology, storeOptions) {\n  var self = this;\n  var storedOps = [];\n  storeOptions = storeOptions || { force: false, bufferMaxEntries: -1 };\n\n  // Internal state\n  this.s = {\n    storedOps: storedOps,\n    storeOptions: storeOptions,\n    topology: topology\n  };\n\n  Object.defineProperty(this, 'length', {\n    enumerable: true,\n    get: function() {\n      return self.s.storedOps.length;\n    }\n  });\n};\n\nStore.prototype.add = function(opType, ns, ops, options, callback) {\n  if (this.s.storeOptions.force) {\n    return callback(MongoError.create({ message: 'db closed by application', driver: true }));\n  }\n\n  if (this.s.storeOptions.bufferMaxEntries === 0) {\n    return callback(\n      MongoError.create({\n        message: f(\n          'no connection available for operation and number of stored operation > %s',\n          this.s.storeOptions.bufferMaxEntries\n        ),\n        driver: true\n      })\n    );\n  }\n\n  if (\n    this.s.storeOptions.bufferMaxEntries > 0 &&\n    this.s.storedOps.length > this.s.storeOptions.bufferMaxEntries\n  ) {\n    while (this.s.storedOps.length > 0) {\n      var op = this.s.storedOps.shift();\n      op.c(\n        MongoError.create({\n          message: f(\n            'no connection available for operation and number of stored operation > %s',\n            this.s.storeOptions.bufferMaxEntries\n          ),\n          driver: true\n        })\n      );\n    }\n\n    return;\n  }\n\n  this.s.storedOps.push({ t: opType, n: ns, o: ops, op: options, c: callback });\n};\n\nStore.prototype.addObjectAndMethod = function(opType, object, method, params, callback) {\n  if (this.s.storeOptions.force) {\n    return callback(MongoError.create({ message: 'db closed by application', driver: true }));\n  }\n\n  if (this.s.storeOptions.bufferMaxEntries === 0) {\n    return callback(\n      MongoError.create({\n        message: f(\n          'no connection available for operation and number of stored operation > %s',\n          this.s.storeOptions.bufferMaxEntries\n        ),\n        driver: true\n      })\n    );\n  }\n\n  if (\n    this.s.storeOptions.bufferMaxEntries > 0 &&\n    this.s.storedOps.length > this.s.storeOptions.bufferMaxEntries\n  ) {\n    while (this.s.storedOps.length > 0) {\n      var op = this.s.storedOps.shift();\n      op.c(\n        MongoError.create({\n          message: f(\n            'no connection available for operation and number of stored operation > %s',\n            this.s.storeOptions.bufferMaxEntries\n          ),\n          driver: true\n        })\n      );\n    }\n\n    return;\n  }\n\n  this.s.storedOps.push({ t: opType, m: method, o: object, p: params, c: callback });\n};\n\nStore.prototype.flush = function(err) {\n  while (this.s.storedOps.length > 0) {\n    this.s.storedOps\n      .shift()\n      .c(\n        err ||\n          MongoError.create({ message: f('no connection available for operation'), driver: true })\n      );\n  }\n};\n\nvar primaryOptions = ['primary', 'primaryPreferred', 'nearest', 'secondaryPreferred'];\nvar secondaryOptions = ['secondary', 'secondaryPreferred'];\n\nStore.prototype.execute = function(options) {\n  options = options || {};\n  // Get current ops\n  var ops = this.s.storedOps;\n  // Reset the ops\n  this.s.storedOps = [];\n\n  // Unpack options\n  var executePrimary = typeof options.executePrimary === 'boolean' ? options.executePrimary : true;\n  var executeSecondary =\n    typeof options.executeSecondary === 'boolean' ? options.executeSecondary : true;\n\n  // Execute all the stored ops\n  while (ops.length > 0) {\n    var op = ops.shift();\n\n    if (op.t === 'cursor') {\n      if (executePrimary && executeSecondary) {\n        op.o[op.m].apply(op.o, op.p);\n      } else if (\n        executePrimary &&\n        op.o.options &&\n        op.o.options.readPreference &&\n        primaryOptions.indexOf(op.o.options.readPreference.mode) !== -1\n      ) {\n        op.o[op.m].apply(op.o, op.p);\n      } else if (\n        !executePrimary &&\n        executeSecondary &&\n        op.o.options &&\n        op.o.options.readPreference &&\n        secondaryOptions.indexOf(op.o.options.readPreference.mode) !== -1\n      ) {\n        op.o[op.m].apply(op.o, op.p);\n      }\n    } else if (op.t === 'auth') {\n      this.s.topology[op.t].apply(this.s.topology, op.o);\n    } else {\n      if (executePrimary && executeSecondary) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      } else if (\n        executePrimary &&\n        op.op &&\n        op.op.readPreference &&\n        primaryOptions.indexOf(op.op.readPreference.mode) !== -1\n      ) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      } else if (\n        !executePrimary &&\n        executeSecondary &&\n        op.op &&\n        op.op.readPreference &&\n        secondaryOptions.indexOf(op.op.readPreference.mode) !== -1\n      ) {\n        this.s.topology[op.t](op.n, op.o, op.op, op.c);\n      }\n    }\n  }\n};\n\nStore.prototype.all = function() {\n  return this.s.storedOps;\n};\n\n// Server capabilities\nvar ServerCapabilities = function(ismaster) {\n  var setup_get_property = function(object, name, value) {\n    Object.defineProperty(object, name, {\n      enumerable: true,\n      get: function() {\n        return value;\n      }\n    });\n  };\n\n  // Capabilities\n  var aggregationCursor = false;\n  var writeCommands = false;\n  var textSearch = false;\n  var authCommands = false;\n  var listCollections = false;\n  var listIndexes = false;\n  var maxNumberOfDocsInBatch = ismaster.maxWriteBatchSize || 1000;\n  var commandsTakeWriteConcern = false;\n  var commandsTakeCollation = false;\n\n  if (ismaster.minWireVersion >= 0) {\n    textSearch = true;\n  }\n\n  if (ismaster.maxWireVersion >= 1) {\n    aggregationCursor = true;\n    authCommands = true;\n  }\n\n  if (ismaster.maxWireVersion >= 2) {\n    writeCommands = true;\n  }\n\n  if (ismaster.maxWireVersion >= 3) {\n    listCollections = true;\n    listIndexes = true;\n  }\n\n  if (ismaster.maxWireVersion >= 5) {\n    commandsTakeWriteConcern = true;\n    commandsTakeCollation = true;\n  }\n\n  // If no min or max wire version set to 0\n  if (ismaster.minWireVersion == null) {\n    ismaster.minWireVersion = 0;\n  }\n\n  if (ismaster.maxWireVersion == null) {\n    ismaster.maxWireVersion = 0;\n  }\n\n  // Map up read only parameters\n  setup_get_property(this, 'hasAggregationCursor', aggregationCursor);\n  setup_get_property(this, 'hasWriteCommands', writeCommands);\n  setup_get_property(this, 'hasTextSearch', textSearch);\n  setup_get_property(this, 'hasAuthCommands', authCommands);\n  setup_get_property(this, 'hasListCollectionsCommand', listCollections);\n  setup_get_property(this, 'hasListIndexesCommand', listIndexes);\n  setup_get_property(this, 'minWireVersion', ismaster.minWireVersion);\n  setup_get_property(this, 'maxWireVersion', ismaster.maxWireVersion);\n  setup_get_property(this, 'maxNumberOfDocsInBatch', maxNumberOfDocsInBatch);\n  setup_get_property(this, 'commandsTakeWriteConcern', commandsTakeWriteConcern);\n  setup_get_property(this, 'commandsTakeCollation', commandsTakeCollation);\n};\n\n// Get package.json variable\nconst driverVersion = require('../../package.json').version,\n  nodejsversion = f('Node.js %s, %s', process.version, os.endianness()),\n  type = os.type(),\n  name = process.platform,\n  architecture = process.arch,\n  release = os.release();\n\nclass TopologyBase extends EventEmitter {\n  constructor() {\n    super();\n\n    // Build default client information\n    this.clientInfo = {\n      driver: {\n        name: 'nodejs',\n        version: driverVersion\n      },\n      os: {\n        type: type,\n        name: name,\n        architecture: architecture,\n        version: release\n      },\n      platform: nodejsversion\n    };\n\n    this.setMaxListeners(Infinity);\n  }\n\n  // Sessions related methods\n  hasSessionSupport() {\n    return this.logicalSessionTimeoutMinutes != null;\n  }\n\n  startSession(options, clientOptions) {\n    const session = new ClientSession(this, this.s.sessionPool, options, clientOptions);\n    session.once('ended', () => {\n      this.s.sessions = this.s.sessions.filter(s => !s.equals(session));\n    });\n\n    this.s.sessions.push(session);\n    return session;\n  }\n\n  endSessions(sessions, callback) {\n    return this.s.coreTopology.endSessions(sessions, callback);\n  }\n\n  // Server capabilities\n  capabilities() {\n    if (this.s.sCapabilities) return this.s.sCapabilities;\n    if (this.s.coreTopology.lastIsMaster() == null) return null;\n    this.s.sCapabilities = new ServerCapabilities(this.s.coreTopology.lastIsMaster());\n    return this.s.sCapabilities;\n  }\n\n  // Command\n  command(ns, cmd, options, callback) {\n    this.s.coreTopology.command(ns, cmd, translateReadPreference(options), callback);\n  }\n\n  // Insert\n  insert(ns, ops, options, callback) {\n    this.s.coreTopology.insert(ns, ops, options, callback);\n  }\n\n  // Update\n  update(ns, ops, options, callback) {\n    this.s.coreTopology.update(ns, ops, options, callback);\n  }\n\n  // Remove\n  remove(ns, ops, options, callback) {\n    this.s.coreTopology.remove(ns, ops, options, callback);\n  }\n\n  // IsConnected\n  isConnected(options) {\n    options = options || {};\n    options = translateReadPreference(options);\n\n    return this.s.coreTopology.isConnected(options);\n  }\n\n  // IsDestroyed\n  isDestroyed() {\n    return this.s.coreTopology.isDestroyed();\n  }\n\n  // Cursor\n  cursor(ns, cmd, options) {\n    options = options || {};\n    options = translateReadPreference(options);\n    options.disconnectHandler = this.s.store;\n    options.topology = this;\n\n    return this.s.coreTopology.cursor(ns, cmd, options);\n  }\n\n  lastIsMaster() {\n    return this.s.coreTopology.lastIsMaster();\n  }\n\n  selectServer(selector, options, callback) {\n    return this.s.coreTopology.selectServer(selector, options, callback);\n  }\n\n  /**\n   * Unref all sockets\n   * @method\n   */\n  unref() {\n    return this.s.coreTopology.unref();\n  }\n\n  auth() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    this.s.coreTopology.auth.apply(this.s.coreTopology, args);\n  }\n\n  logout() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    this.s.coreTopology.logout.apply(this.s.coreTopology, args);\n  }\n\n  /**\n   * All raw connections\n   * @method\n   * @return {array}\n   */\n  connections() {\n    return this.s.coreTopology.connections();\n  }\n\n  close(forceClosed) {\n    // If we have sessions, we want to individually move them to the session pool,\n    // and then send a single endSessions call.\n    if (this.s.sessions.length) {\n      this.s.sessions.forEach(session => session.endSession());\n    }\n\n    if (this.s.sessionPool) {\n      this.s.sessionPool.endAllPooledSessions();\n    }\n\n    this.s.coreTopology.destroy({\n      force: typeof forceClosed === 'boolean' ? forceClosed : false\n    });\n\n    // We need to wash out all stored processes\n    if (forceClosed === true) {\n      this.s.storeOptions.force = forceClosed;\n      this.s.store.flush();\n    }\n  }\n}\n\n// Properties\nObject.defineProperty(TopologyBase.prototype, 'bson', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.bson;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.parserType;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.logicalSessionTimeoutMinutes;\n  }\n});\n\nObject.defineProperty(TopologyBase.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.type;\n  }\n});\n\nexports.Store = Store;\nexports.ServerCapabilities = ServerCapabilities;\nexports.TopologyBase = TopologyBase;\n","/**\n * A class representation of the BSON MinKey type.\n *\n * @class\n * @return {MinKey} A MinKey instance\n */\nfunction MinKey() {\n  if (!(this instanceof MinKey)) return new MinKey();\n\n  this._bsontype = 'MinKey';\n}\n\nmodule.exports = MinKey;\nmodule.exports.MinKey = MinKey;\n","/**\n * Module dependencies.\n * @ignore\n */\n\n// Test if we're in Node via presence of \"global\" not absence of \"window\"\n// to support hybrid environments like Electron\nif (typeof global !== 'undefined') {\n  var Buffer = require('buffer').Buffer; // TODO just use global Buffer\n}\n\n/**\n * A class representation of the BSON Binary type.\n *\n * Sub types\n *  - **BSON.BSON_BINARY_SUBTYPE_DEFAULT**, default BSON type.\n *  - **BSON.BSON_BINARY_SUBTYPE_FUNCTION**, BSON function type.\n *  - **BSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY**, BSON byte array type.\n *  - **BSON.BSON_BINARY_SUBTYPE_UUID**, BSON uuid type.\n *  - **BSON.BSON_BINARY_SUBTYPE_MD5**, BSON md5 type.\n *  - **BSON.BSON_BINARY_SUBTYPE_USER_DEFINED**, BSON user defined type.\n *\n * @class\n * @param {Buffer} buffer a buffer object containing the binary data.\n * @param {Number} [subType] the option binary type.\n * @return {Binary}\n */\nfunction Binary(buffer, subType) {\n  if (!(this instanceof Binary)) return new Binary(buffer, subType);\n\n  if (\n    buffer != null &&\n    !(typeof buffer === 'string') &&\n    !Buffer.isBuffer(buffer) &&\n    !(buffer instanceof Uint8Array) &&\n    !Array.isArray(buffer)\n  ) {\n    throw new Error('only String, Buffer, Uint8Array or Array accepted');\n  }\n\n  this._bsontype = 'Binary';\n\n  if (buffer instanceof Number) {\n    this.sub_type = buffer;\n    this.position = 0;\n  } else {\n    this.sub_type = subType == null ? BSON_BINARY_SUBTYPE_DEFAULT : subType;\n    this.position = 0;\n  }\n\n  if (buffer != null && !(buffer instanceof Number)) {\n    // Only accept Buffer, Uint8Array or Arrays\n    if (typeof buffer === 'string') {\n      // Different ways of writing the length of the string for the different types\n      if (typeof Buffer !== 'undefined') {\n        this.buffer = new Buffer(buffer);\n      } else if (\n        typeof Uint8Array !== 'undefined' ||\n        Object.prototype.toString.call(buffer) === '[object Array]'\n      ) {\n        this.buffer = writeStringToArray(buffer);\n      } else {\n        throw new Error('only String, Buffer, Uint8Array or Array accepted');\n      }\n    } else {\n      this.buffer = buffer;\n    }\n    this.position = buffer.length;\n  } else {\n    if (typeof Buffer !== 'undefined') {\n      this.buffer = new Buffer(Binary.BUFFER_SIZE);\n    } else if (typeof Uint8Array !== 'undefined') {\n      this.buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE));\n    } else {\n      this.buffer = new Array(Binary.BUFFER_SIZE);\n    }\n    // Set position to start of buffer\n    this.position = 0;\n  }\n}\n\n/**\n * Updates this binary with byte_value.\n *\n * @method\n * @param {string} byte_value a single byte we wish to write.\n */\nBinary.prototype.put = function put(byte_value) {\n  // If it's a string and a has more than one character throw an error\n  if (byte_value['length'] != null && typeof byte_value !== 'number' && byte_value.length !== 1)\n    throw new Error('only accepts single character String, Uint8Array or Array');\n  if ((typeof byte_value !== 'number' && byte_value < 0) || byte_value > 255)\n    throw new Error('only accepts number in a valid unsigned byte range 0-255');\n\n  // Decode the byte value once\n  var decoded_byte = null;\n  if (typeof byte_value === 'string') {\n    decoded_byte = byte_value.charCodeAt(0);\n  } else if (byte_value['length'] != null) {\n    decoded_byte = byte_value[0];\n  } else {\n    decoded_byte = byte_value;\n  }\n\n  if (this.buffer.length > this.position) {\n    this.buffer[this.position++] = decoded_byte;\n  } else {\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n      // Create additional overflow buffer\n      var buffer = new Buffer(Binary.BUFFER_SIZE + this.buffer.length);\n      // Combine the two buffers together\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n      this.buffer = buffer;\n      this.buffer[this.position++] = decoded_byte;\n    } else {\n      buffer = null;\n      // Create a new buffer (typed or normal array)\n      if (Object.prototype.toString.call(this.buffer) === '[object Uint8Array]') {\n        buffer = new Uint8Array(new ArrayBuffer(Binary.BUFFER_SIZE + this.buffer.length));\n      } else {\n        buffer = new Array(Binary.BUFFER_SIZE + this.buffer.length);\n      }\n\n      // We need to copy all the content to the new array\n      for (var i = 0; i < this.buffer.length; i++) {\n        buffer[i] = this.buffer[i];\n      }\n\n      // Reassign the buffer\n      this.buffer = buffer;\n      // Write the byte\n      this.buffer[this.position++] = decoded_byte;\n    }\n  }\n};\n\n/**\n * Writes a buffer or string to the binary.\n *\n * @method\n * @param {(Buffer|string)} string a string or buffer to be written to the Binary BSON object.\n * @param {number} offset specify the binary of where to write the content.\n * @return {null}\n */\nBinary.prototype.write = function write(string, offset) {\n  offset = typeof offset === 'number' ? offset : this.position;\n\n  // If the buffer is to small let's extend the buffer\n  if (this.buffer.length < offset + string.length) {\n    var buffer = null;\n    // If we are in node.js\n    if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n      buffer = new Buffer(this.buffer.length + string.length);\n      this.buffer.copy(buffer, 0, 0, this.buffer.length);\n    } else if (Object.prototype.toString.call(this.buffer) === '[object Uint8Array]') {\n      // Create a new buffer\n      buffer = new Uint8Array(new ArrayBuffer(this.buffer.length + string.length));\n      // Copy the content\n      for (var i = 0; i < this.position; i++) {\n        buffer[i] = this.buffer[i];\n      }\n    }\n\n    // Assign the new buffer\n    this.buffer = buffer;\n  }\n\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(string) && Buffer.isBuffer(this.buffer)) {\n    string.copy(this.buffer, offset, 0, string.length);\n    this.position = offset + string.length > this.position ? offset + string.length : this.position;\n    // offset = string.length\n  } else if (\n    typeof Buffer !== 'undefined' &&\n    typeof string === 'string' &&\n    Buffer.isBuffer(this.buffer)\n  ) {\n    this.buffer.write(string, offset, 'binary');\n    this.position = offset + string.length > this.position ? offset + string.length : this.position;\n    // offset = string.length;\n  } else if (\n    Object.prototype.toString.call(string) === '[object Uint8Array]' ||\n    (Object.prototype.toString.call(string) === '[object Array]' && typeof string !== 'string')\n  ) {\n    for (i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string[i];\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  } else if (typeof string === 'string') {\n    for (i = 0; i < string.length; i++) {\n      this.buffer[offset++] = string.charCodeAt(i);\n    }\n\n    this.position = offset > this.position ? offset : this.position;\n  }\n};\n\n/**\n * Reads **length** bytes starting at **position**.\n *\n * @method\n * @param {number} position read from the given position in the Binary.\n * @param {number} length the number of bytes to read.\n * @return {Buffer}\n */\nBinary.prototype.read = function read(position, length) {\n  length = length && length > 0 ? length : this.position;\n\n  // Let's return the data based on the type we have\n  if (this.buffer['slice']) {\n    return this.buffer.slice(position, position + length);\n  } else {\n    // Create a buffer to keep the result\n    var buffer =\n      typeof Uint8Array !== 'undefined'\n        ? new Uint8Array(new ArrayBuffer(length))\n        : new Array(length);\n    for (var i = 0; i < length; i++) {\n      buffer[i] = this.buffer[position++];\n    }\n  }\n  // Return the buffer\n  return buffer;\n};\n\n/**\n * Returns the value of this binary as a string.\n *\n * @method\n * @return {string}\n */\nBinary.prototype.value = function value(asRaw) {\n  asRaw = asRaw == null ? false : asRaw;\n\n  // Optimize to serialize for the situation where the data == size of buffer\n  if (\n    asRaw &&\n    typeof Buffer !== 'undefined' &&\n    Buffer.isBuffer(this.buffer) &&\n    this.buffer.length === this.position\n  )\n    return this.buffer;\n\n  // If it's a node.js buffer object\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(this.buffer)) {\n    return asRaw\n      ? this.buffer.slice(0, this.position)\n      : this.buffer.toString('binary', 0, this.position);\n  } else {\n    if (asRaw) {\n      // we support the slice command use it\n      if (this.buffer['slice'] != null) {\n        return this.buffer.slice(0, this.position);\n      } else {\n        // Create a new buffer to copy content to\n        var newBuffer =\n          Object.prototype.toString.call(this.buffer) === '[object Uint8Array]'\n            ? new Uint8Array(new ArrayBuffer(this.position))\n            : new Array(this.position);\n        // Copy content\n        for (var i = 0; i < this.position; i++) {\n          newBuffer[i] = this.buffer[i];\n        }\n        // Return the buffer\n        return newBuffer;\n      }\n    } else {\n      return convertArraytoUtf8BinaryString(this.buffer, 0, this.position);\n    }\n  }\n};\n\n/**\n * Length.\n *\n * @method\n * @return {number} the length of the binary.\n */\nBinary.prototype.length = function length() {\n  return this.position;\n};\n\n/**\n * @ignore\n */\nBinary.prototype.toJSON = function() {\n  return this.buffer != null ? this.buffer.toString('base64') : '';\n};\n\n/**\n * @ignore\n */\nBinary.prototype.toString = function(format) {\n  return this.buffer != null ? this.buffer.slice(0, this.position).toString(format) : '';\n};\n\n/**\n * Binary default subtype\n * @ignore\n */\nvar BSON_BINARY_SUBTYPE_DEFAULT = 0;\n\n/**\n * @ignore\n */\nvar writeStringToArray = function(data) {\n  // Create a buffer\n  var buffer =\n    typeof Uint8Array !== 'undefined'\n      ? new Uint8Array(new ArrayBuffer(data.length))\n      : new Array(data.length);\n  // Write the content to the buffer\n  for (var i = 0; i < data.length; i++) {\n    buffer[i] = data.charCodeAt(i);\n  }\n  // Write the string to the buffer\n  return buffer;\n};\n\n/**\n * Convert Array ot Uint8Array to Binary String\n *\n * @ignore\n */\nvar convertArraytoUtf8BinaryString = function(byteArray, startIndex, endIndex) {\n  var result = '';\n  for (var i = startIndex; i < endIndex; i++) {\n    result = result + String.fromCharCode(byteArray[i]);\n  }\n  return result;\n};\n\nBinary.BUFFER_SIZE = 256;\n\n/**\n * Default BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_DEFAULT = 0;\n/**\n * Function BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_FUNCTION = 1;\n/**\n * Byte Array BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_BYTE_ARRAY = 2;\n/**\n * OLD UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID_OLD = 3;\n/**\n * UUID BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_UUID = 4;\n/**\n * MD5 BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_MD5 = 5;\n/**\n * User BSON type\n *\n * @classconstant SUBTYPE_DEFAULT\n **/\nBinary.SUBTYPE_USER_DEFINED = 128;\n\n/**\n * Expose.\n */\nmodule.exports = Binary;\nmodule.exports.Binary = Binary;\n","'use strict';\n\nconst buildCountCommand = require('./collection_ops').buildCountCommand;\nconst formattedOrderClause = require('../utils').formattedOrderClause;\nconst handleCallback = require('../utils').handleCallback;\nconst MongoError = require('mongodb-core').MongoError;\nconst push = Array.prototype.push;\n\n/**\n * Get the count of documents for this cursor.\n *\n * @method\n * @param {Cursor} cursor The Cursor instance on which to count.\n * @param {boolean} [applySkipLimit=true] Specifies whether the count command apply limit and skip settings should be applied on the cursor or in the provided options.\n * @param {object} [options] Optional settings. See Cursor.prototype.count for a list of options.\n * @param {Cursor~countResultCallback} [callback] The result callback.\n */\nfunction count(cursor, applySkipLimit, opts, callback) {\n  if (applySkipLimit) {\n    if (typeof cursor.cursorSkip() === 'number') opts.skip = cursor.cursorSkip();\n    if (typeof cursor.cursorLimit() === 'number') opts.limit = cursor.cursorLimit();\n  }\n\n  // Ensure we have the right read preference inheritance\n  if (opts.readPreference) {\n    cursor.setReadPreference(opts.readPreference);\n  }\n\n  if (\n    typeof opts.maxTimeMS !== 'number' &&\n    cursor.s.cmd &&\n    typeof cursor.s.cmd.maxTimeMS === 'number'\n  ) {\n    opts.maxTimeMS = cursor.s.cmd.maxTimeMS;\n  }\n\n  let options = {};\n  options.skip = opts.skip;\n  options.limit = opts.limit;\n  options.hint = opts.hint;\n  options.maxTimeMS = opts.maxTimeMS;\n\n  // Command\n  const delimiter = cursor.s.ns.indexOf('.');\n  options.collectionName = cursor.s.ns.substr(delimiter + 1);\n\n  let command;\n  try {\n    command = buildCountCommand(cursor, cursor.s.cmd.query, options);\n  } catch (err) {\n    return callback(err);\n  }\n\n  // Set cursor server to the same as the topology\n  cursor.server = cursor.topology.s.coreTopology;\n\n  // Execute the command\n  cursor.s.topology.command(\n    `${cursor.s.ns.substr(0, delimiter)}.$cmd`,\n    command,\n    cursor.s.options,\n    (err, result) => {\n      callback(err, result ? result.result.n : null);\n    }\n  );\n}\n\n/**\n * Iterates over all the documents for this cursor. See Cursor.prototype.each for more information.\n *\n * @method\n * @deprecated\n * @param {Cursor} cursor The Cursor instance on which to run.\n * @param {Cursor~resultCallback} callback The result callback.\n */\nfunction each(cursor, callback) {\n  const Cursor = require('../cursor');\n\n  if (!callback) throw MongoError.create({ message: 'callback is mandatory', driver: true });\n  if (cursor.isNotified()) return;\n  if (cursor.s.state === Cursor.CLOSED || cursor.isDead()) {\n    return handleCallback(\n      callback,\n      MongoError.create({ message: 'Cursor is closed', driver: true })\n    );\n  }\n\n  if (cursor.s.state === Cursor.INIT) cursor.s.state = Cursor.OPEN;\n\n  // Define function to avoid global scope escape\n  let fn = null;\n  // Trampoline all the entries\n  if (cursor.bufferedCount() > 0) {\n    while ((fn = loop(cursor, callback))) fn(cursor, callback);\n    each(cursor, callback);\n  } else {\n    cursor.next((err, item) => {\n      if (err) return handleCallback(callback, err);\n      if (item == null) {\n        return cursor.close({ skipKillCursors: true }, () => handleCallback(callback, null, null));\n      }\n\n      if (handleCallback(callback, null, item) === false) return;\n      each(cursor, callback);\n    });\n  }\n}\n\n/**\n * Check if there is any document still available in the cursor.\n *\n * @method\n * @param {Cursor} cursor The Cursor instance on which to run.\n * @param {Cursor~resultCallback} [callback] The result callback.\n */\nfunction hasNext(cursor, callback) {\n  const Cursor = require('../cursor');\n\n  if (cursor.s.currentDoc) {\n    return callback(null, true);\n  }\n\n  if (cursor.isNotified()) {\n    return callback(null, false);\n  }\n\n  nextObject(cursor, (err, doc) => {\n    if (err) return callback(err, null);\n    if (cursor.s.state === Cursor.CLOSED || cursor.isDead()) return callback(null, false);\n    if (!doc) return callback(null, false);\n    cursor.s.currentDoc = doc;\n    callback(null, true);\n  });\n}\n\n// Trampoline emptying the number of retrieved items\n// without incurring a nextTick operation\nfunction loop(cursor, callback) {\n  // No more items we are done\n  if (cursor.bufferedCount() === 0) return;\n  // Get the next document\n  cursor._next(callback);\n  // Loop\n  return loop;\n}\n\n/**\n * Get the next available document from the cursor. Returns null if no more documents are available.\n *\n * @method\n * @param {Cursor} cursor The Cursor instance from which to get the next document.\n * @param {Cursor~resultCallback} [callback] The result callback.\n */\nfunction next(cursor, callback) {\n  // Return the currentDoc if someone called hasNext first\n  if (cursor.s.currentDoc) {\n    const doc = cursor.s.currentDoc;\n    cursor.s.currentDoc = null;\n    return callback(null, doc);\n  }\n\n  // Return the next object\n  nextObject(cursor, callback);\n}\n\n// Get the next available document from the cursor, returns null if no more documents are available.\nfunction nextObject(cursor, callback) {\n  const Cursor = require('../cursor');\n\n  if (cursor.s.state === Cursor.CLOSED || (cursor.isDead && cursor.isDead()))\n    return handleCallback(\n      callback,\n      MongoError.create({ message: 'Cursor is closed', driver: true })\n    );\n  if (cursor.s.state === Cursor.INIT && cursor.s.cmd.sort) {\n    try {\n      cursor.s.cmd.sort = formattedOrderClause(cursor.s.cmd.sort);\n    } catch (err) {\n      return handleCallback(callback, err);\n    }\n  }\n\n  // Get the next object\n  cursor._next((err, doc) => {\n    cursor.s.state = Cursor.OPEN;\n    if (err) return handleCallback(callback, err);\n    handleCallback(callback, null, doc);\n  });\n}\n\n/**\n * Returns an array of documents. See Cursor.prototype.toArray for more information.\n *\n * @method\n * @param {Cursor} cursor The Cursor instance from which to get the next document.\n * @param {Cursor~toArrayResultCallback} [callback] The result callback.\n */\nfunction toArray(cursor, callback) {\n  const Cursor = require('../cursor');\n\n  const items = [];\n\n  // Reset cursor\n  cursor.rewind();\n  cursor.s.state = Cursor.INIT;\n\n  // Fetch all the documents\n  const fetchDocs = () => {\n    cursor._next((err, doc) => {\n      if (err) {\n        return cursor._endSession\n          ? cursor._endSession(() => handleCallback(callback, err))\n          : handleCallback(callback, err);\n      }\n      if (doc == null) {\n        return cursor.close({ skipKillCursors: true }, () => handleCallback(callback, null, items));\n      }\n\n      // Add doc to items\n      items.push(doc);\n\n      // Get all buffered objects\n      if (cursor.bufferedCount() > 0) {\n        let docs = cursor.readBufferedDocuments(cursor.bufferedCount());\n\n        // Transform the doc if transform method added\n        if (cursor.s.transforms && typeof cursor.s.transforms.doc === 'function') {\n          docs = docs.map(cursor.s.transforms.doc);\n        }\n\n        push.apply(items, docs);\n      }\n\n      // Attempt a fetch\n      fetchDocs();\n    });\n  };\n\n  fetchDocs();\n}\n\nmodule.exports = { count, each, hasNext, next, toArray };\n","/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nfunction Double(value) {\n  if (!(this instanceof Double)) return new Double(value);\n\n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nDouble.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Double;\nmodule.exports.Double = Double;\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// Copyright 2009 Google Inc. All Rights Reserved\n\n/**\n * This type is for INTERNAL use in MongoDB only and should not be used in applications.\n * The appropriate corresponding type is the JavaScript Date type.\n * \n * Defines a Timestamp class for representing a 64-bit two's-complement\n * integer value, which faithfully simulates the behavior of a Java \"Timestamp\". This\n * implementation is derived from TimestampLib in GWT.\n *\n * Constructs a 64-bit two's-complement integer, given its low and high 32-bit\n * values as *signed* integers.  See the from* functions below for more\n * convenient ways of constructing Timestamps.\n *\n * The internal representation of a Timestamp is the two given signed, 32-bit values.\n * We use 32-bit pieces because these are the size of integers on which\n * Javascript performs bit-operations.  For operations like addition and\n * multiplication, we split each number into 16-bit pieces, which can easily be\n * multiplied within Javascript's floating-point representation without overflow\n * or change in sign.\n *\n * In the algorithms below, we frequently reduce the negative case to the\n * positive case by negating the input(s) and then post-processing the result.\n * Note that we must ALWAYS check specially whether those values are MIN_VALUE\n * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n * a positive number, it overflows back into a negative).  Not handling this\n * case would often result in infinite recursion.\n *\n * @class\n * @param {number} low  the low (signed) 32 bits of the Timestamp.\n * @param {number} high the high (signed) 32 bits of the Timestamp.\n */\nfunction Timestamp(low, high) {\n  if (!(this instanceof Timestamp)) return new Timestamp(low, high);\n  this._bsontype = 'Timestamp';\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.low_ = low | 0; // force into 32 signed bits.\n\n  /**\n   * @type {number}\n   * @ignore\n   */\n  this.high_ = high | 0; // force into 32 signed bits.\n}\n\n/**\n * Return the int value.\n *\n * @return {number} the value, assuming it is a 32-bit integer.\n */\nTimestamp.prototype.toInt = function() {\n  return this.low_;\n};\n\n/**\n * Return the Number value.\n *\n * @method\n * @return {number} the closest floating-point representation to this value.\n */\nTimestamp.prototype.toNumber = function() {\n  return this.high_ * Timestamp.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n};\n\n/**\n * Return the JSON value.\n *\n * @method\n * @return {string} the JSON representation.\n */\nTimestamp.prototype.toJSON = function() {\n  return this.toString();\n};\n\n/**\n * Return the String value.\n *\n * @method\n * @param {number} [opt_radix] the radix in which the text should be written.\n * @return {string} the textual representation of this value.\n */\nTimestamp.prototype.toString = function(opt_radix) {\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  }\n\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      // We need to change the Timestamp value before it can be negated, so we remove\n      // the bottom-most digit in this base and then recurse to do the rest.\n      var radixTimestamp = Timestamp.fromNumber(radix);\n      var div = this.div(radixTimestamp);\n      var rem = div.multiply(radixTimestamp).subtract(this);\n      return div.toString(radix) + rem.toInt().toString(radix);\n    } else {\n      return '-' + this.negate().toString(radix);\n    }\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 6));\n\n  rem = this;\n  var result = '';\n\n  while (!rem.isZero()) {\n    var remDiv = rem.div(radixToPower);\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n/**\n * Return the high 32-bits value.\n *\n * @method\n * @return {number} the high 32-bits as a signed value.\n */\nTimestamp.prototype.getHighBits = function() {\n  return this.high_;\n};\n\n/**\n * Return the low 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as a signed value.\n */\nTimestamp.prototype.getLowBits = function() {\n  return this.low_;\n};\n\n/**\n * Return the low unsigned 32-bits value.\n *\n * @method\n * @return {number} the low 32-bits as an unsigned value.\n */\nTimestamp.prototype.getLowBitsUnsigned = function() {\n  return this.low_ >= 0 ? this.low_ : Timestamp.TWO_PWR_32_DBL_ + this.low_;\n};\n\n/**\n * Returns the number of bits needed to represent the absolute value of this Timestamp.\n *\n * @method\n * @return {number} Returns the number of bits needed to represent the absolute value of this Timestamp.\n */\nTimestamp.prototype.getNumBitsAbs = function() {\n  if (this.isNegative()) {\n    if (this.equals(Timestamp.MIN_VALUE)) {\n      return 64;\n    } else {\n      return this.negate().getNumBitsAbs();\n    }\n  } else {\n    var val = this.high_ !== 0 ? this.high_ : this.low_;\n    for (var bit = 31; bit > 0; bit--) {\n      if ((val & (1 << bit)) !== 0) {\n        break;\n      }\n    }\n    return this.high_ !== 0 ? bit + 33 : bit + 1;\n  }\n};\n\n/**\n * Return whether this value is zero.\n *\n * @method\n * @return {boolean} whether this value is zero.\n */\nTimestamp.prototype.isZero = function() {\n  return this.high_ === 0 && this.low_ === 0;\n};\n\n/**\n * Return whether this value is negative.\n *\n * @method\n * @return {boolean} whether this value is negative.\n */\nTimestamp.prototype.isNegative = function() {\n  return this.high_ < 0;\n};\n\n/**\n * Return whether this value is odd.\n *\n * @method\n * @return {boolean} whether this value is odd.\n */\nTimestamp.prototype.isOdd = function() {\n  return (this.low_ & 1) === 1;\n};\n\n/**\n * Return whether this Timestamp equals the other\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp equals the other\n */\nTimestamp.prototype.equals = function(other) {\n  return this.high_ === other.high_ && this.low_ === other.low_;\n};\n\n/**\n * Return whether this Timestamp does not equal the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp does not equal the other.\n */\nTimestamp.prototype.notEquals = function(other) {\n  return this.high_ !== other.high_ || this.low_ !== other.low_;\n};\n\n/**\n * Return whether this Timestamp is less than the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is less than the other.\n */\nTimestamp.prototype.lessThan = function(other) {\n  return this.compare(other) < 0;\n};\n\n/**\n * Return whether this Timestamp is less than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is less than or equal to the other.\n */\nTimestamp.prototype.lessThanOrEqual = function(other) {\n  return this.compare(other) <= 0;\n};\n\n/**\n * Return whether this Timestamp is greater than the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is greater than the other.\n */\nTimestamp.prototype.greaterThan = function(other) {\n  return this.compare(other) > 0;\n};\n\n/**\n * Return whether this Timestamp is greater than or equal to the other.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} whether this Timestamp is greater than or equal to the other.\n */\nTimestamp.prototype.greaterThanOrEqual = function(other) {\n  return this.compare(other) >= 0;\n};\n\n/**\n * Compares this Timestamp with the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp to compare against.\n * @return {boolean} 0 if they are the same, 1 if the this is greater, and -1 if the given one is greater.\n */\nTimestamp.prototype.compare = function(other) {\n  if (this.equals(other)) {\n    return 0;\n  }\n\n  var thisNeg = this.isNegative();\n  var otherNeg = other.isNegative();\n  if (thisNeg && !otherNeg) {\n    return -1;\n  }\n  if (!thisNeg && otherNeg) {\n    return 1;\n  }\n\n  // at this point, the signs are the same, so subtraction will not overflow\n  if (this.subtract(other).isNegative()) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\n/**\n * The negation of this value.\n *\n * @method\n * @return {Timestamp} the negation of this value.\n */\nTimestamp.prototype.negate = function() {\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.MIN_VALUE;\n  } else {\n    return this.not().add(Timestamp.ONE);\n  }\n};\n\n/**\n * Returns the sum of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to add to this one.\n * @return {Timestamp} the sum of this and the given Timestamp.\n */\nTimestamp.prototype.add = function(other) {\n  // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 + b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 + b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 + b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 + b48;\n  c48 &= 0xffff;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns the difference of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to subtract from this.\n * @return {Timestamp} the difference of this and the given Timestamp.\n */\nTimestamp.prototype.subtract = function(other) {\n  return this.add(other.negate());\n};\n\n/**\n * Returns the product of this and the given Timestamp.\n *\n * @method\n * @param {Timestamp} other Timestamp to multiply with this.\n * @return {Timestamp} the product of this and the other.\n */\nTimestamp.prototype.multiply = function(other) {\n  if (this.isZero()) {\n    return Timestamp.ZERO;\n  } else if (other.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    return other.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return this.isOdd() ? Timestamp.MIN_VALUE : Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate()\n        .multiply(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both Timestamps are small, use float multiplication\n  if (this.lessThan(Timestamp.TWO_PWR_24_) && other.lessThan(Timestamp.TWO_PWR_24_)) {\n    return Timestamp.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Divide each Timestamp into 4 chunks of 16 bits, and then add up 4x4 products.\n  // We can skip products that would overflow.\n\n  var a48 = this.high_ >>> 16;\n  var a32 = this.high_ & 0xffff;\n  var a16 = this.low_ >>> 16;\n  var a00 = this.low_ & 0xffff;\n\n  var b48 = other.high_ >>> 16;\n  var b32 = other.high_ & 0xffff;\n  var b16 = other.low_ >>> 16;\n  var b00 = other.low_ & 0xffff;\n\n  var c48 = 0,\n    c32 = 0,\n    c16 = 0,\n    c00 = 0;\n  c00 += a00 * b00;\n  c16 += c00 >>> 16;\n  c00 &= 0xffff;\n  c16 += a16 * b00;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c16 += a00 * b16;\n  c32 += c16 >>> 16;\n  c16 &= 0xffff;\n  c32 += a32 * b00;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a16 * b16;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c32 += a00 * b32;\n  c48 += c32 >>> 16;\n  c32 &= 0xffff;\n  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n  c48 &= 0xffff;\n  return Timestamp.fromBits((c16 << 16) | c00, (c48 << 16) | c32);\n};\n\n/**\n * Returns this Timestamp divided by the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp by which to divide.\n * @return {Timestamp} this Timestamp divided by the given one.\n */\nTimestamp.prototype.div = function(other) {\n  if (other.isZero()) {\n    throw Error('division by zero');\n  } else if (this.isZero()) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.equals(Timestamp.MIN_VALUE)) {\n    if (other.equals(Timestamp.ONE) || other.equals(Timestamp.NEG_ONE)) {\n      return Timestamp.MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n    } else if (other.equals(Timestamp.MIN_VALUE)) {\n      return Timestamp.ONE;\n    } else {\n      // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n      var halfThis = this.shiftRight(1);\n      var approx = halfThis.div(other).shiftLeft(1);\n      if (approx.equals(Timestamp.ZERO)) {\n        return other.isNegative() ? Timestamp.ONE : Timestamp.NEG_ONE;\n      } else {\n        var rem = this.subtract(other.multiply(approx));\n        var result = approx.add(rem.div(other));\n        return result;\n      }\n    }\n  } else if (other.equals(Timestamp.MIN_VALUE)) {\n    return Timestamp.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().div(other.negate());\n    } else {\n      return this.negate()\n        .div(other)\n        .negate();\n    }\n  } else if (other.isNegative()) {\n    return this.div(other.negate()).negate();\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = Timestamp.ZERO;\n  rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = Timestamp.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = Timestamp.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = Timestamp.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return res;\n};\n\n/**\n * Returns this Timestamp modulo the given one.\n *\n * @method\n * @param {Timestamp} other Timestamp by which to mod.\n * @return {Timestamp} this Timestamp modulo the given one.\n */\nTimestamp.prototype.modulo = function(other) {\n  return this.subtract(this.div(other).multiply(other));\n};\n\n/**\n * The bitwise-NOT of this value.\n *\n * @method\n * @return {Timestamp} the bitwise-NOT of this value.\n */\nTimestamp.prototype.not = function() {\n  return Timestamp.fromBits(~this.low_, ~this.high_);\n};\n\n/**\n * Returns the bitwise-AND of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to AND.\n * @return {Timestamp} the bitwise-AND of this and the other.\n */\nTimestamp.prototype.and = function(other) {\n  return Timestamp.fromBits(this.low_ & other.low_, this.high_ & other.high_);\n};\n\n/**\n * Returns the bitwise-OR of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to OR.\n * @return {Timestamp} the bitwise-OR of this and the other.\n */\nTimestamp.prototype.or = function(other) {\n  return Timestamp.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n};\n\n/**\n * Returns the bitwise-XOR of this Timestamp and the given one.\n *\n * @method\n * @param {Timestamp} other the Timestamp with which to XOR.\n * @return {Timestamp} the bitwise-XOR of this and the other.\n */\nTimestamp.prototype.xor = function(other) {\n  return Timestamp.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n};\n\n/**\n * Returns this Timestamp with bits shifted to the left by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the left by the given amount.\n */\nTimestamp.prototype.shiftLeft = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var low = this.low_;\n    if (numBits < 32) {\n      var high = this.high_;\n      return Timestamp.fromBits(low << numBits, (high << numBits) | (low >>> (32 - numBits)));\n    } else {\n      return Timestamp.fromBits(0, low << (numBits - 32));\n    }\n  }\n};\n\n/**\n * Returns this Timestamp with bits shifted to the right by the given amount.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount.\n */\nTimestamp.prototype.shiftRight = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits((low >>> numBits) | (high << (32 - numBits)), high >> numBits);\n    } else {\n      return Timestamp.fromBits(high >> (numBits - 32), high >= 0 ? 0 : -1);\n    }\n  }\n};\n\n/**\n * Returns this Timestamp with bits shifted to the right by the given amount, with the new top bits matching the current sign bit.\n *\n * @method\n * @param {number} numBits the number of bits by which to shift.\n * @return {Timestamp} this shifted to the right by the given amount, with zeros placed into the new leading bits.\n */\nTimestamp.prototype.shiftRightUnsigned = function(numBits) {\n  numBits &= 63;\n  if (numBits === 0) {\n    return this;\n  } else {\n    var high = this.high_;\n    if (numBits < 32) {\n      var low = this.low_;\n      return Timestamp.fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits);\n    } else if (numBits === 32) {\n      return Timestamp.fromBits(high, 0);\n    } else {\n      return Timestamp.fromBits(high >>> (numBits - 32), 0);\n    }\n  }\n};\n\n/**\n * Returns a Timestamp representing the given (32-bit) integer value.\n *\n * @method\n * @param {number} value the 32-bit integer in question.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromInt = function(value) {\n  if (-128 <= value && value < 128) {\n    var cachedObj = Timestamp.INT_CACHE_[value];\n    if (cachedObj) {\n      return cachedObj;\n    }\n  }\n\n  var obj = new Timestamp(value | 0, value < 0 ? -1 : 0);\n  if (-128 <= value && value < 128) {\n    Timestamp.INT_CACHE_[value] = obj;\n  }\n  return obj;\n};\n\n/**\n * Returns a Timestamp representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n *\n * @method\n * @param {number} value the number in question.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromNumber = function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return Timestamp.ZERO;\n  } else if (value <= -Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MIN_VALUE;\n  } else if (value + 1 >= Timestamp.TWO_PWR_63_DBL_) {\n    return Timestamp.MAX_VALUE;\n  } else if (value < 0) {\n    return Timestamp.fromNumber(-value).negate();\n  } else {\n    return new Timestamp(\n      (value % Timestamp.TWO_PWR_32_DBL_) | 0,\n      (value / Timestamp.TWO_PWR_32_DBL_) | 0\n    );\n  }\n};\n\n/**\n * Returns a Timestamp representing the 64-bit integer that comes by concatenating the given high and low bits. Each is assumed to use 32 bits.\n *\n * @method\n * @param {number} lowBits the low 32-bits.\n * @param {number} highBits the high 32-bits.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromBits = function(lowBits, highBits) {\n  return new Timestamp(lowBits, highBits);\n};\n\n/**\n * Returns a Timestamp representation of the given string, written using the given radix.\n *\n * @method\n * @param {string} str the textual representation of the Timestamp.\n * @param {number} opt_radix the radix in which the text is written.\n * @return {Timestamp} the corresponding Timestamp value.\n */\nTimestamp.fromString = function(str, opt_radix) {\n  if (str.length === 0) {\n    throw Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) === '-') {\n    return Timestamp.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw Error('number format error: interior \"-\" character: ' + str);\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = Timestamp.fromNumber(Math.pow(radix, 8));\n\n  var result = Timestamp.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = Timestamp.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(Timestamp.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(Timestamp.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n/**\n * A cache of the Timestamp representations of small integer values.\n * @type {Object}\n * @ignore\n */\nTimestamp.INT_CACHE_ = {};\n\n// NOTE: the compiler should inline these constant values below and then remove\n// these variables, so there should be no runtime penalty for these.\n\n/**\n * Number used repeated below in calculations.  This must appear before the\n * first call to any from* function below.\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_16_DBL_ = 1 << 16;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_24_DBL_ = 1 << 24;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_32_DBL_ = Timestamp.TWO_PWR_16_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_31_DBL_ = Timestamp.TWO_PWR_32_DBL_ / 2;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_48_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_16_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_64_DBL_ = Timestamp.TWO_PWR_32_DBL_ * Timestamp.TWO_PWR_32_DBL_;\n\n/**\n * @type {number}\n * @ignore\n */\nTimestamp.TWO_PWR_63_DBL_ = Timestamp.TWO_PWR_64_DBL_ / 2;\n\n/** @type {Timestamp} */\nTimestamp.ZERO = Timestamp.fromInt(0);\n\n/** @type {Timestamp} */\nTimestamp.ONE = Timestamp.fromInt(1);\n\n/** @type {Timestamp} */\nTimestamp.NEG_ONE = Timestamp.fromInt(-1);\n\n/** @type {Timestamp} */\nTimestamp.MAX_VALUE = Timestamp.fromBits(0xffffffff | 0, 0x7fffffff | 0);\n\n/** @type {Timestamp} */\nTimestamp.MIN_VALUE = Timestamp.fromBits(0, 0x80000000 | 0);\n\n/**\n * @type {Timestamp}\n * @ignore\n */\nTimestamp.TWO_PWR_24_ = Timestamp.fromInt(1 << 24);\n\n/**\n * Expose.\n */\nmodule.exports = Timestamp;\nmodule.exports.Timestamp = Timestamp;\n","// Custom inspect property name / symbol.\nvar inspect = 'inspect';\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xffffff, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp('^[0-9a-fA-F]{24}$');\n\n// Check if buffer exists\ntry {\n  if (Buffer && Buffer.from) {\n    var hasBufferType = true;\n    inspect = require('util').inspect.custom || 'inspect';\n  }\n} catch (err) {\n  hasBufferType = false;\n}\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function ObjectID(id) {\n  // Duck-typing to support ObjectId from different npm packages\n  if (id instanceof ObjectID) return id;\n  if (!(this instanceof ObjectID)) return new ObjectID(id);\n\n  this._bsontype = 'ObjectID';\n\n  // The most common usecase (blank id, new objectId instance)\n  if (id == null || typeof id === 'number') {\n    // Generate a new id\n    this.id = this.generate(id);\n    // If we are caching the hex string\n    if (ObjectID.cacheHexString) this.__id = this.toString('hex');\n    // Return the object\n    return;\n  }\n\n  // Check if the passed in id is valid\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if (!valid && id != null) {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  } else if (valid && typeof id === 'string' && id.length === 24 && hasBufferType) {\n    return new ObjectID(new Buffer(id, 'hex'));\n  } else if (valid && typeof id === 'string' && id.length === 24) {\n    return ObjectID.createFromHexString(id);\n  } else if (id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  } else if (id != null && id.toHexString) {\n    // Duck-typing to support ObjectId from different npm packages\n    return id;\n  } else {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  }\n\n  if (ObjectID.cacheHexString) this.__id = this.toString('hex');\n};\n\n// Allow usage of ObjectId as well as ObjectID\n// var ObjectId = ObjectID;\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {string} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if (ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n  if (!this.id || !this.id.length) {\n    throw new Error(\n      'invalid ObjectId, ObjectId.id must be either a string or a Buffer, but is [' +\n        JSON.stringify(this.id) +\n        ']'\n    );\n  }\n\n  if (this.id instanceof _Buffer) {\n    hexString = convertToHex(this.id);\n    if (ObjectID.cacheHexString) this.__id = hexString;\n    return hexString;\n  }\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if (ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n};\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.get_inc = function() {\n  return (ObjectID.index = (ObjectID.index + 1) % 0xffffff);\n};\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return this.get_inc();\n};\n\n/**\n* Generate a 12 byte id buffer used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {Buffer} return the 12 byte id buffer string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' !== typeof time) {\n    time = ~~(Date.now() / 1000);\n  }\n\n  // Use pid\n  var pid =\n    (typeof process === 'undefined' || process.pid === 1\n      ? Math.floor(Math.random() * 100000)\n      : process.pid) % 0xffff;\n  var inc = this.get_inc();\n  // Buffer used\n  var buffer = new Buffer(12);\n  // Encode time\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Encode machine\n  buffer[6] = MACHINE_ID & 0xff;\n  buffer[5] = (MACHINE_ID >> 8) & 0xff;\n  buffer[4] = (MACHINE_ID >> 16) & 0xff;\n  // Encode pid\n  buffer[8] = pid & 0xff;\n  buffer[7] = (pid >> 8) & 0xff;\n  // Encode index\n  buffer[11] = inc & 0xff;\n  buffer[10] = (inc >> 8) & 0xff;\n  buffer[9] = (inc >> 16) & 0xff;\n  // Return the buffer\n  return buffer;\n};\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @param {String} format The Buffer toString format parameter.\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function(format) {\n  // Is the id a buffer then use the buffer toString method to return the format\n  if (this.id && this.id.copy) {\n    return this.id.toString(typeof format === 'string' ? format : 'hex');\n  }\n\n  // if(this.buffer )\n  return this.toHexString();\n};\n\n/**\n* Converts to a string representation of this Id.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype[inspect] = ObjectID.prototype.toString;\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return this.toHexString();\n};\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {object} otherID ObjectID instance to compare against.\n* @return {boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function equals(otherId) {\n  // var id;\n\n  if (otherId instanceof ObjectID) {\n    return this.toString() === otherId.toString();\n  } else if (\n    typeof otherId === 'string' &&\n    ObjectID.isValid(otherId) &&\n    otherId.length === 12 &&\n    this.id instanceof _Buffer\n  ) {\n    return otherId === this.id.toString('binary');\n  } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 24) {\n    return otherId.toLowerCase() === this.toHexString();\n  } else if (typeof otherId === 'string' && ObjectID.isValid(otherId) && otherId.length === 12) {\n    return otherId === this.id;\n  } else if (otherId != null && (otherId instanceof ObjectID || otherId.toHexString)) {\n    return otherId.toHexString() === this.toHexString();\n  } else {\n    return false;\n  }\n};\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  var time = this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n  timestamp.setTime(Math.floor(time) * 1000);\n  return timestamp;\n};\n\n/**\n* @ignore\n*/\nObjectID.index = ~~(Math.random() * 0xffffff);\n\n/**\n* @ignore\n*/\nObjectID.createPk = function createPk() {\n  return new ObjectID();\n};\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function createFromTime(time) {\n  var buffer = new Buffer([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  // Encode time into first 4 bytes\n  buffer[3] = time & 0xff;\n  buffer[2] = (time >> 8) & 0xff;\n  buffer[1] = (time >> 16) & 0xff;\n  buffer[0] = (time >> 24) & 0xff;\n  // Return the new objectId\n  return new ObjectID(buffer);\n};\n\n// Lookup tables\n//var encodeLookup = '0123456789abcdef'.split('');\nvar decodeLookup = [];\ni = 0;\nwhile (i < 10) decodeLookup[0x30 + i] = i++;\nwhile (i < 16) decodeLookup[0x41 - 10 + i] = decodeLookup[0x61 - 10 + i] = i++;\n\nvar _Buffer = Buffer;\nvar convertToHex = function(bytes) {\n  return bytes.toString('hex');\n};\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {string} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function createFromHexString(string) {\n  // Throw an error if it's not a valid setup\n  if (typeof string === 'undefined' || (string != null && string.length !== 24)) {\n    throw new Error(\n      'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters'\n    );\n  }\n\n  // Use Buffer.from method if available\n  if (hasBufferType) return new ObjectID(new Buffer(string, 'hex'));\n\n  // Calculate lengths\n  var array = new _Buffer(12);\n  var n = 0;\n  var i = 0;\n\n  while (i < 24) {\n    array[n++] = (decodeLookup[string.charCodeAt(i++)] << 4) | decodeLookup[string.charCodeAt(i++)];\n  }\n\n  return new ObjectID(array);\n};\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function isValid(id) {\n  if (id == null) return false;\n\n  if (typeof id === 'number') {\n    return true;\n  }\n\n  if (typeof id === 'string') {\n    return id.length === 12 || (id.length === 24 && checkForHexRegExp.test(id));\n  }\n\n  if (id instanceof ObjectID) {\n    return true;\n  }\n\n  if (id instanceof _Buffer) {\n    return true;\n  }\n\n  // Duck-Typing detection of ObjectId like objects\n  if (id.toHexString) {\n    return id.id.length === 12 || (id.id.length === 24 && checkForHexRegExp.test(id.id));\n  }\n\n  return false;\n};\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, 'generationTime', {\n  enumerable: true,\n  get: function() {\n    return this.id[3] | (this.id[2] << 8) | (this.id[1] << 16) | (this.id[0] << 24);\n  },\n  set: function(value) {\n    // Encode time into first 4 bytes\n    this.id[3] = value & 0xff;\n    this.id[2] = (value >> 8) & 0xff;\n    this.id[1] = (value >> 16) & 0xff;\n    this.id[0] = (value >> 24) & 0xff;\n  }\n});\n\n/**\n * Expose.\n */\nmodule.exports = ObjectID;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.ObjectId = ObjectID;\n","/**\n * A class representation of the BSON RegExp type.\n *\n * @class\n * @return {BSONRegExp} A MinKey instance\n */\nfunction BSONRegExp(pattern, options) {\n  if (!(this instanceof BSONRegExp)) return new BSONRegExp();\n\n  // Execute\n  this._bsontype = 'BSONRegExp';\n  this.pattern = pattern || '';\n  this.options = options || '';\n\n  // Validate options\n  for (var i = 0; i < this.options.length; i++) {\n    if (\n      !(\n        this.options[i] === 'i' ||\n        this.options[i] === 'm' ||\n        this.options[i] === 'x' ||\n        this.options[i] === 'l' ||\n        this.options[i] === 's' ||\n        this.options[i] === 'u'\n      )\n    ) {\n      throw new Error('the regular expression options [' + this.options[i] + '] is not supported');\n    }\n  }\n}\n\nmodule.exports = BSONRegExp;\nmodule.exports.BSONRegExp = BSONRegExp;\n","// Custom inspect property name / symbol.\nvar inspect = Buffer ? require('util').inspect.custom || 'inspect' : 'inspect';\n\n/**\n * A class representation of the BSON Symbol type.\n *\n * @class\n * @deprecated\n * @param {string} value the string representing the symbol.\n * @return {Symbol}\n */\nfunction Symbol(value) {\n  if (!(this instanceof Symbol)) return new Symbol(value);\n  this._bsontype = 'Symbol';\n  this.value = value;\n}\n\n/**\n * Access the wrapped string value.\n *\n * @method\n * @return {String} returns the wrapped string.\n */\nSymbol.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toString = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype[inspect] = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nSymbol.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Symbol;\nmodule.exports.Symbol = Symbol;\n","/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if (!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope;\n};\n\n/**\n * @ignore\n */\nCode.prototype.toJSON = function() {\n  return { scope: this.scope, code: this.code };\n};\n\nmodule.exports = Code;\nmodule.exports.Code = Code;\n","'use strict';\n\nvar Long = require('./long');\n\nvar PARSE_STRING_REGEXP = /^(\\+|-)?(\\d+|(\\d*\\.\\d*))?(E|e)?([-+])?(\\d+)?$/;\nvar PARSE_INF_REGEXP = /^(\\+|-)?(Infinity|inf)$/i;\nvar PARSE_NAN_REGEXP = /^(\\+|-)?NaN$/i;\n\nvar EXPONENT_MAX = 6111;\nvar EXPONENT_MIN = -6176;\nvar EXPONENT_BIAS = 6176;\nvar MAX_DIGITS = 34;\n\n// Nan value bits as 32 bit values (due to lack of longs)\nvar NAN_BUFFER = [\n  0x7c,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\n// Infinity value bits 32 bit values (due to lack of longs)\nvar INF_NEGATIVE_BUFFER = [\n  0xf8,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\nvar INF_POSITIVE_BUFFER = [\n  0x78,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00\n].reverse();\n\nvar EXPONENT_REGEX = /^([-+])?(\\d+)?$/;\n\n// Detect if the value is a digit\nvar isDigit = function(value) {\n  return !isNaN(parseInt(value, 10));\n};\n\n// Divide two uint128 values\nvar divideu128 = function(value) {\n  var DIVISOR = Long.fromNumber(1000 * 1000 * 1000);\n  var _rem = Long.fromNumber(0);\n  var i = 0;\n\n  if (!value.parts[0] && !value.parts[1] && !value.parts[2] && !value.parts[3]) {\n    return { quotient: value, rem: _rem };\n  }\n\n  for (i = 0; i <= 3; i++) {\n    // Adjust remainder to match value of next dividend\n    _rem = _rem.shiftLeft(32);\n    // Add the divided to _rem\n    _rem = _rem.add(new Long(value.parts[i], 0));\n    value.parts[i] = _rem.div(DIVISOR).low_;\n    _rem = _rem.modulo(DIVISOR);\n  }\n\n  return { quotient: value, rem: _rem };\n};\n\n// Multiply two Long values and return the 128 bit value\nvar multiply64x2 = function(left, right) {\n  if (!left && !right) {\n    return { high: Long.fromNumber(0), low: Long.fromNumber(0) };\n  }\n\n  var leftHigh = left.shiftRightUnsigned(32);\n  var leftLow = new Long(left.getLowBits(), 0);\n  var rightHigh = right.shiftRightUnsigned(32);\n  var rightLow = new Long(right.getLowBits(), 0);\n\n  var productHigh = leftHigh.multiply(rightHigh);\n  var productMid = leftHigh.multiply(rightLow);\n  var productMid2 = leftLow.multiply(rightHigh);\n  var productLow = leftLow.multiply(rightLow);\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productMid = new Long(productMid.getLowBits(), 0)\n    .add(productMid2)\n    .add(productLow.shiftRightUnsigned(32));\n\n  productHigh = productHigh.add(productMid.shiftRightUnsigned(32));\n  productLow = productMid.shiftLeft(32).add(new Long(productLow.getLowBits(), 0));\n\n  // Return the 128 bit result\n  return { high: productHigh, low: productLow };\n};\n\nvar lessThan = function(left, right) {\n  // Make values unsigned\n  var uhleft = left.high_ >>> 0;\n  var uhright = right.high_ >>> 0;\n\n  // Compare high bits first\n  if (uhleft < uhright) {\n    return true;\n  } else if (uhleft === uhright) {\n    var ulleft = left.low_ >>> 0;\n    var ulright = right.low_ >>> 0;\n    if (ulleft < ulright) return true;\n  }\n\n  return false;\n};\n\n// var longtoHex = function(value) {\n//   var buffer = new Buffer(8);\n//   var index = 0;\n//   // Encode the low 64 bits of the decimal\n//   // Encode low bits\n//   buffer[index++] = value.low_ & 0xff;\n//   buffer[index++] = (value.low_ >> 8) & 0xff;\n//   buffer[index++] = (value.low_ >> 16) & 0xff;\n//   buffer[index++] = (value.low_ >> 24) & 0xff;\n//   // Encode high bits\n//   buffer[index++] = value.high_ & 0xff;\n//   buffer[index++] = (value.high_ >> 8) & 0xff;\n//   buffer[index++] = (value.high_ >> 16) & 0xff;\n//   buffer[index++] = (value.high_ >> 24) & 0xff;\n//   return buffer.reverse().toString('hex');\n// };\n\n// var int32toHex = function(value) {\n//   var buffer = new Buffer(4);\n//   var index = 0;\n//   // Encode the low 64 bits of the decimal\n//   // Encode low bits\n//   buffer[index++] = value & 0xff;\n//   buffer[index++] = (value >> 8) & 0xff;\n//   buffer[index++] = (value >> 16) & 0xff;\n//   buffer[index++] = (value >> 24) & 0xff;\n//   return buffer.reverse().toString('hex');\n// };\n\n/**\n * A class representation of the BSON Decimal128 type.\n *\n * @class\n * @param {Buffer} bytes a buffer containing the raw Decimal128 bytes.\n * @return {Double}\n */\nvar Decimal128 = function(bytes) {\n  this._bsontype = 'Decimal128';\n  this.bytes = bytes;\n};\n\n/**\n * Create a Decimal128 instance from a string representation\n *\n * @method\n * @param {string} string a numeric string representation.\n * @return {Decimal128} returns a Decimal128 instance.\n */\nDecimal128.fromString = function(string) {\n  // Parse state tracking\n  var isNegative = false;\n  var sawRadix = false;\n  var foundNonZero = false;\n\n  // Total number of significant digits (no leading or trailing zero)\n  var significantDigits = 0;\n  // Total number of significand digits read\n  var nDigitsRead = 0;\n  // Total number of digits (no leading zeros)\n  var nDigits = 0;\n  // The number of the digits after radix\n  var radixPosition = 0;\n  // The index of the first non-zero in *str*\n  var firstNonZero = 0;\n\n  // Digits Array\n  var digits = [0];\n  // The number of digits in digits\n  var nDigitsStored = 0;\n  // Insertion pointer for digits\n  var digitsInsert = 0;\n  // The index of the first non-zero digit\n  var firstDigit = 0;\n  // The index of the last digit\n  var lastDigit = 0;\n\n  // Exponent\n  var exponent = 0;\n  // loop index over array\n  var i = 0;\n  // The high 17 digits of the significand\n  var significandHigh = [0, 0];\n  // The low 17 digits of the significand\n  var significandLow = [0, 0];\n  // The biased exponent\n  var biasedExponent = 0;\n\n  // Read index\n  var index = 0;\n\n  // Trim the string\n  string = string.trim();\n\n  // Naively prevent against REDOS attacks.\n  // TODO: implementing a custom parsing for this, or refactoring the regex would yield\n  //       further gains.\n  if (string.length >= 7000) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Results\n  var stringMatch = string.match(PARSE_STRING_REGEXP);\n  var infMatch = string.match(PARSE_INF_REGEXP);\n  var nanMatch = string.match(PARSE_NAN_REGEXP);\n\n  // Validate the string\n  if ((!stringMatch && !infMatch && !nanMatch) || string.length === 0) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Check if we have an illegal exponent format\n  if (stringMatch && stringMatch[4] && stringMatch[2] === undefined) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Get the negative or positive sign\n  if (string[index] === '+' || string[index] === '-') {\n    isNegative = string[index++] === '-';\n  }\n\n  // Check if user passed Infinity or NaN\n  if (!isDigit(string[index]) && string[index] !== '.') {\n    if (string[index] === 'i' || string[index] === 'I') {\n      return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n    } else if (string[index] === 'N') {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n  }\n\n  // Read all the digits\n  while (isDigit(string[index]) || string[index] === '.') {\n    if (string[index] === '.') {\n      if (sawRadix) {\n        return new Decimal128(new Buffer(NAN_BUFFER));\n      }\n\n      sawRadix = true;\n      index = index + 1;\n      continue;\n    }\n\n    if (nDigitsStored < 34) {\n      if (string[index] !== '0' || foundNonZero) {\n        if (!foundNonZero) {\n          firstNonZero = nDigitsRead;\n        }\n\n        foundNonZero = true;\n\n        // Only store 34 digits\n        digits[digitsInsert++] = parseInt(string[index], 10);\n        nDigitsStored = nDigitsStored + 1;\n      }\n    }\n\n    if (foundNonZero) {\n      nDigits = nDigits + 1;\n    }\n\n    if (sawRadix) {\n      radixPosition = radixPosition + 1;\n    }\n\n    nDigitsRead = nDigitsRead + 1;\n    index = index + 1;\n  }\n\n  if (sawRadix && !nDigitsRead) {\n    throw new Error('' + string + ' not a valid Decimal128 string');\n  }\n\n  // Read exponent if exists\n  if (string[index] === 'e' || string[index] === 'E') {\n    // Read exponent digits\n    var match = string.substr(++index).match(EXPONENT_REGEX);\n\n    // No digits read\n    if (!match || !match[2]) {\n      return new Decimal128(new Buffer(NAN_BUFFER));\n    }\n\n    // Get exponent\n    exponent = parseInt(match[0], 10);\n\n    // Adjust the index\n    index = index + match[0].length;\n  }\n\n  // Return not a number\n  if (string[index]) {\n    return new Decimal128(new Buffer(NAN_BUFFER));\n  }\n\n  // Done reading input\n  // Find first non-zero digit in digits\n  firstDigit = 0;\n\n  if (!nDigitsStored) {\n    firstDigit = 0;\n    lastDigit = 0;\n    digits[0] = 0;\n    nDigits = 1;\n    nDigitsStored = 1;\n    significantDigits = 0;\n  } else {\n    lastDigit = nDigitsStored - 1;\n    significantDigits = nDigits;\n\n    if (exponent !== 0 && significantDigits !== 1) {\n      while (string[firstNonZero + significantDigits - 1] === '0') {\n        significantDigits = significantDigits - 1;\n      }\n    }\n  }\n\n  // Normalization of exponent\n  // Correct exponent based on radix position, and shift significand as needed\n  // to represent user input\n\n  // Overflow prevention\n  if (exponent <= radixPosition && radixPosition - exponent > 1 << 14) {\n    exponent = EXPONENT_MIN;\n  } else {\n    exponent = exponent - radixPosition;\n  }\n\n  // Attempt to normalize the exponent\n  while (exponent > EXPONENT_MAX) {\n    // Shift exponent to significand and decrease\n    lastDigit = lastDigit + 1;\n\n    if (lastDigit - firstDigit > MAX_DIGITS) {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      var digitsString = digits.join('');\n      if (digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n\n    exponent = exponent - 1;\n  }\n\n  while (exponent < EXPONENT_MIN || nDigitsStored < nDigits) {\n    // Shift last digit\n    if (lastDigit === 0) {\n      exponent = EXPONENT_MIN;\n      significantDigits = 0;\n      break;\n    }\n\n    if (nDigitsStored < nDigits) {\n      // adjust to match digits not stored\n      nDigits = nDigits - 1;\n    } else {\n      // adjust to round\n      lastDigit = lastDigit - 1;\n    }\n\n    if (exponent < EXPONENT_MAX) {\n      exponent = exponent + 1;\n    } else {\n      // Check if we have a zero then just hard clamp, otherwise fail\n      digitsString = digits.join('');\n      if (digitsString.match(/^0+$/)) {\n        exponent = EXPONENT_MAX;\n        break;\n      } else {\n        return new Decimal128(new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER));\n      }\n    }\n  }\n\n  // Round\n  // We've normalized the exponent, but might still need to round.\n  if (lastDigit - firstDigit + 1 < significantDigits && string[significantDigits] !== '0') {\n    var endOfString = nDigitsRead;\n\n    // If we have seen a radix point, 'string' is 1 longer than we have\n    // documented with ndigits_read, so inc the position of the first nonzero\n    // digit and the position that digits are read to.\n    if (sawRadix && exponent === EXPONENT_MIN) {\n      firstNonZero = firstNonZero + 1;\n      endOfString = endOfString + 1;\n    }\n\n    var roundDigit = parseInt(string[firstNonZero + lastDigit + 1], 10);\n    var roundBit = 0;\n\n    if (roundDigit >= 5) {\n      roundBit = 1;\n\n      if (roundDigit === 5) {\n        roundBit = digits[lastDigit] % 2 === 1;\n\n        for (i = firstNonZero + lastDigit + 2; i < endOfString; i++) {\n          if (parseInt(string[i], 10)) {\n            roundBit = 1;\n            break;\n          }\n        }\n      }\n    }\n\n    if (roundBit) {\n      var dIdx = lastDigit;\n\n      for (; dIdx >= 0; dIdx--) {\n        if (++digits[dIdx] > 9) {\n          digits[dIdx] = 0;\n\n          // overflowed most significant digit\n          if (dIdx === 0) {\n            if (exponent < EXPONENT_MAX) {\n              exponent = exponent + 1;\n              digits[dIdx] = 1;\n            } else {\n              return new Decimal128(\n                new Buffer(isNegative ? INF_NEGATIVE_BUFFER : INF_POSITIVE_BUFFER)\n              );\n            }\n          }\n        } else {\n          break;\n        }\n      }\n    }\n  }\n\n  // Encode significand\n  // The high 17 digits of the significand\n  significandHigh = Long.fromNumber(0);\n  // The low 17 digits of the significand\n  significandLow = Long.fromNumber(0);\n\n  // read a zero\n  if (significantDigits === 0) {\n    significandHigh = Long.fromNumber(0);\n    significandLow = Long.fromNumber(0);\n  } else if (lastDigit - firstDigit < 17) {\n    dIdx = firstDigit;\n    significandLow = Long.fromNumber(digits[dIdx++]);\n    significandHigh = new Long(0, 0);\n\n    for (; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  } else {\n    dIdx = firstDigit;\n    significandHigh = Long.fromNumber(digits[dIdx++]);\n\n    for (; dIdx <= lastDigit - 17; dIdx++) {\n      significandHigh = significandHigh.multiply(Long.fromNumber(10));\n      significandHigh = significandHigh.add(Long.fromNumber(digits[dIdx]));\n    }\n\n    significandLow = Long.fromNumber(digits[dIdx++]);\n\n    for (; dIdx <= lastDigit; dIdx++) {\n      significandLow = significandLow.multiply(Long.fromNumber(10));\n      significandLow = significandLow.add(Long.fromNumber(digits[dIdx]));\n    }\n  }\n\n  var significand = multiply64x2(significandHigh, Long.fromString('100000000000000000'));\n\n  significand.low = significand.low.add(significandLow);\n\n  if (lessThan(significand.low, significandLow)) {\n    significand.high = significand.high.add(Long.fromNumber(1));\n  }\n\n  // Biased exponent\n  biasedExponent = exponent + EXPONENT_BIAS;\n  var dec = { low: Long.fromNumber(0), high: Long.fromNumber(0) };\n\n  // Encode combination, exponent, and significand.\n  if (\n    significand.high\n      .shiftRightUnsigned(49)\n      .and(Long.fromNumber(1))\n      .equals(Long.fromNumber)\n  ) {\n    // Encode '11' into bits 1 to 3\n    dec.high = dec.high.or(Long.fromNumber(0x3).shiftLeft(61));\n    dec.high = dec.high.or(\n      Long.fromNumber(biasedExponent).and(Long.fromNumber(0x3fff).shiftLeft(47))\n    );\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x7fffffffffff)));\n  } else {\n    dec.high = dec.high.or(Long.fromNumber(biasedExponent & 0x3fff).shiftLeft(49));\n    dec.high = dec.high.or(significand.high.and(Long.fromNumber(0x1ffffffffffff)));\n  }\n\n  dec.low = significand.low;\n\n  // Encode sign\n  if (isNegative) {\n    dec.high = dec.high.or(Long.fromString('9223372036854775808'));\n  }\n\n  // Encode into a buffer\n  var buffer = new Buffer(16);\n  index = 0;\n\n  // Encode the low 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.low.low_ & 0xff;\n  buffer[index++] = (dec.low.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.low.high_ & 0xff;\n  buffer[index++] = (dec.low.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.low.high_ >> 24) & 0xff;\n\n  // Encode the high 64 bits of the decimal\n  // Encode low bits\n  buffer[index++] = dec.high.low_ & 0xff;\n  buffer[index++] = (dec.high.low_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.low_ >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = dec.high.high_ & 0xff;\n  buffer[index++] = (dec.high.high_ >> 8) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 16) & 0xff;\n  buffer[index++] = (dec.high.high_ >> 24) & 0xff;\n\n  // Return the new Decimal128\n  return new Decimal128(buffer);\n};\n\n// Extract least significant 5 bits\nvar COMBINATION_MASK = 0x1f;\n// Extract least significant 14 bits\nvar EXPONENT_MASK = 0x3fff;\n// Value of combination field for Inf\nvar COMBINATION_INFINITY = 30;\n// Value of combination field for NaN\nvar COMBINATION_NAN = 31;\n// Value of combination field for NaN\n// var COMBINATION_SNAN = 32;\n// decimal128 exponent bias\nEXPONENT_BIAS = 6176;\n\n/**\n * Create a string representation of the raw Decimal128 value\n *\n * @method\n * @return {string} returns a Decimal128 string representation.\n */\nDecimal128.prototype.toString = function() {\n  // Note: bits in this routine are referred to starting at 0,\n  // from the sign bit, towards the coefficient.\n\n  // bits 0 - 31\n  var high;\n  // bits 32 - 63\n  var midh;\n  // bits 64 - 95\n  var midl;\n  // bits 96 - 127\n  var low;\n  // bits 1 - 5\n  var combination;\n  // decoded biased exponent (14 bits)\n  var biased_exponent;\n  // the number of significand digits\n  var significand_digits = 0;\n  // the base-10 digits in the significand\n  var significand = new Array(36);\n  for (var i = 0; i < significand.length; i++) significand[i] = 0;\n  // read pointer into significand\n  var index = 0;\n\n  // unbiased exponent\n  var exponent;\n  // the exponent if scientific notation is used\n  var scientific_exponent;\n\n  // true if the number is zero\n  var is_zero = false;\n\n  // the most signifcant significand bits (50-46)\n  var significand_msb;\n  // temporary storage for significand decoding\n  var significand128 = { parts: new Array(4) };\n  // indexing variables\n  i;\n  var j, k;\n\n  // Output string\n  var string = [];\n\n  // Unpack index\n  index = 0;\n\n  // Buffer reference\n  var buffer = this.bytes;\n\n  // Unpack the low 64bits into a long\n  low =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n  midl =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Unpack the high 64bits into a long\n  midh =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n  high =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Unpack index\n  index = 0;\n\n  // Create the state of the decimal\n  var dec = {\n    low: new Long(low, midl),\n    high: new Long(midh, high)\n  };\n\n  if (dec.high.lessThan(Long.ZERO)) {\n    string.push('-');\n  }\n\n  // Decode combination field and exponent\n  combination = (high >> 26) & COMBINATION_MASK;\n\n  if (combination >> 3 === 3) {\n    // Check for 'special' values\n    if (combination === COMBINATION_INFINITY) {\n      return string.join('') + 'Infinity';\n    } else if (combination === COMBINATION_NAN) {\n      return 'NaN';\n    } else {\n      biased_exponent = (high >> 15) & EXPONENT_MASK;\n      significand_msb = 0x08 + ((high >> 14) & 0x01);\n    }\n  } else {\n    significand_msb = (high >> 14) & 0x07;\n    biased_exponent = (high >> 17) & EXPONENT_MASK;\n  }\n\n  exponent = biased_exponent - EXPONENT_BIAS;\n\n  // Create string of significand digits\n\n  // Convert the 114-bit binary number represented by\n  // (significand_high, significand_low) to at most 34 decimal\n  // digits through modulo and division.\n  significand128.parts[0] = (high & 0x3fff) + ((significand_msb & 0xf) << 14);\n  significand128.parts[1] = midh;\n  significand128.parts[2] = midl;\n  significand128.parts[3] = low;\n\n  if (\n    significand128.parts[0] === 0 &&\n    significand128.parts[1] === 0 &&\n    significand128.parts[2] === 0 &&\n    significand128.parts[3] === 0\n  ) {\n    is_zero = true;\n  } else {\n    for (k = 3; k >= 0; k--) {\n      var least_digits = 0;\n      // Peform the divide\n      var result = divideu128(significand128);\n      significand128 = result.quotient;\n      least_digits = result.rem.low_;\n\n      // We now have the 9 least significant digits (in base 2).\n      // Convert and output to string.\n      if (!least_digits) continue;\n\n      for (j = 8; j >= 0; j--) {\n        // significand[k * 9 + j] = Math.round(least_digits % 10);\n        significand[k * 9 + j] = least_digits % 10;\n        // least_digits = Math.round(least_digits / 10);\n        least_digits = Math.floor(least_digits / 10);\n      }\n    }\n  }\n\n  // Output format options:\n  // Scientific - [-]d.dddE(+/-)dd or [-]dE(+/-)dd\n  // Regular    - ddd.ddd\n\n  if (is_zero) {\n    significand_digits = 1;\n    significand[index] = 0;\n  } else {\n    significand_digits = 36;\n    i = 0;\n\n    while (!significand[index]) {\n      i++;\n      significand_digits = significand_digits - 1;\n      index = index + 1;\n    }\n  }\n\n  scientific_exponent = significand_digits - 1 + exponent;\n\n  // The scientific exponent checks are dictated by the string conversion\n  // specification and are somewhat arbitrary cutoffs.\n  //\n  // We must check exponent > 0, because if this is the case, the number\n  // has trailing zeros.  However, we *cannot* output these trailing zeros,\n  // because doing so would change the precision of the value, and would\n  // change stored data if the string converted number is round tripped.\n\n  if (scientific_exponent >= 34 || scientific_exponent <= -7 || exponent > 0) {\n    // Scientific format\n    string.push(significand[index++]);\n    significand_digits = significand_digits - 1;\n\n    if (significand_digits) {\n      string.push('.');\n    }\n\n    for (i = 0; i < significand_digits; i++) {\n      string.push(significand[index++]);\n    }\n\n    // Exponent\n    string.push('E');\n    if (scientific_exponent > 0) {\n      string.push('+' + scientific_exponent);\n    } else {\n      string.push(scientific_exponent);\n    }\n  } else {\n    // Regular format with no decimal place\n    if (exponent >= 0) {\n      for (i = 0; i < significand_digits; i++) {\n        string.push(significand[index++]);\n      }\n    } else {\n      var radix_position = significand_digits + exponent;\n\n      // non-zero digits before radix\n      if (radix_position > 0) {\n        for (i = 0; i < radix_position; i++) {\n          string.push(significand[index++]);\n        }\n      } else {\n        string.push('0');\n      }\n\n      string.push('.');\n      // add leading zeros after radix\n      while (radix_position++ < 0) {\n        string.push('0');\n      }\n\n      for (i = 0; i < significand_digits - Math.max(radix_position - 1, 0); i++) {\n        string.push(significand[index++]);\n      }\n    }\n  }\n\n  return string.join('');\n};\n\nDecimal128.prototype.toJSON = function() {\n  return { $numberDecimal: this.toString() };\n};\n\nmodule.exports = Decimal128;\nmodule.exports.Decimal128 = Decimal128;\n","/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nfunction MaxKey() {\n  if (!(this instanceof MaxKey)) return new MaxKey();\n\n  this._bsontype = 'MaxKey';\n}\n\nmodule.exports = MaxKey;\nmodule.exports.MaxKey = MaxKey;\n","/**\n * A class representation of the BSON DBRef type.\n *\n * @class\n * @param {string} namespace the collection name.\n * @param {ObjectID} oid the reference ObjectID.\n * @param {string} [db] optional db name, if omitted the reference is local to the current db.\n * @return {DBRef}\n */\nfunction DBRef(namespace, oid, db) {\n  if (!(this instanceof DBRef)) return new DBRef(namespace, oid, db);\n\n  this._bsontype = 'DBRef';\n  this.namespace = namespace;\n  this.oid = oid;\n  this.db = db;\n}\n\n/**\n * @ignore\n * @api private\n */\nDBRef.prototype.toJSON = function() {\n  return {\n    $ref: this.namespace,\n    $id: this.oid,\n    $db: this.db == null ? '' : this.db\n  };\n};\n\nmodule.exports = DBRef;\nmodule.exports.DBRef = DBRef;\n","'use strict';\n\nvar Snappy = require('../connection/utils').retrieveSnappy(),\n  zlib = require('zlib');\n\nvar compressorIDs = {\n  snappy: 1,\n  zlib: 2\n};\n\nvar uncompressibleCommands = [\n  'ismaster',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'authenticate',\n  'createUser',\n  'updateUser',\n  'copydbSaslStart',\n  'copydbgetnonce',\n  'copydb'\n];\n\n// Facilitate compressing a message using an agreed compressor\nvar compress = function(self, dataToBeCompressed, callback) {\n  switch (self.options.agreedCompressor) {\n    case 'snappy':\n      Snappy.compress(dataToBeCompressed, callback);\n      break;\n    case 'zlib':\n      // Determine zlibCompressionLevel\n      var zlibOptions = {};\n      if (self.options.zlibCompressionLevel) {\n        zlibOptions.level = self.options.zlibCompressionLevel;\n      }\n      zlib.deflate(dataToBeCompressed, zlibOptions, callback);\n      break;\n    default:\n      throw new Error(\n        'Attempt to compress message using unknown compressor \"' +\n          self.options.agreedCompressor +\n          '\".'\n      );\n  }\n};\n\n// Decompress a message using the given compressor\nvar decompress = function(compressorID, compressedData, callback) {\n  if (compressorID < 0 || compressorID > compressorIDs.length) {\n    throw new Error(\n      'Server sent message compressed using an unsupported compressor. (Received compressor ID ' +\n        compressorID +\n        ')'\n    );\n  }\n  switch (compressorID) {\n    case compressorIDs.snappy:\n      Snappy.uncompress(compressedData, callback);\n      break;\n    case compressorIDs.zlib:\n      zlib.inflate(compressedData, callback);\n      break;\n    default:\n      callback(null, compressedData);\n  }\n};\n\nmodule.exports = {\n  compressorIDs: compressorIDs,\n  uncompressibleCommands: uncompressibleCommands,\n  compress: compress,\n  decompress: decompress\n};\n","'use strict';\n\nconst MongoCR = require('./mongocr');\nconst X509 = require('./x509');\nconst Plain = require('./plain');\nconst GSSAPI = require('./gssapi');\nconst SSPI = require('./sspi');\nconst ScramSHA1 = require('./scram').ScramSHA1;\nconst ScramSHA256 = require('./scram').ScramSHA256;\n\n/**\n * Returns the default authentication providers.\n *\n * @param {BSON} bson Bson definition\n * @returns {Object} a mapping of auth names to auth types\n */\nfunction defaultAuthProviders(bson) {\n  return {\n    mongocr: new MongoCR(bson),\n    x509: new X509(bson),\n    plain: new Plain(bson),\n    gssapi: new GSSAPI(bson),\n    sspi: new SSPI(bson),\n    'scram-sha-1': new ScramSHA1(bson),\n    'scram-sha-256': new ScramSHA256(bson)\n  };\n}\n\nmodule.exports = { defaultAuthProviders };\n","'use strict';\n\nvar f = require('util').format,\n  crypto = require('crypto'),\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError,\n  Buffer = require('safe-buffer').Buffer;\n\nlet saslprep;\n\ntry {\n  saslprep = require('saslprep');\n} catch (e) {\n  // don't do anything;\n}\n\nvar BSON = retrieveBSON(),\n  Binary = BSON.Binary;\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\nvar id = 0;\n\n/**\n * Creates a new ScramSHA authentication mechanism\n * @class\n * @return {ScramSHA} A cursor instance\n */\nvar ScramSHA = function(bson, cryptoMethod) {\n  this.bson = bson;\n  this.authStore = [];\n  this.id = id++;\n  this.cryptoMethod = cryptoMethod || 'sha1';\n};\n\nvar parsePayload = function(payload) {\n  var dict = {};\n  var parts = payload.split(',');\n\n  for (var i = 0; i < parts.length; i++) {\n    var valueParts = parts[i].split('=');\n    dict[valueParts[0]] = valueParts[1];\n  }\n\n  return dict;\n};\n\nvar passwordDigest = function(username, password) {\n  if (typeof username !== 'string') throw new MongoError('username must be a string');\n  if (typeof password !== 'string') throw new MongoError('password must be a string');\n  if (password.length === 0) throw new MongoError('password cannot be empty');\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + ':mongo:' + password, 'utf8');\n  return md5.digest('hex');\n};\n\n// XOR two buffers\nfunction xor(a, b) {\n  if (!Buffer.isBuffer(a)) a = Buffer.from(a);\n  if (!Buffer.isBuffer(b)) b = Buffer.from(b);\n  const length = Math.max(a.length, b.length);\n  const res = [];\n\n  for (let i = 0; i < length; i += 1) {\n    res.push(a[i] ^ b[i]);\n  }\n\n  return Buffer.from(res).toString('base64');\n}\n\nfunction H(method, text) {\n  return crypto\n    .createHash(method)\n    .update(text)\n    .digest();\n}\n\nfunction HMAC(method, key, text) {\n  return crypto\n    .createHmac(method, key)\n    .update(text)\n    .digest();\n}\n\nvar _hiCache = {};\nvar _hiCacheCount = 0;\nvar _hiCachePurge = function() {\n  _hiCache = {};\n  _hiCacheCount = 0;\n};\n\nconst hiLengthMap = {\n  sha256: 32,\n  sha1: 20\n};\n\nfunction HI(data, salt, iterations, cryptoMethod) {\n  // omit the work if already generated\n  const key = [data, salt.toString('base64'), iterations].join('_');\n  if (_hiCache[key] !== undefined) {\n    return _hiCache[key];\n  }\n\n  // generate the salt\n  const saltedData = crypto.pbkdf2Sync(\n    data,\n    salt,\n    iterations,\n    hiLengthMap[cryptoMethod],\n    cryptoMethod\n  );\n\n  // cache a copy to speed up the next lookup, but prevent unbounded cache growth\n  if (_hiCacheCount >= 200) {\n    _hiCachePurge();\n  }\n\n  _hiCache[key] = saltedData;\n  _hiCacheCount += 1;\n  return saltedData;\n}\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nScramSHA.prototype.auth = function(server, connections, db, username, password, callback) {\n  var self = this;\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  const cryptoMethod = this.cryptoMethod;\n  let mechanism = 'SCRAM-SHA-1';\n  let processedPassword;\n\n  if (cryptoMethod === 'sha256') {\n    mechanism = 'SCRAM-SHA-256';\n\n    let saslprepFn = (server.s && server.s.saslprep) || saslprep;\n\n    if (saslprepFn) {\n      processedPassword = saslprepFn(password);\n    } else {\n      console.warn('Warning: no saslprep library specified. Passwords will not be sanitized');\n      processedPassword = password;\n    }\n  } else {\n    processedPassword = passwordDigest(username, password);\n  }\n\n  // Execute MongoCR\n  var executeScram = function(connection) {\n    // Clean up the user\n    username = username.replace('=', '=3D').replace(',', '=2C');\n\n    // Create a random nonce\n    var nonce = crypto.randomBytes(24).toString('base64');\n    // var nonce = 'MsQUY9iw0T9fx2MUEz6LZPwGuhVvWAhc'\n\n    // NOTE: This is done b/c Javascript uses UTF-16, but the server is hashing in UTF-8.\n    // Since the username is not sasl-prep-d, we need to do this here.\n    const firstBare = Buffer.concat([\n      Buffer.from('n=', 'utf8'),\n      Buffer.from(username, 'utf8'),\n      Buffer.from(',r=', 'utf8'),\n      Buffer.from(nonce, 'utf8')\n    ]);\n\n    // Build command structure\n    var cmd = {\n      saslStart: 1,\n      mechanism: mechanism,\n      payload: new Binary(Buffer.concat([Buffer.from('n,,', 'utf8'), firstBare])),\n      autoAuthorize: 1\n    };\n\n    // Handle the error\n    var handleError = function(err, r) {\n      if (err) {\n        numberOfValidConnections = numberOfValidConnections - 1;\n        errorObject = err;\n        return false;\n      } else if (r.result['$err']) {\n        errorObject = r.result;\n        return false;\n      } else if (r.result['errmsg']) {\n        errorObject = r.result;\n        return false;\n      } else {\n        numberOfValidConnections = numberOfValidConnections + 1;\n      }\n\n      return true;\n    };\n\n    // Finish up\n    var finish = function(_count, _numberOfValidConnections) {\n      if (_count === 0 && _numberOfValidConnections > 0) {\n        // Store the auth details\n        addAuthSession(self.authStore, new AuthSession(db, username, password));\n        // Return correct authentication\n        return callback(null, true);\n      } else if (_count === 0) {\n        if (errorObject == null)\n          errorObject = new MongoError(f('failed to authenticate using scram'));\n        return callback(errorObject, false);\n      }\n    };\n\n    var handleEnd = function(_err, _r) {\n      // Handle any error\n      handleError(_err, _r);\n      // Adjust the number of connections\n      count = count - 1;\n      // Execute the finish\n      finish(count, numberOfValidConnections);\n    };\n\n    // Write the commmand on the connection\n    server(\n      connection,\n      new Query(self.bson, f('%s.$cmd', db), cmd, {\n        numberToSkip: 0,\n        numberToReturn: 1\n      }),\n      function(err, r) {\n        // Do we have an error, handle it\n        if (handleError(err, r) === false) {\n          count = count - 1;\n\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password));\n            // Return correct authentication\n            return callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using scram'));\n            return callback(errorObject, false);\n          }\n\n          return;\n        }\n\n        // Get the dictionary\n        var dict = parsePayload(r.result.payload.value());\n\n        // Unpack dictionary\n        var iterations = parseInt(dict.i, 10);\n        var salt = dict.s;\n        var rnonce = dict.r;\n\n        // Set up start of proof\n        var withoutProof = f('c=biws,r=%s', rnonce);\n        var saltedPassword = HI(\n          processedPassword,\n          Buffer.from(salt, 'base64'),\n          iterations,\n          cryptoMethod\n        );\n\n        if (iterations && iterations < 4096) {\n          const error = new MongoError(`Server returned an invalid iteration count ${iterations}`);\n          return callback(error, false);\n        }\n\n        // Create the client key\n        const clientKey = HMAC(cryptoMethod, saltedPassword, 'Client Key');\n\n        // Create the stored key\n        const storedKey = H(cryptoMethod, clientKey);\n\n        // Create the authentication message\n        const authMessage = [\n          firstBare,\n          r.result.payload.value().toString('base64'),\n          withoutProof\n        ].join(',');\n\n        // Create client signature\n        const clientSignature = HMAC(cryptoMethod, storedKey, authMessage);\n\n        // Create client proof\n        const clientProof = f('p=%s', xor(clientKey, clientSignature));\n\n        // Create client final\n        const clientFinal = [withoutProof, clientProof].join(',');\n\n        // Create continue message\n        const cmd = {\n          saslContinue: 1,\n          conversationId: r.result.conversationId,\n          payload: new Binary(Buffer.from(clientFinal))\n        };\n\n        //\n        // Execute sasl continue\n        // Write the commmand on the connection\n        server(\n          connection,\n          new Query(self.bson, f('%s.$cmd', db), cmd, {\n            numberToSkip: 0,\n            numberToReturn: 1\n          }),\n          function(err, r) {\n            if (r && r.result.done === false) {\n              var cmd = {\n                saslContinue: 1,\n                conversationId: r.result.conversationId,\n                payload: Buffer.alloc(0)\n              };\n\n              // Write the commmand on the connection\n              server(\n                connection,\n                new Query(self.bson, f('%s.$cmd', db), cmd, {\n                  numberToSkip: 0,\n                  numberToReturn: 1\n                }),\n                function(err, r) {\n                  handleEnd(err, r);\n                }\n              );\n            } else {\n              handleEnd(err, r);\n            }\n          }\n        );\n      }\n    );\n  };\n\n  var _execute = function(_connection) {\n    process.nextTick(function() {\n      executeScram(_connection);\n    });\n  };\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    _execute(connections.shift());\n  }\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nScramSHA.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nScramSHA.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  // No connections\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\nclass ScramSHA1 extends ScramSHA {\n  constructor(bson) {\n    super(bson, 'sha1');\n  }\n}\n\nclass ScramSHA256 extends ScramSHA {\n  constructor(bson) {\n    super(bson, 'sha256');\n  }\n}\n\nmodule.exports = { ScramSHA1, ScramSHA256 };\n","'use strict';\n\nconst Logger = require('./connection/logger');\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst MongoError = require('./error').MongoError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst mongoErrorContextSymbol = require('./error').mongoErrorContextSymbol;\nconst f = require('util').format;\nconst collationNotSupported = require('./utils').collationNotSupported;\n\nvar BSON = retrieveBSON(),\n  Long = BSON.Long;\n\n/**\n * This is a cursor results callback\n *\n * @callback resultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {object} document\n */\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query.\n *\n * **CURSORS Cannot directly be instantiated**\n * @example\n * var Server = require('mongodb-core').Server\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n *\n * var server = new Server({host: 'localhost', port: 27017});\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   assert.equal(null, err);\n *\n *   // Execute the write\n *   var cursor = _server.cursor('integration_tests.inserts_example4', {\n *       find: 'integration_tests.example4'\n *     , query: {a:1}\n *   }, {\n *     readPreference: new ReadPreference('secondary');\n *   });\n *\n *   // Get the first document\n *   cursor.next(function(err, doc) {\n *     assert.equal(null, err);\n *     server.destroy();\n *   });\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\n/**\n * Creates a new Cursor, not to be used directly\n * @class\n * @param {object} bson An instance of the BSON parser\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {{object}|Long} cmd The selector (can be a command or a cursorId)\n * @param {object} [options=null] Optional settings.\n * @param {object} [options.batchSize=1000] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {object} [options.transforms=null] Transform methods for the cursor results\n * @param {function} [options.transforms.query] Transform the value returned from the initial query\n * @param {function} [options.transforms.doc] Transform each document returned from Cursor.prototype.next\n * @param {object} topology The server topology instance.\n * @param {object} topologyOptions The server topology options.\n * @return {Cursor} A cursor instance\n * @property {number} cursorBatchSize The current cursorBatchSize for the cursor\n * @property {number} cursorLimit The current cursorLimit for the cursor\n * @property {number} cursorSkip The current cursorSkip for the cursor\n */\nvar Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  options = options || {};\n\n  // Cursor pool\n  this.pool = null;\n  // Cursor server\n  this.server = null;\n\n  // Do we have a not connected handler\n  this.disconnectHandler = options.disconnectHandler;\n\n  // Set local values\n  this.bson = bson;\n  this.ns = ns;\n  this.cmd = cmd;\n  this.options = options;\n  this.topology = topology;\n\n  // All internal state\n  this.cursorState = {\n    cursorId: null,\n    cmd: cmd,\n    documents: options.documents || [],\n    cursorIndex: 0,\n    dead: false,\n    killed: false,\n    init: false,\n    notified: false,\n    limit: options.limit || cmd.limit || 0,\n    skip: options.skip || cmd.skip || 0,\n    batchSize: options.batchSize || cmd.batchSize || 1000,\n    currentLimit: 0,\n    // Result field name if not a cursor (contains the array of results)\n    transforms: options.transforms\n  };\n\n  if (typeof options.session === 'object') {\n    this.cursorState.session = options.session;\n  }\n\n  // Add promoteLong to cursor state\n  if (typeof topologyOptions.promoteLongs === 'boolean') {\n    this.cursorState.promoteLongs = topologyOptions.promoteLongs;\n  } else if (typeof options.promoteLongs === 'boolean') {\n    this.cursorState.promoteLongs = options.promoteLongs;\n  }\n\n  // Add promoteValues to cursor state\n  if (typeof topologyOptions.promoteValues === 'boolean') {\n    this.cursorState.promoteValues = topologyOptions.promoteValues;\n  } else if (typeof options.promoteValues === 'boolean') {\n    this.cursorState.promoteValues = options.promoteValues;\n  }\n\n  // Add promoteBuffers to cursor state\n  if (typeof topologyOptions.promoteBuffers === 'boolean') {\n    this.cursorState.promoteBuffers = topologyOptions.promoteBuffers;\n  } else if (typeof options.promoteBuffers === 'boolean') {\n    this.cursorState.promoteBuffers = options.promoteBuffers;\n  }\n\n  if (topologyOptions.reconnect) {\n    this.cursorState.reconnect = topologyOptions.reconnect;\n  }\n\n  // Logger\n  this.logger = Logger('Cursor', topologyOptions);\n\n  //\n  // Did we pass in a cursor id\n  if (typeof cmd === 'number') {\n    this.cursorState.cursorId = Long.fromNumber(cmd);\n    this.cursorState.lastCursorId = this.cursorState.cursorId;\n  } else if (cmd instanceof Long) {\n    this.cursorState.cursorId = cmd;\n    this.cursorState.lastCursorId = cmd;\n  }\n};\n\nCursor.prototype.setCursorBatchSize = function(value) {\n  this.cursorState.batchSize = value;\n};\n\nCursor.prototype.cursorBatchSize = function() {\n  return this.cursorState.batchSize;\n};\n\nCursor.prototype.setCursorLimit = function(value) {\n  this.cursorState.limit = value;\n};\n\nCursor.prototype.cursorLimit = function() {\n  return this.cursorState.limit;\n};\n\nCursor.prototype.setCursorSkip = function(value) {\n  this.cursorState.skip = value;\n};\n\nCursor.prototype.cursorSkip = function() {\n  return this.cursorState.skip;\n};\n\nCursor.prototype._endSession = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  const session = this.cursorState.session;\n\n  if (session && (options.force || session.owner === this)) {\n    this.cursorState.session = undefined;\n    session.endSession(callback);\n    return true;\n  }\n\n  if (callback) {\n    callback();\n  }\n  return false;\n};\n\n//\n// Handle callback (including any exceptions thrown)\nvar handleCallback = function(callback, err, result) {\n  try {\n    callback(err, result);\n  } catch (err) {\n    process.nextTick(function() {\n      throw err;\n    });\n  }\n};\n\n// Internal methods\nCursor.prototype._find = function(callback) {\n  var self = this;\n\n  if (self.logger.isDebug()) {\n    self.logger.debug(\n      f(\n        'issue initial query [%s] with flags [%s]',\n        JSON.stringify(self.cmd),\n        JSON.stringify(self.query)\n      )\n    );\n  }\n\n  var queryCallback = function(err, r) {\n    if (err) return callback(err);\n\n    // Get the raw message\n    var result = r.message;\n\n    // Query failure bit set\n    if (result.queryFailure) {\n      return callback(new MongoError(result.documents[0]), null);\n    }\n\n    // Check if we have a command cursor\n    if (\n      Array.isArray(result.documents) &&\n      result.documents.length === 1 &&\n      (!self.cmd.find || (self.cmd.find && self.cmd.virtual === false)) &&\n      (typeof result.documents[0].cursor !== 'string' ||\n        result.documents[0]['$err'] ||\n        result.documents[0]['errmsg'] ||\n        Array.isArray(result.documents[0].result))\n    ) {\n      // We have a an error document return the error\n      if (result.documents[0]['$err'] || result.documents[0]['errmsg']) {\n        return callback(new MongoError(result.documents[0]), null);\n      }\n\n      // We have a cursor document\n      if (result.documents[0].cursor != null && typeof result.documents[0].cursor !== 'string') {\n        var id = result.documents[0].cursor.id;\n        // If we have a namespace change set the new namespace for getmores\n        if (result.documents[0].cursor.ns) {\n          self.ns = result.documents[0].cursor.ns;\n        }\n        // Promote id to long if needed\n        self.cursorState.cursorId = typeof id === 'number' ? Long.fromNumber(id) : id;\n        self.cursorState.lastCursorId = self.cursorState.cursorId;\n        self.cursorState.operationTime = result.documents[0].operationTime;\n        // If we have a firstBatch set it\n        if (Array.isArray(result.documents[0].cursor.firstBatch)) {\n          self.cursorState.documents = result.documents[0].cursor.firstBatch; //.reverse();\n        }\n\n        // Return after processing command cursor\n        return callback(null, result);\n      }\n\n      if (Array.isArray(result.documents[0].result)) {\n        self.cursorState.documents = result.documents[0].result;\n        self.cursorState.cursorId = Long.ZERO;\n        return callback(null, result);\n      }\n    }\n\n    // Otherwise fall back to regular find path\n    self.cursorState.cursorId = result.cursorId;\n    self.cursorState.documents = result.documents;\n    self.cursorState.lastCursorId = result.cursorId;\n\n    // Transform the results with passed in transformation method if provided\n    if (self.cursorState.transforms && typeof self.cursorState.transforms.query === 'function') {\n      self.cursorState.documents = self.cursorState.transforms.query(result);\n    }\n\n    // Return callback\n    callback(null, result);\n  };\n\n  // Options passed to the pool\n  var queryOptions = {};\n\n  // If we have a raw query decorate the function\n  if (self.options.raw || self.cmd.raw) {\n    // queryCallback.raw = self.options.raw || self.cmd.raw;\n    queryOptions.raw = self.options.raw || self.cmd.raw;\n  }\n\n  // Do we have documentsReturnedIn set on the query\n  if (typeof self.query.documentsReturnedIn === 'string') {\n    // queryCallback.documentsReturnedIn = self.query.documentsReturnedIn;\n    queryOptions.documentsReturnedIn = self.query.documentsReturnedIn;\n  }\n\n  // Add promote Long value if defined\n  if (typeof self.cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = self.cursorState.promoteLongs;\n  }\n\n  // Add promote values if defined\n  if (typeof self.cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = self.cursorState.promoteValues;\n  }\n\n  // Add promote values if defined\n  if (typeof self.cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = self.cursorState.promoteBuffers;\n  }\n\n  if (typeof self.cursorState.session === 'object') {\n    queryOptions.session = self.cursorState.session;\n  }\n\n  // Write the initial command out\n  self.server.s.pool.write(self.query, queryOptions, queryCallback);\n};\n\nCursor.prototype._getmore = function(callback) {\n  if (this.logger.isDebug())\n    this.logger.debug(f('schedule getMore call for query [%s]', JSON.stringify(this.query)));\n  // Determine if it's a raw query\n  var raw = this.options.raw || this.cmd.raw;\n\n  // Set the current batchSize\n  var batchSize = this.cursorState.batchSize;\n  if (\n    this.cursorState.limit > 0 &&\n    this.cursorState.currentLimit + batchSize > this.cursorState.limit\n  ) {\n    batchSize = this.cursorState.limit - this.cursorState.currentLimit;\n  }\n\n  // Default pool\n  var pool = this.server.s.pool;\n\n  // We have a wire protocol handler\n  this.server.wireProtocolHandler.getMore(\n    this.bson,\n    this.ns,\n    this.cursorState,\n    batchSize,\n    raw,\n    pool,\n    this.options,\n    callback\n  );\n};\n\n/**\n * Clone the cursor\n * @method\n * @return {Cursor}\n */\nCursor.prototype.clone = function() {\n  return this.topology.cursor(this.ns, this.cmd, this.options);\n};\n\n/**\n * Checks if the cursor is dead\n * @method\n * @return {boolean} A boolean signifying if the cursor is dead or not\n */\nCursor.prototype.isDead = function() {\n  return this.cursorState.dead === true;\n};\n\n/**\n * Checks if the cursor was killed by the application\n * @method\n * @return {boolean} A boolean signifying if the cursor was killed by the application\n */\nCursor.prototype.isKilled = function() {\n  return this.cursorState.killed === true;\n};\n\n/**\n * Checks if the cursor notified it's caller about it's death\n * @method\n * @return {boolean} A boolean signifying if the cursor notified the callback\n */\nCursor.prototype.isNotified = function() {\n  return this.cursorState.notified === true;\n};\n\n/**\n * Returns current buffered documents length\n * @method\n * @return {number} The number of items in the buffered documents\n */\nCursor.prototype.bufferedCount = function() {\n  return this.cursorState.documents.length - this.cursorState.cursorIndex;\n};\n\n/**\n * Returns current buffered documents\n * @method\n * @return {Array} An array of buffered documents\n */\nCursor.prototype.readBufferedDocuments = function(number) {\n  var unreadDocumentsLength = this.cursorState.documents.length - this.cursorState.cursorIndex;\n  var length = number < unreadDocumentsLength ? number : unreadDocumentsLength;\n  var elements = this.cursorState.documents.slice(\n    this.cursorState.cursorIndex,\n    this.cursorState.cursorIndex + length\n  );\n\n  // Transform the doc with passed in transformation method if provided\n  if (this.cursorState.transforms && typeof this.cursorState.transforms.doc === 'function') {\n    // Transform all the elements\n    for (var i = 0; i < elements.length; i++) {\n      elements[i] = this.cursorState.transforms.doc(elements[i]);\n    }\n  }\n\n  // Ensure we do not return any more documents than the limit imposed\n  // Just return the number of elements up to the limit\n  if (\n    this.cursorState.limit > 0 &&\n    this.cursorState.currentLimit + elements.length > this.cursorState.limit\n  ) {\n    elements = elements.slice(0, this.cursorState.limit - this.cursorState.currentLimit);\n    this.kill();\n  }\n\n  // Adjust current limit\n  this.cursorState.currentLimit = this.cursorState.currentLimit + elements.length;\n  this.cursorState.cursorIndex = this.cursorState.cursorIndex + elements.length;\n\n  // Return elements\n  return elements;\n};\n\n/**\n * Kill the cursor\n * @method\n * @param {resultCallback} callback A callback function\n */\nCursor.prototype.kill = function(callback) {\n  // Set cursor to dead\n  this.cursorState.dead = true;\n  this.cursorState.killed = true;\n  // Remove documents\n  this.cursorState.documents = [];\n\n  // If no cursor id just return\n  if (\n    this.cursorState.cursorId == null ||\n    this.cursorState.cursorId.isZero() ||\n    this.cursorState.init === false\n  ) {\n    if (callback) callback(null, null);\n    return;\n  }\n\n  // Default pool\n  var pool = this.server.s.pool;\n  // Execute command\n  this.server.wireProtocolHandler.killCursor(this.bson, this.ns, this.cursorState, pool, callback);\n};\n\n/**\n * Resets the cursor\n * @method\n * @return {null}\n */\nCursor.prototype.rewind = function() {\n  if (this.cursorState.init) {\n    if (!this.cursorState.dead) {\n      this.kill();\n    }\n\n    this.cursorState.currentLimit = 0;\n    this.cursorState.init = false;\n    this.cursorState.dead = false;\n    this.cursorState.killed = false;\n    this.cursorState.notified = false;\n    this.cursorState.documents = [];\n    this.cursorState.cursorId = null;\n    this.cursorState.cursorIndex = 0;\n  }\n};\n\n/**\n * Validate if the pool is dead and return error\n */\nvar isConnectionDead = function(self, callback) {\n  if (self.pool && self.pool.isDestroyed()) {\n    self.cursorState.killed = true;\n    const err = new MongoNetworkError(\n      f('connection to host %s:%s was destroyed', self.pool.host, self.pool.port)\n    );\n    _setCursorNotifiedImpl(self, () => callback(err));\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Validate if the cursor is dead but was not explicitly killed by user\n */\nvar isCursorDeadButNotkilled = function(self, callback) {\n  // Cursor is dead but not marked killed, return null\n  if (self.cursorState.dead && !self.cursorState.killed) {\n    self.cursorState.killed = true;\n    setCursorNotified(self, callback);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Validate if the cursor is dead and was killed by user\n */\nvar isCursorDeadAndKilled = function(self, callback) {\n  if (self.cursorState.dead && self.cursorState.killed) {\n    handleCallback(callback, new MongoError('cursor is dead'));\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Validate if the cursor was killed by the user\n */\nvar isCursorKilled = function(self, callback) {\n  if (self.cursorState.killed) {\n    setCursorNotified(self, callback);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Mark cursor as being dead and notified\n */\nvar setCursorDeadAndNotified = function(self, callback) {\n  self.cursorState.dead = true;\n  setCursorNotified(self, callback);\n};\n\n/**\n * Mark cursor as being notified\n */\nvar setCursorNotified = function(self, callback) {\n  _setCursorNotifiedImpl(self, () => handleCallback(callback, null, null));\n};\n\nvar _setCursorNotifiedImpl = function(self, callback) {\n  self.cursorState.notified = true;\n  self.cursorState.documents = [];\n  self.cursorState.cursorIndex = 0;\n  if (self._endSession) {\n    return self._endSession(undefined, () => callback());\n  }\n  return callback();\n};\n\nvar nextFunction = function(self, callback) {\n  // We have notified about it\n  if (self.cursorState.notified) {\n    return callback(new Error('cursor is exhausted'));\n  }\n\n  // Cursor is killed return null\n  if (isCursorKilled(self, callback)) return;\n\n  // Cursor is dead but not marked killed, return null\n  if (isCursorDeadButNotkilled(self, callback)) return;\n\n  // We have a dead and killed cursor, attempting to call next should error\n  if (isCursorDeadAndKilled(self, callback)) return;\n\n  // We have just started the cursor\n  if (!self.cursorState.init) {\n    return initializeCursor(self, callback);\n  }\n\n  // If we don't have a cursorId execute the first query\n  if (self.cursorState.cursorId == null) {\n    // Check if pool is dead and return if not possible to\n    // execute the query against the db\n    if (isConnectionDead(self, callback)) return;\n\n    // Check if topology is destroyed\n    if (self.topology.isDestroyed())\n      return callback(\n        new MongoNetworkError('connection destroyed, not possible to instantiate cursor')\n      );\n\n    // query, cmd, options, cursorState, callback\n    self._find(function(err) {\n      if (err) return handleCallback(callback, err, null);\n\n      if (self.cursorState.cursorId && self.cursorState.cursorId.isZero() && self._endSession) {\n        self._endSession();\n      }\n\n      if (\n        self.cursorState.documents.length === 0 &&\n        self.cursorState.cursorId &&\n        self.cursorState.cursorId.isZero() &&\n        !self.cmd.tailable &&\n        !self.cmd.awaitData\n      ) {\n        return setCursorNotified(self, callback);\n      }\n\n      nextFunction(self, callback);\n    });\n  } else if (\n    self.cursorState.limit > 0 &&\n    self.cursorState.currentLimit >= self.cursorState.limit\n  ) {\n    // Ensure we kill the cursor on the server\n    self.kill();\n    // Set cursor in dead and notified state\n    return setCursorDeadAndNotified(self, callback);\n  } else if (\n    self.cursorState.cursorIndex === self.cursorState.documents.length &&\n    !Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    // Ensure an empty cursor state\n    self.cursorState.documents = [];\n    self.cursorState.cursorIndex = 0;\n\n    // Check if topology is destroyed\n    if (self.topology.isDestroyed())\n      return callback(\n        new MongoNetworkError('connection destroyed, not possible to instantiate cursor')\n      );\n\n    // Check if connection is dead and return if not possible to\n    // execute a getmore on this connection\n    if (isConnectionDead(self, callback)) return;\n\n    // Execute the next get more\n    self._getmore(function(err, doc, connection) {\n      if (err) {\n        if (err instanceof MongoError) {\n          err[mongoErrorContextSymbol].isGetMore = true;\n        }\n\n        return handleCallback(callback, err);\n      }\n\n      if (self.cursorState.cursorId && self.cursorState.cursorId.isZero() && self._endSession) {\n        self._endSession();\n      }\n\n      // Save the returned connection to ensure all getMore's fire over the same connection\n      self.connection = connection;\n\n      // Tailable cursor getMore result, notify owner about it\n      // No attempt is made here to retry, this is left to the user of the\n      // core module to handle to keep core simple\n      if (\n        self.cursorState.documents.length === 0 &&\n        self.cmd.tailable &&\n        Long.ZERO.equals(self.cursorState.cursorId)\n      ) {\n        // No more documents in the tailed cursor\n        return handleCallback(\n          callback,\n          new MongoError({\n            message: 'No more documents in tailed cursor',\n            tailable: self.cmd.tailable,\n            awaitData: self.cmd.awaitData\n          })\n        );\n      } else if (\n        self.cursorState.documents.length === 0 &&\n        self.cmd.tailable &&\n        !Long.ZERO.equals(self.cursorState.cursorId)\n      ) {\n        return nextFunction(self, callback);\n      }\n\n      if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n        return setCursorDeadAndNotified(self, callback);\n      }\n\n      nextFunction(self, callback);\n    });\n  } else if (\n    self.cursorState.documents.length === self.cursorState.cursorIndex &&\n    self.cmd.tailable &&\n    Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    return handleCallback(\n      callback,\n      new MongoError({\n        message: 'No more documents in tailed cursor',\n        tailable: self.cmd.tailable,\n        awaitData: self.cmd.awaitData\n      })\n    );\n  } else if (\n    self.cursorState.documents.length === self.cursorState.cursorIndex &&\n    Long.ZERO.equals(self.cursorState.cursorId)\n  ) {\n    setCursorDeadAndNotified(self, callback);\n  } else {\n    if (self.cursorState.limit > 0 && self.cursorState.currentLimit >= self.cursorState.limit) {\n      // Ensure we kill the cursor on the server\n      self.kill();\n      // Set cursor in dead and notified state\n      return setCursorDeadAndNotified(self, callback);\n    }\n\n    // Increment the current cursor limit\n    self.cursorState.currentLimit += 1;\n\n    // Get the document\n    var doc = self.cursorState.documents[self.cursorState.cursorIndex++];\n\n    // Doc overflow\n    if (!doc || doc.$err) {\n      // Ensure we kill the cursor on the server\n      self.kill();\n      // Set cursor in dead and notified state\n      return setCursorDeadAndNotified(self, function() {\n        handleCallback(callback, new MongoError(doc ? doc.$err : undefined));\n      });\n    }\n\n    // Transform the doc with passed in transformation method if provided\n    if (self.cursorState.transforms && typeof self.cursorState.transforms.doc === 'function') {\n      doc = self.cursorState.transforms.doc(doc);\n    }\n\n    // Return the document\n    handleCallback(callback, null, doc);\n  }\n};\n\nfunction initializeCursor(cursor, callback) {\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if (!cursor.topology.isConnected(cursor.options)) {\n    // Only need this for single server, because repl sets and mongos\n    // will always continue trying to reconnect\n    if (cursor.topology._type === 'server' && !cursor.topology.s.options.reconnect) {\n      // Reconnect is disabled, so we'll never reconnect\n      return callback(new MongoError('no connection available'));\n    }\n\n    if (cursor.disconnectHandler != null) {\n      if (cursor.topology.isDestroyed()) {\n        // Topology was destroyed, so don't try to wait for it to reconnect\n        return callback(new MongoError('Topology was destroyed'));\n      }\n\n      return cursor.disconnectHandler.addObjectAndMethod(\n        'cursor',\n        cursor,\n        'next',\n        [callback],\n        callback\n      );\n    }\n  }\n\n  return cursor.topology.selectServer(cursor.options, (err, server) => {\n    if (err) {\n      // Handle the error and add object to next method call\n      if (cursor.disconnectHandler != null) {\n        return cursor.disconnectHandler.addObjectAndMethod(\n          'cursor',\n          cursor,\n          'next',\n          [callback],\n          callback\n        );\n      }\n\n      return callback(err);\n    }\n\n    cursor.server = server;\n\n    // Set as init\n    cursor.cursorState.init = true;\n\n    // error if collation not supported\n    if (collationNotSupported(cursor.server, cursor.cmd)) {\n      return callback(new MongoError(`server ${cursor.server.name} does not support collation`));\n    }\n\n    try {\n      cursor.query = cursor.server.wireProtocolHandler.command(\n        cursor.bson,\n        cursor.ns,\n        cursor.cmd,\n        cursor.cursorState,\n        cursor.topology,\n        cursor.options\n      );\n\n      if (cursor.query instanceof MongoError) {\n        return callback(cursor.query);\n      }\n\n      // call `nextFunction` again now that we are initialized\n      nextFunction(cursor, callback);\n    } catch (err) {\n      return callback(err);\n    }\n  });\n}\n\n/**\n * Retrieve the next document from the cursor\n * @method\n * @param {resultCallback} callback A callback function\n */\nCursor.prototype.next = function(callback) {\n  nextFunction(this, callback);\n};\n\nmodule.exports = Cursor;\n","'use strict';\n\nconst ChangeStream = require('./change_stream');\nconst Db = require('./db');\nconst EventEmitter = require('events').EventEmitter;\nconst executeOperation = require('./utils').executeOperation;\nconst handleCallback = require('./utils').handleCallback;\nconst inherits = require('util').inherits;\nconst MongoError = require('mongodb-core').MongoError;\n\n// Operations\nconst connectOp = require('./operations/mongo_client_ops').connectOp;\nconst logout = require('./operations/mongo_client_ops').logout;\nconst validOptions = require('./operations/mongo_client_ops').validOptions;\n\n/**\n * @fileOverview The **MongoClient** class is a class that allows for making Connections to MongoDB.\n *\n * @example\n * // Connect using a MongoClient instance\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * const mongoClient = new MongoClient(url);\n * mongoClient.connect(function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n *\n * @example\n * // Connect using the MongoClient.connect static method\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   client.close();\n * });\n */\n\n/**\n * Creates a new MongoClient instance\n * @class\n * @param {string} url The connection URI string\n * @param {object} [options] Optional settings\n * @param {number} [options.poolSize=5] The maximum size of the individual server pool\n * @param {boolean} [options.ssl=false] Enable SSL connection.\n * @param {boolean} [options.sslValidate=true] Validate mongod server certificate against Certificate Authority\n * @param {buffer} [options.sslCA=undefined] SSL Certificate store binary buffer\n * @param {buffer} [options.sslCert=undefined] SSL Certificate binary buffer\n * @param {buffer} [options.sslKey=undefined] SSL Key file binary buffer\n * @param {string} [options.sslPass=undefined] SSL Certificate pass phrase\n * @param {buffer} [options.sslCRL=undefined] SSL Certificate revocation list binary buffer\n * @param {boolean} [options.autoReconnect=true] Enable autoReconnect for single server instances\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.connectTimeoutMS=30000] TCP Connection timeout setting\n * @param {number} [options.family] Version of IP stack. Can be 4, 6 or null (default).\n * If null, will attempt to connect with IPv6, and will fall back to IPv4 on failure\n * @param {number} [options.socketTimeoutMS=360000] TCP Socket timeout setting\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.ha=true] Control if high availability monitoring runs for Replicaset or Mongos proxies\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {string} [options.replicaSet=undefined] The Replicaset set name\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for Mongos proxies selection\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {string} [options.authSource=undefined] Define the database to authenticate against\n * @param {(number|string)} [options.w] The write concern\n * @param {number} [options.wtimeout] The write concern timeout\n * @param {boolean} [options.j=false] Specify a journal write concern\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern] Specify a read concern for the collection (only MongoDB 3.2 or higher supported)\n * @param {string} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed)\n * @param {string} [options.loggerLevel=undefined] The logging level (error/warn/info/debug)\n * @param {object} [options.logger=undefined] Custom logger object\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers\n * @param {boolean} [options.promoteLongs=true] Promotes long values to number if they fit inside the 53 bits resolution\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function\n * @param {object} [options.validateOptions=false] Validate MongoClient passed in options for correctness\n * @param {string} [options.appname=undefined] The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections\n * @param {string} [options.auth.user=undefined] The username for auth\n * @param {string} [options.auth.password=undefined] The password for auth\n * @param {string} [options.authMechanism=undefined] Mechanism for authentication: MDEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1\n * @param {object} [options.compression] Type of compression to use: snappy or zlib\n * @param {boolean} [options.fsync=false] Specify a file sync write concern\n * @param {array} [options.readPreferenceTags] Read preference tags\n * @param {number} [options.numberOfRetries=5] The number of retries for a tailable cursor\n * @param {boolean} [options.auto_reconnect=true] Enable auto reconnecting for single server instances\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this client\n * @param {number} [options.minSize] If present, the connection pool will be initialized with minSize connections, and will never dip below minSize connections\n * @param {boolean} [options.useNewUrlParser=false] Determines whether or not to use the new url parser. Enables the new, spec-compliant, url parser shipped in the core driver. This url parser fixes a number of problems with the original parser, and aims to outright replace that parser in the near future.\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {MongoClient} a MongoClient instance\n */\nfunction MongoClient(url, options) {\n  if (!(this instanceof MongoClient)) return new MongoClient(url, options);\n  // Set up event emitter\n  EventEmitter.call(this);\n\n  // The internal state\n  this.s = {\n    url: url,\n    options: options || {},\n    promiseLibrary: null,\n    dbCache: {},\n    sessions: []\n  };\n\n  // Get the promiseLibrary\n  const promiseLibrary = this.s.options.promiseLibrary || Promise;\n\n  // Add the promise to the internal state\n  this.s.promiseLibrary = promiseLibrary;\n}\n\n/**\n * @ignore\n */\ninherits(MongoClient, EventEmitter);\n\n/**\n * The callback format for results\n * @callback MongoClient~connectCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {MongoClient} client The connected client.\n */\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver\n *\n * @method\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {Promise<MongoClient>} returns Promise if no callback passed\n */\nMongoClient.prototype.connect = function(callback) {\n  // Validate options object\n  const err = validOptions(this.s.options);\n\n  if (typeof callback === 'string') {\n    throw new TypeError('`connect` only accepts a callback');\n  }\n\n  return executeOperation(this, connectOp, [this, err, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * Logout user from server, fire off on all connections and remove all auth info\n * @method\n * @param {object} [options] Optional settings.\n * @param {string} [options.dbName] Logout against different database than current.\n * @param {Db~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nMongoClient.prototype.logout = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Establish the correct database name\n  const dbName = this.s.options.authSource ? this.s.options.authSource : this.s.options.dbName;\n\n  return executeOperation(this, logout, [this, dbName, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * Close the db and its underlying connections\n * @method\n * @param {boolean} force Force close, emitting no events\n * @param {Db~noResultCallback} [callback] The result callback\n * @return {Promise} returns Promise if no callback passed\n */\nMongoClient.prototype.close = function(force, callback) {\n  if (typeof force === 'function') (callback = force), (force = false);\n\n  // Close the topology connection\n  if (this.topology) {\n    this.topology.close(force);\n  }\n  // Emit close event\n  this.emit('close', this);\n\n  // Fire close event on any cached db instances\n  for (const name in this.s.dbCache) {\n    this.s.dbCache[name].emit('close');\n  }\n\n  // Remove listeners after emit\n  this.removeAllListeners('close');\n\n  // Callback after next event loop tick\n  if (typeof callback === 'function')\n    return process.nextTick(() => {\n      handleCallback(callback, null);\n    });\n\n  // Return dummy promise\n  return new this.s.promiseLibrary(resolve => {\n    resolve();\n  });\n};\n\n/**\n * Create a new Db instance sharing the current socket connections. Be aware that the new db instances are\n * related in a parent-child relationship to the original instance so that events are correctly emitted on child\n * db instances. Child db instances are cached so performing db('db1') twice will return the same instance.\n * You can control these behaviors with the options noListener and returnNonCachedInstance.\n *\n * @method\n * @param {string} [dbName] The name of the database we want to use. If not provided, use database name from connection string.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {Db}\n */\nMongoClient.prototype.db = function(dbName, options) {\n  options = options || {};\n\n  // Default to db from connection string if not provided\n  if (!dbName) {\n    dbName = this.s.options.dbName;\n  }\n\n  // Copy the options and add out internal override of the not shared flag\n  const finalOptions = Object.assign({}, this.s.options, options);\n\n  // Do we have the db in the cache already\n  if (this.s.dbCache[dbName] && finalOptions.returnNonCachedInstance !== true) {\n    return this.s.dbCache[dbName];\n  }\n\n  // Add promiseLibrary\n  finalOptions.promiseLibrary = this.s.promiseLibrary;\n\n  // If no topology throw an error message\n  if (!this.topology) {\n    throw new MongoError('MongoClient must be connected before calling MongoClient.prototype.db');\n  }\n\n  // Return the db object\n  const db = new Db(dbName, this.topology, finalOptions);\n\n  // Add the db to the cache\n  this.s.dbCache[dbName] = db;\n  // Return the database\n  return db;\n};\n\n/**\n * Check if MongoClient is connected\n *\n * @method\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.noListener=false] Do not make the db an event listener to the original connection.\n * @param {boolean} [options.returnNonCachedInstance=false] Control if you want to return a cached instance or have a new one created\n * @return {boolean}\n */\nMongoClient.prototype.isConnected = function(options) {\n  options = options || {};\n\n  if (!this.topology) return false;\n  return this.topology.isConnected(options);\n};\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver\n *\n * @method\n * @static\n * @param {string} url The connection URI string\n * @param {object} [options] Optional settings\n * @param {number} [options.poolSize=5] The maximum size of the individual server pool\n * @param {boolean} [options.ssl=false] Enable SSL connection.\n * @param {boolean} [options.sslValidate=true] Validate mongod server certificate against Certificate Authority\n * @param {buffer} [options.sslCA=undefined] SSL Certificate store binary buffer\n * @param {buffer} [options.sslCert=undefined] SSL Certificate binary buffer\n * @param {buffer} [options.sslKey=undefined] SSL Key file binary buffer\n * @param {string} [options.sslPass=undefined] SSL Certificate pass phrase\n * @param {buffer} [options.sslCRL=undefined] SSL Certificate revocation list binary buffer\n * @param {boolean} [options.autoReconnect=true] Enable autoReconnect for single server instances\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {boolean} [options.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.connectTimeoutMS=30000] TCP Connection timeout setting\n * @param {number} [options.family] Version of IP stack. Can be 4, 6 or null (default).\n * If null, will attempt to connect with IPv6, and will fall back to IPv4 on failure\n * @param {number} [options.socketTimeoutMS=360000] TCP Socket timeout setting\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.ha=true] Control if high availability monitoring runs for Replicaset or Mongos proxies\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {string} [options.replicaSet=undefined] The Replicaset set name\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for Mongos proxies selection\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {string} [options.authSource=undefined] Define the database to authenticate against\n * @param {(number|string)} [options.w] The write concern\n * @param {number} [options.wtimeout] The write concern timeout\n * @param {boolean} [options.j=false] Specify a journal write concern\n * @param {boolean} [options.forceServerObjectId=false] Force server to assign _id values instead of driver\n * @param {boolean} [options.serializeFunctions=false] Serialize functions on any object\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields\n * @param {boolean} [options.raw=false] Return document results as raw BSON buffers\n * @param {number} [options.bufferMaxEntries=-1] Sets a cap on how many operations the driver will buffer up before giving up on getting a working connection, default is -1 which is unlimited\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST)\n * @param {object} [options.pkFactory] A primary key factory object for generation of custom _id keys\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {object} [options.readConcern] Specify a read concern for the collection (only MongoDB 3.2 or higher supported)\n * @param {string} [options.readConcern.level='local'] Specify a read concern level for the collection operations, one of [local|majority]. (only MongoDB 3.2 or higher supported)\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed)\n * @param {string} [options.loggerLevel=undefined] The logging level (error/warn/info/debug)\n * @param {object} [options.logger=undefined] Custom logger object\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers\n * @param {boolean} [options.promoteLongs=true] Promotes long values to number if they fit inside the 53 bits resolution\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function\n * @param {object} [options.validateOptions=false] Validate MongoClient passed in options for correctness\n * @param {string} [options.appname=undefined] The name of the application that created this MongoClient instance. MongoDB 3.4 and newer will print this value in the server log upon establishing each connection. It is also recorded in the slow query log and profile collections\n * @param {string} [options.auth.user=undefined] The username for auth\n * @param {string} [options.auth.password=undefined] The password for auth\n * @param {string} [options.authMechanism=undefined] Mechanism for authentication: MDEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1\n * @param {object} [options.compression] Type of compression to use: snappy or zlib\n * @param {boolean} [options.fsync=false] Specify a file sync write concern\n * @param {array} [options.readPreferenceTags] Read preference tags\n * @param {number} [options.numberOfRetries=5] The number of retries for a tailable cursor\n * @param {boolean} [options.auto_reconnect=true] Enable auto reconnecting for single server instances\n * @param {number} [options.minSize] If present, the connection pool will be initialized with minSize connections, and will never dip below minSize connections\n * @param {MongoClient~connectCallback} [callback] The command result callback\n * @return {Promise<MongoClient>} returns Promise if no callback passed\n */\nMongoClient.connect = function(url, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  // Create client\n  const mongoClient = new MongoClient(url, options);\n  // Execute the connect method\n  return mongoClient.connect(callback);\n};\n\n/**\n * Starts a new session on the server\n *\n * @param {SessionOptions} [options] optional settings for a driver session\n * @return {ClientSession} the newly established session\n */\nMongoClient.prototype.startSession = function(options) {\n  options = Object.assign({ explicit: true }, options);\n  if (!this.topology) {\n    throw new MongoError('Must connect to a server before calling this method');\n  }\n\n  if (!this.topology.hasSessionSupport()) {\n    throw new MongoError('Current topology does not support sessions');\n  }\n\n  return this.topology.startSession(options, this.s.options);\n};\n\n/**\n * Runs a given operation with an implicitly created session. The lifetime of the session\n * will be handled without the need for user interaction.\n *\n * NOTE: presently the operation MUST return a Promise (either explicit or implicity as an async function)\n *\n * @param {Object} [options] Optional settings to be appled to implicitly created session\n * @param {Function} operation An operation to execute with an implicitly created session. The signature of this MUST be `(session) => {}`\n * @return {Promise}\n */\nMongoClient.prototype.withSession = function(options, operation) {\n  if (typeof options === 'function') (operation = options), (options = undefined);\n  const session = this.startSession(options);\n\n  let cleanupHandler = (err, result, opts) => {\n    // prevent multiple calls to cleanupHandler\n    cleanupHandler = () => {\n      throw new ReferenceError('cleanupHandler was called too many times');\n    };\n\n    opts = Object.assign({ throw: true }, opts);\n    session.endSession();\n\n    if (err) {\n      if (opts.throw) throw err;\n      return Promise.reject(err);\n    }\n  };\n\n  try {\n    const result = operation(session);\n    return Promise.resolve(result)\n      .then(result => cleanupHandler(null, result))\n      .catch(err => cleanupHandler(err, null, { throw: true }));\n  } catch (err) {\n    return cleanupHandler(err, null, { throw: false });\n  }\n};\n/**\n * Create a new Change Stream, watching for new changes (insertions, updates, replacements, deletions, and invalidations) in this cluster. Will ignore all changes to system collections, as well as the local, admin,\n * and config databases.\n * @method\n * @since 3.1.0\n * @param {Array} [pipeline] An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n * @param {object} [options] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {object} [options.resumeAfter] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {number} [options.batchSize] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference] The read preference. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @param {Timestamp} [options.startAtClusterTime] receive change events that occur after the specified timestamp\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @return {ChangeStream} a ChangeStream instance.\n */\nMongoClient.prototype.watch = function(pipeline, options) {\n  pipeline = pipeline || [];\n  options = options || {};\n\n  // Allow optionally not specifying a pipeline\n  if (!Array.isArray(pipeline)) {\n    options = pipeline;\n    pipeline = [];\n  }\n\n  return new ChangeStream(this, pipeline, options);\n};\n\n/**\n * Return the mongo client logger\n * @method\n * @return {Logger} return the mongo client logger\n * @ignore\n */\nMongoClient.prototype.getLogger = function() {\n  return this.s.options.logger;\n};\n\nmodule.exports = MongoClient;\n","'use strict';\n\nconst Long = require('mongodb-core').BSON.Long;\nconst MongoError = require('mongodb-core').MongoError;\nconst toError = require('../utils').toError;\nconst handleCallback = require('../utils').handleCallback;\nconst applyRetryableWrites = require('../utils').applyRetryableWrites;\nconst applyWriteConcern = require('../utils').applyWriteConcern;\nconst ObjectID = require('mongodb-core').BSON.ObjectID;\nconst BSON = require('mongodb-core').BSON;\n\n// Error codes\nconst UNKNOWN_ERROR = 8;\nconst INVALID_BSON_ERROR = 22;\nconst WRITE_CONCERN_ERROR = 64;\nconst MULTIPLE_ERROR = 65;\n\n// Insert types\nconst INSERT = 1;\nconst UPDATE = 2;\nconst REMOVE = 3;\n\nconst bson = new BSON([\n  BSON.Binary,\n  BSON.Code,\n  BSON.DBRef,\n  BSON.Decimal128,\n  BSON.Double,\n  BSON.Int32,\n  BSON.Long,\n  BSON.Map,\n  BSON.MaxKey,\n  BSON.MinKey,\n  BSON.ObjectId,\n  BSON.BSONRegExp,\n  BSON.Symbol,\n  BSON.Timestamp\n]);\n\n/**\n * Keeps the state of a unordered batch so we can rewrite the results\n * correctly after command execution\n * @ignore\n */\nclass Batch {\n  constructor(batchType, originalZeroIndex) {\n    this.originalZeroIndex = originalZeroIndex;\n    this.currentIndex = 0;\n    this.originalIndexes = [];\n    this.batchType = batchType;\n    this.operations = [];\n    this.size = 0;\n    this.sizeBytes = 0;\n  }\n}\n\n/**\n * Wraps a legacy operation so we can correctly rewrite it's error\n * @ignore\n */\nclass LegacyOp {\n  constructor(batchType, operation, index) {\n    this.batchType = batchType;\n    this.index = index;\n    this.operation = operation;\n  }\n}\n\n/**\n * Create a new BulkWriteResult instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @return {BulkWriteResult} a BulkWriteResult instance\n */\nclass BulkWriteResult {\n  constructor(bulkResult) {\n    this.result = bulkResult;\n  }\n\n  /**\n   * @return {boolean} ok Did bulk operation correctly execute\n   */\n  get ok() {\n    return this.result.ok;\n  }\n\n  /**\n   * @return {number} nInserted number of inserted documents\n   */\n  get nInserted() {\n    return this.result.nInserted;\n  }\n\n  /**\n   * @return {number} nUpserted Number of upserted documents\n   */\n  get nUpserted() {\n    return this.result.nUpserted;\n  }\n\n  /**\n   * @return {number} nMatched Number of matched documents\n   */\n  get nMatched() {\n    return this.result.nMatched;\n  }\n\n  /**\n   * @return {number} nModified Number of documents updated physically on disk\n   */\n  get nModified() {\n    return this.result.nModified;\n  }\n\n  /**\n   * @return {number} nRemoved Number of removed documents\n   */\n  get nRemoved() {\n    return this.result.nRemoved;\n  }\n\n  /**\n   * Return an array of inserted ids\n   *\n   * @return {object[]}\n   */\n  getInsertedIds() {\n    return this.result.insertedIds;\n  }\n\n  /**\n   * Return an array of upserted ids\n   *\n   * @return {object[]}\n   */\n  getUpsertedIds() {\n    return this.result.upserted;\n  }\n\n  /**\n   * Return the upserted id at position x\n   *\n   * @param {number} index the number of the upserted id to return, returns undefined if no result for passed in index\n   * @return {object}\n   */\n  getUpsertedIdAt(index) {\n    return this.result.upserted[index];\n  }\n\n  /**\n   * Return raw internal result\n   *\n   * @return {object}\n   */\n  getRawResponse() {\n    return this.result;\n  }\n\n  /**\n   * Returns true if the bulk operation contains a write error\n   *\n   * @return {boolean}\n   */\n  hasWriteErrors() {\n    return this.result.writeErrors.length > 0;\n  }\n\n  /**\n   * Returns the number of write errors off the bulk operation\n   *\n   * @return {number}\n   */\n  getWriteErrorCount() {\n    return this.result.writeErrors.length;\n  }\n\n  /**\n   * Returns a specific write error object\n   *\n   * @param {number} index of the write error to return, returns null if there is no result for passed in index\n   * @return {WriteError}\n   */\n  getWriteErrorAt(index) {\n    if (index < this.result.writeErrors.length) {\n      return this.result.writeErrors[index];\n    }\n    return null;\n  }\n\n  /**\n   * Retrieve all write errors\n   *\n   * @return {object[]}\n   */\n  getWriteErrors() {\n    return this.result.writeErrors;\n  }\n\n  /**\n   * Retrieve lastOp if available\n   *\n   * @return {object}\n   */\n  getLastOp() {\n    return this.result.lastOp;\n  }\n\n  /**\n   * Retrieve the write concern error if any\n   *\n   * @return {WriteConcernError}\n   */\n  getWriteConcernError() {\n    if (this.result.writeConcernErrors.length === 0) {\n      return null;\n    } else if (this.result.writeConcernErrors.length === 1) {\n      // Return the error\n      return this.result.writeConcernErrors[0];\n    } else {\n      // Combine the errors\n      let errmsg = '';\n      for (let i = 0; i < this.result.writeConcernErrors.length; i++) {\n        const err = this.result.writeConcernErrors[i];\n        errmsg = errmsg + err.errmsg;\n\n        // TODO: Something better\n        if (i === 0) errmsg = errmsg + ' and ';\n      }\n\n      return new WriteConcernError({ errmsg: errmsg, code: WRITE_CONCERN_ERROR });\n    }\n  }\n\n  /**\n   * @return {BulkWriteResult} a BulkWriteResult instance\n   */\n  toJSON() {\n    return this.result;\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return `BulkWriteResult(${this.toJSON(this.result)})`;\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isOk() {\n    return this.result.ok === 1;\n  }\n}\n\n/**\n * Create a new WriteConcernError instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @return {WriteConcernError} a WriteConcernError instance\n */\nclass WriteConcernError {\n  constructor(err) {\n    this.err = err;\n  }\n\n  /**\n   * @return {number} code Write concern error code.\n   */\n  get code() {\n    return this.err.code;\n  }\n\n  /**\n   * @return {string} errmsg Write concern error message.\n   */\n  get errmsg() {\n    return this.err.errmsg;\n  }\n\n  /**\n   * @return {object}\n   */\n  toJSON() {\n    return { code: this.err.code, errmsg: this.err.errmsg };\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return `WriteConcernError(${this.err.errmsg})`;\n  }\n}\n\n/**\n * Create a new WriteError instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @return {WriteConcernError} a WriteConcernError instance\n */\nclass WriteError {\n  constructor(err) {\n    this.err = err;\n  }\n\n  /**\n   * @return {number} code Write concern error code.\n   */\n  get code() {\n    return this.err.code;\n  }\n\n  /**\n   * @return {number} index Write concern error original bulk operation index.\n   */\n  get index() {\n    return this.err.index;\n  }\n\n  /**\n   * @return {string} errmsg Write concern error message.\n   */\n  get errmsg() {\n    return this.err.errmsg;\n  }\n\n  /**\n   * Define access methods\n   * @return {object}\n   */\n  getOperation() {\n    return this.err.op;\n  }\n\n  /**\n   * @return {object}\n   */\n  toJSON() {\n    return { code: this.err.code, index: this.err.index, errmsg: this.err.errmsg, op: this.err.op };\n  }\n\n  /**\n   * @return {string}\n   */\n  toString() {\n    return `WriteError(${JSON.stringify(this.toJSON())})`;\n  }\n}\n\n/**\n * Merges results into shared data structure\n * @ignore\n */\nfunction mergeBatchResults(ordered, batch, bulkResult, err, result) {\n  // If we have an error set the result to be the err object\n  if (err) {\n    result = err;\n  } else if (result && result.result) {\n    result = result.result;\n  } else if (result == null) {\n    return;\n  }\n\n  // Do we have a top level error stop processing and return\n  if (result.ok === 0 && bulkResult.ok === 1) {\n    bulkResult.ok = 0;\n\n    const writeError = {\n      index: 0,\n      code: result.code || 0,\n      errmsg: result.message,\n      op: batch.operations[0]\n    };\n\n    bulkResult.writeErrors.push(new WriteError(writeError));\n    return;\n  } else if (result.ok === 0 && bulkResult.ok === 0) {\n    return;\n  }\n\n  // Deal with opTime if available\n  if (result.opTime || result.lastOp) {\n    const opTime = result.lastOp || result.opTime;\n    let lastOpTS = null;\n    let lastOpT = null;\n\n    // We have a time stamp\n    if (opTime && opTime._bsontype === 'Timestamp') {\n      if (bulkResult.lastOp == null) {\n        bulkResult.lastOp = opTime;\n      } else if (opTime.greaterThan(bulkResult.lastOp)) {\n        bulkResult.lastOp = opTime;\n      }\n    } else {\n      // Existing TS\n      if (bulkResult.lastOp) {\n        lastOpTS =\n          typeof bulkResult.lastOp.ts === 'number'\n            ? Long.fromNumber(bulkResult.lastOp.ts)\n            : bulkResult.lastOp.ts;\n        lastOpT =\n          typeof bulkResult.lastOp.t === 'number'\n            ? Long.fromNumber(bulkResult.lastOp.t)\n            : bulkResult.lastOp.t;\n      }\n\n      // Current OpTime TS\n      const opTimeTS = typeof opTime.ts === 'number' ? Long.fromNumber(opTime.ts) : opTime.ts;\n      const opTimeT = typeof opTime.t === 'number' ? Long.fromNumber(opTime.t) : opTime.t;\n\n      // Compare the opTime's\n      if (bulkResult.lastOp == null) {\n        bulkResult.lastOp = opTime;\n      } else if (opTimeTS.greaterThan(lastOpTS)) {\n        bulkResult.lastOp = opTime;\n      } else if (opTimeTS.equals(lastOpTS)) {\n        if (opTimeT.greaterThan(lastOpT)) {\n          bulkResult.lastOp = opTime;\n        }\n      }\n    }\n  }\n\n  // If we have an insert Batch type\n  if (batch.batchType === INSERT && result.n) {\n    bulkResult.nInserted = bulkResult.nInserted + result.n;\n  }\n\n  // If we have an insert Batch type\n  if (batch.batchType === REMOVE && result.n) {\n    bulkResult.nRemoved = bulkResult.nRemoved + result.n;\n  }\n\n  let nUpserted = 0;\n\n  // We have an array of upserted values, we need to rewrite the indexes\n  if (Array.isArray(result.upserted)) {\n    nUpserted = result.upserted.length;\n\n    for (let i = 0; i < result.upserted.length; i++) {\n      bulkResult.upserted.push({\n        index: result.upserted[i].index + batch.originalZeroIndex,\n        _id: result.upserted[i]._id\n      });\n    }\n  } else if (result.upserted) {\n    nUpserted = 1;\n\n    bulkResult.upserted.push({\n      index: batch.originalZeroIndex,\n      _id: result.upserted\n    });\n  }\n\n  // If we have an update Batch type\n  if (batch.batchType === UPDATE && result.n) {\n    const nModified = result.nModified;\n    bulkResult.nUpserted = bulkResult.nUpserted + nUpserted;\n    bulkResult.nMatched = bulkResult.nMatched + (result.n - nUpserted);\n\n    if (typeof nModified === 'number') {\n      bulkResult.nModified = bulkResult.nModified + nModified;\n    } else {\n      bulkResult.nModified = null;\n    }\n  }\n\n  if (Array.isArray(result.writeErrors)) {\n    for (let i = 0; i < result.writeErrors.length; i++) {\n      const writeError = {\n        index: batch.originalZeroIndex + result.writeErrors[i].index,\n        code: result.writeErrors[i].code,\n        errmsg: result.writeErrors[i].errmsg,\n        op: batch.operations[result.writeErrors[i].index]\n      };\n\n      bulkResult.writeErrors.push(new WriteError(writeError));\n    }\n  }\n\n  if (result.writeConcernError) {\n    bulkResult.writeConcernErrors.push(new WriteConcernError(result.writeConcernError));\n  }\n}\n\n/**\n * handles write concern error\n *\n * @param {object} batch\n * @param {object} bulkResult\n * @param {boolean} ordered\n * @param {WriteConcernError} err\n * @param {function} callback\n */\nfunction handleMongoWriteConcernError(batch, bulkResult, ordered, err, callback) {\n  mergeBatchResults(ordered, batch, bulkResult, null, err.result);\n\n  const wrappedWriteConcernError = new WriteConcernError({\n    errmsg: err.result.writeConcernError.errmsg,\n    code: err.result.writeConcernError.result\n  });\n  return handleCallback(\n    callback,\n    new BulkWriteError(toError(wrappedWriteConcernError), new BulkWriteResult(bulkResult)),\n    null\n  );\n}\n\n/**\n * Creates a new BulkWriteError\n *\n * @class\n * @param {Error|string|object} message The error message\n * @param {BulkWriteResult} result The result of the bulk write operation\n * @return {BulkWriteError} A BulkWriteError instance\n * @extends {MongoError}\n */\nclass BulkWriteError extends MongoError {\n  constructor(error, result) {\n    const message = error.err || error.errmsg || error.errMessage || error;\n    super(message);\n\n    Object.assign(this, error);\n\n    this.name = 'BulkWriteError';\n    this.result = result;\n  }\n}\n\n/**\n * Handles the find operators for the bulk operations\n * @class\n */\nclass FindOperators {\n  /**\n   * @param {OrderedBulkOperation|UnorderedBulkOperation} bulkOperation\n   */\n  constructor(bulkOperation) {\n    this.s = bulkOperation.s;\n  }\n\n  /**\n   * Add a single update document to the bulk operation\n   *\n   * @method\n   * @param {object} updateDocument update operations\n   * @throws {MongoError}\n   * @return {OrderedBulkOperation|UnordedBulkOperation}\n   */\n  update(updateDocument) {\n    // Perform upsert\n    const upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      u: updateDocument,\n      multi: true,\n      upsert: upsert\n    };\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, UPDATE, document);\n  }\n\n  /**\n   * Add a single update one document to the bulk operation\n   *\n   * @method\n   * @param {object} updateDocument update operations\n   * @throws {MongoError}\n   * @return {OrderedBulkOperation|UnordedBulkOperation}\n   */\n  updateOne(updateDocument) {\n    // Perform upsert\n    const upsert = typeof this.s.currentOp.upsert === 'boolean' ? this.s.currentOp.upsert : false;\n\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      u: updateDocument,\n      multi: false,\n      upsert: upsert\n    };\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, UPDATE, document);\n  }\n\n  /**\n   * Add a replace one operation to the bulk operation\n   *\n   * @method\n   * @param {object} updateDocument the new document to replace the existing one with\n   * @throws {MongoError}\n   * @return {OrderedBulkOperation|UnorderedBulkOperation}\n   */\n  replaceOne(updateDocument) {\n    this.updateOne(updateDocument);\n  }\n\n  /**\n   * Upsert modifier for update bulk operation\n   *\n   * @method\n   * @throws {MongoError}\n   * @return {FindOperators}\n   */\n  upsert() {\n    this.s.currentOp.upsert = true;\n    return this;\n  }\n\n  /**\n   * Add a delete one operation to the bulk operation\n   *\n   * @method\n   * @throws {MongoError}\n   * @return {OrderedBulkOperation|UnordedBulkOperation}\n   */\n  deleteOne() {\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      limit: 1\n    };\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, REMOVE, document);\n  }\n\n  /**\n   * Add a delete operation to the bulk operation\n   *\n   * @method\n   * @throws {MongoError}\n   * @return {OrderedBulkOperation|UnordedBulkOperation}\n   */\n  delete() {\n    // Establish the update command\n    const document = {\n      q: this.s.currentOp.selector,\n      limit: 0\n    };\n\n    // Clear out current Op\n    this.s.currentOp = null;\n    return this.s.options.addToOperationsList(this, REMOVE, document);\n  }\n\n  /**\n   * backwards compatability for deleteOne\n   */\n  removeOne() {\n    return this.deleteOne();\n  }\n\n  /**\n   * backwards compatability for delete\n   */\n  remove() {\n    return this.delete();\n  }\n}\n\n/**\n * Parent class to OrderedBulkOperation and UnorderedBulkOperation\n * @class\n */\nclass BulkOperationBase {\n  /**\n   * Create a new OrderedBulkOperation or UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n   * @class\n   * @property {number} length Get the number of operations in the bulk.\n   * @return {OrderedBulkOperation|UnordedBulkOperation}\n   */\n  constructor(topology, collection, options, isOrdered) {\n    // determine whether bulkOperation is ordered or unordered\n    this.isOrdered = isOrdered;\n\n    options = options == null ? {} : options;\n    // TODO Bring from driver information in isMaster\n    // Get the namespace for the write operations\n    const namespace = collection.collectionName;\n    // Used to mark operation as executed\n    const executed = false;\n\n    // Current item\n    const currentOp = null;\n\n    // Handle to the bson serializer, used to calculate running sizes\n    const bson = topology.bson;\n\n    // Set max byte size\n    const isMaster = topology.lastIsMaster();\n    const maxBatchSizeBytes =\n      isMaster && isMaster.maxBsonObjectSize ? isMaster.maxBsonObjectSize : 1024 * 1024 * 16;\n    const maxWriteBatchSize =\n      isMaster && isMaster.maxWriteBatchSize ? isMaster.maxWriteBatchSize : 1000;\n\n    // Final options for retryable writes and write concern\n    let finalOptions = Object.assign({}, options);\n    finalOptions = applyRetryableWrites(finalOptions, collection.s.db);\n    finalOptions = applyWriteConcern(finalOptions, { collection: collection }, options);\n    const writeConcern = finalOptions.writeConcern;\n\n    // Get the promiseLibrary\n    const promiseLibrary = options.promiseLibrary || Promise;\n\n    // Final results\n    const bulkResult = {\n      ok: 1,\n      writeErrors: [],\n      writeConcernErrors: [],\n      insertedIds: [],\n      nInserted: 0,\n      nUpserted: 0,\n      nMatched: 0,\n      nModified: 0,\n      nRemoved: 0,\n      upserted: []\n    };\n\n    // Internal state\n    this.s = {\n      // Final result\n      bulkResult: bulkResult,\n      // Current batch state\n      currentBatch: null,\n      currentIndex: 0,\n      // ordered specific\n      currentBatchSize: 0,\n      currentBatchSizeBytes: 0,\n      // unordered specific\n      currentInsertBatch: null,\n      currentUpdateBatch: null,\n      currentRemoveBatch: null,\n      batches: [],\n      // Write concern\n      writeConcern: writeConcern,\n      // Max batch size options\n      maxBatchSizeBytes: maxBatchSizeBytes,\n      maxWriteBatchSize: maxWriteBatchSize,\n      // Namespace\n      namespace: namespace,\n      // BSON\n      bson: bson,\n      // Topology\n      topology: topology,\n      // Options\n      options: finalOptions,\n      // Current operation\n      currentOp: currentOp,\n      // Executed\n      executed: executed,\n      // Collection\n      collection: collection,\n      // Promise Library\n      promiseLibrary: promiseLibrary,\n      // Fundamental error\n      err: null,\n      // check keys\n      checkKeys: typeof options.checkKeys === 'boolean' ? options.checkKeys : true\n    };\n\n    // bypass Validation\n    if (options.bypassDocumentValidation === true) {\n      this.s.bypassDocumentValidation = true;\n    }\n  }\n\n  /**\n   * Add a single insert document to the bulk operation\n   *\n   * @param {object} document the document to insert\n   * @throws {MongoError}\n   * @return {OrderedBulkOperation|UnorderedBulkOperation}\n   */\n  insert(document) {\n    if (this.s.collection.s.db.options.forceServerObjectId !== true && document._id == null)\n      document._id = new ObjectID();\n    return this.s.options.addToOperationsList(this, INSERT, document);\n  }\n\n  /**\n   * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne\n   *\n   * @method\n   * @param {object} selector The selector for the bulk operation.\n   * @throws {MongoError}\n   */\n  find(selector) {\n    if (!selector) {\n      throw toError('Bulk find operation must specify a selector');\n    }\n\n    // Save a current selector\n    this.s.currentOp = {\n      selector: selector\n    };\n\n    return new FindOperators(this);\n  }\n\n  /**\n   * Raw performs the bulk operation\n   *\n   * @method\n   * @param {object} op operation\n   * @return {OrderedBulkOperation|UnorderedBulkOperation}\n   */\n  raw(op) {\n    const key = Object.keys(op)[0];\n\n    // Set up the force server object id\n    const forceServerObjectId =\n      typeof this.s.options.forceServerObjectId === 'boolean'\n        ? this.s.options.forceServerObjectId\n        : this.s.collection.s.db.options.forceServerObjectId;\n\n    // Update operations\n    if (\n      (op.updateOne && op.updateOne.q) ||\n      (op.updateMany && op.updateMany.q) ||\n      (op.replaceOne && op.replaceOne.q)\n    ) {\n      op[key].multi = op.updateOne || op.replaceOne ? false : true;\n      return this.s.options.addToOperationsList(this, UPDATE, op[key]);\n    }\n\n    // Crud spec update format\n    if (op.updateOne || op.updateMany || op.replaceOne) {\n      const multi = op.updateOne || op.replaceOne ? false : true;\n      const operation = {\n        q: op[key].filter,\n        u: op[key].update || op[key].replacement,\n        multi: multi\n      };\n      if (this.isOrdered) {\n        operation.upsert = op[key].upsert ? true : false;\n        if (op.collation) operation.collation = op.collation;\n      } else {\n        if (op[key].upsert) operation.upsert = true;\n      }\n      if (op[key].arrayFilters) operation.arrayFilters = op[key].arrayFilters;\n      return this.s.options.addToOperationsList(this, UPDATE, operation);\n    }\n\n    // Remove operations\n    if (\n      op.removeOne ||\n      op.removeMany ||\n      (op.deleteOne && op.deleteOne.q) ||\n      (op.deleteMany && op.deleteMany.q)\n    ) {\n      op[key].limit = op.removeOne ? 1 : 0;\n      return this.s.options.addToOperationsList(this, REMOVE, op[key]);\n    }\n\n    // Crud spec delete operations, less efficient\n    if (op.deleteOne || op.deleteMany) {\n      const limit = op.deleteOne ? 1 : 0;\n      const operation = { q: op[key].filter, limit: limit };\n      if (this.isOrdered) {\n        if (op.collation) operation.collation = op.collation;\n      }\n      return this.s.options.addToOperationsList(this, REMOVE, operation);\n    }\n\n    // Insert operations\n    if (op.insertOne && op.insertOne.document == null) {\n      if (forceServerObjectId !== true && op.insertOne._id == null)\n        op.insertOne._id = new ObjectID();\n      return this.s.options.addToOperationsList(this, INSERT, op.insertOne);\n    } else if (op.insertOne && op.insertOne.document) {\n      if (forceServerObjectId !== true && op.insertOne.document._id == null)\n        op.insertOne.document._id = new ObjectID();\n      return this.s.options.addToOperationsList(this, INSERT, op.insertOne.document);\n    }\n\n    if (op.insertMany) {\n      for (let i = 0; i < op.insertMany.length; i++) {\n        if (forceServerObjectId !== true && op.insertMany[i]._id == null)\n          op.insertMany[i]._id = new ObjectID();\n        this.s.options.addToOperationsList(this, INSERT, op.insertMany[i]);\n      }\n\n      return;\n    }\n\n    // No valid type of operation\n    throw toError(\n      'bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany'\n    );\n  }\n\n  /**\n   * Execute next write command in a chain\n   *\n   * @method\n   * @param {class} bulk either OrderedBulkOperation or UnorderdBulkOperation\n   * @param {object} writeConcern\n   * @param {object} options\n   * @param {function} callback\n   */\n  bulkExecute(_writeConcern, options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    if (this.s.executed) {\n      const executedError = toError('batch cannot be re-executed');\n      return typeof callback === 'function'\n        ? callback(executedError, null)\n        : this.s.promiseLibrary.reject(executedError);\n    }\n\n    if (typeof _writeConcern === 'function') {\n      callback = _writeConcern;\n    } else if (_writeConcern && typeof _writeConcern === 'object') {\n      this.s.writeConcern = _writeConcern;\n    }\n\n    // If we have current batch\n    if (this.isOrdered) {\n      if (this.s.currentBatch) this.s.batches.push(this.s.currentBatch);\n    } else {\n      if (this.s.currentInsertBatch) this.s.batches.push(this.s.currentInsertBatch);\n      if (this.s.currentUpdateBatch) this.s.batches.push(this.s.currentUpdateBatch);\n      if (this.s.currentRemoveBatch) this.s.batches.push(this.s.currentRemoveBatch);\n    }\n    // If we have no operations in the bulk raise an error\n    if (this.s.batches.length === 0) {\n      const emptyBatchError = toError('Invalid Operation, no operations specified');\n      return typeof callback === 'function'\n        ? callback(emptyBatchError, null)\n        : this.s.promiseLibrary.reject(emptyBatchError);\n    }\n    return { options, callback };\n  }\n\n  /**\n   * Handles final options before executing command\n   *\n   * @param {object} config\n   * @param {object} config.options\n   * @param {number} config.batch\n   * @param {function} config.resultHandler\n   * @param {function} callback\n   */\n  finalOptionsHandler(config, callback) {\n    const finalOptions = Object.assign({ ordered: this.isOrdered }, config.options);\n    if (this.s.writeConcern != null) {\n      finalOptions.writeConcern = this.s.writeConcern;\n    }\n\n    if (finalOptions.bypassDocumentValidation !== true) {\n      delete finalOptions.bypassDocumentValidation;\n    }\n\n    // Set an operationIf if provided\n    if (this.operationId) {\n      config.resultHandler.operationId = this.operationId;\n    }\n\n    // Serialize functions\n    if (this.s.options.serializeFunctions) {\n      finalOptions.serializeFunctions = true;\n    }\n\n    // Ignore undefined\n    if (this.s.options.ignoreUndefined) {\n      finalOptions.ignoreUndefined = true;\n    }\n\n    // Is the bypassDocumentValidation options specific\n    if (this.s.bypassDocumentValidation === true) {\n      finalOptions.bypassDocumentValidation = true;\n    }\n\n    // Is the checkKeys option disabled\n    if (this.s.checkKeys === false) {\n      finalOptions.checkKeys = false;\n    }\n\n    if (finalOptions.retryWrites) {\n      if (config.batch.batchType === UPDATE) {\n        finalOptions.retryWrites =\n          finalOptions.retryWrites && !config.batch.operations.some(op => op.multi);\n      }\n\n      if (config.batch.batchType === REMOVE) {\n        finalOptions.retryWrites =\n          finalOptions.retryWrites && !config.batch.operations.some(op => op.limit === 0);\n      }\n    }\n\n    try {\n      if (config.batch.batchType === INSERT) {\n        this.s.topology.insert(\n          this.s.collection.namespace,\n          config.batch.operations,\n          finalOptions,\n          config.resultHandler\n        );\n      } else if (config.batch.batchType === UPDATE) {\n        this.s.topology.update(\n          this.s.collection.namespace,\n          config.batch.operations,\n          finalOptions,\n          config.resultHandler\n        );\n      } else if (config.batch.batchType === REMOVE) {\n        this.s.topology.remove(\n          this.s.collection.namespace,\n          config.batch.operations,\n          finalOptions,\n          config.resultHandler\n        );\n      }\n    } catch (err) {\n      // Force top level error\n      err.ok = 0;\n      // Merge top level error and return\n      handleCallback(\n        callback,\n        null,\n        mergeBatchResults(false, config.batch, this.s.bulkResult, err, null)\n      );\n    }\n  }\n\n  /**\n   * Handles the write error before executing commands\n   *\n   * @param {function} callback\n   * @param {BulkWriteResult} writeResult\n   * @param {class} self either OrderedBulkOperation or UnorderdBulkOperation\n   */\n  handleWriteError(callback, writeResult) {\n    if (this.s.bulkResult.writeErrors.length > 0) {\n      if (this.s.bulkResult.writeErrors.length === 1) {\n        handleCallback(\n          callback,\n          new BulkWriteError(toError(this.s.bulkResult.writeErrors[0]), writeResult),\n          null\n        );\n        return true;\n      }\n\n      handleCallback(\n        callback,\n        new BulkWriteError(\n          toError({\n            message: 'write operation failed',\n            code: this.s.bulkResult.writeErrors[0].code,\n            writeErrors: this.s.bulkResult.writeErrors\n          }),\n          writeResult\n        ),\n        null\n      );\n      return true;\n    } else if (writeResult.getWriteConcernError()) {\n      handleCallback(\n        callback,\n        new BulkWriteError(toError(writeResult.getWriteConcernError()), writeResult),\n        null\n      );\n      return true;\n    }\n  }\n}\n\nObject.defineProperty(BulkOperationBase.prototype, 'length', {\n  enumerable: true,\n  get: function() {\n    return this.s.currentIndex;\n  }\n});\n\n// Exports symbols\nmodule.exports = {\n  Batch,\n  BulkOperationBase,\n  BulkWriteError,\n  BulkWriteResult,\n  bson,\n  FindOperators,\n  handleMongoWriteConcernError,\n  LegacyOp,\n  mergeBatchResults,\n  INVALID_BSON_ERROR: INVALID_BSON_ERROR,\n  MULTIPLE_ERROR: MULTIPLE_ERROR,\n  UNKNOWN_ERROR: UNKNOWN_ERROR,\n  WRITE_CONCERN_ERROR: WRITE_CONCERN_ERROR,\n  INSERT: INSERT,\n  UPDATE: UPDATE,\n  REMOVE: REMOVE,\n  WriteError,\n  WriteConcernError\n};\n","'use strict';\n\nconst CServer = require('mongodb-core').Server;\nconst Cursor = require('../cursor');\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst Store = require('./topology_base').Store;\nconst MongoError = require('mongodb-core').MongoError;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **Server** class is a class that represents a single server topology and is\n * used to construct connections.\n *\n * **Server Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'acceptableLatencyMS',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCRL',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'family',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'reconnectInterval',\n  'monitoring',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'compression',\n  'promiseLibrary',\n  'monitorCommands'\n];\n\n/**\n * Creates a new Server instance\n * @class\n * @deprecated\n * @param {string} host The host for the server, can be either an IP4, IP6 or domain socket style host.\n * @param {number} [port] The server port if IP4.\n * @param {object} [options] Optional settings.\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {boolean} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {array} [options.sslCA] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslCert] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.ciphers] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslKey] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions] Socket options\n * @param {boolean} [options.socketOptions.autoReconnect=true] Reconnect on error.\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=0] TCP Connection timeout setting\n * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {number} [options.monitoring=true] Triggers the server instance to call ismaster\n * @param {number} [options.haInterval=10000] The interval of calling ismaster when monitoring is enabled.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires Server#connect\n * @fires Server#close\n * @fires Server#error\n * @fires Server#timeout\n * @fires Server#parseError\n * @fires Server#reconnect\n * @fires Server#commandStarted\n * @fires Server#commandSucceeded\n * @fires Server#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {Server} a Server instance.\n */\nclass Server extends TopologyBase {\n  constructor(host, port, options) {\n    super();\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Promise library\n    const promiseLibrary = options.promiseLibrary;\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Detect if we have a socket connection\n    if (host.indexOf('/') !== -1) {\n      if (port != null && typeof port === 'object') {\n        options = port;\n        port = null;\n      }\n    } else if (port == null) {\n      throw MongoError.create({ message: 'port must be specified', driver: true });\n    }\n\n    // Get the reconnect option\n    var reconnect = typeof options.auto_reconnect === 'boolean' ? options.auto_reconnect : true;\n    reconnect = typeof options.autoReconnect === 'boolean' ? options.autoReconnect : reconnect;\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        host: host,\n        port: port,\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: reconnect,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the mongodb-core ones\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Build default client information\n    clonedOptions.clientInfo = this.clientInfo;\n    // Do we have an application specific string\n    if (options.appname) {\n      clonedOptions.clientInfo.application = { name: options.appname };\n    }\n\n    // Define the internal properties\n    this.s = {\n      // Create an instance of a server instance from mongodb-core\n      coreTopology: new CServer(clonedOptions),\n      // Server capabilities\n      sCapabilities: null,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Reconnect\n      reconnect: clonedOptions.reconnect,\n      // Emit error\n      emitError: clonedOptions.emitError,\n      // Pool size\n      poolSize: clonedOptions.size,\n      // Store Options\n      storeOptions: storeOptions,\n      // Store\n      store: store,\n      // Host\n      host: host,\n      // Port\n      port: port,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: [],\n      // Promise library\n      promiseLibrary: promiseLibrary || Promise\n    };\n  }\n\n  // Connect\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = this.s.clonedOptions;\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        // Remove all event handlers\n        var events = ['timeout', 'error', 'close'];\n        events.forEach(function(e) {\n          self.s.coreTopology.removeListener(e, connectHandlers[e]);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          process.nextTick(function() {\n            throw err;\n          });\n        }\n      };\n    };\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Error handler\n    var reconnectHandler = function() {\n      self.emit('reconnect', self);\n      self.s.store.execute();\n    };\n\n    // Reconnect failed\n    var reconnectFailedHandler = function(err) {\n      self.emit('reconnectFailed', err);\n      self.s.store.flush(err);\n    };\n\n    // Destroy called on topology, perform cleanup\n    var destroyHandler = function() {\n      self.s.store.flush();\n    };\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Connect handler\n    var connectHandler = function() {\n      // Clear out all the current handlers left over\n      ['timeout', 'error', 'close', 'destroy'].forEach(function(e) {\n        self.s.coreTopology.removeAllListeners(e);\n      });\n\n      // Set up listeners\n      self.s.coreTopology.on('timeout', errorHandler('timeout'));\n      self.s.coreTopology.once('error', errorHandler('error'));\n      self.s.coreTopology.on('close', errorHandler('close'));\n      // Only called on destroy\n      self.s.coreTopology.on('destroy', destroyHandler);\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Set up listeners\n    var connectHandlers = {\n      timeout: connectErrorHandler('timeout'),\n      error: connectErrorHandler('error'),\n      close: connectErrorHandler('close')\n    };\n\n    // Clear out all the current handlers left over\n    [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed'\n    ].forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // Add the event handlers\n    self.s.coreTopology.once('timeout', connectHandlers.timeout);\n    self.s.coreTopology.once('error', connectHandlers.error);\n    self.s.coreTopology.once('close', connectHandlers.close);\n    self.s.coreTopology.once('connect', connectHandler);\n    // Reconnect server\n    self.s.coreTopology.on('reconnect', reconnectHandler);\n    self.s.coreTopology.on('reconnectFailed', reconnectFailedHandler);\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n    self.s.coreTopology.on('attemptReconnect', relay('attemptReconnect'));\n    self.s.coreTopology.on('monitoring', relay('monitoring'));\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n}\n\nObject.defineProperty(Server.prototype, 'poolSize', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.connections().length;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'autoReconnect', {\n  enumerable: true,\n  get: function() {\n    return this.s.reconnect;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'host', {\n  enumerable: true,\n  get: function() {\n    return this.s.host;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'port', {\n  enumerable: true,\n  get: function() {\n    return this.s.port;\n  }\n});\n\n/**\n * Server connect event\n *\n * @event Server#connect\n * @type {object}\n */\n\n/**\n * Server close event\n *\n * @event Server#close\n * @type {object}\n */\n\n/**\n * Server reconnect event\n *\n * @event Server#reconnect\n * @type {object}\n */\n\n/**\n * Server error event\n *\n * @event Server#error\n * @type {MongoError}\n */\n\n/**\n * Server timeout event\n *\n * @event Server#timeout\n * @type {object}\n */\n\n/**\n * Server parseError event\n *\n * @event Server#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Server#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Server#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Server#commandFailed\n * @type {object}\n */\n\nmodule.exports = Server;\n","'use strict';\n\n// We have an ES6 Map available, return the native instance\nif (typeof global.Map !== 'undefined') {\n  module.exports = global.Map;\n  module.exports.Map = global.Map;\n} else {\n  // We will return a polyfill\n  var Map = function(array) {\n    this._keys = [];\n    this._values = {};\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] == null) continue; // skip null and undefined\n      var entry = array[i];\n      var key = entry[0];\n      var value = entry[1];\n      // Add the key to the list of keys in order\n      this._keys.push(key);\n      // Add the key and value to the values dictionary with a point\n      // to the location in the ordered keys list\n      this._values[key] = { v: value, i: this._keys.length - 1 };\n    }\n  };\n\n  Map.prototype.clear = function() {\n    this._keys = [];\n    this._values = {};\n  };\n\n  Map.prototype.delete = function(key) {\n    var value = this._values[key];\n    if (value == null) return false;\n    // Delete entry\n    delete this._values[key];\n    // Remove the key from the ordered keys list\n    this._keys.splice(value.i, 1);\n    return true;\n  };\n\n  Map.prototype.entries = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? [key, self._values[key].v] : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  Map.prototype.forEach = function(callback, self) {\n    self = self || this;\n\n    for (var i = 0; i < this._keys.length; i++) {\n      var key = this._keys[i];\n      // Call the forEach callback\n      callback.call(self, this._values[key].v, key, self);\n    }\n  };\n\n  Map.prototype.get = function(key) {\n    return this._values[key] ? this._values[key].v : undefined;\n  };\n\n  Map.prototype.has = function(key) {\n    return this._values[key] != null;\n  };\n\n  Map.prototype.keys = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? key : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  Map.prototype.set = function(key, value) {\n    if (this._values[key]) {\n      this._values[key].v = value;\n      return this;\n    }\n\n    // Add the key to the list of keys in order\n    this._keys.push(key);\n    // Add the key and value to the values dictionary with a point\n    // to the location in the ordered keys list\n    this._values[key] = { v: value, i: this._keys.length - 1 };\n    return this;\n  };\n\n  Map.prototype.values = function() {\n    var self = this;\n    var index = 0;\n\n    return {\n      next: function() {\n        var key = self._keys[index++];\n        return {\n          value: key !== undefined ? self._values[key].v : undefined,\n          done: key !== undefined ? false : true\n        };\n      }\n    };\n  };\n\n  // Last ismaster\n  Object.defineProperty(Map.prototype, 'size', {\n    enumerable: true,\n    get: function() {\n      return this._keys.length;\n    }\n  });\n\n  module.exports = Map;\n  module.exports.Map = Map;\n}\n","/**\n * A class representation of a BSON Int32 type.\n *\n * @class\n * @param {number} value the number we want to represent as an int32.\n * @return {Int32}\n */\nvar Int32 = function(value) {\n  if (!(this instanceof Int32)) return new Int32(value);\n\n  this._bsontype = 'Int32';\n  this.value = value;\n};\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped int32 number.\n */\nInt32.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nInt32.prototype.toJSON = function() {\n  return this.value;\n};\n\nmodule.exports = Int32;\nmodule.exports.Int32 = Int32;\n","var path = require('path'),\n  fs = require('fs'),\n  f = require('util').format,\n  resolveFrom = require('resolve-from'),\n  semver = require('semver');\n\nvar exists = fs.existsSync || path.existsSync;\n\n// Find the location of a package.json file near or above the given location\nvar find_package_json = function(location) {\n  var found = false;\n\n  while(!found) {\n    if (exists(location + '/package.json')) {\n      found = location;\n    } else if (location !== '/') {\n      location = path.dirname(location);\n    } else {\n      return false;\n    }\n  }\n\n  return location;\n}\n\n// Find the package.json object of the module closest up the module call tree that contains name in that module's peerOptionalDependencies\nvar find_package_json_with_name = function(name) {\n  // Walk up the module call tree until we find a module containing name in its peerOptionalDependencies\n  var currentModule = module;\n  var found = false;\n  while (currentModule) {\n    // Check currentModule has a package.json\n    location = currentModule.filename;\n    var location = find_package_json(location)\n    if (!location) {\n      currentModule = currentModule.parent;\n      continue;\n    }\n\n    // Read the package.json file\n    var object = JSON.parse(fs.readFileSync(f('%s/package.json', location)));\n    // Is the name defined by interal file references\n    var parts = name.split(/\\//);\n\n    // Check whether this package.json contains peerOptionalDependencies containing the name we're searching for\n    if (!object.peerOptionalDependencies || (object.peerOptionalDependencies && !object.peerOptionalDependencies[parts[0]])) {\n      currentModule = currentModule.parent;\n      continue;\n    }\n    found = true;\n    break;\n  }\n\n  // Check whether name has been found in currentModule's peerOptionalDependencies\n  if (!found) {\n    throw new Error(f('no optional dependency [%s] defined in peerOptionalDependencies in any package.json', parts[0]));\n  }\n\n  return {\n    object: object,\n    parts: parts\n  }\n}\n\nvar require_optional = function(name, options) {\n  options = options || {};\n  options.strict = typeof options.strict == 'boolean' ? options.strict : true;\n\n  var res = find_package_json_with_name(name)\n  var object = res.object;\n  var parts = res.parts;\n\n  // Unpack the expected version\n  var expectedVersions = object.peerOptionalDependencies[parts[0]];\n  // The resolved package\n  var moduleEntry = undefined;\n  // Module file\n  var moduleEntryFile = name;\n\n  try {\n    // Validate if it's possible to read the module\n    moduleEntry = require(moduleEntryFile);\n  } catch(err) {\n    // Attempt to resolve in top level package\n    try {\n      // Get the module entry file\n      moduleEntryFile = resolveFrom(process.cwd(), name);\n      if(moduleEntryFile == null) return undefined;\n      // Attempt to resolve the module\n      moduleEntry = require(moduleEntryFile);\n    } catch(err) {\n      if(err.code === 'MODULE_NOT_FOUND') return undefined;\n    }\n  }\n\n  // Resolve the location of the module's package.json file\n  var location = find_package_json(require.resolve(moduleEntryFile));\n  if(!location) {\n    throw new Error('package.json can not be located');\n  }\n\n  // Read the module file\n  var dependentOnModule = JSON.parse(fs.readFileSync(f('%s/package.json', location)));\n  // Get the version\n  var version = dependentOnModule.version;\n  // Validate if the found module satisfies the version id\n  if(semver.satisfies(version, expectedVersions) == false\n    && options.strict) {\n      var error = new Error(f('optional dependency [%s] found but version [%s] did not satisfy constraint [%s]', parts[0], version, expectedVersions));\n      error.code = 'OPTIONAL_MODULE_NOT_FOUND';\n      throw error;\n  }\n\n  // Satifies the module requirement\n  return moduleEntry;\n}\n\nrequire_optional.exists = function(name) {\n  try {\n    var m = require_optional(name);\n    if(m === undefined) return false;\n    return true;\n  } catch(err) {\n    return false;\n  }\n}\n\nmodule.exports = require_optional;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 287;","'use strict';\n\nvar inherits = require('util').inherits,\n  f = require('util').format,\n  EventEmitter = require('events').EventEmitter,\n  ReadPreference = require('./read_preference'),\n  Logger = require('../connection/logger'),\n  debugOptions = require('../connection/utils').debugOptions,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  Pool = require('../connection/pool'),\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError,\n  MongoNetworkError = require('../error').MongoNetworkError,\n  TwoSixWireProtocolSupport = require('../wireprotocol/2_6_support'),\n  ThreeTwoWireProtocolSupport = require('../wireprotocol/3_2_support'),\n  BasicCursor = require('../cursor'),\n  sdam = require('./shared'),\n  createClientInfo = require('./shared').createClientInfo,\n  createCompressionInfo = require('./shared').createCompressionInfo,\n  resolveClusterTime = require('./shared').resolveClusterTime,\n  SessionMixins = require('./shared').SessionMixins,\n  relayEvents = require('../utils').relayEvents;\n\nconst collationNotSupported = require('../utils').collationNotSupported;\n\nfunction getSaslSupportedMechs(options) {\n  if (!options) {\n    return {};\n  }\n\n  const authArray = options.auth || [];\n  const authMechanism = authArray[0] || options.authMechanism;\n  const authSource = authArray[1] || options.authSource || options.dbName || 'admin';\n  const user = authArray[2] || options.user;\n\n  if (typeof authMechanism === 'string' && authMechanism.toUpperCase() !== 'DEFAULT') {\n    return {};\n  }\n\n  if (!user) {\n    return {};\n  }\n\n  return { saslSupportedMechs: `${authSource}.${user}` };\n}\n\nfunction getDefaultAuthMechanism(ismaster) {\n  if (ismaster) {\n    // If ismaster contains saslSupportedMechs, use scram-sha-256\n    // if it is available, else scram-sha-1\n    if (Array.isArray(ismaster.saslSupportedMechs)) {\n      return ismaster.saslSupportedMechs.indexOf('SCRAM-SHA-256') >= 0\n        ? 'scram-sha-256'\n        : 'scram-sha-1';\n    }\n\n    // Fallback to legacy selection method. If wire version >= 3, use scram-sha-1\n    if (ismaster.maxWireVersion >= 3) {\n      return 'scram-sha-1';\n    }\n  }\n\n  // Default for wireprotocol < 3\n  return 'mongocr';\n}\n\nfunction extractIsMasterError(err, result) {\n  if (err) {\n    return err;\n  }\n\n  if (result && result.result && result.result.ok === 0) {\n    return new MongoError(result.result);\n  }\n}\n\n// Used for filtering out fields for loggin\nvar debugFields = [\n  'reconnect',\n  'reconnectTries',\n  'reconnectInterval',\n  'emitError',\n  'cursorFactory',\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'checkServerIdentity',\n  'socketTimeout',\n  'singleBufferSerializtion',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'key',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'servername'\n];\n\n// Server instance id\nvar id = 0;\nvar serverAccounting = false;\nvar servers = {};\nvar BSON = retrieveBSON();\n\n/**\n * Creates a new Server instance\n * @class\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {number} [options.monitoring=true] Enable the server state monitoring (calling ismaster at monitoringInterval)\n * @param {number} [options.monitoringInterval=5000] The interval of calling ismaster when monitoring is enabled.\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {string} [options.appname=null] Application name, passed in on ismaster call and logged in mongod server logs. Maximum size 128 bytes.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {Server} A cursor instance\n * @fires Server#connect\n * @fires Server#close\n * @fires Server#error\n * @fires Server#timeout\n * @fires Server#parseError\n * @fires Server#reconnect\n * @fires Server#reconnectFailed\n * @fires Server#serverHeartbeatStarted\n * @fires Server#serverHeartbeatSucceeded\n * @fires Server#serverHeartbeatFailed\n * @fires Server#topologyOpening\n * @fires Server#topologyClosed\n * @fires Server#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar Server = function(options) {\n  options = options || {};\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Server instance id\n  this.id = id++;\n\n  // Internal state\n  this.s = {\n    // Options\n    options: options,\n    // Logger\n    logger: Logger('Server', options),\n    // Factory overrides\n    Cursor: options.cursorFactory || BasicCursor,\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Pool\n    pool: null,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Monitor thread (keeps the connection alive)\n    monitoring: typeof options.monitoring === 'boolean' ? options.monitoring : true,\n    // Is the server in a topology\n    inTopology: !!options.parent,\n    // Monitoring timeout\n    monitoringInterval:\n      typeof options.monitoringInterval === 'number' ? options.monitoringInterval : 5000,\n    // Topology id\n    topologyId: -1,\n    compression: { compressors: createCompressionInfo(options) },\n    // Optional parent topology\n    parent: options.parent\n  };\n\n  // If this is a single deployment we need to track the clusterTime here\n  if (!this.s.parent) {\n    this.s.clusterTime = null;\n  }\n\n  // Curent ismaster\n  this.ismaster = null;\n  // Current ping time\n  this.lastIsMasterMS = -1;\n  // The monitoringProcessId\n  this.monitoringProcessId = null;\n  // Initial connection\n  this.initialConnect = true;\n  // Wire protocol handler, default to oldest known protocol handler\n  // this gets changed when the first ismaster is called.\n  this.wireProtocolHandler = new TwoSixWireProtocolSupport();\n  // Default type\n  this._type = 'server';\n  // Set the client info\n  this.clientInfo = createClientInfo(options);\n\n  // Max Stalleness values\n  // last time we updated the ismaster state\n  this.lastUpdateTime = 0;\n  // Last write time\n  this.lastWriteDate = 0;\n  // Stalleness\n  this.staleness = 0;\n};\n\ninherits(Server, EventEmitter);\nObject.assign(Server.prototype, SessionMixins);\n\nObject.defineProperty(Server.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return this._type;\n  }\n});\n\nObject.defineProperty(Server.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(Server.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    if (!this.ismaster) return null;\n    return this.ismaster.logicalSessionTimeoutMinutes || null;\n  }\n});\n\n// In single server deployments we track the clusterTime directly on the topology, however\n// in Mongos and ReplSet deployments we instead need to delegate the clusterTime up to the\n// tracking objects so we can ensure we are gossiping the maximum time received from the\n// server.\nObject.defineProperty(Server.prototype, 'clusterTime', {\n  enumerable: true,\n  set: function(clusterTime) {\n    const settings = this.s.parent ? this.s.parent : this.s;\n    resolveClusterTime(settings, clusterTime);\n  },\n  get: function() {\n    const settings = this.s.parent ? this.s.parent : this.s;\n    return settings.clusterTime || null;\n  }\n});\n\nServer.enableServerAccounting = function() {\n  serverAccounting = true;\n  servers = {};\n};\n\nServer.disableServerAccounting = function() {\n  serverAccounting = false;\n};\n\nServer.servers = function() {\n  return servers;\n};\n\nObject.defineProperty(Server.prototype, 'name', {\n  enumerable: true,\n  get: function() {\n    return this.s.options.host + ':' + this.s.options.port;\n  }\n});\n\nfunction isSupportedServer(response) {\n  return response && typeof response.maxWireVersion === 'number' && response.maxWireVersion >= 2;\n}\n\nfunction configureWireProtocolHandler(self, ismaster) {\n  // 3.2 wire protocol handler\n  if (ismaster.maxWireVersion >= 4) {\n    return new ThreeTwoWireProtocolSupport();\n  }\n\n  // default to 2.6 wire protocol handler\n  return new TwoSixWireProtocolSupport();\n}\n\nfunction disconnectHandler(self, type, ns, cmd, options, callback) {\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if (\n    !self.s.pool.isConnected() &&\n    self.s.options.reconnect &&\n    self.s.disconnectHandler != null &&\n    !options.monitoring\n  ) {\n    self.s.disconnectHandler.add(type, ns, cmd, options, callback);\n    return true;\n  }\n\n  // If we have no connection error\n  if (!self.s.pool.isConnected()) {\n    callback(new MongoError(f('no connection available to server %s', self.name)));\n    return true;\n  }\n}\n\nfunction monitoringProcess(self) {\n  return function() {\n    // Pool was destroyed do not continue process\n    if (self.s.pool.isDestroyed()) return;\n    // Emit monitoring Process event\n    self.emit('monitoring', self);\n    // Perform ismaster call\n    // Query options\n    var queryOptions = { numberToSkip: 0, numberToReturn: -1, checkKeys: false, slaveOk: true };\n    // Create a query instance\n    var query = new Query(self.s.bson, 'admin.$cmd', { ismaster: true }, queryOptions);\n    // Get start time\n    var start = new Date().getTime();\n\n    // Execute the ismaster query\n    self.s.pool.write(\n      query,\n      {\n        socketTimeout:\n          typeof self.s.options.connectionTimeout !== 'number'\n            ? 2000\n            : self.s.options.connectionTimeout,\n        monitoring: true\n      },\n      function(err, result) {\n        // Set initial lastIsMasterMS\n        self.lastIsMasterMS = new Date().getTime() - start;\n        if (self.s.pool.isDestroyed()) return;\n        // Update the ismaster view if we have a result\n        if (result) {\n          self.ismaster = result.result;\n        }\n        // Re-schedule the monitoring process\n        self.monitoringProcessId = setTimeout(monitoringProcess(self), self.s.monitoringInterval);\n      }\n    );\n  };\n}\n\nvar eventHandler = function(self, event) {\n  return function(err) {\n    // Log information of received information if in info mode\n    if (self.s.logger.isInfo()) {\n      var object = err instanceof MongoError ? JSON.stringify(err) : {};\n      self.s.logger.info(\n        f('server %s fired event %s out with message %s', self.name, event, object)\n      );\n    }\n\n    // Handle connect event\n    if (event === 'connect') {\n      // Issue an ismaster command at connect\n      // Query options\n      var queryOptions = { numberToSkip: 0, numberToReturn: -1, checkKeys: false, slaveOk: true };\n      // Create a query instance\n      var compressors =\n        self.s.compression && self.s.compression.compressors ? self.s.compression.compressors : [];\n      var query = new Query(\n        self.s.bson,\n        'admin.$cmd',\n        Object.assign(\n          { ismaster: true, client: self.clientInfo, compression: compressors },\n          getSaslSupportedMechs(self.s.options)\n        ),\n        queryOptions\n      );\n      // Get start time\n      var start = new Date().getTime();\n      // Execute the ismaster query\n      self.s.pool.write(\n        query,\n        {\n          socketTimeout: self.s.options.connectionTimeout || 2000\n        },\n        function(err, result) {\n          // Set initial lastIsMasterMS\n          self.lastIsMasterMS = new Date().getTime() - start;\n\n          const serverError = extractIsMasterError(err, result);\n\n          if (serverError) {\n            self.destroy();\n            return self.emit('error', serverError);\n          }\n\n          if (!isSupportedServer(result.result)) {\n            self.destroy();\n            const latestSupportedVersion = '2.6';\n            const message =\n              'Server at ' +\n              self.s.options.host +\n              ':' +\n              self.s.options.port +\n              ' reports wire version ' +\n              (result.result.maxWireVersion || 0) +\n              ', but this version of Node.js Driver requires at least 2 (MongoDB' +\n              latestSupportedVersion +\n              ').';\n            return self.emit('error', new MongoError(message), self);\n          }\n\n          // Determine whether the server is instructing us to use a compressor\n          if (result.result && result.result.compression) {\n            for (var i = 0; i < self.s.compression.compressors.length; i++) {\n              if (result.result.compression.indexOf(self.s.compression.compressors[i]) > -1) {\n                self.s.pool.options.agreedCompressor = self.s.compression.compressors[i];\n                break;\n              }\n            }\n\n            if (self.s.compression.zlibCompressionLevel) {\n              self.s.pool.options.zlibCompressionLevel = self.s.compression.zlibCompressionLevel;\n            }\n          }\n\n          // Ensure no error emitted after initial connect when reconnecting\n          self.initialConnect = false;\n          // Save the ismaster\n          self.ismaster = result.result;\n\n          // It's a proxy change the type so\n          // the wireprotocol will send $readPreference\n          if (self.ismaster.msg === 'isdbgrid') {\n            self._type = 'mongos';\n          }\n          // Add the correct wire protocol handler\n          self.wireProtocolHandler = configureWireProtocolHandler(self, self.ismaster);\n          // Have we defined self monitoring\n          if (self.s.monitoring) {\n            self.monitoringProcessId = setTimeout(\n              monitoringProcess(self),\n              self.s.monitoringInterval\n            );\n          }\n\n          // Emit server description changed if something listening\n          sdam.emitServerDescriptionChanged(self, {\n            address: self.name,\n            arbiters: [],\n            hosts: [],\n            passives: [],\n            type: sdam.getTopologyType(self)\n          });\n\n          if (!self.s.inTopology) {\n            // Emit topology description changed if something listening\n            sdam.emitTopologyDescriptionChanged(self, {\n              topologyType: 'Single',\n              servers: [\n                {\n                  address: self.name,\n                  arbiters: [],\n                  hosts: [],\n                  passives: [],\n                  type: sdam.getTopologyType(self)\n                }\n              ]\n            });\n          }\n\n          // Log the ismaster if available\n          if (self.s.logger.isInfo()) {\n            self.s.logger.info(\n              f('server %s connected with ismaster [%s]', self.name, JSON.stringify(self.ismaster))\n            );\n          }\n\n          // Emit connect\n          self.emit('connect', self);\n        }\n      );\n    } else if (\n      event === 'error' ||\n      event === 'parseError' ||\n      event === 'close' ||\n      event === 'timeout' ||\n      event === 'reconnect' ||\n      event === 'attemptReconnect' ||\n      'reconnectFailed'\n    ) {\n      // Remove server instance from accounting\n      if (\n        serverAccounting &&\n        ['close', 'timeout', 'error', 'parseError', 'reconnectFailed'].indexOf(event) !== -1\n      ) {\n        // Emit toplogy opening event if not in topology\n        if (!self.s.inTopology) {\n          self.emit('topologyOpening', { topologyId: self.id });\n        }\n\n        delete servers[self.id];\n      }\n\n      if (event === 'close') {\n        // Closing emits a server description changed event going to unknown.\n        sdam.emitServerDescriptionChanged(self, {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: 'Unknown'\n        });\n      }\n\n      // Reconnect failed return error\n      if (event === 'reconnectFailed') {\n        self.emit('reconnectFailed', err);\n        // Emit error if any listeners\n        if (self.listeners('error').length > 0) {\n          self.emit('error', err);\n        }\n        // Terminate\n        return;\n      }\n\n      // On first connect fail\n      if (\n        self.s.pool.state === 'disconnected' &&\n        self.initialConnect &&\n        ['close', 'timeout', 'error', 'parseError'].indexOf(event) !== -1\n      ) {\n        self.initialConnect = false;\n        return self.emit(\n          'error',\n          new MongoNetworkError(\n            f('failed to connect to server [%s] on first connect [%s]', self.name, err)\n          )\n        );\n      }\n\n      // Reconnect event, emit the server\n      if (event === 'reconnect') {\n        // Reconnecting emits a server description changed event going from unknown to the\n        // current server type.\n        sdam.emitServerDescriptionChanged(self, {\n          address: self.name,\n          arbiters: [],\n          hosts: [],\n          passives: [],\n          type: sdam.getTopologyType(self)\n        });\n        return self.emit(event, self);\n      }\n\n      // Emit the event\n      self.emit(event, err);\n    }\n  };\n};\n\n/**\n * Initiate server connect\n * @method\n * @param {array} [options.auth=null] Array of auth options to apply on connect\n */\nServer.prototype.connect = function(options) {\n  var self = this;\n  options = options || {};\n\n  // Set the connections\n  if (serverAccounting) servers[this.id] = this;\n\n  // Do not allow connect to be called on anything that's not disconnected\n  if (self.s.pool && !self.s.pool.isDisconnected() && !self.s.pool.isDestroyed()) {\n    throw new MongoError(f('server instance in invalid state %s', self.s.pool.state));\n  }\n\n  // Create a pool\n  self.s.pool = new Pool(this, Object.assign(self.s.options, options, { bson: this.s.bson }));\n\n  // Set up listeners\n  self.s.pool.on('close', eventHandler(self, 'close'));\n  self.s.pool.on('error', eventHandler(self, 'error'));\n  self.s.pool.on('timeout', eventHandler(self, 'timeout'));\n  self.s.pool.on('parseError', eventHandler(self, 'parseError'));\n  self.s.pool.on('connect', eventHandler(self, 'connect'));\n  self.s.pool.on('reconnect', eventHandler(self, 'reconnect'));\n  self.s.pool.on('reconnectFailed', eventHandler(self, 'reconnectFailed'));\n\n  // Set up listeners for command monitoring\n  relayEvents(self.s.pool, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n  // Emit toplogy opening event if not in topology\n  if (!self.s.inTopology) {\n    this.emit('topologyOpening', { topologyId: self.id });\n  }\n\n  // Emit opening server event\n  self.emit('serverOpening', {\n    topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n    address: self.name\n  });\n\n  // Connect with optional auth settings\n  if (options.auth) {\n    self.s.pool.connect.apply(self.s.pool, options.auth);\n  } else {\n    self.s.pool.connect();\n  }\n};\n\n/**\n * Get the server description\n * @method\n * @return {object}\n */\nServer.prototype.getDescription = function() {\n  var ismaster = this.ismaster || {};\n  var description = {\n    type: sdam.getTopologyType(this),\n    address: this.name\n  };\n\n  // Add fields if available\n  if (ismaster.hosts) description.hosts = ismaster.hosts;\n  if (ismaster.arbiters) description.arbiters = ismaster.arbiters;\n  if (ismaster.passives) description.passives = ismaster.passives;\n  if (ismaster.setName) description.setName = ismaster.setName;\n  return description;\n};\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nServer.prototype.lastIsMaster = function() {\n  return this.ismaster;\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nServer.prototype.unref = function() {\n  this.s.pool.unref();\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nServer.prototype.isConnected = function() {\n  if (!this.s.pool) return false;\n  return this.s.pool.isConnected();\n};\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nServer.prototype.isDestroyed = function() {\n  if (!this.s.pool) return false;\n  return this.s.pool.isDestroyed();\n};\n\nfunction basicWriteValidations(self) {\n  if (!self.s.pool) return new MongoError('server instance is not connected');\n  if (self.s.pool.isDestroyed()) return new MongoError('server instance pool was destroyed');\n}\n\nfunction basicReadValidations(self, options) {\n  basicWriteValidations(self, options);\n\n  if (options.readPreference && !(options.readPreference instanceof ReadPreference)) {\n    throw new Error('readPreference must be an instance of ReadPreference');\n  }\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.checkKeys=false] Specify if the bson parser should validate keys.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {Boolean} [options.fullResult=false] Return the full envelope instead of just the result document.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.command = function(ns, cmd, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicReadValidations(self, options);\n  if (result) return callback(result);\n\n  // Clone the options\n  options = Object.assign({}, options, { wireProtocolCommand: false });\n\n  // Debug log\n  if (self.s.logger.isDebug())\n    self.s.logger.debug(\n      f(\n        'executing command [%s] against %s',\n        JSON.stringify({\n          ns: ns,\n          cmd: cmd,\n          options: debugOptions(debugFields, options)\n        }),\n        self.name\n      )\n    );\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'command', ns, cmd, options, callback)) return;\n\n  // error if collation not supported\n  if (collationNotSupported(this, cmd)) {\n    return callback(new MongoError(`server ${this.name} does not support collation`));\n  }\n\n  // Are we executing against a specific topology\n  var topology = options.topology || {};\n  // Create the query object\n  var query = self.wireProtocolHandler.command(self.s.bson, ns, cmd, {}, topology, options);\n  if (query instanceof MongoError) {\n    return callback(query, null);\n  }\n\n  // Set slave OK of the query\n  query.slaveOk = options.readPreference ? options.readPreference.slaveOk() : false;\n\n  // Write options\n  var writeOptions = {\n    raw: typeof options.raw === 'boolean' ? options.raw : false,\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false,\n    command: true,\n    monitoring: typeof options.monitoring === 'boolean' ? options.monitoring : false,\n    fullResult: typeof options.fullResult === 'boolean' ? options.fullResult : false,\n    requestId: query.requestId,\n    socketTimeout: typeof options.socketTimeout === 'number' ? options.socketTimeout : null,\n    session: options.session || null\n  };\n\n  // Write the operation to the pool\n  self.s.pool.write(query, writeOptions, callback);\n};\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.insert = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'insert', ns, ops, options, callback)) return;\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n\n  // Execute write\n  return self.wireProtocolHandler.insert(self.s.pool, ns, self.s.bson, ops, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.update = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'update', ns, ops, options, callback)) return;\n\n  // error if collation not supported\n  if (collationNotSupported(this, options)) {\n    return callback(new MongoError(`server ${this.name} does not support collation`));\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return self.wireProtocolHandler.update(self.s.pool, ns, self.s.bson, ops, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.remove = function(ns, ops, options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  var result = basicWriteValidations(self, options);\n  if (result) return callback(result);\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'remove', ns, ops, options, callback)) return;\n\n  // error if collation not supported\n  if (collationNotSupported(this, options)) {\n    return callback(new MongoError(`server ${this.name} does not support collation`));\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return self.wireProtocolHandler.remove(self.s.pool, ns, self.s.bson, ops, options, callback);\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nServer.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(this.s.bson, ns, cmd, options, topology, this.s.options);\n};\n\n/**\n * Logout from a database\n * @method\n * @param {string} db The db we are logging out from\n * @param {authResultCallback} callback A callback function\n */\nServer.prototype.logout = function(dbName, callback) {\n  this.s.pool.logout(dbName, callback);\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nServer.prototype.auth = function(mechanism, db) {\n  var self = this;\n\n  if (mechanism === 'default') {\n    mechanism = getDefaultAuthMechanism(self.ismaster);\n  }\n\n  // Slice all the arguments off\n  var args = Array.prototype.slice.call(arguments, 0);\n  // Set the mechanism\n  args[0] = mechanism;\n  // Get the callback\n  var callback = args[args.length - 1];\n\n  // If we are not connected or have a disconnectHandler specified\n  if (disconnectHandler(self, 'auth', db, args, {}, callback)) {\n    return;\n  }\n\n  // Do not authenticate if we are an arbiter\n  if (this.lastIsMaster() && this.lastIsMaster().arbiterOnly) {\n    return callback(null, true);\n  }\n\n  // Apply the arguments to the pool\n  self.s.pool.auth.apply(self.s.pool, args);\n};\n\n/**\n * Compare two server instances\n * @method\n * @param {Server} server Server to compare equality against\n * @return {boolean}\n */\nServer.prototype.equals = function(server) {\n  if (typeof server === 'string') return this.name.toLowerCase() === server.toLowerCase();\n  if (server.name) return this.name.toLowerCase() === server.name.toLowerCase();\n  return false;\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nServer.prototype.connections = function() {\n  return this.s.pool.allConnections();\n};\n\n/**\n * Selects a server\n * @return {Server}\n */\nServer.prototype.selectServer = function(selector, options, callback) {\n  if (typeof selector === 'function' && typeof callback === 'undefined')\n    (callback = selector), (selector = undefined), (options = {});\n  if (typeof options === 'function')\n    (callback = options), (options = selector), (selector = undefined);\n\n  callback(null, this);\n};\n\nvar listeners = ['close', 'error', 'timeout', 'parseError', 'connect'];\n\n/**\n * Destroy the server connection\n * @method\n * @param {boolean} [options.emitClose=false] Emit close event on destroy\n * @param {boolean} [options.emitDestroy=false] Emit destroy event on destroy\n * @param {boolean} [options.force=false] Force destroy the pool\n */\nServer.prototype.destroy = function(options) {\n  if (this._destroyed) return;\n\n  options = options || {};\n  var self = this;\n\n  // Set the connections\n  if (serverAccounting) delete servers[this.id];\n\n  // Destroy the monitoring process if any\n  if (this.monitoringProcessId) {\n    clearTimeout(this.monitoringProcessId);\n  }\n\n  // No pool, return\n  if (!self.s.pool) {\n    this._destroyed = true;\n    return;\n  }\n\n  // Emit close event\n  if (options.emitClose) {\n    self.emit('close', self);\n  }\n\n  // Emit destroy event\n  if (options.emitDestroy) {\n    self.emit('destroy', self);\n  }\n\n  // Remove all listeners\n  listeners.forEach(function(event) {\n    self.s.pool.removeAllListeners(event);\n  });\n\n  // Emit opening server event\n  if (self.listeners('serverClosed').length > 0)\n    self.emit('serverClosed', {\n      topologyId: self.s.topologyId !== -1 ? self.s.topologyId : self.id,\n      address: self.name\n    });\n\n  // Emit toplogy opening event if not in topology\n  if (self.listeners('topologyClosed').length > 0 && !self.s.inTopology) {\n    self.emit('topologyClosed', { topologyId: self.id });\n  }\n\n  if (self.s.logger.isDebug()) {\n    self.s.logger.debug(f('destroy called on server %s', self.name));\n  }\n\n  // Destroy the pool\n  this.s.pool.destroy(options.force);\n  this._destroyed = true;\n};\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Server#connect\n * @type {Server}\n */\n\n/**\n * A server reconnect event, used to verify that the server topology has reconnected\n *\n * @event Server#reconnect\n * @type {Server}\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event Server#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event Server#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event Server#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event Server#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event Server#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event Server#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * Server reconnect failed\n *\n * @event Server#reconnectFailed\n * @type {Error}\n */\n\n/**\n * Server connection pool closed\n *\n * @event Server#close\n * @type {object}\n */\n\n/**\n * Server connection pool caused an error\n *\n * @event Server#error\n * @type {Error}\n */\n\n/**\n * Server destroyed was called\n *\n * @event Server#destroy\n * @type {Server}\n */\n\nmodule.exports = Server;\n","'use strict';\nconst MongoError = require('./error').MongoError;\n\nlet TxnState;\nlet stateMachine;\n\n(() => {\n  const NO_TRANSACTION = 'NO_TRANSACTION';\n  const STARTING_TRANSACTION = 'STARTING_TRANSACTION';\n  const TRANSACTION_IN_PROGRESS = 'TRANSACTION_IN_PROGRESS';\n  const TRANSACTION_COMMITTED = 'TRANSACTION_COMMITTED';\n  const TRANSACTION_COMMITTED_EMPTY = 'TRANSACTION_COMMITTED_EMPTY';\n  const TRANSACTION_ABORTED = 'TRANSACTION_ABORTED';\n\n  TxnState = {\n    NO_TRANSACTION,\n    STARTING_TRANSACTION,\n    TRANSACTION_IN_PROGRESS,\n    TRANSACTION_COMMITTED,\n    TRANSACTION_COMMITTED_EMPTY,\n    TRANSACTION_ABORTED\n  };\n\n  stateMachine = {\n    [NO_TRANSACTION]: [NO_TRANSACTION, STARTING_TRANSACTION],\n    [STARTING_TRANSACTION]: [\n      TRANSACTION_IN_PROGRESS,\n      TRANSACTION_COMMITTED,\n      TRANSACTION_COMMITTED_EMPTY,\n      TRANSACTION_ABORTED\n    ],\n    [TRANSACTION_IN_PROGRESS]: [\n      TRANSACTION_IN_PROGRESS,\n      TRANSACTION_COMMITTED,\n      TRANSACTION_ABORTED\n    ],\n    [TRANSACTION_COMMITTED]: [\n      TRANSACTION_COMMITTED,\n      TRANSACTION_COMMITTED_EMPTY,\n      STARTING_TRANSACTION,\n      NO_TRANSACTION\n    ],\n    [TRANSACTION_ABORTED]: [STARTING_TRANSACTION, NO_TRANSACTION],\n    [TRANSACTION_COMMITTED_EMPTY]: [TRANSACTION_COMMITTED_EMPTY, NO_TRANSACTION]\n  };\n})();\n\n/**\n * The MongoDB ReadConcern, which allows for control of the consistency and isolation properties\n * of the data read from replica sets and replica set shards.\n * @typedef {Object} ReadConcern\n * @property {'local'|'available'|'majority'|'linearizable'|'snapshot'} level The readConcern Level\n * @see https://docs.mongodb.com/manual/reference/read-concern/\n */\n\n/**\n * A MongoDB WriteConcern, which describes the level of acknowledgement\n * requested from MongoDB for write operations.\n * @typedef {Object} WriteConcern\n * @property {number|'majority'|string} [w=1] requests acknowledgement that the write operation has\n * propagated to a specified number of mongod hosts\n * @property {boolean} [j=false] requests acknowledgement from MongoDB that the write operation has\n * been written to the journal\n * @property {number} [wtimeout] a time limit, in milliseconds, for the write concern\n * @see https://docs.mongodb.com/manual/reference/write-concern/\n */\n\n/**\n * Configuration options for a transaction.\n * @typedef {Object} TransactionOptions\n * @property {ReadConcern} [readConcern] A default read concern for commands in this transaction\n * @property {WriteConcern} [writeConcern] A default writeConcern for commands in this transaction\n * @property {ReadPreference} [readPreference] A default read preference for commands in this transaction\n */\n\n/**\n * A class maintaining state related to a server transaction. Internal Only\n * @ignore\n */\nclass Transaction {\n  /**\n   * Create a transaction\n   *\n   * @ignore\n   * @param {TransactionOptions} [options] Optional settings\n   */\n  constructor(options) {\n    options = options || {};\n\n    this.state = TxnState.NO_TRANSACTION;\n    this.options = {};\n\n    if (options.writeConcern || typeof options.w !== 'undefined') {\n      const w = options.writeConcern ? options.writeConcern.w : options.w;\n      if (w <= 0) {\n        throw new MongoError('Transactions do not support unacknowledged write concern');\n      }\n\n      this.options.writeConcern = options.writeConcern ? options.writeConcern : { w: options.w };\n    }\n\n    if (options.readConcern) this.options.readConcern = options.readConcern;\n    if (options.readPreference) this.options.readPreference = options.readPreference;\n  }\n\n  /**\n   * @ignore\n   * @return Whether this session is presently in a transaction\n   */\n  get isActive() {\n    return (\n      [TxnState.STARTING_TRANSACTION, TxnState.TRANSACTION_IN_PROGRESS].indexOf(this.state) !== -1\n    );\n  }\n\n  /**\n   * Transition the transaction in the state machine\n   * @ignore\n   * @param {TxnState} state The new state to transition to\n   */\n  transition(nextState) {\n    const nextStates = stateMachine[this.state];\n    if (nextStates && nextStates.indexOf(nextState) !== -1) {\n      this.state = nextState;\n      return;\n    }\n\n    throw new MongoError(\n      `Attempted illegal state transition from [${this.state}] to [${nextState}]`\n    );\n  }\n}\n\nmodule.exports = { TxnState, Transaction };\n","'use strict';\n\nconst EventEmitter = require('events');\nconst isResumableError = require('./error').isResumableError;\nconst MongoError = require('mongodb-core').MongoError;\n\nvar cursorOptionNames = ['maxAwaitTimeMS', 'collation', 'readPreference'];\n\nconst CHANGE_DOMAIN_TYPES = {\n  COLLECTION: Symbol('Collection'),\n  DATABASE: Symbol('Database'),\n  CLUSTER: Symbol('Cluster')\n};\n\n/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch|Collection.watch()}.\n * @class ChangeStream\n * @since 3.0.0\n * @param {(MongoClient|Db|Collection)} changeDomain The domain against which to create the change stream\n * @param {Array} pipeline An array of {@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents\n * @param {object} [options] Optional settings\n * @param {string} [options.fullDocument='default'] Allowed values: ‘default’, ‘updateLookup’. When set to ‘updateLookup’, the change stream will include both a delta describing the changes to the document, as well as a copy of the entire document that was changed from some time after the change occurred.\n * @param {number} [options.maxAwaitTimeMS] The maximum amount of time for the server to wait on new documents to satisfy a change stream query\n * @param {object} [options.resumeAfter] Specifies the logical starting point for the new change stream. This should be the _id field from a previously returned change stream document.\n * @param {number} [options.batchSize] The number of documents to return per batch. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {object} [options.collation] Specify collation settings for operation. See {@link https://docs.mongodb.com/manual/reference/command/aggregate|aggregation documentation}.\n * @param {ReadPreference} [options.readPreference] The read preference. Defaults to the read preference of the database or collection. See {@link https://docs.mongodb.com/manual/reference/read-preference|read preference documentation}.\n * @fires ChangeStream#close\n * @fires ChangeStream#change\n * @fires ChangeStream#end\n * @fires ChangeStream#error\n * @return {ChangeStream} a ChangeStream instance.\n */\n\nclass ChangeStream extends EventEmitter {\n  constructor(changeDomain, pipeline, options) {\n    super();\n    const Collection = require('./collection');\n    const Db = require('./db');\n    const MongoClient = require('./mongo_client');\n\n    this.pipeline = pipeline || [];\n    this.options = options || {};\n    this.cursorNamespace = undefined;\n    this.namespace = {};\n\n    if (changeDomain instanceof Collection) {\n      this.type = CHANGE_DOMAIN_TYPES.COLLECTION;\n      this.topology = changeDomain.s.db.serverConfig;\n\n      this.namespace = {\n        collection: changeDomain.collectionName,\n        database: changeDomain.s.db.databaseName\n      };\n\n      this.cursorNamespace = `${this.namespace.database}.${this.namespace.collection}`;\n    } else if (changeDomain instanceof Db) {\n      this.type = CHANGE_DOMAIN_TYPES.DATABASE;\n      this.namespace = { collection: '', database: changeDomain.databaseName };\n      this.cursorNamespace = this.namespace.database;\n      this.topology = changeDomain.serverConfig;\n    } else if (changeDomain instanceof MongoClient) {\n      this.type = CHANGE_DOMAIN_TYPES.CLUSTER;\n      this.namespace = { collection: '', database: 'admin' };\n      this.cursorNamespace = this.namespace.database;\n      this.topology = changeDomain.topology;\n    } else {\n      throw new TypeError(\n        'changeDomain provided to ChangeStream constructor is not an instance of Collection, Db, or MongoClient'\n      );\n    }\n\n    this.promiseLibrary = changeDomain.s.promiseLibrary;\n    if (!this.options.readPreference && changeDomain.s.readPreference) {\n      this.options.readPreference = changeDomain.s.readPreference;\n    }\n\n    // We need to get the operationTime as early as possible\n    const isMaster = this.topology.lastIsMaster();\n    if (!isMaster) {\n      throw new MongoError('Topology does not have an ismaster yet.');\n    }\n\n    this.operationTime = isMaster.operationTime;\n\n    // Create contained Change Stream cursor\n    this.cursor = createChangeStreamCursor(this);\n\n    // Listen for any `change` listeners being added to ChangeStream\n    this.on('newListener', eventName => {\n      if (eventName === 'change' && this.cursor && this.listenerCount('change') === 0) {\n        this.cursor.on('data', change =>\n          processNewChange({ changeStream: this, change, eventEmitter: true })\n        );\n      }\n    });\n\n    // Listen for all `change` listeners being removed from ChangeStream\n    this.on('removeListener', eventName => {\n      if (eventName === 'change' && this.listenerCount('change') === 0 && this.cursor) {\n        this.cursor.removeAllListeners('data');\n      }\n    });\n  }\n\n  /**\n   * Check if there is any document still available in the Change Stream\n   * @function ChangeStream.prototype.hasNext\n   * @param {ChangeStream~resultCallback} [callback] The result callback.\n   * @throws {MongoError}\n   * @return {Promise} returns Promise if no callback passed\n   */\n  hasNext(callback) {\n    return this.cursor.hasNext(callback);\n  }\n\n  /**\n   * Get the next available document from the Change Stream, returns null if no more documents are available.\n   * @function ChangeStream.prototype.next\n   * @param {ChangeStream~resultCallback} [callback] The result callback.\n   * @throws {MongoError}\n   * @return {Promise} returns Promise if no callback passed\n   */\n  next(callback) {\n    var self = this;\n    if (this.isClosed()) {\n      if (callback) return callback(new Error('Change Stream is not open.'), null);\n      return self.promiseLibrary.reject(new Error('Change Stream is not open.'));\n    }\n\n    return this.cursor\n      .next()\n      .then(change => processNewChange({ changeStream: self, change, callback }))\n      .catch(error => processNewChange({ changeStream: self, error, callback }));\n  }\n\n  /**\n   * Is the cursor closed\n   * @method ChangeStream.prototype.isClosed\n   * @return {boolean}\n   */\n  isClosed() {\n    if (this.cursor) {\n      return this.cursor.isClosed();\n    }\n    return true;\n  }\n\n  /**\n   * Close the Change Stream\n   * @method ChangeStream.prototype.close\n   * @param {ChangeStream~resultCallback} [callback] The result callback.\n   * @return {Promise} returns Promise if no callback passed\n   */\n  close(callback) {\n    if (!this.cursor) {\n      if (callback) return callback();\n      return this.promiseLibrary.resolve();\n    }\n\n    // Tidy up the existing cursor\n    var cursor = this.cursor;\n    delete this.cursor;\n    return cursor.close(callback);\n  }\n\n  /**\n   * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n   * @method\n   * @param {Writable} destination The destination for writing data\n   * @param {object} [options] {@link https://nodejs.org/api/stream.html#stream_readable_pipe_destination_options|Pipe options}\n   * @return {null}\n   */\n  pipe(destination, options) {\n    if (!this.pipeDestinations) {\n      this.pipeDestinations = [];\n    }\n    this.pipeDestinations.push(destination);\n    return this.cursor.pipe(destination, options);\n  }\n\n  /**\n   * This method will remove the hooks set up for a previous pipe() call.\n   * @param {Writable} [destination] The destination for writing data\n   * @return {null}\n   */\n  unpipe(destination) {\n    if (this.pipeDestinations && this.pipeDestinations.indexOf(destination) > -1) {\n      this.pipeDestinations.splice(this.pipeDestinations.indexOf(destination), 1);\n    }\n    return this.cursor.unpipe(destination);\n  }\n\n  /**\n   * Return a modified Readable stream including a possible transform method.\n   * @method\n   * @param {object} [options] Optional settings.\n   * @param {function} [options.transform] A transformation method applied to each document emitted by the stream.\n   * @return {Cursor}\n   */\n  stream(options) {\n    this.streamOptions = options;\n    return this.cursor.stream(options);\n  }\n\n  /**\n   * This method will cause a stream in flowing mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n   * @return {null}\n   */\n  pause() {\n    return this.cursor.pause();\n  }\n\n  /**\n   * This method will cause the readable stream to resume emitting data events.\n   * @return {null}\n   */\n  resume() {\n    return this.cursor.resume();\n  }\n}\n\n// Create a new change stream cursor based on self's configuration\nvar createChangeStreamCursor = function(self) {\n  if (self.resumeToken) {\n    self.options.resumeAfter = self.resumeToken;\n  }\n\n  var changeStreamCursor = buildChangeStreamAggregationCommand(self);\n\n  /**\n   * Fired for each new matching change in the specified namespace. Attaching a `change`\n   * event listener to a Change Stream will switch the stream into flowing mode. Data will\n   * then be passed as soon as it is available.\n   *\n   * @event ChangeStream#change\n   * @type {object}\n   */\n  if (self.listenerCount('change') > 0) {\n    changeStreamCursor.on('data', function(change) {\n      processNewChange({ changeStream: self, change, eventEmitter: true });\n    });\n  }\n\n  /**\n   * Change stream close event\n   *\n   * @event ChangeStream#close\n   * @type {null}\n   */\n  changeStreamCursor.on('close', function() {\n    self.emit('close');\n  });\n\n  /**\n   * Change stream end event\n   *\n   * @event ChangeStream#end\n   * @type {null}\n   */\n  changeStreamCursor.on('end', function() {\n    self.emit('end');\n  });\n\n  /**\n   * Fired when the stream encounters an error.\n   *\n   * @event ChangeStream#error\n   * @type {Error}\n   */\n  changeStreamCursor.on('error', function(error) {\n    processNewChange({ changeStream: self, error, eventEmitter: true });\n  });\n\n  if (self.pipeDestinations) {\n    const cursorStream = changeStreamCursor.stream(self.streamOptions);\n    for (let pipeDestination in self.pipeDestinations) {\n      cursorStream.pipe(pipeDestination);\n    }\n  }\n\n  return changeStreamCursor;\n};\n\nfunction getResumeToken(self) {\n  return self.resumeToken || self.options.resumeAfter;\n}\n\nfunction getStartAtOperationTime(self) {\n  const isMaster = self.topology.lastIsMaster() || {};\n  return (\n    isMaster.maxWireVersion && isMaster.maxWireVersion >= 7 && self.options.startAtOperationTime\n  );\n}\n\nvar buildChangeStreamAggregationCommand = function(self) {\n  const topology = self.topology;\n  const namespace = self.namespace;\n  const pipeline = self.pipeline;\n  const options = self.options;\n  const cursorNamespace = self.cursorNamespace;\n\n  var changeStreamStageOptions = {\n    fullDocument: options.fullDocument || 'default'\n  };\n\n  const resumeToken = getResumeToken(self);\n  const startAtOperationTime = getStartAtOperationTime(self);\n  if (resumeToken) {\n    changeStreamStageOptions.resumeAfter = resumeToken;\n  }\n\n  if (startAtOperationTime) {\n    changeStreamStageOptions.startAtOperationTime = startAtOperationTime;\n  }\n\n  // Map cursor options\n  var cursorOptions = {};\n  cursorOptionNames.forEach(function(optionName) {\n    if (options[optionName]) {\n      cursorOptions[optionName] = options[optionName];\n    }\n  });\n\n  if (self.type === CHANGE_DOMAIN_TYPES.CLUSTER) {\n    changeStreamStageOptions.allChangesForCluster = true;\n  }\n\n  var changeStreamPipeline = [{ $changeStream: changeStreamStageOptions }];\n\n  changeStreamPipeline = changeStreamPipeline.concat(pipeline);\n\n  var command = {\n    aggregate: self.type === CHANGE_DOMAIN_TYPES.COLLECTION ? namespace.collection : 1,\n    pipeline: changeStreamPipeline,\n    readConcern: { level: 'majority' },\n    cursor: {\n      batchSize: options.batchSize || 1\n    }\n  };\n\n  // Create and return the cursor\n  return topology.cursor(cursorNamespace, command, cursorOptions);\n};\n\n// This method performs a basic server selection loop, satisfying the requirements of\n// ChangeStream resumability until the new SDAM layer can be used.\nconst SELECTION_TIMEOUT = 30000;\nfunction waitForTopologyConnected(topology, options, callback) {\n  setTimeout(() => {\n    if (options && options.start == null) options.start = process.hrtime();\n    const start = options.start || process.hrtime();\n    const timeout = options.timeout || SELECTION_TIMEOUT;\n    const readPreference = options.readPreference;\n\n    if (topology.isConnected({ readPreference })) return callback(null, null);\n    const hrElapsed = process.hrtime(start);\n    const elapsed = (hrElapsed[0] * 1e9 + hrElapsed[1]) / 1e6;\n    if (elapsed > timeout) return callback(new MongoError('Timed out waiting for connection'));\n    waitForTopologyConnected(topology, options, callback);\n  }, 3000); // this is an arbitrary wait time to allow SDAM to transition\n}\n\n// Handle new change events. This method brings together the routes from the callback, event emitter, and promise ways of using ChangeStream.\nfunction processNewChange(args) {\n  const changeStream = args.changeStream;\n  const error = args.error;\n  const change = args.change;\n  const callback = args.callback;\n  const eventEmitter = args.eventEmitter || false;\n  const topology = changeStream.topology;\n  const options = changeStream.cursor.options;\n\n  if (error) {\n    if (isResumableError(error) && !changeStream.attemptingResume) {\n      changeStream.attemptingResume = true;\n\n      if (!(getResumeToken(changeStream) || getStartAtOperationTime(changeStream))) {\n        const startAtOperationTime = changeStream.cursor.cursorState.operationTime;\n        changeStream.options = Object.assign({ startAtOperationTime }, changeStream.options);\n      }\n\n      // stop listening to all events from old cursor\n      ['data', 'close', 'end', 'error'].forEach(event =>\n        changeStream.cursor.removeAllListeners(event)\n      );\n\n      // close internal cursor, ignore errors\n      changeStream.cursor.close();\n\n      // attempt recreating the cursor\n      if (eventEmitter) {\n        waitForTopologyConnected(topology, { readPreference: options.readPreference }, err => {\n          if (err) return changeStream.emit('error', err);\n          changeStream.cursor = createChangeStreamCursor(changeStream);\n        });\n\n        return;\n      }\n\n      if (callback) {\n        waitForTopologyConnected(topology, { readPreference: options.readPreference }, err => {\n          if (err) return callback(err, null);\n\n          changeStream.cursor = createChangeStreamCursor(changeStream);\n          changeStream.next(callback);\n        });\n\n        return;\n      }\n\n      return new Promise((resolve, reject) => {\n        waitForTopologyConnected(topology, { readPreference: options.readPreference }, err => {\n          if (err) return reject(err);\n          resolve();\n        });\n      })\n        .then(() => (changeStream.cursor = createChangeStreamCursor(changeStream)))\n        .then(() => changeStream.next());\n    }\n\n    if (eventEmitter) return changeStream.emit('error', error);\n    if (typeof callback === 'function') return callback(error, null);\n    return changeStream.promiseLibrary.reject(error);\n  }\n\n  changeStream.attemptingResume = false;\n\n  // Cache the resume token if it is present. If it is not present return an error.\n  if (!change || !change._id) {\n    var noResumeTokenError = new Error(\n      'A change stream document has been received that lacks a resume token (_id).'\n    );\n\n    if (eventEmitter) return changeStream.emit('error', noResumeTokenError);\n    if (typeof callback === 'function') return callback(noResumeTokenError, null);\n    return changeStream.promiseLibrary.reject(noResumeTokenError);\n  }\n\n  changeStream.resumeToken = change._id;\n\n  // Return the change\n  if (eventEmitter) return changeStream.emit('change', change);\n  if (typeof callback === 'function') return callback(error, change);\n  return changeStream.promiseLibrary.resolve(change);\n}\n\n/**\n * The callback format for results\n * @callback ChangeStream~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\nmodule.exports = ChangeStream;\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst MongoError = require('mongodb-core').MongoError;\nconst Readable = require('stream').Readable;\nconst CoreCursor = require('./cursor');\n\n/**\n * @fileOverview The **CommandCursor** class is an internal class that embodies a\n * generalized cursor based on a MongoDB command allowing for iteration over the\n * results returned. It supports one by one document iteration, conversion to an\n * array or can be iterated as a Node 0.10.X or higher stream\n *\n * **CommandCursor Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('listCollectionsExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // List the database collections available\n *     db.listCollections().toArray(function(err, items) {\n *       test.equal(null, err);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the browser.\n * @external Readable\n */\n\n/**\n * Creates a new Command Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class CommandCursor\n * @extends external:Readable\n * @fires CommandCursor#data\n * @fires CommandCursor#end\n * @fires CommandCursor#close\n * @fires CommandCursor#readable\n * @return {CommandCursor} an CommandCursor instance.\n */\nvar CommandCursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var state = CommandCursor.INIT;\n  var streamOptions = {};\n\n  // MaxTimeMS\n  var maxTimeMS = null;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Set up\n  Readable.call(this, { objectMode: true });\n\n  // Internal state\n  this.s = {\n    // MaxTimeMS\n    maxTimeMS: maxTimeMS,\n    // State\n    state: state,\n    // Stream options\n    streamOptions: streamOptions,\n    // BSON\n    bson: bson,\n    // Namespace\n    ns: ns,\n    // Command\n    cmd: cmd,\n    // Options\n    options: options,\n    // Topology\n    topology: topology,\n    // Topology Options\n    topologyOptions: topologyOptions,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Optional ClientSession\n    session: options.session\n  };\n};\n\n/**\n * CommandCursor stream data event, fired for each document in the cursor.\n *\n * @event CommandCursor#data\n * @type {object}\n */\n\n/**\n * CommandCursor stream end event\n *\n * @event CommandCursor#end\n * @type {null}\n */\n\n/**\n * CommandCursor stream close event\n *\n * @event CommandCursor#close\n * @type {null}\n */\n\n/**\n * CommandCursor stream readable event\n *\n * @event CommandCursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(CommandCursor, Readable);\n\n// Set the methods to inherit from prototype\nvar methodsToInherit = [\n  '_next',\n  'next',\n  'hasNext',\n  'each',\n  'forEach',\n  'toArray',\n  'rewind',\n  'bufferedCount',\n  'readBufferedDocuments',\n  'close',\n  'isClosed',\n  'kill',\n  'setCursorBatchSize',\n  '_find',\n  '_getmore',\n  '_killcursor',\n  'isDead',\n  'explain',\n  'isNotified',\n  'isKilled',\n  '_endSession',\n  '_initImplicitSession'\n];\n\n// Only inherit the types we need\nfor (var i = 0; i < methodsToInherit.length; i++) {\n  CommandCursor.prototype[methodsToInherit[i]] = CoreCursor.prototype[methodsToInherit[i]];\n}\n\n/**\n * Set the ReadPreference for the cursor.\n * @method\n * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCommandCursor.prototype.setReadPreference = function(readPreference) {\n  if (this.s.state === CommandCursor.CLOSED || this.isDead()) {\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  }\n\n  if (this.s.state !== CommandCursor.INIT) {\n    throw MongoError.create({\n      message: 'cannot change cursor readPreference after cursor has been accessed',\n      driver: true\n    });\n  }\n\n  if (readPreference instanceof ReadPreference) {\n    this.s.options.readPreference = readPreference;\n  } else if (typeof readPreference === 'string') {\n    this.s.options.readPreference = new ReadPreference(readPreference);\n  } else {\n    throw new TypeError('Invalid read preference: ' + readPreference);\n  }\n\n  return this;\n};\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {CommandCursor}\n */\nCommandCursor.prototype.batchSize = function(value) {\n  if (this.s.state === CommandCursor.CLOSED || this.isDead())\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  if (typeof value !== 'number')\n    throw MongoError.create({ message: 'batchSize requires an integer', driver: true });\n  if (this.s.cmd.cursor) this.s.cmd.cursor.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n};\n\n/**\n * Add a maxTimeMS stage to the aggregation pipeline\n * @method\n * @param {number} value The state maxTimeMS value.\n * @return {CommandCursor}\n */\nCommandCursor.prototype.maxTimeMS = function(value) {\n  if (this.s.topology.lastIsMaster().minWireVersion > 2) {\n    this.s.cmd.maxTimeMS = value;\n  }\n  return this;\n};\n\n/**\n * Return the cursor logger\n * @method\n * @return {Logger} return the cursor logger\n * @ignore\n */\nCommandCursor.prototype.getLogger = function() {\n  return this.logger;\n};\n\nCommandCursor.prototype.get = CommandCursor.prototype.toArray;\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @function CommandCursor.prototype.next\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Check if there is any document still available in the cursor\n * @function CommandCursor.prototype.hasNext\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback CommandCursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed.\n * @method CommandCursor.prototype.toArray\n * @param {CommandCursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback CommandCursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method CommandCursor.prototype.each\n * @param {CommandCursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method CommandCursor.prototype.close\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Is the cursor closed\n * @method CommandCursor.prototype.isClosed\n * @return {boolean}\n */\n\n/**\n * Clone the cursor\n * @function CommandCursor.prototype.clone\n * @return {CommandCursor}\n */\n\n/**\n * Resets the cursor\n * @function CommandCursor.prototype.rewind\n * @return {CommandCursor}\n */\n\n/**\n * The callback format for the forEach iterator method\n * @callback CommandCursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback CommandCursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/*\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method CommandCursor.prototype.forEach\n * @param {CommandCursor~iteratorCallback} iterator The iteration callback.\n * @param {CommandCursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\n\nCommandCursor.INIT = 0;\nCommandCursor.OPEN = 1;\nCommandCursor.CLOSED = 2;\n\nmodule.exports = CommandCursor;\n","'use strict';\n\nconst executeCommand = require('./db_ops').executeCommand;\nconst executeDbAdminCommand = require('./db_ops').executeDbAdminCommand;\n\n/**\n * Get ReplicaSet status\n *\n * @param {Admin} a collection instance.\n * @param {Object} [options] Optional settings. See Admin.prototype.replSetGetStatus for a list of options.\n * @param {Admin~resultCallback} [callback] The command result callback.\n */\nfunction replSetGetStatus(admin, options, callback) {\n  executeDbAdminCommand(admin.s.db, { replSetGetStatus: 1 }, options, callback);\n}\n\n/**\n * Retrieve this db's server status.\n *\n * @param {Admin} a collection instance.\n * @param {Object} [options] Optional settings. See Admin.prototype.serverStatus for a list of options.\n * @param {Admin~resultCallback} [callback] The command result callback\n */\nfunction serverStatus(admin, options, callback) {\n  executeDbAdminCommand(admin.s.db, { serverStatus: 1 }, options, callback);\n}\n\n/**\n * Validate an existing collection\n *\n * @param {Admin} a collection instance.\n * @param {string} collectionName The name of the collection to validate.\n * @param {Object} [options] Optional settings. See Admin.prototype.validateCollection for a list of options.\n * @param {Admin~resultCallback} [callback] The command result callback.\n */\nfunction validateCollection(admin, collectionName, options, callback) {\n  const command = { validate: collectionName };\n  const keys = Object.keys(options);\n\n  // Decorate command with extra options\n  for (let i = 0; i < keys.length; i++) {\n    if (options.hasOwnProperty(keys[i]) && keys[i] !== 'session') {\n      command[keys[i]] = options[keys[i]];\n    }\n  }\n\n  executeCommand(admin.s.db, command, options, (err, doc) => {\n    if (err != null) return callback(err, null);\n\n    if (doc.ok === 0) return callback(new Error('Error with validate command'), null);\n    if (doc.result != null && doc.result.constructor !== String)\n      return callback(new Error('Error with validation data'), null);\n    if (doc.result != null && doc.result.match(/exception|corrupt/) != null)\n      return callback(new Error('Error: invalid collection ' + collectionName), null);\n    if (doc.valid != null && !doc.valid)\n      return callback(new Error('Error: invalid collection ' + collectionName), null);\n\n    return callback(null, doc);\n  });\n}\n\nmodule.exports = { replSetGetStatus, serverStatus, validateCollection };\n","'use strict';\n\nconst authenticate = require('../authenticate');\nconst deprecate = require('util').deprecate;\nconst Logger = require('mongodb-core').Logger;\nconst MongoError = require('mongodb-core').MongoError;\nconst Mongos = require('../topologies/mongos');\nconst parse = require('mongodb-core').parseConnectionString;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst ReplSet = require('../topologies/replset');\nconst Server = require('../topologies/server');\nconst ServerSessionPool = require('mongodb-core').Sessions.ServerSessionPool;\n\nconst monitoringEvents = [\n  'timeout',\n  'close',\n  'serverOpening',\n  'serverDescriptionChanged',\n  'serverHeartbeatStarted',\n  'serverHeartbeatSucceeded',\n  'serverHeartbeatFailed',\n  'serverClosed',\n  'topologyOpening',\n  'topologyClosed',\n  'topologyDescriptionChanged',\n  'commandStarted',\n  'commandSucceeded',\n  'commandFailed',\n  'joined',\n  'left',\n  'ping',\n  'ha',\n  'all',\n  'fullsetup',\n  'open'\n];\nconst ignoreOptionNames = ['native_parser'];\nconst legacyOptionNames = ['server', 'replset', 'replSet', 'mongos', 'db'];\nconst legacyParse = deprecate(\n  require('../url_parser'),\n  'current URL string parser is deprecated, and will be removed in a future version. ' +\n    'To use the new parser, pass option { useNewUrlParser: true } to MongoClient.connect.'\n);\nconst validOptionNames = [\n  'poolSize',\n  'ssl',\n  'sslValidate',\n  'sslCA',\n  'sslCert',\n  'sslKey',\n  'sslPass',\n  'sslCRL',\n  'autoReconnect',\n  'noDelay',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'connectTimeoutMS',\n  'family',\n  'socketTimeoutMS',\n  'reconnectTries',\n  'reconnectInterval',\n  'ha',\n  'haInterval',\n  'replicaSet',\n  'secondaryAcceptableLatencyMS',\n  'acceptableLatencyMS',\n  'connectWithNoPrimary',\n  'authSource',\n  'w',\n  'wtimeout',\n  'j',\n  'forceServerObjectId',\n  'serializeFunctions',\n  'ignoreUndefined',\n  'raw',\n  'bufferMaxEntries',\n  'readPreference',\n  'pkFactory',\n  'promiseLibrary',\n  'readConcern',\n  'maxStalenessSeconds',\n  'loggerLevel',\n  'logger',\n  'promoteValues',\n  'promoteBuffers',\n  'promoteLongs',\n  'domainsEnabled',\n  'checkServerIdentity',\n  'validateOptions',\n  'appname',\n  'auth',\n  'user',\n  'password',\n  'authMechanism',\n  'compression',\n  'fsync',\n  'readPreferenceTags',\n  'numberOfRetries',\n  'auto_reconnect',\n  'minSize',\n  'monitorCommands',\n  'retryWrites',\n  'useNewUrlParser'\n];\n\nfunction addListeners(mongoClient, topology) {\n  topology.on('authenticated', createListener(mongoClient, 'authenticated'));\n  topology.on('error', createListener(mongoClient, 'error'));\n  topology.on('timeout', createListener(mongoClient, 'timeout'));\n  topology.on('close', createListener(mongoClient, 'close'));\n  topology.on('parseError', createListener(mongoClient, 'parseError'));\n  topology.once('open', createListener(mongoClient, 'open'));\n  topology.once('fullsetup', createListener(mongoClient, 'fullsetup'));\n  topology.once('all', createListener(mongoClient, 'all'));\n  topology.on('reconnect', createListener(mongoClient, 'reconnect'));\n}\n\nfunction assignTopology(client, topology) {\n  client.topology = topology;\n  topology.s.sessionPool = new ServerSessionPool(topology.s.coreTopology);\n}\n\n// Clear out all events\nfunction clearAllEvents(topology) {\n  monitoringEvents.forEach(event => topology.removeAllListeners(event));\n}\n\n// Collect all events in order from SDAM\nfunction collectEvents(mongoClient, topology) {\n  const MongoClient = require('../mongo_client');\n  const collectedEvents = [];\n\n  if (mongoClient instanceof MongoClient) {\n    monitoringEvents.forEach(event => {\n      topology.on(event, (object1, object2) => {\n        if (event === 'open') {\n          collectedEvents.push({ event: event, object1: mongoClient });\n        } else {\n          collectedEvents.push({ event: event, object1: object1, object2: object2 });\n        }\n      });\n    });\n  }\n\n  return collectedEvents;\n}\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver\n *\n * @method\n * @param {MongoClient} mongoClient The MongoClient instance with which to connect.\n * @param {string} url The connection URI string\n * @param {object} [options] Optional settings. See MongoClient.prototype.connect for a list of options.\n * @param {MongoClient~connectCallback} [callback] The command result callback\n */\nfunction connect(mongoClient, url, options, callback) {\n  options = Object.assign({}, options);\n\n  // If callback is null throw an exception\n  if (callback == null) {\n    throw new Error('no callback function provided');\n  }\n\n  // Get a logger for MongoClient\n  const logger = Logger('MongoClient', options);\n\n  // Did we pass in a Server/ReplSet/Mongos\n  if (url instanceof Server || url instanceof ReplSet || url instanceof Mongos) {\n    return connectWithUrl(mongoClient, url, options, connectCallback);\n  }\n\n  const parseFn = options.useNewUrlParser ? parse : legacyParse;\n  const transform = options.useNewUrlParser ? transformUrlOptions : legacyTransformUrlOptions;\n\n  parseFn(url, options, (err, _object) => {\n    // Do not attempt to connect if parsing error\n    if (err) return callback(err);\n\n    // Flatten\n    const object = transform(_object);\n\n    // Parse the string\n    const _finalOptions = createUnifiedOptions(object, options);\n\n    // Check if we have connection and socket timeout set\n    if (_finalOptions.socketTimeoutMS == null) _finalOptions.socketTimeoutMS = 360000;\n    if (_finalOptions.connectTimeoutMS == null) _finalOptions.connectTimeoutMS = 30000;\n\n    if (_finalOptions.db_options && _finalOptions.db_options.auth) {\n      delete _finalOptions.db_options.auth;\n    }\n\n    // Store the merged options object\n    mongoClient.s.options = _finalOptions;\n\n    // Failure modes\n    if (object.servers.length === 0) {\n      return callback(new Error('connection string must contain at least one seed host'));\n    }\n\n    // Do we have a replicaset then skip discovery and go straight to connectivity\n    if (_finalOptions.replicaSet || _finalOptions.rs_name) {\n      return createTopology(\n        mongoClient,\n        'replicaset',\n        _finalOptions,\n        connectHandler(mongoClient, _finalOptions, connectCallback)\n      );\n    } else if (object.servers.length > 1) {\n      return createTopology(\n        mongoClient,\n        'mongos',\n        _finalOptions,\n        connectHandler(mongoClient, _finalOptions, connectCallback)\n      );\n    } else {\n      return createServer(\n        mongoClient,\n        _finalOptions,\n        connectHandler(mongoClient, _finalOptions, connectCallback)\n      );\n    }\n  });\n  function connectCallback(err, topology) {\n    const warningMessage = `seed list contains no mongos proxies, replicaset connections requires the parameter replicaSet to be supplied in the URI or options object, mongodb://server:port/db?replicaSet=name`;\n    if (err && err.message === 'no mongos proxies found in seed list') {\n      if (logger.isWarn()) {\n        logger.warn(warningMessage);\n      }\n\n      // Return a more specific error message for MongoClient.connect\n      return callback(new MongoError(warningMessage));\n    }\n\n    // Return the error and db instance\n    callback(err, topology);\n  }\n}\n\nfunction connectHandler(client, options, callback) {\n  return (err, topology) => {\n    if (err) {\n      return handleConnectCallback(err, topology, callback);\n    }\n\n    // No authentication just reconnect\n    if (!options.auth) {\n      return handleConnectCallback(err, topology, callback);\n    }\n\n    // Authenticate\n    authenticate(client, options.user, options.password, options, (err, success) => {\n      if (success) {\n        handleConnectCallback(null, topology, callback);\n      } else {\n        if (topology) topology.close();\n        const authError = err ? err : new Error('Could not authenticate user ' + options.auth[0]);\n        handleConnectCallback(authError, topology, callback);\n      }\n    });\n  };\n}\n\n/**\n * Connect to MongoDB using a url as documented at\n *\n *  docs.mongodb.org/manual/reference/connection-string/\n *\n * Note that for replicasets the replicaSet query parameter is required in the 2.0 driver\n *\n * @method\n * @param {MongoClient} mongoClient The MongoClient instance with which to connect.\n * @param {MongoClient~connectCallback} [callback] The command result callback\n */\nfunction connectOp(mongoClient, err, callback) {\n  // Did we have a validation error\n  if (err) return callback(err);\n  // Fallback to callback based connect\n  connect(mongoClient, mongoClient.s.url, mongoClient.s.options, err => {\n    if (err) return callback(err);\n    callback(null, mongoClient);\n  });\n}\n\nfunction connectWithUrl(mongoClient, url, options, connectCallback) {\n  // Set the topology\n  assignTopology(mongoClient, url);\n\n  // Add listeners\n  addListeners(mongoClient, url);\n\n  // Propagate the events to the client\n  relayEvents(mongoClient, url);\n\n  let finalOptions = Object.assign({}, options);\n\n  // If we have a readPreference passed in by the db options, convert it from a string\n  if (typeof options.readPreference === 'string' || typeof options.read_preference === 'string') {\n    finalOptions.readPreference = new ReadPreference(\n      options.readPreference || options.read_preference\n    );\n  }\n\n  // Connect\n  return url.connect(\n    finalOptions,\n    connectHandler(mongoClient, finalOptions, (err, topology) => {\n      if (err) return connectCallback(err, topology);\n      if (finalOptions.user || finalOptions.password || finalOptions.authMechanism) {\n        return authenticate(\n          mongoClient,\n          finalOptions.user,\n          finalOptions.password,\n          finalOptions,\n          err => {\n            if (err) return connectCallback(err, topology);\n            connectCallback(err, topology);\n          }\n        );\n      }\n\n      connectCallback(err, topology);\n    })\n  );\n}\n\nfunction createListener(mongoClient, event) {\n  const eventSet = new Set(['all', 'fullsetup', 'open', 'reconnect']);\n  return (v1, v2) => {\n    if (eventSet.has(event)) {\n      return mongoClient.emit(event, mongoClient);\n    }\n\n    mongoClient.emit(event, v1, v2);\n  };\n}\n\nfunction createServer(mongoClient, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = mongoClient.s.promiseLibrary;\n\n  // Set default options\n  const servers = translateOptions(options);\n\n  const server = servers[0];\n\n  // Propagate the events to the client\n  const collectedEvents = collectEvents(mongoClient, server);\n\n  // Connect to topology\n  server.connect(options, (err, topology) => {\n    if (err) {\n      server.close(true);\n      return callback(err);\n    }\n    // Clear out all the collected event listeners\n    clearAllEvents(server);\n\n    // Relay all the events\n    relayEvents(mongoClient, server);\n    // Add listeners\n    addListeners(mongoClient, server);\n    // Check if we are really speaking to a mongos\n    const ismaster = topology.lastIsMaster();\n\n    // Set the topology\n    assignTopology(mongoClient, topology);\n\n    // Do we actually have a mongos\n    if (ismaster && ismaster.msg === 'isdbgrid') {\n      // Destroy the current connection\n      topology.close();\n      // Create mongos connection instead\n      return createTopology(mongoClient, 'mongos', options, callback);\n    }\n\n    // Fire all the events\n    replayEvents(mongoClient, collectedEvents);\n    // Otherwise callback\n    callback(err, topology);\n  });\n}\n\nfunction createTopology(mongoClient, topologyType, options, callback) {\n  // Pass in the promise library\n  options.promiseLibrary = mongoClient.s.promiseLibrary;\n\n  const translationOptions = {};\n  if (topologyType === 'unified') translationOptions.createServers = false;\n\n  // Set default options\n  const servers = translateOptions(options, translationOptions);\n\n  // Create the topology\n  let topology;\n  if (topologyType === 'mongos') {\n    topology = new Mongos(servers, options);\n  } else if (topologyType === 'replicaset') {\n    topology = new ReplSet(servers, options);\n  }\n\n  // Add listeners\n  addListeners(mongoClient, topology);\n\n  // Propagate the events to the client\n  relayEvents(mongoClient, topology);\n\n  // Open the connection\n  topology.connect(options, (err, newTopology) => {\n    if (err) {\n      topology.close(true);\n      return callback(err);\n    }\n\n    assignTopology(mongoClient, newTopology);\n    callback(null, newTopology);\n  });\n}\n\nfunction createUnifiedOptions(finalOptions, options) {\n  const childOptions = [\n    'mongos',\n    'server',\n    'db',\n    'replset',\n    'db_options',\n    'server_options',\n    'rs_options',\n    'mongos_options'\n  ];\n  const noMerge = ['readconcern', 'compression'];\n\n  for (const name in options) {\n    if (noMerge.indexOf(name.toLowerCase()) !== -1) {\n      finalOptions[name] = options[name];\n    } else if (childOptions.indexOf(name.toLowerCase()) !== -1) {\n      finalOptions = mergeOptions(finalOptions, options[name], false);\n    } else {\n      if (\n        options[name] &&\n        typeof options[name] === 'object' &&\n        !Buffer.isBuffer(options[name]) &&\n        !Array.isArray(options[name])\n      ) {\n        finalOptions = mergeOptions(finalOptions, options[name], true);\n      } else {\n        finalOptions[name] = options[name];\n      }\n    }\n  }\n\n  return finalOptions;\n}\n\nfunction handleConnectCallback(err, topology, callback) {\n  return process.nextTick(() => {\n    try {\n      callback(err, topology);\n    } catch (err) {\n      if (topology) topology.close();\n      throw err;\n    }\n  });\n}\n\nfunction legacyTransformUrlOptions(object) {\n  return mergeOptions(createUnifiedOptions({}, object), object, false);\n}\n\n/**\n * Logout user from server, fire off on all connections and remove all auth info.\n *\n * @method\n * @param {MongoClient} mongoClient The MongoClient instance on which to logout.\n * @param {object} [options] Optional settings. See MongoClient.prototype.logout for a list of options.\n * @param {Db~resultCallback} [callback] The command result callback\n */\nfunction logout(mongoClient, dbName, callback) {\n  mongoClient.topology.logout(dbName, err => {\n    if (err) return callback(err);\n    callback(null, true);\n  });\n}\n\nfunction mergeOptions(target, source, flatten) {\n  for (const name in source) {\n    if (source[name] && typeof source[name] === 'object' && flatten) {\n      target = mergeOptions(target, source[name], flatten);\n    } else {\n      target[name] = source[name];\n    }\n  }\n\n  return target;\n}\n\nfunction relayEvents(mongoClient, topology) {\n  const serverOrCommandEvents = [\n    'serverOpening',\n    'serverDescriptionChanged',\n    'serverHeartbeatStarted',\n    'serverHeartbeatSucceeded',\n    'serverHeartbeatFailed',\n    'serverClosed',\n    'topologyOpening',\n    'topologyClosed',\n    'topologyDescriptionChanged',\n    'commandStarted',\n    'commandSucceeded',\n    'commandFailed',\n    'joined',\n    'left',\n    'ping',\n    'ha'\n  ];\n\n  serverOrCommandEvents.forEach(event => {\n    topology.on(event, (object1, object2) => {\n      mongoClient.emit(event, object1, object2);\n    });\n  });\n}\n\n//\n// Replay any events due to single server connection switching to Mongos\n//\nfunction replayEvents(mongoClient, events) {\n  for (let i = 0; i < events.length; i++) {\n    mongoClient.emit(events[i].event, events[i].object1, events[i].object2);\n  }\n}\n\nconst LEGACY_OPTIONS_MAP = validOptionNames.reduce((obj, name) => {\n  obj[name.toLowerCase()] = name;\n  return obj;\n}, {});\n\nfunction transformUrlOptions(_object) {\n  let object = Object.assign({ servers: _object.hosts }, _object.options);\n  for (let name in object) {\n    const camelCaseName = LEGACY_OPTIONS_MAP[name];\n    if (camelCaseName) {\n      object[camelCaseName] = object[name];\n    }\n  }\n  if (_object.auth) {\n    const auth = _object.auth;\n    for (let i in auth) {\n      if (auth[i]) {\n        object[i] = auth[i];\n      }\n    }\n\n    if (auth.username) {\n      object.auth = auth;\n      object.user = auth.username;\n    }\n\n    if (auth.db) {\n      object.authSource = object.authSource || auth.db;\n    }\n  }\n\n  if (_object.defaultDatabase) {\n    object.dbName = _object.defaultDatabase;\n  }\n\n  if (object.maxpoolsize) {\n    object.poolSize = object.maxpoolsize;\n  }\n\n  if (object.readconcernlevel) {\n    object.readConcern = { level: object.readconcernlevel };\n  }\n\n  if (object.wtimeoutms) {\n    object.wtimeout = object.wtimeoutms;\n  }\n\n  return object;\n}\n\nfunction translateOptions(options, translationOptions) {\n  translationOptions = Object.assign({}, { createServers: true }, translationOptions);\n\n  // If we have a readPreference passed in by the db options\n  if (typeof options.readPreference === 'string' || typeof options.read_preference === 'string') {\n    options.readPreference = new ReadPreference(options.readPreference || options.read_preference);\n  }\n\n  // Do we have readPreference tags, add them\n  if (options.readPreference && (options.readPreferenceTags || options.read_preference_tags)) {\n    options.readPreference.tags = options.readPreferenceTags || options.read_preference_tags;\n  }\n\n  // Do we have maxStalenessSeconds\n  if (options.maxStalenessSeconds) {\n    options.readPreference.maxStalenessSeconds = options.maxStalenessSeconds;\n  }\n\n  // Set the socket and connection timeouts\n  if (options.socketTimeoutMS == null) options.socketTimeoutMS = 360000;\n  if (options.connectTimeoutMS == null) options.connectTimeoutMS = 30000;\n\n  if (!translationOptions.createServers) {\n    return;\n  }\n\n  // Create server instances\n  return options.servers.map(serverObj => {\n    return serverObj.domain_socket\n      ? new Server(serverObj.domain_socket, 27017, options)\n      : new Server(serverObj.host, serverObj.port, options);\n  });\n}\n\n// Validate options object\nfunction validOptions(options) {\n  const _validOptions = validOptionNames.concat(legacyOptionNames);\n\n  for (const name in options) {\n    if (ignoreOptionNames.indexOf(name) !== -1) {\n      continue;\n    }\n\n    if (_validOptions.indexOf(name) === -1 && options.validateOptions) {\n      return new MongoError(`option ${name} is not supported`);\n    } else if (_validOptions.indexOf(name) === -1) {\n      console.warn(`the options [${name}] is not supported`);\n    }\n\n    if (legacyOptionNames.indexOf(name) !== -1) {\n      console.warn(\n        `the server/replset/mongos/db options are deprecated, ` +\n          `all their options are supported at the top level of the options object [${validOptionNames}]`\n      );\n    }\n  }\n}\n\nmodule.exports = { connectOp, logout, validOptions };\n","var BSON = require('./lib/bson/bson'),\n  Binary = require('./lib/bson/binary'),\n  Code = require('./lib/bson/code'),\n  DBRef = require('./lib/bson/db_ref'),\n  Decimal128 = require('./lib/bson/decimal128'),\n  Double = require('./lib/bson/double'),\n  Int32 = require('./lib/bson/int_32'),\n  Long = require('./lib/bson/long'),\n  Map = require('./lib/bson/map'),\n  MaxKey = require('./lib/bson/max_key'),\n  MinKey = require('./lib/bson/min_key'),\n  ObjectId = require('./lib/bson/objectid'),\n  BSONRegExp = require('./lib/bson/regexp'),\n  Symbol = require('./lib/bson/symbol'),\n  Timestamp = require('./lib/bson/timestamp');\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Add BSON types to function creation\nBSON.Binary = Binary;\nBSON.Code = Code;\nBSON.DBRef = DBRef;\nBSON.Decimal128 = Decimal128;\nBSON.Double = Double;\nBSON.Int32 = Int32;\nBSON.Long = Long;\nBSON.Map = Map;\nBSON.MaxKey = MaxKey;\nBSON.MinKey = MinKey;\nBSON.ObjectId = ObjectId;\nBSON.ObjectID = ObjectId;\nBSON.BSONRegExp = BSONRegExp;\nBSON.Symbol = Symbol;\nBSON.Timestamp = Timestamp;\n\n// Return the BSON\nmodule.exports = BSON;\n","'use strict';\n\n/**\n * Normalizes our expected stringified form of a function across versions of node\n * @param {Function} fn The function to stringify\n */\nfunction normalizedFunctionString(fn) {\n  return fn.toString().replace(/function *\\(/, 'function (');\n}\n\nmodule.exports = {\n  normalizedFunctionString: normalizedFunctionString\n};\n\n","'use strict';\n\nvar inherits = require('util').inherits,\n  EventEmitter = require('events').EventEmitter,\n  net = require('net'),\n  tls = require('tls'),\n  crypto = require('crypto'),\n  f = require('util').format,\n  debugOptions = require('./utils').debugOptions,\n  parseHeader = require('../wireprotocol/shared').parseHeader,\n  decompress = require('../wireprotocol/compression').decompress,\n  Response = require('./commands').Response,\n  MongoNetworkError = require('../error').MongoNetworkError,\n  Logger = require('./logger'),\n  OP_COMPRESSED = require('../wireprotocol/shared').opcodes.OP_COMPRESSED,\n  MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE,\n  Buffer = require('safe-buffer').Buffer;\n\nvar _id = 0;\nvar debugFields = [\n  'host',\n  'port',\n  'size',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectionTimeout',\n  'socketTimeout',\n  'singleBufferSerializtion',\n  'ssl',\n  'ca',\n  'crl',\n  'cert',\n  'rejectUnauthorized',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'checkServerIdentity'\n];\n\nvar connectionAccountingSpy = undefined;\nvar connectionAccounting = false;\nvar connections = {};\n\n/**\n * Creates a new Connection instance\n * @class\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.family=null] IP version for DNS lookup, passed down to Node's [`dns.lookup()` function](https://nodejs.org/api/dns.html#dns_dns_lookup_hostname_options_callback). If set to `6`, will only look for ipv6 addresses.\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @fires Connection#connect\n * @fires Connection#close\n * @fires Connection#error\n * @fires Connection#timeout\n * @fires Connection#parseError\n * @return {Connection} A cursor instance\n */\nvar Connection = function(messageHandler, options) {\n  // Add event listener\n  EventEmitter.call(this);\n  // Set empty if no options passed\n  this.options = options || {};\n  // Identification information\n  this.id = _id++;\n  // Logger instance\n  this.logger = Logger('Connection', options);\n  // No bson parser passed in\n  if (!options.bson) throw new Error('must pass in valid bson parser');\n  // Get bson parser\n  this.bson = options.bson;\n  // Grouping tag used for debugging purposes\n  this.tag = options.tag;\n  // Message handler\n  this.messageHandler = messageHandler;\n\n  // Max BSON message size\n  this.maxBsonMessageSize = options.maxBsonMessageSize || 1024 * 1024 * 16 * 4;\n  // Debug information\n  if (this.logger.isDebug())\n    this.logger.debug(\n      f(\n        'creating connection %s with options [%s]',\n        this.id,\n        JSON.stringify(debugOptions(debugFields, options))\n      )\n    );\n\n  // Default options\n  this.port = options.port || 27017;\n  this.host = options.host || 'localhost';\n  this.family = typeof options.family === 'number' ? options.family : void 0;\n  this.keepAlive = typeof options.keepAlive === 'boolean' ? options.keepAlive : true;\n  this.keepAliveInitialDelay =\n    typeof options.keepAliveInitialDelay === 'number' ? options.keepAliveInitialDelay : 300000;\n  this.noDelay = typeof options.noDelay === 'boolean' ? options.noDelay : true;\n  this.connectionTimeout =\n    typeof options.connectionTimeout === 'number' ? options.connectionTimeout : 30000;\n  this.socketTimeout = typeof options.socketTimeout === 'number' ? options.socketTimeout : 360000;\n\n  // Is the keepAliveInitialDelay > socketTimeout set it to half of socketTimeout\n  if (this.keepAliveInitialDelay > this.socketTimeout) {\n    this.keepAliveInitialDelay = Math.round(this.socketTimeout / 2);\n  }\n\n  // If connection was destroyed\n  this.destroyed = false;\n\n  // Check if we have a domain socket\n  this.domainSocket = this.host.indexOf('/') !== -1;\n\n  // Serialize commands using function\n  this.singleBufferSerializtion =\n    typeof options.singleBufferSerializtion === 'boolean' ? options.singleBufferSerializtion : true;\n  this.serializationFunction = this.singleBufferSerializtion ? 'toBinUnified' : 'toBin';\n\n  // SSL options\n  this.ca = options.ca || null;\n  this.crl = options.crl || null;\n  this.cert = options.cert || null;\n  this.key = options.key || null;\n  this.passphrase = options.passphrase || null;\n  this.ciphers = options.ciphers || null;\n  this.ecdhCurve = options.ecdhCurve || null;\n  this.ssl = typeof options.ssl === 'boolean' ? options.ssl : false;\n  this.rejectUnauthorized =\n    typeof options.rejectUnauthorized === 'boolean' ? options.rejectUnauthorized : true;\n  this.checkServerIdentity =\n    typeof options.checkServerIdentity === 'boolean' ||\n    typeof options.checkServerIdentity === 'function'\n      ? options.checkServerIdentity\n      : true;\n\n  // If ssl not enabled\n  if (!this.ssl) this.rejectUnauthorized = false;\n\n  // Response options\n  this.responseOptions = {\n    promoteLongs: typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true,\n    promoteValues: typeof options.promoteValues === 'boolean' ? options.promoteValues : true,\n    promoteBuffers: typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false\n  };\n\n  // Flushing\n  this.flushing = false;\n  this.queue = [];\n\n  // Internal state\n  this.connection = null;\n  this.writeStream = null;\n\n  // Create hash method\n  var hash = crypto.createHash('sha1');\n  hash.update(f('%s:%s', this.host, this.port));\n\n  // Create a hash name\n  this.hashedName = hash.digest('hex');\n\n  // All operations in flight on the connection\n  this.workItems = [];\n};\n\ninherits(Connection, EventEmitter);\n\nConnection.prototype.setSocketTimeout = function(value) {\n  if (this.connection) {\n    this.connection.setTimeout(value);\n  }\n};\n\nConnection.prototype.resetSocketTimeout = function() {\n  if (this.connection) {\n    this.connection.setTimeout(this.socketTimeout);\n  }\n};\n\nConnection.enableConnectionAccounting = function(spy) {\n  if (spy) {\n    connectionAccountingSpy = spy;\n  }\n\n  connectionAccounting = true;\n  connections = {};\n};\n\nConnection.disableConnectionAccounting = function() {\n  connectionAccounting = false;\n  connectionAccountingSpy = undefined;\n};\n\nConnection.connections = function() {\n  return connections;\n};\n\nfunction deleteConnection(id) {\n  // console.log(\"=== deleted connection \" + id + \" :: \" + (connections[id] ? connections[id].port : ''))\n  delete connections[id];\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.deleteConnection(id);\n  }\n}\n\nfunction addConnection(id, connection) {\n  // console.log(\"=== added connection \" + id + \" :: \" + connection.port)\n  connections[id] = connection;\n\n  if (connectionAccountingSpy) {\n    connectionAccountingSpy.addConnection(id, connection);\n  }\n}\n\n//\n// Connection handlers\nvar errorHandler = function(self) {\n  return function(err) {\n    if (connectionAccounting) deleteConnection(self.id);\n    // Debug information\n    if (self.logger.isDebug())\n      self.logger.debug(\n        f(\n          'connection %s for [%s:%s] errored out with [%s]',\n          self.id,\n          self.host,\n          self.port,\n          JSON.stringify(err)\n        )\n      );\n    // Emit the error\n    if (self.listeners('error').length > 0) self.emit('error', new MongoNetworkError(err), self);\n  };\n};\n\nvar timeoutHandler = function(self) {\n  return function() {\n    if (connectionAccounting) deleteConnection(self.id);\n    // Debug information\n    if (self.logger.isDebug())\n      self.logger.debug(f('connection %s for [%s:%s] timed out', self.id, self.host, self.port));\n    // Emit timeout error\n    self.emit(\n      'timeout',\n      new MongoNetworkError(f('connection %s to %s:%s timed out', self.id, self.host, self.port)),\n      self\n    );\n  };\n};\n\nvar closeHandler = function(self) {\n  return function(hadError) {\n    if (connectionAccounting) deleteConnection(self.id);\n    // Debug information\n    if (self.logger.isDebug())\n      self.logger.debug(f('connection %s with for [%s:%s] closed', self.id, self.host, self.port));\n\n    // Emit close event\n    if (!hadError) {\n      self.emit(\n        'close',\n        new MongoNetworkError(f('connection %s to %s:%s closed', self.id, self.host, self.port)),\n        self\n      );\n    }\n  };\n};\n\n// Handle a message once it is received\nvar emitMessageHandler = function(self, message) {\n  var msgHeader = parseHeader(message);\n  if (msgHeader.opCode === OP_COMPRESSED) {\n    msgHeader.fromCompressed = true;\n    var index = MESSAGE_HEADER_SIZE;\n    msgHeader.opCode = message.readInt32LE(index);\n    index += 4;\n    msgHeader.length = message.readInt32LE(index);\n    index += 4;\n    var compressorID = message[index];\n    index++;\n    decompress(compressorID, message.slice(index), function(err, decompressedMsgBody) {\n      if (err) {\n        throw err;\n      }\n      if (decompressedMsgBody.length !== msgHeader.length) {\n        throw new Error(\n          'Decompressing a compressed message from the server failed. The message is corrupt.'\n        );\n      }\n      self.messageHandler(\n        new Response(self.bson, message, msgHeader, decompressedMsgBody, self.responseOptions),\n        self\n      );\n    });\n  } else {\n    self.messageHandler(\n      new Response(\n        self.bson,\n        message,\n        msgHeader,\n        message.slice(MESSAGE_HEADER_SIZE),\n        self.responseOptions\n      ),\n      self\n    );\n  }\n};\n\nvar dataHandler = function(self) {\n  return function(data) {\n    // Parse until we are done with the data\n    while (data.length > 0) {\n      // If we still have bytes to read on the current message\n      if (self.bytesRead > 0 && self.sizeOfMessage > 0) {\n        // Calculate the amount of remaining bytes\n        var remainingBytesToRead = self.sizeOfMessage - self.bytesRead;\n        // Check if the current chunk contains the rest of the message\n        if (remainingBytesToRead > data.length) {\n          // Copy the new data into the exiting buffer (should have been allocated when we know the message size)\n          data.copy(self.buffer, self.bytesRead);\n          // Adjust the number of bytes read so it point to the correct index in the buffer\n          self.bytesRead = self.bytesRead + data.length;\n\n          // Reset state of buffer\n          data = Buffer.alloc(0);\n        } else {\n          // Copy the missing part of the data into our current buffer\n          data.copy(self.buffer, self.bytesRead, 0, remainingBytesToRead);\n          // Slice the overflow into a new buffer that we will then re-parse\n          data = data.slice(remainingBytesToRead);\n\n          // Emit current complete message\n          try {\n            var emitBuffer = self.buffer;\n            // Reset state of buffer\n            self.buffer = null;\n            self.sizeOfMessage = 0;\n            self.bytesRead = 0;\n            self.stubBuffer = null;\n\n            emitMessageHandler(self, emitBuffer);\n          } catch (err) {\n            var errorObject = {\n              err: 'socketHandler',\n              trace: err,\n              bin: self.buffer,\n              parseState: {\n                sizeOfMessage: self.sizeOfMessage,\n                bytesRead: self.bytesRead,\n                stubBuffer: self.stubBuffer\n              }\n            };\n            // We got a parse Error fire it off then keep going\n            self.emit('parseError', errorObject, self);\n          }\n        }\n      } else {\n        // Stub buffer is kept in case we don't get enough bytes to determine the\n        // size of the message (< 4 bytes)\n        if (self.stubBuffer != null && self.stubBuffer.length > 0) {\n          // If we have enough bytes to determine the message size let's do it\n          if (self.stubBuffer.length + data.length > 4) {\n            // Prepad the data\n            var newData = Buffer.alloc(self.stubBuffer.length + data.length);\n            self.stubBuffer.copy(newData, 0);\n            data.copy(newData, self.stubBuffer.length);\n            // Reassign for parsing\n            data = newData;\n\n            // Reset state of buffer\n            self.buffer = null;\n            self.sizeOfMessage = 0;\n            self.bytesRead = 0;\n            self.stubBuffer = null;\n          } else {\n            // Add the the bytes to the stub buffer\n            var newStubBuffer = Buffer.alloc(self.stubBuffer.length + data.length);\n            // Copy existing stub buffer\n            self.stubBuffer.copy(newStubBuffer, 0);\n            // Copy missing part of the data\n            data.copy(newStubBuffer, self.stubBuffer.length);\n            // Exit parsing loop\n            data = Buffer.alloc(0);\n          }\n        } else {\n          if (data.length > 4) {\n            // Retrieve the message size\n            // var sizeOfMessage = data.readUInt32LE(0);\n            var sizeOfMessage = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\n            // If we have a negative sizeOfMessage emit error and return\n            if (sizeOfMessage < 0 || sizeOfMessage > self.maxBsonMessageSize) {\n              errorObject = {\n                err: 'socketHandler',\n                trace: '',\n                bin: self.buffer,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: self.bytesRead,\n                  stubBuffer: self.stubBuffer\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              self.emit('parseError', errorObject, self);\n              return;\n            }\n\n            // Ensure that the size of message is larger than 0 and less than the max allowed\n            if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < self.maxBsonMessageSize &&\n              sizeOfMessage > data.length\n            ) {\n              self.buffer = Buffer.alloc(sizeOfMessage);\n              // Copy all the data into the buffer\n              data.copy(self.buffer, 0);\n              // Update bytes read\n              self.bytesRead = data.length;\n              // Update sizeOfMessage\n              self.sizeOfMessage = sizeOfMessage;\n              // Ensure stub buffer is null\n              self.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n            } else if (\n              sizeOfMessage > 4 &&\n              sizeOfMessage < self.maxBsonMessageSize &&\n              sizeOfMessage === data.length\n            ) {\n              try {\n                emitBuffer = data;\n                // Reset state of buffer\n                self.buffer = null;\n                self.sizeOfMessage = 0;\n                self.bytesRead = 0;\n                self.stubBuffer = null;\n                // Exit parsing loop\n                data = Buffer.alloc(0);\n                // Emit the message\n                emitMessageHandler(self, emitBuffer);\n              } catch (err) {\n                self.emit('parseError', err, self);\n              }\n            } else if (sizeOfMessage <= 4 || sizeOfMessage > self.maxBsonMessageSize) {\n              errorObject = {\n                err: 'socketHandler',\n                trace: null,\n                bin: data,\n                parseState: {\n                  sizeOfMessage: sizeOfMessage,\n                  bytesRead: 0,\n                  buffer: null,\n                  stubBuffer: null\n                }\n              };\n              // We got a parse Error fire it off then keep going\n              self.emit('parseError', errorObject, self);\n\n              // Clear out the state of the parser\n              self.buffer = null;\n              self.sizeOfMessage = 0;\n              self.bytesRead = 0;\n              self.stubBuffer = null;\n              // Exit parsing loop\n              data = Buffer.alloc(0);\n            } else {\n              emitBuffer = data.slice(0, sizeOfMessage);\n              // Reset state of buffer\n              self.buffer = null;\n              self.sizeOfMessage = 0;\n              self.bytesRead = 0;\n              self.stubBuffer = null;\n              // Copy rest of message\n              data = data.slice(sizeOfMessage);\n              // Emit the message\n              emitMessageHandler(self, emitBuffer);\n            }\n          } else {\n            // Create a buffer that contains the space for the non-complete message\n            self.stubBuffer = Buffer.alloc(data.length);\n            // Copy the data to the stub buffer\n            data.copy(self.stubBuffer, 0);\n            // Exit parsing loop\n            data = Buffer.alloc(0);\n          }\n        }\n      }\n    }\n  };\n};\n\n// List of socket level valid ssl options\nvar legalSslSocketOptions = [\n  'pfx',\n  'key',\n  'passphrase',\n  'cert',\n  'ca',\n  'ciphers',\n  'NPNProtocols',\n  'ALPNProtocols',\n  'servername',\n  'ecdhCurve',\n  'secureProtocol',\n  'secureContext',\n  'session',\n  'minDHSize'\n];\n\nfunction merge(options1, options2) {\n  // Merge in any allowed ssl options\n  for (var name in options2) {\n    if (options2[name] != null && legalSslSocketOptions.indexOf(name) !== -1) {\n      options1[name] = options2[name];\n    }\n  }\n}\n\nfunction makeSSLConnection(self, _options) {\n  let sslOptions = {\n    socket: self.connection,\n    rejectUnauthorized: self.rejectUnauthorized\n  };\n\n  // Merge in options\n  merge(sslOptions, self.options);\n  merge(sslOptions, _options);\n\n  // Set options for ssl\n  if (self.ca) sslOptions.ca = self.ca;\n  if (self.crl) sslOptions.crl = self.crl;\n  if (self.cert) sslOptions.cert = self.cert;\n  if (self.key) sslOptions.key = self.key;\n  if (self.passphrase) sslOptions.passphrase = self.passphrase;\n\n  // Override checkServerIdentity behavior\n  if (self.checkServerIdentity === false) {\n    // Skip the identiy check by retuning undefined as per node documents\n    // https://nodejs.org/api/tls.html#tls_tls_connect_options_callback\n    sslOptions.checkServerIdentity = function() {\n      return undefined;\n    };\n  } else if (typeof self.checkServerIdentity === 'function') {\n    sslOptions.checkServerIdentity = self.checkServerIdentity;\n  }\n\n  // Set default sni servername to be the same as host\n  if (sslOptions.servername == null) {\n    sslOptions.servername = self.host;\n  }\n\n  // Attempt SSL connection\n  const connection = tls.connect(self.port, self.host, sslOptions, function() {\n    // Error on auth or skip\n    if (connection.authorizationError && self.rejectUnauthorized) {\n      return self.emit('error', connection.authorizationError, self, { ssl: true });\n    }\n\n    // Set socket timeout instead of connection timeout\n    connection.setTimeout(self.socketTimeout);\n    // We are done emit connect\n    self.emit('connect', self);\n  });\n\n  // Set the options for the connection\n  connection.setKeepAlive(self.keepAlive, self.keepAliveInitialDelay);\n  connection.setTimeout(self.connectionTimeout);\n  connection.setNoDelay(self.noDelay);\n\n  return connection;\n}\n\nfunction makeUnsecureConnection(self, family) {\n  // Create new connection instance\n  let connection_options;\n  if (self.domainSocket) {\n    connection_options = { path: self.host };\n  } else {\n    connection_options = { port: self.port, host: self.host };\n    connection_options.family = family;\n  }\n\n  const connection = net.createConnection(connection_options);\n\n  // Set the options for the connection\n  connection.setKeepAlive(self.keepAlive, self.keepAliveInitialDelay);\n  connection.setTimeout(self.connectionTimeout);\n  connection.setNoDelay(self.noDelay);\n\n  connection.once('connect', function() {\n    // Set socket timeout instead of connection timeout\n    connection.setTimeout(self.socketTimeout);\n    // Emit connect event\n    self.emit('connect', self);\n  });\n\n  return connection;\n}\n\nfunction doConnect(self, family, _options, _errorHandler) {\n  self.connection = self.ssl\n    ? makeSSLConnection(self, _options)\n    : makeUnsecureConnection(self, family);\n\n  // Add handlers for events\n  self.connection.once('error', _errorHandler);\n  self.connection.once('timeout', timeoutHandler(self));\n  self.connection.once('close', closeHandler(self));\n  self.connection.on('data', dataHandler(self));\n}\n\n/**\n * Connect\n * @method\n */\nConnection.prototype.connect = function(_options) {\n  _options = _options || {};\n  // Set the connections\n  if (connectionAccounting) addConnection(this.id, this);\n  // Check if we are overriding the promoteLongs\n  if (typeof _options.promoteLongs === 'boolean') {\n    this.responseOptions.promoteLongs = _options.promoteLongs;\n    this.responseOptions.promoteValues = _options.promoteValues;\n    this.responseOptions.promoteBuffers = _options.promoteBuffers;\n  }\n\n  const _errorHandler = errorHandler(this);\n\n  if (this.family !== void 0) {\n    return doConnect(this, this.family, _options, _errorHandler);\n  }\n\n  return doConnect(this, 6, _options, err => {\n    if (this.logger.isDebug()) {\n      this.logger.debug(\n        f(\n          'connection %s for [%s:%s] errored out with [%s]',\n          this.id,\n          this.host,\n          this.port,\n          JSON.stringify(err)\n        )\n      );\n    }\n\n    // clean up existing event handlers\n    this.connection.removeAllListeners('error');\n    this.connection.removeAllListeners('timeout');\n    this.connection.removeAllListeners('close');\n    this.connection.removeAllListeners('data');\n    this.connection = undefined;\n\n    return doConnect(this, 4, _options, _errorHandler);\n  });\n};\n\n/**\n * Unref this connection\n * @method\n * @return {boolean}\n */\nConnection.prototype.unref = function() {\n  if (this.connection) this.connection.unref();\n  else {\n    var self = this;\n    this.once('connect', function() {\n      self.connection.unref();\n    });\n  }\n};\n\n/**\n * Destroy connection\n * @method\n */\nConnection.prototype.destroy = function() {\n  // Set the connections\n  if (connectionAccounting) deleteConnection(this.id);\n  if (this.connection) {\n    // Catch posssible exception thrown by node 0.10.x\n    try {\n      this.connection.end();\n    } catch (err) {} // eslint-disable-line\n    // Destroy connection\n    this.connection.destroy();\n  }\n\n  this.destroyed = true;\n};\n\n/**\n * Write to connection\n * @method\n * @param {Command} command Command to write out need to implement toBin and toBinUnified\n */\nConnection.prototype.write = function(buffer) {\n  var i;\n  // Debug Log\n  if (this.logger.isDebug()) {\n    if (!Array.isArray(buffer)) {\n      this.logger.debug(\n        f('writing buffer [%s] to %s:%s', buffer.toString('hex'), this.host, this.port)\n      );\n    } else {\n      for (i = 0; i < buffer.length; i++)\n        this.logger.debug(\n          f('writing buffer [%s] to %s:%s', buffer[i].toString('hex'), this.host, this.port)\n        );\n    }\n  }\n\n  // Double check that the connection is not destroyed\n  if (this.connection.destroyed === false) {\n    // Write out the command\n    if (!Array.isArray(buffer)) {\n      this.connection.write(buffer, 'binary');\n      return true;\n    }\n\n    // Iterate over all buffers and write them in order to the socket\n    for (i = 0; i < buffer.length; i++) this.connection.write(buffer[i], 'binary');\n    return true;\n  }\n\n  // Connection is destroyed return write failed\n  return false;\n};\n\n/**\n * Return id of connection as a string\n * @method\n * @return {string}\n */\nConnection.prototype.toString = function() {\n  return '' + this.id;\n};\n\n/**\n * Return json object of connection\n * @method\n * @return {object}\n */\nConnection.prototype.toJSON = function() {\n  return { id: this.id, host: this.host, port: this.port };\n};\n\n/**\n * Is the connection connected\n * @method\n * @return {boolean}\n */\nConnection.prototype.isConnected = function() {\n  if (this.destroyed) return false;\n  return !this.connection.destroyed && this.connection.writable;\n};\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Connection#connect\n * @type {Connection}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Connection#close\n * @type {Connection}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Connection#error\n * @type {Connection}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Connection#timeout\n * @type {Connection}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Connection#parseError\n * @type {Connection}\n */\n\nmodule.exports = Connection;\n","'use strict';\n\nvar f = require('util').format,\n  crypto = require('crypto'),\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n/**\n * Creates a new MongoCR authentication mechanism\n * @class\n * @return {MongoCR} A cursor instance\n */\nvar MongoCR = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nMongoCR.prototype.auth = function(server, connections, db, username, password, callback) {\n  var self = this;\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var executeMongoCR = function(connection) {\n      // Write the commmand on the connection\n      server(\n        connection,\n        new Query(\n          self.bson,\n          f('%s.$cmd', db),\n          {\n            getnonce: 1\n          },\n          {\n            numberToSkip: 0,\n            numberToReturn: 1\n          }\n        ),\n        function(err, r) {\n          var nonce = null;\n          var key = null;\n\n          // Adjust the number of connections left\n          // Get nonce\n          if (err == null) {\n            nonce = r.result.nonce;\n            // Use node md5 generator\n            var md5 = crypto.createHash('md5');\n            // Generate keys used for authentication\n            md5.update(username + ':mongo:' + password, 'utf8');\n            var hash_password = md5.digest('hex');\n            // Final key\n            md5 = crypto.createHash('md5');\n            md5.update(nonce + username + hash_password, 'utf8');\n            key = md5.digest('hex');\n          }\n\n          // Execute command\n          // Write the commmand on the connection\n          server(\n            connection,\n            new Query(\n              self.bson,\n              f('%s.$cmd', db),\n              {\n                authenticate: 1,\n                user: username,\n                nonce: nonce,\n                key: key\n              },\n              {\n                numberToSkip: 0,\n                numberToReturn: 1\n              }\n            ),\n            function(err, r) {\n              count = count - 1;\n\n              // If we have an error\n              if (err) {\n                errorObject = err;\n              } else if (r.result['$err']) {\n                errorObject = r.result;\n              } else if (r.result['errmsg']) {\n                errorObject = r.result;\n              } else {\n                numberOfValidConnections = numberOfValidConnections + 1;\n              }\n\n              // We have authenticated all connections\n              if (count === 0 && numberOfValidConnections > 0) {\n                // Store the auth details\n                addAuthSession(self.authStore, new AuthSession(db, username, password));\n                // Return correct authentication\n                callback(null, true);\n              } else if (count === 0) {\n                if (errorObject == null)\n                  errorObject = new MongoError(f('failed to authenticate using mongocr'));\n                callback(errorObject, false);\n              }\n            }\n          );\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        executeMongoCR(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nMongoCR.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nMongoCR.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = MongoCR;\n","'use strict';\n\nvar f = require('util').format,\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n/**\n * Creates a new X509 authentication mechanism\n * @class\n * @return {X509} A cursor instance\n */\nvar X509 = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nX509.prototype.auth = function(server, connections, db, username, password, callback) {\n  var self = this;\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var execute = function(connection) {\n      // Let's start the sasl process\n      var command = {\n        authenticate: 1,\n        mechanism: 'MONGODB-X509'\n      };\n\n      // Add username if specified\n      if (username) {\n        command.user = username;\n      }\n\n      // Let's start the process\n      server(\n        connection,\n        new Query(self.bson, '$external.$cmd', command, {\n          numberToSkip: 0,\n          numberToReturn: 1\n        }),\n        function(err, r) {\n          // Adjust count\n          count = count - 1;\n\n          // If we have an error\n          if (err) {\n            errorObject = err;\n          } else if (r.result['$err']) {\n            errorObject = r.result;\n          } else if (r.result['errmsg']) {\n            errorObject = r.result;\n          } else {\n            numberOfValidConnections = numberOfValidConnections + 1;\n          }\n\n          // We have authenticated all connections\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password));\n            // Return correct authentication\n            callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using mongocr'));\n            callback(errorObject, false);\n          }\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        execute(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nX509.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nX509.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = X509;\n","'use strict';\n\nvar f = require('util').format,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  Query = require('../connection/commands').Query,\n  MongoError = require('../error').MongoError;\n\nvar BSON = retrieveBSON(),\n  Binary = BSON.Binary;\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n/**\n * Creates a new Plain authentication mechanism\n * @class\n * @return {Plain} A cursor instance\n */\nvar Plain = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nPlain.prototype.auth = function(server, connections, db, username, password, callback) {\n  var self = this;\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var execute = function(connection) {\n      // Create payload\n      var payload = new Binary(f('\\x00%s\\x00%s', username, password));\n\n      // Let's start the sasl process\n      var command = {\n        saslStart: 1,\n        mechanism: 'PLAIN',\n        payload: payload,\n        autoAuthorize: 1\n      };\n\n      // Let's start the process\n      server(\n        connection,\n        new Query(self.bson, '$external.$cmd', command, {\n          numberToSkip: 0,\n          numberToReturn: 1\n        }),\n        function(err, r) {\n          // Adjust count\n          count = count - 1;\n\n          // If we have an error\n          if (err) {\n            errorObject = err;\n          } else if (r.result['$err']) {\n            errorObject = r.result;\n          } else if (r.result['errmsg']) {\n            errorObject = r.result;\n          } else {\n            numberOfValidConnections = numberOfValidConnections + 1;\n          }\n\n          // We have authenticated all connections\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password));\n            // Return correct authentication\n            callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using mongocr'));\n            callback(errorObject, false);\n          }\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        execute(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nPlain.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nPlain.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = Plain;\n","'use strict';\n\nconst f = require('util').format;\nconst Query = require('../connection/commands').Query;\nconst MongoError = require('../error').MongoError;\nconst retrieveKerberos = require('../utils').retrieveKerberos;\n\nvar AuthSession = function(db, username, password, options) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n  this.options = options;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n/**\n * Creates a new GSSAPI authentication mechanism\n * @class\n * @return {GSSAPI} A cursor instance\n */\nvar GSSAPI = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nGSSAPI.prototype.auth = function(server, connections, db, username, password, options, callback) {\n  var self = this;\n  let kerberos;\n  try {\n    kerberos = retrieveKerberos();\n  } catch (e) {\n    return callback(e, null);\n  }\n\n  // TODO: remove this once we fix URI parsing\n  var gssapiServiceName = options['gssapiservicename'] || options['gssapiServiceName'] || 'mongodb';\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var execute = function(connection) {\n      // Start Auth process for a connection\n      GSSAPIInitialize(\n        self,\n        kerberos.processes.MongoAuthProcess,\n        db,\n        username,\n        password,\n        db,\n        gssapiServiceName,\n        server,\n        connection,\n        options,\n        function(err, r) {\n          // Adjust count\n          count = count - 1;\n\n          // If we have an error\n          if (err) {\n            errorObject = err;\n          } else if (r.result['$err']) {\n            errorObject = r.result;\n          } else if (r.result['errmsg']) {\n            errorObject = r.result;\n          } else {\n            numberOfValidConnections = numberOfValidConnections + 1;\n          }\n\n          // We have authenticated all connections\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password, options));\n            // Return correct authentication\n            callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using mongocr'));\n            callback(errorObject, false);\n          }\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        execute(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\n//\n// Initialize step\nvar GSSAPIInitialize = function(\n  self,\n  MongoAuthProcess,\n  db,\n  username,\n  password,\n  authdb,\n  gssapiServiceName,\n  server,\n  connection,\n  options,\n  callback\n) {\n  // Create authenticator\n  var mongo_auth_process = new MongoAuthProcess(\n    connection.host,\n    connection.port,\n    gssapiServiceName,\n    options\n  );\n\n  // Perform initialization\n  mongo_auth_process.init(username, password, function(err) {\n    if (err) return callback(err, false);\n\n    // Perform the first step\n    mongo_auth_process.transition('', function(err, payload) {\n      if (err) return callback(err, false);\n\n      // Call the next db step\n      MongoDBGSSAPIFirstStep(\n        self,\n        mongo_auth_process,\n        payload,\n        db,\n        username,\n        password,\n        authdb,\n        server,\n        connection,\n        callback\n      );\n    });\n  });\n};\n\n//\n// Perform first step against mongodb\nvar MongoDBGSSAPIFirstStep = function(\n  self,\n  mongo_auth_process,\n  payload,\n  db,\n  username,\n  password,\n  authdb,\n  server,\n  connection,\n  callback\n) {\n  // Build the sasl start command\n  var command = {\n    saslStart: 1,\n    mechanism: 'GSSAPI',\n    payload: payload,\n    autoAuthorize: 1\n  };\n\n  // Write the commmand on the connection\n  server(\n    connection,\n    new Query(self.bson, '$external.$cmd', command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    }),\n    function(err, r) {\n      if (err) return callback(err, false);\n      var doc = r.result;\n      // Execute mongodb transition\n      mongo_auth_process.transition(r.result.payload, function(err, payload) {\n        if (err) return callback(err, false);\n\n        // MongoDB API Second Step\n        MongoDBGSSAPISecondStep(\n          self,\n          mongo_auth_process,\n          payload,\n          doc,\n          db,\n          username,\n          password,\n          authdb,\n          server,\n          connection,\n          callback\n        );\n      });\n    }\n  );\n};\n\n//\n// Perform first step against mongodb\nvar MongoDBGSSAPISecondStep = function(\n  self,\n  mongo_auth_process,\n  payload,\n  doc,\n  db,\n  username,\n  password,\n  authdb,\n  server,\n  connection,\n  callback\n) {\n  // Build Authentication command to send to MongoDB\n  var command = {\n    saslContinue: 1,\n    conversationId: doc.conversationId,\n    payload: payload\n  };\n\n  // Execute the command\n  // Write the commmand on the connection\n  server(\n    connection,\n    new Query(self.bson, '$external.$cmd', command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    }),\n    function(err, r) {\n      if (err) return callback(err, false);\n      var doc = r.result;\n      // Call next transition for kerberos\n      mongo_auth_process.transition(doc.payload, function(err, payload) {\n        if (err) return callback(err, false);\n\n        // Call the last and third step\n        MongoDBGSSAPIThirdStep(\n          self,\n          mongo_auth_process,\n          payload,\n          doc,\n          db,\n          username,\n          password,\n          authdb,\n          server,\n          connection,\n          callback\n        );\n      });\n    }\n  );\n};\n\nvar MongoDBGSSAPIThirdStep = function(\n  self,\n  mongo_auth_process,\n  payload,\n  doc,\n  db,\n  username,\n  password,\n  authdb,\n  server,\n  connection,\n  callback\n) {\n  // Build final command\n  var command = {\n    saslContinue: 1,\n    conversationId: doc.conversationId,\n    payload: payload\n  };\n\n  // Execute the command\n  server(\n    connection,\n    new Query(self.bson, '$external.$cmd', command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    }),\n    function(err, r) {\n      if (err) return callback(err, false);\n      mongo_auth_process.transition(null, function(err) {\n        if (err) return callback(err, null);\n        callback(null, r);\n      });\n    }\n  );\n};\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nGSSAPI.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nGSSAPI.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      authStore[i].options,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = GSSAPI;\n","module.exports = require(\"dns\");","'use strict';\n\nconst inherits = require('util').inherits;\nconst MongoError = require('mongodb-core').MongoError;\nconst Readable = require('stream').Readable;\nconst CoreCursor = require('./cursor');\n\n/**\n * @fileOverview The **AggregationCursor** class is an internal class that embodies an aggregation cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 4.X\n * or higher stream\n *\n * **AGGREGATIONCURSOR Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Create a collection we want to drop later\n *   const col = client.db(dbName).collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *     // Show that duplicate records got dropped\n *     col.aggregation({}, {cursor: {}}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       client.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the browser.\n * @external Readable\n */\n\n/**\n * Creates a new Aggregation Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class AggregationCursor\n * @extends external:Readable\n * @fires AggregationCursor#data\n * @fires AggregationCursor#end\n * @fires AggregationCursor#close\n * @fires AggregationCursor#readable\n * @return {AggregationCursor} an AggregationCursor instance.\n */\nvar AggregationCursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var state = AggregationCursor.INIT;\n  var streamOptions = {};\n\n  // MaxTimeMS\n  var maxTimeMS = null;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary || Promise;\n\n  // Set up\n  Readable.call(this, { objectMode: true });\n\n  // Internal state\n  this.s = {\n    // MaxTimeMS\n    maxTimeMS: maxTimeMS,\n    // State\n    state: state,\n    // Stream options\n    streamOptions: streamOptions,\n    // BSON\n    bson: bson,\n    // Namespace\n    ns: ns,\n    // Command\n    cmd: cmd,\n    // Options\n    options: options,\n    // Topology\n    topology: topology,\n    // Topology Options\n    topologyOptions: topologyOptions,\n    // Promise library\n    promiseLibrary: promiseLibrary,\n    // Optional ClientSession\n    session: options.session\n  };\n};\n\n/**\n * AggregationCursor stream data event, fired for each document in the cursor.\n *\n * @event AggregationCursor#data\n * @type {object}\n */\n\n/**\n * AggregationCursor stream end event\n *\n * @event AggregationCursor#end\n * @type {null}\n */\n\n/**\n * AggregationCursor stream close event\n *\n * @event AggregationCursor#close\n * @type {null}\n */\n\n/**\n * AggregationCursor stream readable event\n *\n * @event AggregationCursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(AggregationCursor, Readable);\n\n// Extend the Cursor\nfor (var name in CoreCursor.prototype) {\n  AggregationCursor.prototype[name] = CoreCursor.prototype[name];\n}\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.batchSize = function(value) {\n  if (this.s.state === AggregationCursor.CLOSED || this.isDead())\n    throw MongoError.create({ message: 'Cursor is closed', driver: true });\n  if (typeof value !== 'number')\n    throw MongoError.create({ message: 'batchSize requires an integer', drvier: true });\n  if (this.s.cmd.cursor) this.s.cmd.cursor.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n};\n\n/**\n * Add a geoNear stage to the aggregation pipeline\n * @method\n * @param {object} document The geoNear stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.geoNear = function(document) {\n  this.s.cmd.pipeline.push({ $geoNear: document });\n  return this;\n};\n\n/**\n * Add a group stage to the aggregation pipeline\n * @method\n * @param {object} document The group stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.group = function(document) {\n  this.s.cmd.pipeline.push({ $group: document });\n  return this;\n};\n\n/**\n * Add a limit stage to the aggregation pipeline\n * @method\n * @param {number} value The state limit value.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.limit = function(value) {\n  this.s.cmd.pipeline.push({ $limit: value });\n  return this;\n};\n\n/**\n * Add a match stage to the aggregation pipeline\n * @method\n * @param {object} document The match stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.match = function(document) {\n  this.s.cmd.pipeline.push({ $match: document });\n  return this;\n};\n\n/**\n * Add a maxTimeMS stage to the aggregation pipeline\n * @method\n * @param {number} value The state maxTimeMS value.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.maxTimeMS = function(value) {\n  if (this.s.topology.lastIsMaster().minWireVersion > 2) {\n    this.s.cmd.maxTimeMS = value;\n  }\n  return this;\n};\n\n/**\n * Add a out stage to the aggregation pipeline\n * @method\n * @param {number} destination The destination name.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.out = function(destination) {\n  this.s.cmd.pipeline.push({ $out: destination });\n  return this;\n};\n\n/**\n * Add a project stage to the aggregation pipeline\n * @method\n * @param {object} document The project stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.project = function(document) {\n  this.s.cmd.pipeline.push({ $project: document });\n  return this;\n};\n\n/**\n * Add a lookup stage to the aggregation pipeline\n * @method\n * @param {object} document The lookup stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.lookup = function(document) {\n  this.s.cmd.pipeline.push({ $lookup: document });\n  return this;\n};\n\n/**\n * Add a redact stage to the aggregation pipeline\n * @method\n * @param {object} document The redact stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.redact = function(document) {\n  this.s.cmd.pipeline.push({ $redact: document });\n  return this;\n};\n\n/**\n * Add a skip stage to the aggregation pipeline\n * @method\n * @param {number} value The state skip value.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.skip = function(value) {\n  this.s.cmd.pipeline.push({ $skip: value });\n  return this;\n};\n\n/**\n * Add a sort stage to the aggregation pipeline\n * @method\n * @param {object} document The sort stage document.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.sort = function(document) {\n  this.s.cmd.pipeline.push({ $sort: document });\n  return this;\n};\n\n/**\n * Add a unwind stage to the aggregation pipeline\n * @method\n * @param {number} field The unwind field name.\n * @return {AggregationCursor}\n */\nAggregationCursor.prototype.unwind = function(field) {\n  this.s.cmd.pipeline.push({ $unwind: field });\n  return this;\n};\n\n/**\n * Return the cursor logger\n * @method\n * @return {Logger} return the cursor logger\n * @ignore\n */\nAggregationCursor.prototype.getLogger = function() {\n  return this.logger;\n};\n\nAggregationCursor.prototype.get = AggregationCursor.prototype.toArray;\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @function AggregationCursor.prototype.next\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Check if there is any document still available in the cursor\n * @function AggregationCursor.prototype.hasNext\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback AggregationCursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed. In that case,\n * cursor.rewind() can be used to reset the cursor.\n * @method AggregationCursor.prototype.toArray\n * @param {AggregationCursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback AggregationCursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method AggregationCursor.prototype.each\n * @param {AggregationCursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\n\n/**\n * Close the cursor, sending a AggregationCursor command and emitting close.\n * @method AggregationCursor.prototype.close\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Is the cursor closed\n * @method AggregationCursor.prototype.isClosed\n * @return {boolean}\n */\n\n/**\n * Execute the explain for the cursor\n * @method AggregationCursor.prototype.explain\n * @param {AggregationCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Clone the cursor\n * @function AggregationCursor.prototype.clone\n * @return {AggregationCursor}\n */\n\n/**\n * Resets the cursor\n * @function AggregationCursor.prototype.rewind\n * @return {AggregationCursor}\n */\n\n/**\n * The callback format for the forEach iterator method\n * @callback AggregationCursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback AggregationCursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/*\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method AggregationCursor.prototype.forEach\n * @param {AggregationCursor~iteratorCallback} iterator The iteration callback.\n * @param {AggregationCursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\n\nAggregationCursor.INIT = 0;\nAggregationCursor.OPEN = 1;\nAggregationCursor.CLOSED = 2;\n\nmodule.exports = AggregationCursor;\n","'use strict';\n\nmodule.exports = {\n  SYSTEM_NAMESPACE_COLLECTION: 'system.namespaces',\n  SYSTEM_INDEX_COLLECTION: 'system.indexes',\n  SYSTEM_PROFILE_COLLECTION: 'system.profile',\n  SYSTEM_USER_COLLECTION: 'system.users',\n  SYSTEM_COMMAND_COLLECTION: '$cmd',\n  SYSTEM_JS_COLLECTION: 'system.js'\n};\n","'use strict';\n\nconst executeOperation = require('./utils').executeOperation;\nconst applyWriteConcern = require('./utils').applyWriteConcern;\n\nconst addUser = require('./operations/db_ops').addUser;\nconst executeDbAdminCommand = require('./operations/db_ops').executeDbAdminCommand;\nconst removeUser = require('./operations/db_ops').removeUser;\nconst replSetGetStatus = require('./operations/admin_ops').replSetGetStatus;\nconst serverStatus = require('./operations/admin_ops').serverStatus;\nconst validateCollection = require('./operations/admin_ops').validateCollection;\n\n/**\n * @fileOverview The **Admin** class is an internal class that allows convenient access to\n * the admin functionality and commands for MongoDB.\n *\n * **ADMIN Cannot directly be instantiated**\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n *\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   // Use the admin database for the operation\n *   const adminDb = client.db(dbName).admin();\n *\n *   // List all the available databases\n *   adminDb.listDatabases(function(err, dbs) {\n *     test.equal(null, err);\n *     test.ok(dbs.databases.length > 0);\n *     client.close();\n *   });\n * });\n */\n\n/**\n * Create a new Admin instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @return {Admin} a collection instance.\n */\nfunction Admin(db, topology, promiseLibrary) {\n  if (!(this instanceof Admin)) return new Admin(db, topology);\n\n  // Internal state\n  this.s = {\n    db: db,\n    topology: topology,\n    promiseLibrary: promiseLibrary\n  };\n}\n\n/**\n * The callback format for results\n * @callback Admin~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result object if the command was executed successfully.\n */\n\n/**\n * Execute a command\n * @method\n * @param {object} command The command hash\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {number} [options.maxTimeMS] Number of milliseconds to wait before aborting the query.\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.command = function(command, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : {};\n\n  return executeOperation(this.s.db.s.topology, executeDbAdminCommand.bind(this.s.db), [\n    this.s.db,\n    command,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Retrieve the server information for the current\n * instance of the db client\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.buildInfo = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { buildinfo: 1 };\n  return executeOperation(this.s.db.s.topology, executeDbAdminCommand.bind(this.s.db), [\n    this.s.db,\n    cmd,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Retrieve the server information for the current\n * instance of the db client\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.serverInfo = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { buildinfo: 1 };\n  return executeOperation(this.s.db.s.topology, executeDbAdminCommand.bind(this.s.db), [\n    this.s.db,\n    cmd,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Retrieve this db's server status.\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.serverStatus = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.db.s.topology, serverStatus, [this, options, callback]);\n};\n\n/**\n * Ping the MongoDB server and retrieve results\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.ping = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { ping: 1 };\n  return executeOperation(this.s.db.s.topology, executeDbAdminCommand.bind(this.s.db), [\n    this.s.db,\n    cmd,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Add a user to the database.\n * @method\n * @param {string} username The username.\n * @param {string} password The password.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {object} [options.customData] Custom data associated with the user (only Mongodb 2.6 or higher)\n * @param {object[]} [options.roles] Roles associated with the created user (only Mongodb 2.6 or higher)\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.addUser = function(username, password, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  options = args.length ? args.shift() : {};\n  options = Object.assign({}, options);\n  // Get the options\n  options = applyWriteConcern(options, { db: this.s.db });\n  // Set the db name to admin\n  options.dbName = 'admin';\n\n  return executeOperation(this.s.db.s.topology, addUser, [\n    this.s.db,\n    username,\n    password,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Remove a user from a database\n * @method\n * @param {string} username The username.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.removeUser = function(username, options, callback) {\n  const args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n\n  options = args.length ? args.shift() : {};\n  options = Object.assign({}, options);\n  // Get the options\n  options = applyWriteConcern(options, { db: this.s.db });\n  // Set the db name\n  options.dbName = 'admin';\n\n  return executeOperation(this.s.db.s.topology, removeUser, [\n    this.s.db,\n    username,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Validate an existing collection\n *\n * @param {string} collectionName The name of the collection to validate.\n * @param {object} [options] Optional settings.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.validateCollection = function(collectionName, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.db.s.topology, validateCollection, [\n    this,\n    collectionName,\n    options,\n    callback\n  ]);\n};\n\n/**\n * List the available databases\n *\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.nameOnly=false] Whether the command should return only db names, or names and size info.\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.listDatabases = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  const cmd = { listDatabases: 1 };\n  if (options.nameOnly) cmd.nameOnly = Number(cmd.nameOnly);\n  return executeOperation(this.s.db.s.topology, executeDbAdminCommand.bind(this.s.db), [\n    this.s.db,\n    cmd,\n    options,\n    callback\n  ]);\n};\n\n/**\n * Get ReplicaSet status\n *\n * @param {Object} [options] optional parameters for this operation\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {Admin~resultCallback} [callback] The command result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nAdmin.prototype.replSetGetStatus = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.s.db.s.topology, replSetGetStatus, [this, options, callback]);\n};\n\nmodule.exports = Admin;\n","'use strict';\n\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst MongoError = require('mongodb-core').MongoError;\nconst CMongos = require('mongodb-core').Mongos;\nconst Cursor = require('../cursor');\nconst Server = require('./server');\nconst Store = require('./topology_base').Store;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is\n * used to construct connections.\n *\n * **Mongos Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'acceptableLatencyMS',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCRL',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'promiseLibrary',\n  'monitorCommands'\n];\n\n/**\n * Creates a new Mongos instance\n * @class\n * @deprecated\n * @param {Server[]} servers A seedlist of servers participating in the replicaset.\n * @param {object} [options] Optional settings.\n * @param {booelan} [options.ha=true] Turn on high availability monitoring.\n * @param {number} [options.haInterval=5000] Time between each replicaset status check.\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {number} [options.acceptableLatencyMS=15] Cutoff latency point in MS for MongoS proxy selection\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {boolean} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCA] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.ciphers] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslCert] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslKey] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions] Socket options\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=0] TCP Connection timeout setting\n * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires Mongos#connect\n * @fires Mongos#ha\n * @fires Mongos#joined\n * @fires Mongos#left\n * @fires Mongos#fullsetup\n * @fires Mongos#open\n * @fires Mongos#close\n * @fires Mongos#error\n * @fires Mongos#timeout\n * @fires Mongos#parseError\n * @fires Mongos#commandStarted\n * @fires Mongos#commandSucceeded\n * @fires Mongos#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {Mongos} a Mongos instance.\n */\nclass Mongos extends TopologyBase {\n  constructor(servers, options) {\n    super();\n\n    options = options || {};\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Ensure all the instances are Server\n    for (var i = 0; i < servers.length; i++) {\n      if (!(servers[i] instanceof Server)) {\n        throw MongoError.create({\n          message: 'all seed list instances must be of the Server type',\n          driver: true\n        });\n      }\n    }\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Build seed list\n    var seedlist = servers.map(function(x) {\n      return { host: x.host, port: x.port };\n    });\n\n    // Get the reconnect option\n    var reconnect = typeof options.auto_reconnect === 'boolean' ? options.auto_reconnect : true;\n    reconnect = typeof options.autoReconnect === 'boolean' ? options.autoReconnect : reconnect;\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: reconnect,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the mongodb-core ones\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Build default client information\n    clonedOptions.clientInfo = this.clientInfo;\n    // Do we have an application specific string\n    if (options.appname) {\n      clonedOptions.clientInfo.application = { name: options.appname };\n    }\n\n    // Internal state\n    this.s = {\n      // Create the Mongos\n      coreTopology: new CMongos(seedlist, clonedOptions),\n      // Server capabilities\n      sCapabilities: null,\n      // Debug turned on\n      debug: clonedOptions.debug,\n      // Store option defaults\n      storeOptions: storeOptions,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Actual store of callbacks\n      store: store,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: [],\n      // Promise library\n      promiseLibrary: options.promiseLibrary || Promise\n    };\n  }\n\n  // Connect\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = {};\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        // Remove all event handlers\n        var events = ['timeout', 'error', 'close'];\n        events.forEach(function(e) {\n          self.removeListener(e, connectErrorHandler);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n        // Force close the topology\n        self.close(true);\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          process.nextTick(function() {\n            throw err;\n          });\n        }\n      };\n    };\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Error handler\n    var reconnectHandler = function() {\n      self.emit('reconnect');\n      self.s.store.execute();\n    };\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Connect handler\n    var connectHandler = function() {\n      // Clear out all the current handlers left over\n      var events = ['timeout', 'error', 'close', 'fullsetup'];\n      events.forEach(function(e) {\n        self.s.coreTopology.removeAllListeners(e);\n      });\n\n      // Set up listeners\n      self.s.coreTopology.on('timeout', errorHandler('timeout'));\n      self.s.coreTopology.on('error', errorHandler('error'));\n      self.s.coreTopology.on('close', errorHandler('close'));\n\n      // Set up serverConfig listeners\n      self.s.coreTopology.on('fullsetup', function() {\n        self.emit('fullsetup', self);\n      });\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Clear out all the current handlers left over\n    var events = [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed'\n    ];\n    events.forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n\n    // Set up listeners\n    self.s.coreTopology.once('timeout', connectErrorHandler('timeout'));\n    self.s.coreTopology.once('error', connectErrorHandler('error'));\n    self.s.coreTopology.once('close', connectErrorHandler('close'));\n    self.s.coreTopology.once('connect', connectHandler);\n    // Join and leave events\n    self.s.coreTopology.on('joined', relay('joined'));\n    self.s.coreTopology.on('left', relay('left'));\n\n    // Reconnect server\n    self.s.coreTopology.on('reconnect', reconnectHandler);\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n}\n\nObject.defineProperty(Mongos.prototype, 'haInterval', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.haInterval;\n  }\n});\n\n/**\n * A mongos connect event, used to verify that the connection is up and running\n *\n * @event Mongos#connect\n * @type {Mongos}\n */\n\n/**\n * The mongos high availability event\n *\n * @event Mongos#ha\n * @type {function}\n * @param {string} type The stage in the high availability event (start|end)\n * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only\n * @param {number} data.id The id for this high availability request\n * @param {object} data.state An object containing the information about the current replicaset\n */\n\n/**\n * A server member left the mongos set\n *\n * @event Mongos#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the mongos set\n *\n * @event Mongos#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * Mongos fullsetup event, emitted when all proxies in the topology have been connected to.\n *\n * @event Mongos#fullsetup\n * @type {Mongos}\n */\n\n/**\n * Mongos open event, emitted when mongos can start processing commands.\n *\n * @event Mongos#open\n * @type {Mongos}\n */\n\n/**\n * Mongos close event\n *\n * @event Mongos#close\n * @type {object}\n */\n\n/**\n * Mongos error event, emitted if there is an error listener.\n *\n * @event Mongos#error\n * @type {MongoError}\n */\n\n/**\n * Mongos timeout event\n *\n * @event Mongos#timeout\n * @type {object}\n */\n\n/**\n * Mongos parseError event\n *\n * @event Mongos#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Mongos#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Mongos#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Mongos#commandFailed\n * @type {object}\n */\n\nmodule.exports = Mongos;\n","'use strict';\n\nconst Server = require('./server');\nconst Cursor = require('../cursor');\nconst MongoError = require('mongodb-core').MongoError;\nconst TopologyBase = require('./topology_base').TopologyBase;\nconst Store = require('./topology_base').Store;\nconst CReplSet = require('mongodb-core').ReplSet;\nconst MAX_JS_INT = require('../utils').MAX_JS_INT;\nconst translateOptions = require('../utils').translateOptions;\nconst filterOptions = require('../utils').filterOptions;\nconst mergeOptions = require('../utils').mergeOptions;\n\n/**\n * @fileOverview The **ReplSet** class is a class that represents a Replicaset topology and is\n * used to construct connections.\n *\n * **ReplSet Should not be used, use MongoClient.connect**\n */\n\n// Allowed parameters\nvar legalOptionNames = [\n  'ha',\n  'haInterval',\n  'replicaSet',\n  'rs_name',\n  'secondaryAcceptableLatencyMS',\n  'connectWithNoPrimary',\n  'poolSize',\n  'ssl',\n  'checkServerIdentity',\n  'sslValidate',\n  'sslCA',\n  'sslCert',\n  'ciphers',\n  'ecdhCurve',\n  'sslCRL',\n  'sslKey',\n  'sslPass',\n  'socketOptions',\n  'bufferMaxEntries',\n  'store',\n  'auto_reconnect',\n  'autoReconnect',\n  'emitError',\n  'keepAlive',\n  'keepAliveInitialDelay',\n  'noDelay',\n  'connectTimeoutMS',\n  'socketTimeoutMS',\n  'strategy',\n  'debug',\n  'family',\n  'loggerLevel',\n  'logger',\n  'reconnectTries',\n  'appname',\n  'domainsEnabled',\n  'servername',\n  'promoteLongs',\n  'promoteValues',\n  'promoteBuffers',\n  'maxStalenessSeconds',\n  'promiseLibrary',\n  'minSize',\n  'monitorCommands'\n];\n\n/**\n * Creates a new ReplSet instance\n * @class\n * @deprecated\n * @param {Server[]} servers A seedlist of servers participating in the replicaset.\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.ha=true] Turn on high availability monitoring.\n * @param {number} [options.haInterval=10000] Time between each replicaset status check.\n * @param {string} [options.replicaSet] The name of the replicaset to connect to.\n * @param {number} [options.secondaryAcceptableLatencyMS=15] Sets the range of servers to pick when using NEAREST (lowest ping ms + the latency fence, ex: range of 1 to (1 + 15) ms)\n * @param {boolean} [options.connectWithNoPrimary=false] Sets if the driver should connect even if no primary is available\n * @param {number} [options.poolSize=5] Number of connections in the connection pool for each server instance, set to 5 as default for legacy reasons.\n * @param {boolean} [options.ssl=false] Use ssl connection (needs to have a mongod server with ssl support)\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {boolean} [options.sslValidate=true] Validate mongod server certificate against ca (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCA] Array of valid certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {array} [options.sslCRL] Array of revocation certificates either as Buffers or Strings (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslCert] String or buffer containing the certificate we wish to present (needs to have a mongod server with ssl support, 2.4 or higher.\n * @param {string} [options.ciphers] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {string} [options.ecdhCurve] Passed directly through to tls.createSecureContext. See https://nodejs.org/dist/latest-v9.x/docs/api/tls.html#tls_tls_createsecurecontext_options for more info.\n * @param {(Buffer|string)} [options.sslKey] String or buffer containing the certificate private key we wish to present (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {(Buffer|string)} [options.sslPass] String or buffer containing the certificate password (needs to have a mongod server with ssl support, 2.4 or higher)\n * @param {string} [options.servername] String containing the server name requested via TLS SNI.\n * @param {object} [options.socketOptions] Socket options\n * @param {boolean} [options.socketOptions.noDelay=true] TCP Socket NoDelay option.\n * @param {boolean} [options.socketOptions.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.socketOptions.keepAliveInitialDelay=30000] The number of milliseconds to wait before initiating keepAlive on the TCP socket\n * @param {number} [options.socketOptions.connectTimeoutMS=10000] TCP Connection timeout setting\n * @param {number} [options.socketOptions.socketTimeoutMS=0] TCP Socket timeout setting\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {number} [options.maxStalenessSeconds=undefined] The max staleness to secondary reads (values under 10 seconds cannot be guaranteed);\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @fires ReplSet#connect\n * @fires ReplSet#ha\n * @fires ReplSet#joined\n * @fires ReplSet#left\n * @fires ReplSet#fullsetup\n * @fires ReplSet#open\n * @fires ReplSet#close\n * @fires ReplSet#error\n * @fires ReplSet#timeout\n * @fires ReplSet#parseError\n * @fires ReplSet#commandStarted\n * @fires ReplSet#commandSucceeded\n * @fires ReplSet#commandFailed\n * @property {string} parserType the parser type used (c++ or js).\n * @return {ReplSet} a ReplSet instance.\n */\nclass ReplSet extends TopologyBase {\n  constructor(servers, options) {\n    super();\n\n    options = options || {};\n    var self = this;\n\n    // Filter the options\n    options = filterOptions(options, legalOptionNames);\n\n    // Ensure all the instances are Server\n    for (var i = 0; i < servers.length; i++) {\n      if (!(servers[i] instanceof Server)) {\n        throw MongoError.create({\n          message: 'all seed list instances must be of the Server type',\n          driver: true\n        });\n      }\n    }\n\n    // Stored options\n    var storeOptions = {\n      force: false,\n      bufferMaxEntries:\n        typeof options.bufferMaxEntries === 'number' ? options.bufferMaxEntries : MAX_JS_INT\n    };\n\n    // Shared global store\n    var store = options.store || new Store(self, storeOptions);\n\n    // Build seed list\n    var seedlist = servers.map(function(x) {\n      return { host: x.host, port: x.port };\n    });\n\n    // Clone options\n    var clonedOptions = mergeOptions(\n      {},\n      {\n        disconnectHandler: store,\n        cursorFactory: Cursor,\n        reconnect: false,\n        emitError: typeof options.emitError === 'boolean' ? options.emitError : true,\n        size: typeof options.poolSize === 'number' ? options.poolSize : 5,\n        monitorCommands:\n          typeof options.monitorCommands === 'boolean' ? options.monitorCommands : false\n      }\n    );\n\n    // Translate any SSL options and other connectivity options\n    clonedOptions = translateOptions(clonedOptions, options);\n\n    // Socket options\n    var socketOptions =\n      options.socketOptions && Object.keys(options.socketOptions).length > 0\n        ? options.socketOptions\n        : options;\n\n    // Translate all the options to the mongodb-core ones\n    clonedOptions = translateOptions(clonedOptions, socketOptions);\n\n    // Build default client information\n    clonedOptions.clientInfo = this.clientInfo;\n    // Do we have an application specific string\n    if (options.appname) {\n      clonedOptions.clientInfo.application = { name: options.appname };\n    }\n\n    // Create the ReplSet\n    var coreTopology = new CReplSet(seedlist, clonedOptions);\n\n    // Listen to reconnect event\n    coreTopology.on('reconnect', function() {\n      self.emit('reconnect');\n      store.execute();\n    });\n\n    // Internal state\n    this.s = {\n      // Replicaset\n      coreTopology: coreTopology,\n      // Server capabilities\n      sCapabilities: null,\n      // Debug tag\n      tag: options.tag,\n      // Store options\n      storeOptions: storeOptions,\n      // Cloned options\n      clonedOptions: clonedOptions,\n      // Store\n      store: store,\n      // Options\n      options: options,\n      // Server Session Pool\n      sessionPool: null,\n      // Active client sessions\n      sessions: [],\n      // Promise library\n      promiseLibrary: options.promiseLibrary || Promise\n    };\n\n    // Debug\n    if (clonedOptions.debug) {\n      // Last ismaster\n      Object.defineProperty(this, 'replset', {\n        enumerable: true,\n        get: function() {\n          return coreTopology;\n        }\n      });\n    }\n  }\n\n  // Connect method\n  connect(_options, callback) {\n    var self = this;\n    if ('function' === typeof _options) (callback = _options), (_options = {});\n    if (_options == null) _options = {};\n    if (!('function' === typeof callback)) callback = null;\n    _options = Object.assign({}, this.s.clonedOptions, _options);\n    self.s.options = _options;\n\n    // Update bufferMaxEntries\n    self.s.storeOptions.bufferMaxEntries =\n      typeof _options.bufferMaxEntries === 'number' ? _options.bufferMaxEntries : -1;\n\n    // Actual handler\n    var errorHandler = function(event) {\n      return function(err) {\n        if (event !== 'error') {\n          self.emit(event, err);\n        }\n      };\n    };\n\n    // Clear out all the current handlers left over\n    var events = [\n      'timeout',\n      'error',\n      'close',\n      'serverOpening',\n      'serverDescriptionChanged',\n      'serverHeartbeatStarted',\n      'serverHeartbeatSucceeded',\n      'serverHeartbeatFailed',\n      'serverClosed',\n      'topologyOpening',\n      'topologyClosed',\n      'topologyDescriptionChanged',\n      'commandStarted',\n      'commandSucceeded',\n      'commandFailed',\n      'joined',\n      'left',\n      'ping',\n      'ha'\n    ];\n    events.forEach(function(e) {\n      self.s.coreTopology.removeAllListeners(e);\n    });\n\n    // relay the event\n    var relay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server);\n      };\n    };\n\n    // Replset events relay\n    var replsetRelay = function(event) {\n      return function(t, server) {\n        self.emit(event, t, server.lastIsMaster(), server);\n      };\n    };\n\n    // Relay ha\n    var relayHa = function(t, state) {\n      self.emit('ha', t, state);\n\n      if (t === 'start') {\n        self.emit('ha_connect', t, state);\n      } else if (t === 'end') {\n        self.emit('ha_ismaster', t, state);\n      }\n    };\n\n    // Set up serverConfig listeners\n    self.s.coreTopology.on('joined', replsetRelay('joined'));\n    self.s.coreTopology.on('left', relay('left'));\n    self.s.coreTopology.on('ping', relay('ping'));\n    self.s.coreTopology.on('ha', relayHa);\n\n    // Set up SDAM listeners\n    self.s.coreTopology.on('serverDescriptionChanged', relay('serverDescriptionChanged'));\n    self.s.coreTopology.on('serverHeartbeatStarted', relay('serverHeartbeatStarted'));\n    self.s.coreTopology.on('serverHeartbeatSucceeded', relay('serverHeartbeatSucceeded'));\n    self.s.coreTopology.on('serverHeartbeatFailed', relay('serverHeartbeatFailed'));\n    self.s.coreTopology.on('serverOpening', relay('serverOpening'));\n    self.s.coreTopology.on('serverClosed', relay('serverClosed'));\n    self.s.coreTopology.on('topologyOpening', relay('topologyOpening'));\n    self.s.coreTopology.on('topologyClosed', relay('topologyClosed'));\n    self.s.coreTopology.on('topologyDescriptionChanged', relay('topologyDescriptionChanged'));\n    self.s.coreTopology.on('commandStarted', relay('commandStarted'));\n    self.s.coreTopology.on('commandSucceeded', relay('commandSucceeded'));\n    self.s.coreTopology.on('commandFailed', relay('commandFailed'));\n\n    self.s.coreTopology.on('fullsetup', function() {\n      self.emit('fullsetup', self, self);\n    });\n\n    self.s.coreTopology.on('all', function() {\n      self.emit('all', null, self);\n    });\n\n    // Connect handler\n    var connectHandler = function() {\n      // Set up listeners\n      self.s.coreTopology.once('timeout', errorHandler('timeout'));\n      self.s.coreTopology.once('error', errorHandler('error'));\n      self.s.coreTopology.once('close', errorHandler('close'));\n\n      // Emit open event\n      self.emit('open', null, self);\n\n      // Return correctly\n      try {\n        callback(null, self);\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    };\n\n    // Error handler\n    var connectErrorHandler = function() {\n      return function(err) {\n        ['timeout', 'error', 'close'].forEach(function(e) {\n          self.s.coreTopology.removeListener(e, connectErrorHandler);\n        });\n\n        self.s.coreTopology.removeListener('connect', connectErrorHandler);\n        // Destroy the replset\n        self.s.coreTopology.destroy();\n\n        // Try to callback\n        try {\n          callback(err);\n        } catch (err) {\n          if (!self.s.coreTopology.isConnected())\n            process.nextTick(function() {\n              throw err;\n            });\n        }\n      };\n    };\n\n    // Set up listeners\n    self.s.coreTopology.once('timeout', connectErrorHandler('timeout'));\n    self.s.coreTopology.once('error', connectErrorHandler('error'));\n    self.s.coreTopology.once('close', connectErrorHandler('close'));\n    self.s.coreTopology.once('connect', connectHandler);\n\n    // Start connection\n    self.s.coreTopology.connect(_options);\n  }\n\n  close(forceClosed) {\n    super.close(forceClosed);\n\n    ['timeout', 'error', 'close', 'joined', 'left'].forEach(e => this.removeAllListeners(e));\n  }\n}\n\nObject.defineProperty(ReplSet.prototype, 'haInterval', {\n  enumerable: true,\n  get: function() {\n    return this.s.coreTopology.s.haInterval;\n  }\n});\n\n/**\n * A replset connect event, used to verify that the connection is up and running\n *\n * @event ReplSet#connect\n * @type {ReplSet}\n */\n\n/**\n * The replset high availability event\n *\n * @event ReplSet#ha\n * @type {function}\n * @param {string} type The stage in the high availability event (start|end)\n * @param {boolean} data.norepeat This is a repeating high availability process or a single execution only\n * @param {number} data.id The id for this high availability request\n * @param {object} data.state An object containing the information about the current replicaset\n */\n\n/**\n * A server member left the replicaset\n *\n * @event ReplSet#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the replicaset\n *\n * @event ReplSet#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * ReplSet open event, emitted when replicaset can start processing commands.\n *\n * @event ReplSet#open\n * @type {Replset}\n */\n\n/**\n * ReplSet fullsetup event, emitted when all servers in the topology have been connected to.\n *\n * @event ReplSet#fullsetup\n * @type {Replset}\n */\n\n/**\n * ReplSet close event\n *\n * @event ReplSet#close\n * @type {object}\n */\n\n/**\n * ReplSet error event, emitted if there is an error listener.\n *\n * @event ReplSet#error\n * @type {MongoError}\n */\n\n/**\n * ReplSet timeout event\n *\n * @event ReplSet#timeout\n * @type {object}\n */\n\n/**\n * ReplSet parseError event\n *\n * @event ReplSet#parseError\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event ReplSet#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event ReplSet#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event ReplSet#commandFailed\n * @type {object}\n */\n\nmodule.exports = ReplSet;\n","'use strict';\n\nvar Binary = require('mongodb-core').BSON.Binary,\n  ObjectID = require('mongodb-core').BSON.ObjectID;\n\nvar Buffer = require('safe-buffer').Buffer;\n\n/**\n * Class for representing a single chunk in GridFS.\n *\n * @class\n *\n * @param file {GridStore} The {@link GridStore} object holding this chunk.\n * @param mongoObject {object} The mongo object representation of this chunk.\n *\n * @throws Error when the type of data field for {@link mongoObject} is not\n *     supported. Currently supported types for data field are instances of\n *     {@link String}, {@link Array}, {@link Binary} and {@link Binary}\n *     from the bson module\n *\n * @see Chunk#buildMongoObject\n */\nvar Chunk = function(file, mongoObject, writeConcern) {\n  if (!(this instanceof Chunk)) return new Chunk(file, mongoObject);\n\n  this.file = file;\n  var mongoObjectFinal = mongoObject == null ? {} : mongoObject;\n  this.writeConcern = writeConcern || { w: 1 };\n  this.objectId = mongoObjectFinal._id == null ? new ObjectID() : mongoObjectFinal._id;\n  this.chunkNumber = mongoObjectFinal.n == null ? 0 : mongoObjectFinal.n;\n  this.data = new Binary();\n\n  if (typeof mongoObjectFinal.data === 'string') {\n    var buffer = Buffer.alloc(mongoObjectFinal.data.length);\n    buffer.write(mongoObjectFinal.data, 0, mongoObjectFinal.data.length, 'binary');\n    this.data = new Binary(buffer);\n  } else if (Array.isArray(mongoObjectFinal.data)) {\n    buffer = Buffer.alloc(mongoObjectFinal.data.length);\n    var data = mongoObjectFinal.data.join('');\n    buffer.write(data, 0, data.length, 'binary');\n    this.data = new Binary(buffer);\n  } else if (mongoObjectFinal.data && mongoObjectFinal.data._bsontype === 'Binary') {\n    this.data = mongoObjectFinal.data;\n  } else if (!Buffer.isBuffer(mongoObjectFinal.data) && !(mongoObjectFinal.data == null)) {\n    throw Error('Illegal chunk format');\n  }\n\n  // Update position\n  this.internalPosition = 0;\n};\n\n/**\n * Writes a data to this object and advance the read/write head.\n *\n * @param data {string} the data to write\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.write = function(data, callback) {\n  this.data.write(data, this.internalPosition, data.length, 'binary');\n  this.internalPosition = this.data.length();\n  if (callback != null) return callback(null, this);\n  return this;\n};\n\n/**\n * Reads data and advances the read/write head.\n *\n * @param length {number} The length of data to read.\n *\n * @return {string} The data read if the given length will not exceed the end of\n *     the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.read = function(length) {\n  // Default to full read if no index defined\n  length = length == null || length === 0 ? this.length() : length;\n\n  if (this.length() - this.internalPosition + 1 >= length) {\n    var data = this.data.read(this.internalPosition, length);\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return '';\n  }\n};\n\nChunk.prototype.readSlice = function(length) {\n  if (this.length() - this.internalPosition >= length) {\n    var data = null;\n    if (this.data.buffer != null) {\n      //Pure BSON\n      data = this.data.buffer.slice(this.internalPosition, this.internalPosition + length);\n    } else {\n      //Native BSON\n      data = Buffer.alloc(length);\n      length = this.data.readInto(data, this.internalPosition);\n    }\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return null;\n  }\n};\n\n/**\n * Checks if the read/write head is at the end.\n *\n * @return {boolean} Whether the read/write head has reached the end of this\n *     chunk.\n */\nChunk.prototype.eof = function() {\n  return this.internalPosition === this.length() ? true : false;\n};\n\n/**\n * Reads one character from the data of this chunk and advances the read/write\n * head.\n *\n * @return {string} a single character data read if the the read/write head is\n *     not at the end of the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.getc = function() {\n  return this.read(1);\n};\n\n/**\n * Clears the contents of the data in this chunk and resets the read/write head\n * to the initial position.\n */\nChunk.prototype.rewind = function() {\n  this.internalPosition = 0;\n  this.data = new Binary();\n};\n\n/**\n * Saves this chunk to the database. Also overwrites existing entries having the\n * same id as this chunk.\n *\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.save = function(options, callback) {\n  var self = this;\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  self.file.chunkCollection(function(err, collection) {\n    if (err) return callback(err);\n\n    // Merge the options\n    var writeOptions = { upsert: true };\n    for (var name in options) writeOptions[name] = options[name];\n    for (name in self.writeConcern) writeOptions[name] = self.writeConcern[name];\n\n    if (self.data.length() > 0) {\n      self.buildMongoObject(function(mongoObject) {\n        var options = { forceServerObjectId: true };\n        for (var name in self.writeConcern) {\n          options[name] = self.writeConcern[name];\n        }\n\n        collection.replaceOne({ _id: self.objectId }, mongoObject, writeOptions, function(err) {\n          callback(err, self);\n        });\n      });\n    } else {\n      callback(null, self);\n    }\n    // });\n  });\n};\n\n/**\n * Creates a mongoDB object representation of this chunk.\n *\n * @param callback {function(Object)} This will be called after executing this\n *     method. The object will be passed to the first parameter and will have\n *     the structure:\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this chunk\n *          'files_id' : , // {number} foreign key to the file collection\n *          'n' : , // {number} chunk number\n *          'data' : , // {bson#Binary} the chunk data itself\n *        }\n *        </code></pre>\n *\n * @see <a href=\"http://www.mongodb.org/display/DOCS/GridFS+Specification#GridFSSpecification-{{chunks}}\">MongoDB GridFS Chunk Object Structure</a>\n */\nChunk.prototype.buildMongoObject = function(callback) {\n  var mongoObject = {\n    files_id: this.file.fileId,\n    n: this.chunkNumber,\n    data: this.data\n  };\n  // If we are saving using a specific ObjectId\n  if (this.objectId != null) mongoObject._id = this.objectId;\n\n  callback(mongoObject);\n};\n\n/**\n * @return {number} the length of the data\n */\nChunk.prototype.length = function() {\n  return this.data.length();\n};\n\n/**\n * The position of the read/write head\n * @name position\n * @lends Chunk#\n * @field\n */\nObject.defineProperty(Chunk.prototype, 'position', {\n  enumerable: true,\n  get: function() {\n    return this.internalPosition;\n  },\n  set: function(value) {\n    this.internalPosition = value;\n  }\n});\n\n/**\n * The default chunk size\n * @constant\n */\nChunk.DEFAULT_CHUNK_SIZE = 1024 * 255;\n\nmodule.exports = Chunk;\n","import * as mongodb from 'mongodb';\n\n// TODO load mongodb url from env\nconst client = new mongodb.MongoClient('mongodb://localhost:27017', {\n    useNewUrlParser: true\n});\n\ninterface GeolocationDocument {\n    ipFrom: number;\n    ipTo: number;\n    lat: number;\n    lng: number;\n}\n\nexport interface Geolocation {\n    lat: number;\n    lng: number;\n}\n\nexport const findGeolocation = async (ip: string): Promise<Geolocation> => {\n\n    await client.connect();\n\n    const geolocationCollection = client.db('ibike_map').collection('geolocations');\n\n    const ipInt = cidrToInt(ip);\n\n    const geolocationDocument = await geolocationCollection.findOne<GeolocationDocument>({\n        ipFrom: { \"$lt\": ipInt },\n        ipTo: { \"$gt\": ipInt }\n    })\n\n    return geolocationDocument ? {\n        lat: geolocationDocument.lat,\n        lng: geolocationDocument.lng\n    } : null;\n}\n\nconst cidrToInt = (ip: string): number => {\n    return ip\n        .split('.')\n        .reduce(\n            (p: number, c: string, i: number) => p + parseInt(c) * 256 ** (3 - i),\n            0\n        );\n}","'use strict';\n\n// Core module\nconst core = require('mongodb-core');\nconst Instrumentation = require('./lib/apm');\n\n// Set up the connect function\nconst connect = require('./lib/mongo_client').connect;\n\n// Expose error class\nconnect.MongoError = core.MongoError;\nconnect.MongoNetworkError = core.MongoNetworkError;\n\n// Actual driver classes exported\nconnect.Admin = require('./lib/admin');\nconnect.MongoClient = require('./lib/mongo_client');\nconnect.Db = require('./lib/db');\nconnect.Collection = require('./lib/collection');\nconnect.Server = require('./lib/topologies/server');\nconnect.ReplSet = require('./lib/topologies/replset');\nconnect.Mongos = require('./lib/topologies/mongos');\nconnect.ReadPreference = require('mongodb-core').ReadPreference;\nconnect.GridStore = require('./lib/gridfs/grid_store');\nconnect.Chunk = require('./lib/gridfs/chunk');\nconnect.Logger = core.Logger;\nconnect.AggregationCursor = require('./lib/aggregation_cursor');\nconnect.CommandCursor = require('./lib/command_cursor');\nconnect.Cursor = require('./lib/cursor');\nconnect.GridFSBucket = require('./lib/gridfs-stream');\n// Exported to be used in tests not to be used anywhere else\nconnect.CoreServer = require('mongodb-core').Server;\nconnect.CoreConnection = require('mongodb-core').Connection;\n\n// BSON types exported\nconnect.Binary = core.BSON.Binary;\nconnect.Code = core.BSON.Code;\nconnect.Map = core.BSON.Map;\nconnect.DBRef = core.BSON.DBRef;\nconnect.Double = core.BSON.Double;\nconnect.Int32 = core.BSON.Int32;\nconnect.Long = core.BSON.Long;\nconnect.MinKey = core.BSON.MinKey;\nconnect.MaxKey = core.BSON.MaxKey;\nconnect.ObjectID = core.BSON.ObjectID;\nconnect.ObjectId = core.BSON.ObjectID;\nconnect.Symbol = core.BSON.Symbol;\nconnect.Timestamp = core.BSON.Timestamp;\nconnect.BSONRegExp = core.BSON.BSONRegExp;\nconnect.Decimal128 = core.BSON.Decimal128;\n\n// Add connect method\nconnect.connect = connect;\n\n// Set up the instrumentation method\nconnect.instrument = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  const instrumentation = new Instrumentation();\n  instrumentation.instrument(connect.MongoClient, callback);\n  return instrumentation;\n};\n\n// Set our exports to be the connect function\nmodule.exports = connect;\n","'use strict';\n\nvar Map = require('./map'),\n  Long = require('./long'),\n  Double = require('./double'),\n  Timestamp = require('./timestamp'),\n  ObjectID = require('./objectid'),\n  BSONRegExp = require('./regexp'),\n  Symbol = require('./symbol'),\n  Int32 = require('./int_32'),\n  Code = require('./code'),\n  Decimal128 = require('./decimal128'),\n  MinKey = require('./min_key'),\n  MaxKey = require('./max_key'),\n  DBRef = require('./db_ref'),\n  Binary = require('./binary');\n\n// Parts of the parser\nvar deserialize = require('./parser/deserializer'),\n  serializer = require('./parser/serializer'),\n  calculateObjectSize = require('./parser/calculate_size');\n\n/**\n * @ignore\n * @api private\n */\n// Default Max Size\nvar MAXSIZE = 1024 * 1024 * 17;\n\n// Current Internal Temporary Serialization Buffer\nvar buffer = new Buffer(MAXSIZE);\n\nvar BSON = function() {};\n\n/**\n * Serialize a Javascript object.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @param {Number} [options.minInternalBufferSize=1024*1024*17] minimum size of the internal temporary serialization buffer **(default:1024*1024*17)**.\n * @return {Buffer} returns the Buffer object containing the serialized object.\n * @api public\n */\nBSON.prototype.serialize = function serialize(object, options) {\n  options = options || {};\n  // Unpack the options\n  var checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  var minInternalBufferSize =\n    typeof options.minInternalBufferSize === 'number' ? options.minInternalBufferSize : MAXSIZE;\n  \n  // Resize the internal serialization buffer if needed\n  if (buffer.length < minInternalBufferSize) {\n    buffer = new Buffer(minInternalBufferSize);\n  }\n\n  // Attempt to serialize\n  var serializationIndex = serializer(\n    buffer,\n    object,\n    checkKeys,\n    0,\n    0,\n    serializeFunctions,\n    ignoreUndefined,\n    []\n  );\n  // Create the final buffer\n  var finishedBuffer = new Buffer(serializationIndex);\n  // Copy into the finished buffer\n  buffer.copy(finishedBuffer, 0, 0, finishedBuffer.length);\n  // Return the buffer\n  return finishedBuffer;\n};\n\n/**\n * Serialize a Javascript object using a predefined Buffer and index into the buffer, useful when pre-allocating the space for serialization.\n *\n * @param {Object} object the Javascript object to serialize.\n * @param {Buffer} buffer the Buffer you pre-allocated to store the serialized BSON object.\n * @param {Boolean} [options.checkKeys] the serializer will check if keys are valid.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @param {Number} [options.index] the index in the buffer where we wish to start serializing into.\n * @return {Number} returns the index pointing to the last written byte in the buffer.\n * @api public\n */\nBSON.prototype.serializeWithBufferAndIndex = function(object, finalBuffer, options) {\n  options = options || {};\n  // Unpack the options\n  var checkKeys = typeof options.checkKeys === 'boolean' ? options.checkKeys : false;\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n  var startIndex = typeof options.index === 'number' ? options.index : 0;\n\n  // Attempt to serialize\n  var serializationIndex = serializer(\n    finalBuffer,\n    object,\n    checkKeys,\n    startIndex || 0,\n    0,\n    serializeFunctions,\n    ignoreUndefined\n  );\n\n  // Return the index\n  return serializationIndex - 1;\n};\n\n/**\n * Deserialize data as BSON.\n *\n * @param {Buffer} buffer the buffer containing the serialized set of BSON documents.\n * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance.\n * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n * @return {Object} returns the deserialized Javascript Object.\n * @api public\n */\nBSON.prototype.deserialize = function(buffer, options) {\n  return deserialize(buffer, options);\n};\n\n/**\n * Calculate the bson size for a passed in Javascript object.\n *\n * @param {Object} object the Javascript object to calculate the BSON byte size for.\n * @param {Boolean} [options.serializeFunctions=false] serialize the javascript functions **(default:false)**.\n * @param {Boolean} [options.ignoreUndefined=true] ignore undefined fields **(default:true)**.\n * @return {Number} returns the number of bytes the BSON object will take up.\n * @api public\n */\nBSON.prototype.calculateObjectSize = function(object, options) {\n  options = options || {};\n\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : true;\n\n  return calculateObjectSize(object, serializeFunctions, ignoreUndefined);\n};\n\n/**\n * Deserialize stream data as BSON documents.\n *\n * @param {Buffer} data the buffer containing the serialized set of BSON documents.\n * @param {Number} startIndex the start index in the data Buffer where the deserialization is to start.\n * @param {Number} numberOfDocuments number of documents to deserialize.\n * @param {Array} documents an array where to store the deserialized documents.\n * @param {Number} docStartIndex the index in the documents array from where to start inserting documents.\n * @param {Object} [options] additional options used for the deserialization.\n * @param {Object} [options.evalFunctions=false] evaluate functions in the BSON document scoped to the object deserialized.\n * @param {Object} [options.cacheFunctions=false] cache evaluated functions for reuse.\n * @param {Object} [options.cacheFunctionsCrc32=false] use a crc32 code for caching, otherwise use the string of the function.\n * @param {Object} [options.promoteLongs=true] when deserializing a Long will fit it into a Number if it's smaller than 53 bits\n * @param {Object} [options.promoteBuffers=false] when deserializing a Binary will return it as a node.js Buffer instance.\n * @param {Object} [options.promoteValues=false] when deserializing will promote BSON values to their Node.js closest equivalent types.\n * @param {Object} [options.fieldsAsRaw=null] allow to specify if there what fields we wish to return as unserialized raw buffer.\n * @param {Object} [options.bsonRegExp=false] return BSON regular expressions as BSONRegExp instances.\n * @return {Number} returns the next index in the buffer after deserialization **x** numbers of documents.\n * @api public\n */\nBSON.prototype.deserializeStream = function(\n  data,\n  startIndex,\n  numberOfDocuments,\n  documents,\n  docStartIndex,\n  options\n) {\n  options = options != null ? options : {};\n  var index = startIndex;\n  // Loop over all documents\n  for (var i = 0; i < numberOfDocuments; i++) {\n    // Find size of the document\n    var size =\n      data[index] | (data[index + 1] << 8) | (data[index + 2] << 16) | (data[index + 3] << 24);\n    // Update options with index\n    options['index'] = index;\n    // Parse the document at this point\n    documents[docStartIndex + i] = this.deserialize(data, options);\n    // Adjust index by the document size\n    index = index + size;\n  }\n\n  // Return object containing end index of parsing and list of documents\n  return index;\n};\n\n/**\n * @ignore\n * @api private\n */\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\n// var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\n// var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// Return BSON\nmodule.exports = BSON;\nmodule.exports.Code = Code;\nmodule.exports.Map = Map;\nmodule.exports.Symbol = Symbol;\nmodule.exports.BSON = BSON;\nmodule.exports.DBRef = DBRef;\nmodule.exports.Binary = Binary;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.Long = Long;\nmodule.exports.Timestamp = Timestamp;\nmodule.exports.Double = Double;\nmodule.exports.Int32 = Int32;\nmodule.exports.MinKey = MinKey;\nmodule.exports.MaxKey = MaxKey;\nmodule.exports.BSONRegExp = BSONRegExp;\nmodule.exports.Decimal128 = Decimal128;\n","'use strict';\n\nvar Long = require('../long').Long,\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  Code = require('../code').Code,\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  Decimal128 = require('../decimal128'),\n  Int32 = require('../int_32'),\n  DBRef = require('../db_ref').DBRef,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Binary = require('../binary').Binary;\n\nvar deserialize = function(buffer, options, isArray) {\n  options = options == null ? {} : options;\n  var index = options && options.index ? options.index : 0;\n  // Read the document size\n  var size =\n    buffer[index] |\n    (buffer[index + 1] << 8) |\n    (buffer[index + 2] << 16) |\n    (buffer[index + 3] << 24);\n\n  // Ensure buffer is valid size\n  if (size < 5 || buffer.length < size || size + index > buffer.length) {\n    throw new Error('corrupt bson message');\n  }\n\n  // Illegal end value\n  if (buffer[index + size - 1] !== 0) {\n    throw new Error(\"One object, sized correctly, with a spot for an EOO, but the EOO isn't 0x00\");\n  }\n\n  // Start deserializtion\n  return deserializeObject(buffer, index, options, isArray);\n};\n\nvar deserializeObject = function(buffer, index, options, isArray) {\n  var evalFunctions = options['evalFunctions'] == null ? false : options['evalFunctions'];\n  var cacheFunctions = options['cacheFunctions'] == null ? false : options['cacheFunctions'];\n  var cacheFunctionsCrc32 =\n    options['cacheFunctionsCrc32'] == null ? false : options['cacheFunctionsCrc32'];\n\n  if (!cacheFunctionsCrc32) var crc32 = null;\n\n  var fieldsAsRaw = options['fieldsAsRaw'] == null ? null : options['fieldsAsRaw'];\n\n  // Return raw bson buffer instead of parsing it\n  var raw = options['raw'] == null ? false : options['raw'];\n\n  // Return BSONRegExp objects instead of native regular expressions\n  var bsonRegExp = typeof options['bsonRegExp'] === 'boolean' ? options['bsonRegExp'] : false;\n\n  // Controls the promotion of values vs wrapper classes\n  var promoteBuffers = options['promoteBuffers'] == null ? false : options['promoteBuffers'];\n  var promoteLongs = options['promoteLongs'] == null ? true : options['promoteLongs'];\n  var promoteValues = options['promoteValues'] == null ? true : options['promoteValues'];\n\n  // Set the start index\n  var startIndex = index;\n\n  // Validate that we have at least 4 bytes of buffer\n  if (buffer.length < 5) throw new Error('corrupt bson message < 5 bytes long');\n\n  // Read the document size\n  var size =\n    buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24);\n\n  // Ensure buffer is valid size\n  if (size < 5 || size > buffer.length) throw new Error('corrupt bson message');\n\n  // Create holding object\n  var object = isArray ? [] : {};\n  // Used for arrays to skip having to perform utf8 decoding\n  var arrayIndex = 0;\n\n  var done = false;\n\n  // While we have more left data left keep parsing\n  // while (buffer[index + 1] !== 0) {\n  while (!done) {\n    // Read the type\n    var elementType = buffer[index++];\n    // If we get a zero it's the last byte, exit\n    if (elementType === 0) break;\n\n    // Get the start search index\n    var i = index;\n    // Locate the end of the c string\n    while (buffer[i] !== 0x00 && i < buffer.length) {\n      i++;\n    }\n\n    // If are at the end of the buffer there is a problem with the document\n    if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n    var name = isArray ? arrayIndex++ : buffer.toString('utf8', index, i);\n\n    index = i + 1;\n\n    if (elementType === BSON.BSON_DATA_STRING) {\n      var stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      object[name] = buffer.toString('utf8', index, index + stringSize - 1);\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_OID) {\n      var oid = new Buffer(12);\n      buffer.copy(oid, 0, index, index + 12);\n      object[name] = new ObjectID(oid);\n      index = index + 12;\n    } else if (elementType === BSON.BSON_DATA_INT && promoteValues === false) {\n      object[name] = new Int32(\n        buffer[index++] | (buffer[index++] << 8) | (buffer[index++] << 16) | (buffer[index++] << 24)\n      );\n    } else if (elementType === BSON.BSON_DATA_INT) {\n      object[name] =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n    } else if (elementType === BSON.BSON_DATA_NUMBER && promoteValues === false) {\n      object[name] = new Double(buffer.readDoubleLE(index));\n      index = index + 8;\n    } else if (elementType === BSON.BSON_DATA_NUMBER) {\n      object[name] = buffer.readDoubleLE(index);\n      index = index + 8;\n    } else if (elementType === BSON.BSON_DATA_DATE) {\n      var lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      object[name] = new Date(new Long(lowBits, highBits).toNumber());\n    } else if (elementType === BSON.BSON_DATA_BOOLEAN) {\n      if (buffer[index] !== 0 && buffer[index] !== 1) throw new Error('illegal boolean type value');\n      object[name] = buffer[index++] === 1;\n    } else if (elementType === BSON.BSON_DATA_OBJECT) {\n      var _index = index;\n      var objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      if (objectSize <= 0 || objectSize > buffer.length - index)\n        throw new Error('bad embedded document length in bson');\n\n      // We have a raw value\n      if (raw) {\n        object[name] = buffer.slice(index, index + objectSize);\n      } else {\n        object[name] = deserializeObject(buffer, _index, options, false);\n      }\n\n      index = index + objectSize;\n    } else if (elementType === BSON.BSON_DATA_ARRAY) {\n      _index = index;\n      objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      var arrayOptions = options;\n\n      // Stop index\n      var stopIndex = index + objectSize;\n\n      // All elements of array to be returned as raw bson\n      if (fieldsAsRaw && fieldsAsRaw[name]) {\n        arrayOptions = {};\n        for (var n in options) arrayOptions[n] = options[n];\n        arrayOptions['raw'] = true;\n      }\n\n      object[name] = deserializeObject(buffer, _index, arrayOptions, true);\n      index = index + objectSize;\n\n      if (buffer[index - 1] !== 0) throw new Error('invalid array terminator byte');\n      if (index !== stopIndex) throw new Error('corrupted array bson');\n    } else if (elementType === BSON.BSON_DATA_UNDEFINED) {\n      object[name] = undefined;\n    } else if (elementType === BSON.BSON_DATA_NULL) {\n      object[name] = null;\n    } else if (elementType === BSON.BSON_DATA_LONG) {\n      // Unpack the low and high bits\n      lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var long = new Long(lowBits, highBits);\n      // Promote the long if possible\n      if (promoteLongs && promoteValues === true) {\n        object[name] =\n          long.lessThanOrEqual(JS_INT_MAX_LONG) && long.greaterThanOrEqual(JS_INT_MIN_LONG)\n            ? long.toNumber()\n            : long;\n      } else {\n        object[name] = long;\n      }\n    } else if (elementType === BSON.BSON_DATA_DECIMAL128) {\n      // Buffer to contain the decimal bytes\n      var bytes = new Buffer(16);\n      // Copy the next 16 bytes into the bytes buffer\n      buffer.copy(bytes, 0, index, index + 16);\n      // Update index\n      index = index + 16;\n      // Assign the new Decimal128 value\n      var decimal128 = new Decimal128(bytes);\n      // If we have an alternative mapper use that\n      object[name] = decimal128.toObject ? decimal128.toObject() : decimal128;\n    } else if (elementType === BSON.BSON_DATA_BINARY) {\n      var binarySize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      var totalBinarySize = binarySize;\n      var subType = buffer[index++];\n\n      // Did we have a negative binary size, throw\n      if (binarySize < 0) throw new Error('Negative binary type element size found');\n\n      // Is the length longer than the document\n      if (binarySize > buffer.length) throw new Error('Binary type size larger than document size');\n\n      // Decode as raw Buffer object if options specifies it\n      if (buffer['slice'] != null) {\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize =\n            buffer[index++] |\n            (buffer[index++] << 8) |\n            (buffer[index++] << 16) |\n            (buffer[index++] << 24);\n          if (binarySize < 0)\n            throw new Error('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to long binary size');\n          if (binarySize < totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to short binary size');\n        }\n\n        if (promoteBuffers && promoteValues) {\n          object[name] = buffer.slice(index, index + binarySize);\n        } else {\n          object[name] = new Binary(buffer.slice(index, index + binarySize), subType);\n        }\n      } else {\n        var _buffer =\n          typeof Uint8Array !== 'undefined'\n            ? new Uint8Array(new ArrayBuffer(binarySize))\n            : new Array(binarySize);\n        // If we have subtype 2 skip the 4 bytes for the size\n        if (subType === Binary.SUBTYPE_BYTE_ARRAY) {\n          binarySize =\n            buffer[index++] |\n            (buffer[index++] << 8) |\n            (buffer[index++] << 16) |\n            (buffer[index++] << 24);\n          if (binarySize < 0)\n            throw new Error('Negative binary type element size found for subtype 0x02');\n          if (binarySize > totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to long binary size');\n          if (binarySize < totalBinarySize - 4)\n            throw new Error('Binary type with subtype 0x02 contains to short binary size');\n        }\n\n        // Copy the data\n        for (i = 0; i < binarySize; i++) {\n          _buffer[i] = buffer[index + i];\n        }\n\n        if (promoteBuffers && promoteValues) {\n          object[name] = _buffer;\n        } else {\n          object[name] = new Binary(_buffer, subType);\n        }\n      }\n\n      // Update the index\n      index = index + binarySize;\n    } else if (elementType === BSON.BSON_DATA_REGEXP && bsonRegExp === false) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      var source = buffer.toString('utf8', index, i);\n      // Create the regexp\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      var regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // For each option add the corresponding one for javascript\n      var optionsArray = new Array(regExpOptions.length);\n\n      // Parse options\n      for (i = 0; i < regExpOptions.length; i++) {\n        switch (regExpOptions[i]) {\n          case 'm':\n            optionsArray[i] = 'm';\n            break;\n          case 's':\n            optionsArray[i] = 'g';\n            break;\n          case 'i':\n            optionsArray[i] = 'i';\n            break;\n        }\n      }\n\n      object[name] = new RegExp(source, optionsArray.join(''));\n    } else if (elementType === BSON.BSON_DATA_REGEXP && bsonRegExp === true) {\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      source = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Get the start search index\n      i = index;\n      // Locate the end of the c string\n      while (buffer[i] !== 0x00 && i < buffer.length) {\n        i++;\n      }\n      // If are at the end of the buffer there is a problem with the document\n      if (i >= buffer.length) throw new Error('Bad BSON Document: illegal CString');\n      // Return the C string\n      regExpOptions = buffer.toString('utf8', index, i);\n      index = i + 1;\n\n      // Set the object\n      object[name] = new BSONRegExp(source, regExpOptions);\n    } else if (elementType === BSON.BSON_DATA_SYMBOL) {\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      object[name] = new Symbol(buffer.toString('utf8', index, index + stringSize - 1));\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_TIMESTAMP) {\n      lowBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      highBits =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      object[name] = new Timestamp(lowBits, highBits);\n    } else if (elementType === BSON.BSON_DATA_MIN_KEY) {\n      object[name] = new MinKey();\n    } else if (elementType === BSON.BSON_DATA_MAX_KEY) {\n      object[name] = new MaxKey();\n    } else if (elementType === BSON.BSON_DATA_CODE) {\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      var functionString = buffer.toString('utf8', index, index + stringSize - 1);\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          var hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n        } else {\n          object[name] = isolateEval(functionString);\n        }\n      } else {\n        object[name] = new Code(functionString);\n      }\n\n      // Update parse index position\n      index = index + stringSize;\n    } else if (elementType === BSON.BSON_DATA_CODE_W_SCOPE) {\n      var totalSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n\n      // Element cannot be shorter than totalSize + stringSize + documentSize + terminator\n      if (totalSize < 4 + 4 + 4 + 1) {\n        throw new Error('code_w_scope total size shorter minimum expected length');\n      }\n\n      // Get the code string size\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n\n      // Javascript function\n      functionString = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n      // Parse the element\n      _index = index;\n      // Decode the size of the object document\n      objectSize =\n        buffer[index] |\n        (buffer[index + 1] << 8) |\n        (buffer[index + 2] << 16) |\n        (buffer[index + 3] << 24);\n      // Decode the scope object\n      var scopeObject = deserializeObject(buffer, _index, options, false);\n      // Adjust the index\n      index = index + objectSize;\n\n      // Check if field length is to short\n      if (totalSize < 4 + 4 + objectSize + stringSize) {\n        throw new Error('code_w_scope total size is to short, truncating scope');\n      }\n\n      // Check if totalSize field is to long\n      if (totalSize > 4 + 4 + objectSize + stringSize) {\n        throw new Error('code_w_scope total size is to long, clips outer document');\n      }\n\n      // If we are evaluating the functions\n      if (evalFunctions) {\n        // If we have cache enabled let's look for the md5 of the function in the cache\n        if (cacheFunctions) {\n          hash = cacheFunctionsCrc32 ? crc32(functionString) : functionString;\n          // Got to do this to avoid V8 deoptimizing the call due to finding eval\n          object[name] = isolateEvalWithHash(functionCache, hash, functionString, object);\n        } else {\n          object[name] = isolateEval(functionString);\n        }\n\n        object[name].scope = scopeObject;\n      } else {\n        object[name] = new Code(functionString, scopeObject);\n      }\n    } else if (elementType === BSON.BSON_DATA_DBPOINTER) {\n      // Get the code string size\n      stringSize =\n        buffer[index++] |\n        (buffer[index++] << 8) |\n        (buffer[index++] << 16) |\n        (buffer[index++] << 24);\n      // Check if we have a valid string\n      if (\n        stringSize <= 0 ||\n        stringSize > buffer.length - index ||\n        buffer[index + stringSize - 1] !== 0\n      )\n        throw new Error('bad string length in bson');\n      // Namespace\n      var namespace = buffer.toString('utf8', index, index + stringSize - 1);\n      // Update parse index position\n      index = index + stringSize;\n\n      // Read the oid\n      var oidBuffer = new Buffer(12);\n      buffer.copy(oidBuffer, 0, index, index + 12);\n      oid = new ObjectID(oidBuffer);\n\n      // Update the index\n      index = index + 12;\n\n      // Split the namespace\n      var parts = namespace.split('.');\n      var db = parts.shift();\n      var collection = parts.join('.');\n      // Upgrade to DBRef type\n      object[name] = new DBRef(collection, oid, db);\n    } else {\n      throw new Error(\n        'Detected unknown BSON type ' +\n          elementType.toString(16) +\n          ' for fieldname \"' +\n          name +\n          '\", are you using the latest BSON parser'\n      );\n    }\n  }\n\n  // Check if the deserialization was against a valid array/object\n  if (size !== index - startIndex) {\n    if (isArray) throw new Error('corrupt array bson');\n    throw new Error('corrupt object bson');\n  }\n\n  // Check if we have a db ref object\n  if (object['$id'] != null) object = new DBRef(object['$ref'], object['$id'], object['$db']);\n  return object;\n};\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEvalWithHash = function(functionCache, hash, functionString, object) {\n  // Contains the value we are going to set\n  var value = null;\n\n  // Check for cache hit, eval if missing and return cached function\n  if (functionCache[hash] == null) {\n    eval('value = ' + functionString);\n    functionCache[hash] = value;\n  }\n  // Set the object\n  return functionCache[hash].bind(object);\n};\n\n/**\n * Ensure eval is isolated.\n *\n * @ignore\n * @api private\n */\nvar isolateEval = function(functionString) {\n  // Contains the value we are going to set\n  var value = null;\n  // Eval the function\n  eval('value = ' + functionString);\n  return value;\n};\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\nvar functionCache = (BSON.functionCache = {});\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_DBPOINTER\n **/\nBSON.BSON_DATA_DBPOINTER = 12;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = deserialize;\n","'use strict';\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754,\n  Long = require('../long').Long,\n  MinKey = require('../min_key').MinKey,\n  Map = require('../map'),\n  Binary = require('../binary').Binary;\n\nvar normalizedFunctionString = require('./utils').normalizedFunctionString;\n\n// try {\n//   var _Buffer = Uint8Array;\n// } catch (e) {\n//   _Buffer = Buffer;\n// }\n\nvar regexp = /\\x00/; // eslint-disable-line no-control-regex\nvar ignoreKeys = ['$db', '$ref', '$id', '$clusterTime'];\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar isRegExp = function isRegExp(d) {\n  return Object.prototype.toString.call(d) === '[object RegExp]';\n};\n\nvar serializeString = function(buffer, key, value, index, isArray) {\n  // Encode String type\n  buffer[index++] = BSON.BSON_DATA_STRING;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes + 1;\n  buffer[index - 1] = 0;\n  // Write the string\n  var size = buffer.write(value, index + 4, 'utf8');\n  // Write the size of the string to buffer\n  buffer[index + 3] = ((size + 1) >> 24) & 0xff;\n  buffer[index + 2] = ((size + 1) >> 16) & 0xff;\n  buffer[index + 1] = ((size + 1) >> 8) & 0xff;\n  buffer[index] = (size + 1) & 0xff;\n  // Update index\n  index = index + 4 + size;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeNumber = function(buffer, key, value, index, isArray) {\n  // We have an integer value\n  if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n    // If the value fits in 32 bits encode as int, if it fits in a double\n    // encode it as a double, otherwise long\n    if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n      // Set int type 32 bits or less\n      buffer[index++] = BSON.BSON_DATA_INT;\n      // Number of written bytes\n      var numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write the int value\n      buffer[index++] = value & 0xff;\n      buffer[index++] = (value >> 8) & 0xff;\n      buffer[index++] = (value >> 16) & 0xff;\n      buffer[index++] = (value >> 24) & 0xff;\n    } else if (value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n      // Encode as double\n      buffer[index++] = BSON.BSON_DATA_NUMBER;\n      // Number of written bytes\n      numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      // Write float\n      writeIEEE754(buffer, value, index, 'little', 52, 8);\n      // Ajust index\n      index = index + 8;\n    } else {\n      // Set long type\n      buffer[index++] = BSON.BSON_DATA_LONG;\n      // Number of written bytes\n      numberOfWrittenBytes = !isArray\n        ? buffer.write(key, index, 'utf8')\n        : buffer.write(key, index, 'ascii');\n      // Encode the name\n      index = index + numberOfWrittenBytes;\n      buffer[index++] = 0;\n      var longVal = Long.fromNumber(value);\n      var lowBits = longVal.getLowBits();\n      var highBits = longVal.getHighBits();\n      // Encode low bits\n      buffer[index++] = lowBits & 0xff;\n      buffer[index++] = (lowBits >> 8) & 0xff;\n      buffer[index++] = (lowBits >> 16) & 0xff;\n      buffer[index++] = (lowBits >> 24) & 0xff;\n      // Encode high bits\n      buffer[index++] = highBits & 0xff;\n      buffer[index++] = (highBits >> 8) & 0xff;\n      buffer[index++] = (highBits >> 16) & 0xff;\n      buffer[index++] = (highBits >> 24) & 0xff;\n    }\n  } else {\n    // Encode as double\n    buffer[index++] = BSON.BSON_DATA_NUMBER;\n    // Number of written bytes\n    numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Write float\n    writeIEEE754(buffer, value, index, 'little', 52, 8);\n    // Ajust index\n    index = index + 8;\n  }\n\n  return index;\n};\n\nvar serializeNull = function(buffer, key, value, index, isArray) {\n  // Set long type\n  buffer[index++] = BSON.BSON_DATA_NULL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeBoolean = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BOOLEAN;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Encode the boolean value\n  buffer[index++] = value ? 1 : 0;\n  return index;\n};\n\nvar serializeDate = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_DATE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the date\n  var dateInMilis = Long.fromNumber(value.getTime());\n  var lowBits = dateInMilis.getLowBits();\n  var highBits = dateInMilis.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n};\n\nvar serializeRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  if (value.source && value.source.match(regexp) != null) {\n    throw Error('value ' + value.source + ' must not contain null bytes');\n  }\n  // Adjust the index\n  index = index + buffer.write(value.source, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the parameters\n  if (value.global) buffer[index++] = 0x73; // s\n  if (value.ignoreCase) buffer[index++] = 0x69; // i\n  if (value.multiline) buffer[index++] = 0x6d; // m\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeBSONRegExp = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_REGEXP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Check the pattern for 0 bytes\n  if (value.pattern.match(regexp) != null) {\n    // The BSON spec doesn't allow keys with null bytes because keys are\n    // null-terminated.\n    throw Error('pattern ' + value.pattern + ' must not contain null bytes');\n  }\n\n  // Adjust the index\n  index = index + buffer.write(value.pattern, index, 'utf8');\n  // Write zero\n  buffer[index++] = 0x00;\n  // Write the options\n  index =\n    index +\n    buffer.write(\n      value.options\n        .split('')\n        .sort()\n        .join(''),\n      index,\n      'utf8'\n    );\n  // Add ending zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeMinMax = function(buffer, key, value, index, isArray) {\n  // Write the type of either min or max key\n  if (value === null) {\n    buffer[index++] = BSON.BSON_DATA_NULL;\n  } else if (value instanceof MinKey) {\n    buffer[index++] = BSON.BSON_DATA_MIN_KEY;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_MAX_KEY;\n  }\n\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeObjectId = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OID;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  // Write the objectId into the shared buffer\n  if (typeof value.id === 'string') {\n    buffer.write(value.id, index, 'binary');\n  } else if (value.id && value.id.copy) {\n    value.id.copy(buffer, index, 0, 12);\n  } else {\n    throw new Error('object [' + JSON.stringify(value) + '] is not a valid ObjectId');\n  }\n\n  // Ajust index\n  return index + 12;\n};\n\nvar serializeBuffer = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Get size of the buffer (current write point)\n  var size = value.length;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the default subtype\n  buffer[index++] = BSON.BSON_BINARY_SUBTYPE_DEFAULT;\n  // Copy the content form the binary field to the buffer\n  value.copy(buffer, index, 0, size);\n  // Adjust the index\n  index = index + size;\n  return index;\n};\n\nvar serializeObject = function(\n  buffer,\n  key,\n  value,\n  index,\n  checkKeys,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  isArray,\n  path\n) {\n  for (var i = 0; i < path.length; i++) {\n    if (path[i] === value) throw new Error('cyclic dependency detected');\n  }\n\n  // Push value to stack\n  path.push(value);\n  // Write the type\n  buffer[index++] = Array.isArray(value) ? BSON.BSON_DATA_ARRAY : BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  var endIndex = serializeInto(\n    buffer,\n    value,\n    checkKeys,\n    index,\n    depth + 1,\n    serializeFunctions,\n    ignoreUndefined,\n    path\n  );\n  // Pop stack\n  path.pop();\n  // Write size\n  return endIndex;\n};\n\nvar serializeDecimal128 = function(buffer, key, value, index, isArray) {\n  buffer[index++] = BSON.BSON_DATA_DECIMAL128;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the data from the value\n  value.bytes.copy(buffer, index, 0, 16);\n  return index + 16;\n};\n\nvar serializeLong = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = value._bsontype === 'Long' ? BSON.BSON_DATA_LONG : BSON.BSON_DATA_TIMESTAMP;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the date\n  var lowBits = value.getLowBits();\n  var highBits = value.getHighBits();\n  // Encode low bits\n  buffer[index++] = lowBits & 0xff;\n  buffer[index++] = (lowBits >> 8) & 0xff;\n  buffer[index++] = (lowBits >> 16) & 0xff;\n  buffer[index++] = (lowBits >> 24) & 0xff;\n  // Encode high bits\n  buffer[index++] = highBits & 0xff;\n  buffer[index++] = (highBits >> 8) & 0xff;\n  buffer[index++] = (highBits >> 16) & 0xff;\n  buffer[index++] = (highBits >> 24) & 0xff;\n  return index;\n};\n\nvar serializeInt32 = function(buffer, key, value, index, isArray) {\n  // Set int type 32 bits or less\n  buffer[index++] = BSON.BSON_DATA_INT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the int value\n  buffer[index++] = value & 0xff;\n  buffer[index++] = (value >> 8) & 0xff;\n  buffer[index++] = (value >> 16) & 0xff;\n  buffer[index++] = (value >> 24) & 0xff;\n  return index;\n};\n\nvar serializeDouble = function(buffer, key, value, index, isArray) {\n  // Encode as double\n  buffer[index++] = BSON.BSON_DATA_NUMBER;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write float\n  writeIEEE754(buffer, value, index, 'little', 52, 8);\n  // Ajust index\n  index = index + 8;\n  return index;\n};\n\nvar serializeFunction = function(buffer, key, value, index, checkKeys, depth, isArray) {\n  buffer[index++] = BSON.BSON_DATA_CODE;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Function string\n  var functionString = normalizedFunctionString(value);\n\n  // Write the string\n  var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0;\n  return index;\n};\n\nvar serializeCode = function(\n  buffer,\n  key,\n  value,\n  index,\n  checkKeys,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  isArray\n) {\n  if (value.scope && typeof value.scope === 'object') {\n    // Write the type\n    buffer[index++] = BSON.BSON_DATA_CODE_W_SCOPE;\n    // Number of written bytes\n    var numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n\n    // Starting index\n    var startIndex = index;\n\n    // Serialize the function\n    // Get the function string\n    var functionString = typeof value.code === 'string' ? value.code : value.code.toString();\n    // Index adjustment\n    index = index + 4;\n    // Write string into buffer\n    var codeSize = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = codeSize & 0xff;\n    buffer[index + 1] = (codeSize >> 8) & 0xff;\n    buffer[index + 2] = (codeSize >> 16) & 0xff;\n    buffer[index + 3] = (codeSize >> 24) & 0xff;\n    // Write end 0\n    buffer[index + 4 + codeSize - 1] = 0;\n    // Write the\n    index = index + codeSize + 4;\n\n    //\n    // Serialize the scope value\n    var endIndex = serializeInto(\n      buffer,\n      value.scope,\n      checkKeys,\n      index,\n      depth + 1,\n      serializeFunctions,\n      ignoreUndefined\n    );\n    index = endIndex - 1;\n\n    // Writ the total\n    var totalSize = endIndex - startIndex;\n\n    // Write the total size of the object\n    buffer[startIndex++] = totalSize & 0xff;\n    buffer[startIndex++] = (totalSize >> 8) & 0xff;\n    buffer[startIndex++] = (totalSize >> 16) & 0xff;\n    buffer[startIndex++] = (totalSize >> 24) & 0xff;\n    // Write trailing zero\n    buffer[index++] = 0;\n  } else {\n    buffer[index++] = BSON.BSON_DATA_CODE;\n    // Number of written bytes\n    numberOfWrittenBytes = !isArray\n      ? buffer.write(key, index, 'utf8')\n      : buffer.write(key, index, 'ascii');\n    // Encode the name\n    index = index + numberOfWrittenBytes;\n    buffer[index++] = 0;\n    // Function string\n    functionString = value.code.toString();\n    // Write the string\n    var size = buffer.write(functionString, index + 4, 'utf8') + 1;\n    // Write the size of the string to buffer\n    buffer[index] = size & 0xff;\n    buffer[index + 1] = (size >> 8) & 0xff;\n    buffer[index + 2] = (size >> 16) & 0xff;\n    buffer[index + 3] = (size >> 24) & 0xff;\n    // Update index\n    index = index + 4 + size - 1;\n    // Write zero\n    buffer[index++] = 0;\n  }\n\n  return index;\n};\n\nvar serializeBinary = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_BINARY;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Extract the buffer\n  var data = value.value(true);\n  // Calculate size\n  var size = value.position;\n  // Add the deprecated 02 type 4 bytes of size to total\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) size = size + 4;\n  // Write the size of the string to buffer\n  buffer[index++] = size & 0xff;\n  buffer[index++] = (size >> 8) & 0xff;\n  buffer[index++] = (size >> 16) & 0xff;\n  buffer[index++] = (size >> 24) & 0xff;\n  // Write the subtype to the buffer\n  buffer[index++] = value.sub_type;\n\n  // If we have binary type 2 the 4 first bytes are the size\n  if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n    size = size - 4;\n    buffer[index++] = size & 0xff;\n    buffer[index++] = (size >> 8) & 0xff;\n    buffer[index++] = (size >> 16) & 0xff;\n    buffer[index++] = (size >> 24) & 0xff;\n  }\n\n  // Write the data to the object\n  data.copy(buffer, index, 0, value.position);\n  // Adjust the index\n  index = index + value.position;\n  return index;\n};\n\nvar serializeSymbol = function(buffer, key, value, index, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_SYMBOL;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n  // Write the string\n  var size = buffer.write(value.value, index + 4, 'utf8') + 1;\n  // Write the size of the string to buffer\n  buffer[index] = size & 0xff;\n  buffer[index + 1] = (size >> 8) & 0xff;\n  buffer[index + 2] = (size >> 16) & 0xff;\n  buffer[index + 3] = (size >> 24) & 0xff;\n  // Update index\n  index = index + 4 + size - 1;\n  // Write zero\n  buffer[index++] = 0x00;\n  return index;\n};\n\nvar serializeDBRef = function(buffer, key, value, index, depth, serializeFunctions, isArray) {\n  // Write the type\n  buffer[index++] = BSON.BSON_DATA_OBJECT;\n  // Number of written bytes\n  var numberOfWrittenBytes = !isArray\n    ? buffer.write(key, index, 'utf8')\n    : buffer.write(key, index, 'ascii');\n\n  // Encode the name\n  index = index + numberOfWrittenBytes;\n  buffer[index++] = 0;\n\n  var startIndex = index;\n  var endIndex;\n\n  // Serialize object\n  if (null != value.db) {\n    endIndex = serializeInto(\n      buffer,\n      {\n        $ref: value.namespace,\n        $id: value.oid,\n        $db: value.db\n      },\n      false,\n      index,\n      depth + 1,\n      serializeFunctions\n    );\n  } else {\n    endIndex = serializeInto(\n      buffer,\n      {\n        $ref: value.namespace,\n        $id: value.oid\n      },\n      false,\n      index,\n      depth + 1,\n      serializeFunctions\n    );\n  }\n\n  // Calculate object size\n  var size = endIndex - startIndex;\n  // Write the size\n  buffer[startIndex++] = size & 0xff;\n  buffer[startIndex++] = (size >> 8) & 0xff;\n  buffer[startIndex++] = (size >> 16) & 0xff;\n  buffer[startIndex++] = (size >> 24) & 0xff;\n  // Set index\n  return endIndex;\n};\n\nvar serializeInto = function serializeInto(\n  buffer,\n  object,\n  checkKeys,\n  startingIndex,\n  depth,\n  serializeFunctions,\n  ignoreUndefined,\n  path\n) {\n  startingIndex = startingIndex || 0;\n  path = path || [];\n\n  // Push the object to the path\n  path.push(object);\n\n  // Start place to serialize into\n  var index = startingIndex + 4;\n  // var self = this;\n\n  // Special case isArray\n  if (Array.isArray(object)) {\n    // Get object keys\n    for (var i = 0; i < object.length; i++) {\n      var key = '' + i;\n      var value = object[i];\n\n      // Is there an override value\n      if (value && value.toBSON) {\n        if (typeof value.toBSON !== 'function') throw new Error('toBSON is not a function');\n        value = value.toBSON();\n      }\n\n      var type = typeof value;\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index, true);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index, true);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index, true);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index, true);\n      } else if (value === undefined) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index, true);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index, true);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index, true);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index, true);\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          true\n        );\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          true\n        );\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions, true);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index, true);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index, true);\n      }\n    }\n  } else if (object instanceof Map) {\n    var iterator = object.entries();\n    var done = false;\n\n    while (!done) {\n      // Unpack the next entry\n      var entry = iterator.next();\n      done = entry.done;\n      // Are we done, then skip and terminate\n      if (done) continue;\n\n      // Get the entry values\n      key = entry.value[0];\n      value = entry.value[1];\n\n      // Check the type of the value\n      type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && ignoreKeys.indexOf(key) === -1) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n        // } else if (value === undefined && ignoreUndefined === true) {\n      } else if (value === null || (value === undefined && ignoreUndefined === false)) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  } else {\n    // Did we provide a custom serialization method\n    if (object.toBSON) {\n      if (typeof object.toBSON !== 'function') throw new Error('toBSON is not a function');\n      object = object.toBSON();\n      if (object != null && typeof object !== 'object')\n        throw new Error('toBSON function did not return an object');\n    }\n\n    // Iterate over all the keys\n    for (key in object) {\n      value = object[key];\n      // Is there an override value\n      if (value && value.toBSON) {\n        if (typeof value.toBSON !== 'function') throw new Error('toBSON is not a function');\n        value = value.toBSON();\n      }\n\n      // Check the type of the value\n      type = typeof value;\n\n      // Check the key and throw error if it's illegal\n      if (typeof key === 'string' && ignoreKeys.indexOf(key) === -1) {\n        if (key.match(regexp) != null) {\n          // The BSON spec doesn't allow keys with null bytes because keys are\n          // null-terminated.\n          throw Error('key ' + key + ' must not contain null bytes');\n        }\n\n        if (checkKeys) {\n          if ('$' === key[0]) {\n            throw Error('key ' + key + \" must not start with '$'\");\n          } else if (~key.indexOf('.')) {\n            throw Error('key ' + key + \" must not contain '.'\");\n          }\n        }\n      }\n\n      if (type === 'string') {\n        index = serializeString(buffer, key, value, index);\n      } else if (type === 'number') {\n        index = serializeNumber(buffer, key, value, index);\n      } else if (type === 'boolean') {\n        index = serializeBoolean(buffer, key, value, index);\n      } else if (value instanceof Date || isDate(value)) {\n        index = serializeDate(buffer, key, value, index);\n      } else if (value === undefined) {\n        if (ignoreUndefined === false) index = serializeNull(buffer, key, value, index);\n      } else if (value === null) {\n        index = serializeNull(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'ObjectID') {\n        index = serializeObjectId(buffer, key, value, index);\n      } else if (Buffer.isBuffer(value)) {\n        index = serializeBuffer(buffer, key, value, index);\n      } else if (value instanceof RegExp || isRegExp(value)) {\n        index = serializeRegExp(buffer, key, value, index);\n      } else if (type === 'object' && value['_bsontype'] == null) {\n        index = serializeObject(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined,\n          false,\n          path\n        );\n      } else if (type === 'object' && value['_bsontype'] === 'Decimal128') {\n        index = serializeDecimal128(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Long' || value['_bsontype'] === 'Timestamp') {\n        index = serializeLong(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Double') {\n        index = serializeDouble(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Code') {\n        index = serializeCode(\n          buffer,\n          key,\n          value,\n          index,\n          checkKeys,\n          depth,\n          serializeFunctions,\n          ignoreUndefined\n        );\n      } else if (typeof value === 'function' && serializeFunctions) {\n        index = serializeFunction(buffer, key, value, index, checkKeys, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'Binary') {\n        index = serializeBinary(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Symbol') {\n        index = serializeSymbol(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'DBRef') {\n        index = serializeDBRef(buffer, key, value, index, depth, serializeFunctions);\n      } else if (value['_bsontype'] === 'BSONRegExp') {\n        index = serializeBSONRegExp(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'Int32') {\n        index = serializeInt32(buffer, key, value, index);\n      } else if (value['_bsontype'] === 'MinKey' || value['_bsontype'] === 'MaxKey') {\n        index = serializeMinMax(buffer, key, value, index);\n      }\n    }\n  }\n\n  // Remove the path\n  path.pop();\n\n  // Final padding byte for object\n  buffer[index++] = 0x00;\n\n  // Final size\n  var size = index - startingIndex;\n  // Write the size of the object\n  buffer[startingIndex++] = size & 0xff;\n  buffer[startingIndex++] = (size >> 8) & 0xff;\n  buffer[startingIndex++] = (size >> 16) & 0xff;\n  buffer[startingIndex++] = (size >> 24) & 0xff;\n  return index;\n};\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\n// var functionCache = (BSON.functionCache = {});\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type, deprecated\n *\n * @classconstant BSON_DATA_UNDEFINED\n **/\nBSON.BSON_DATA_UNDEFINED = 6;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_DECIMAL128\n **/\nBSON.BSON_DATA_DECIMAL128 = 19;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\n// var JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000); // Any integer up to 2^53 can be precisely represented by a double.\n// var JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000); // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = serializeInto;\n","// Copyright (c) 2008, Fair Oaks Labs, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright notice,\n//    this list of conditions and the following disclaimer.\n//\n//  * Redistributions in binary form must reproduce the above copyright notice,\n//    this list of conditions and the following disclaimer in the documentation\n//    and/or other materials provided with the distribution.\n//\n//  * Neither the name of Fair Oaks Labs, Inc. nor the names of its contributors\n//    may be used to endorse or promote products derived from this software\n//    without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n//\n//\n// Modifications to writeIEEE754 to support negative zeroes made by Brian White\n\nvar readIEEE754 = function(buffer, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    nBits = -7,\n    i = bBE ? 0 : nBytes - 1,\n    d = bBE ? 1 : -1,\n    s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << -nBits) - 1);\n  s >>= -nBits;\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  m = e & ((1 << -nBits) - 1);\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nvar writeIEEE754 = function(buffer, value, offset, endian, mLen, nBytes) {\n  var e,\n    m,\n    c,\n    bBE = endian === 'big',\n    eLen = nBytes * 8 - mLen - 1,\n    eMax = (1 << eLen) - 1,\n    eBias = eMax >> 1,\n    rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,\n    i = bBE ? nBytes - 1 : 0,\n    d = bBE ? -1 : 1,\n    s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);\n\n  buffer[offset + i - d] |= s * 128;\n};\n\nexports.readIEEE754 = readIEEE754;\nexports.writeIEEE754 = writeIEEE754;\n","'use strict';\n\nvar Long = require('../long').Long,\n  Double = require('../double').Double,\n  Timestamp = require('../timestamp').Timestamp,\n  ObjectID = require('../objectid').ObjectID,\n  Symbol = require('../symbol').Symbol,\n  BSONRegExp = require('../regexp').BSONRegExp,\n  Code = require('../code').Code,\n  Decimal128 = require('../decimal128'),\n  MinKey = require('../min_key').MinKey,\n  MaxKey = require('../max_key').MaxKey,\n  DBRef = require('../db_ref').DBRef,\n  Binary = require('../binary').Binary;\n\nvar normalizedFunctionString = require('./utils').normalizedFunctionString;\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n};\n\nvar calculateObjectSize = function calculateObjectSize(\n  object,\n  serializeFunctions,\n  ignoreUndefined\n) {\n  var totalLength = 4 + 1;\n\n  if (Array.isArray(object)) {\n    for (var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(\n        i.toString(),\n        object[i],\n        serializeFunctions,\n        true,\n        ignoreUndefined\n      );\n    }\n  } else {\n    // If we have toBSON defined, override the current object\n    if (object.toBSON) {\n      object = object.toBSON();\n    }\n\n    // Calculate size\n    for (var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined);\n    }\n  }\n\n  return totalLength;\n};\n\n/**\n * @ignore\n * @api private\n */\nfunction calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {\n  // If we have toBSON defined, override the current object\n  if (value && value.toBSON) {\n    value = value.toBSON();\n  }\n\n  switch (typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if (Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if (value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) {\n          // 32 bit\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (4 + 1);\n        } else {\n          return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n        }\n      } else {\n        // 64 bit\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if (isArray || !ignoreUndefined)\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      return 0;\n    case 'boolean':\n      return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 1);\n    case 'object':\n      if (\n        value == null ||\n        value instanceof MinKey ||\n        value instanceof MaxKey ||\n        value['_bsontype'] === 'MinKey' ||\n        value['_bsontype'] === 'MaxKey'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + 1;\n      } else if (value instanceof ObjectID || value['_bsontype'] === 'ObjectID') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (12 + 1);\n      } else if (value instanceof Date || isDate(value)) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (1 + 4 + 1) + value.length\n        );\n      } else if (\n        value instanceof Long ||\n        value instanceof Double ||\n        value instanceof Timestamp ||\n        value['_bsontype'] === 'Long' ||\n        value['_bsontype'] === 'Double' ||\n        value['_bsontype'] === 'Timestamp'\n      ) {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (8 + 1);\n      } else if (value instanceof Decimal128 || value['_bsontype'] === 'Decimal128') {\n        return (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (16 + 1);\n      } else if (value instanceof Code || value['_bsontype'] === 'Code') {\n        // Calculate size depending on the availability of a scope\n        if (value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(value.code.toString(), 'utf8') +\n            1\n          );\n        }\n      } else if (value instanceof Binary || value['_bsontype'] === 'Binary') {\n        // Check what kind of subtype we have\n        if (value.sub_type === Binary.SUBTYPE_BYTE_ARRAY) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            (value.position + 1 + 4 + 1 + 4)\n          );\n        } else {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) + (value.position + 1 + 4 + 1)\n          );\n        }\n      } else if (value instanceof Symbol || value['_bsontype'] === 'Symbol') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          Buffer.byteLength(value.value, 'utf8') +\n          4 +\n          1 +\n          1\n        );\n      } else if (value instanceof DBRef || value['_bsontype'] === 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n          $ref: value.namespace,\n          $id: value.oid\n        };\n\n        // Add db reference if it exists\n        if (null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined)\n        );\n      } else if (\n        value instanceof RegExp ||\n        Object.prototype.toString.call(value) === '[object RegExp]'\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else if (value instanceof BSONRegExp || value['_bsontype'] === 'BSONRegExp') {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.pattern, 'utf8') +\n          1 +\n          Buffer.byteLength(value.options, 'utf8') +\n          1\n        );\n      } else {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          calculateObjectSize(value, serializeFunctions, ignoreUndefined) +\n          1\n        );\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if (\n        value instanceof RegExp ||\n        Object.prototype.toString.call(value) === '[object RegExp]' ||\n        String.call(value) === '[object RegExp]'\n      ) {\n        return (\n          (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n          1 +\n          Buffer.byteLength(value.source, 'utf8') +\n          1 +\n          (value.global ? 1 : 0) +\n          (value.ignoreCase ? 1 : 0) +\n          (value.multiline ? 1 : 0) +\n          1\n        );\n      } else {\n        if (serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            4 +\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\n            1 +\n            calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined)\n          );\n        } else if (serializeFunctions) {\n          return (\n            (name != null ? Buffer.byteLength(name, 'utf8') + 1 : 0) +\n            1 +\n            4 +\n            Buffer.byteLength(normalizedFunctionString(value), 'utf8') +\n            1\n          );\n        }\n      }\n  }\n\n  return 0;\n}\n\nvar BSON = {};\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7fffffff;\nBSON.BSON_INT32_MIN = -0x80000000;\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000; // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000; // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = calculateObjectSize;\n","'use strict';\nvar path = require('path');\nvar Module = require('module');\n\nmodule.exports = function (fromDir, moduleId) {\n\tif (typeof fromDir !== 'string' || typeof moduleId !== 'string') {\n\t\tthrow new TypeError('Expected `fromDir` and `moduleId` to be a string');\n\t}\n\n\tfromDir = path.resolve(fromDir);\n\n\tvar fromFile = path.join(fromDir, 'noop.js');\n\n\ttry {\n\t\treturn Module._resolveFilename(moduleId, {\n\t\t\tid: fromFile,\n\t\t\tfilename: fromFile,\n\t\t\tpaths: Module._nodeModulePaths(fromDir)\n\t\t});\n\t} catch (err) {\n\t\treturn null;\n\t}\n};\n","module.exports = require(\"module\");","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = options.loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, options);\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, options);\n\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.options.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function(comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, options);\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.options.loose;\n  range = range.trim();\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (!options)\n    options = {}\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst EventEmitter = require('events').EventEmitter;\nconst Connection = require('./connection');\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst MongoWriteConcernError = require('../error').MongoWriteConcernError;\nconst Logger = require('./logger');\nconst f = require('util').format;\nconst Query = require('./commands').Query;\nconst CommandResult = require('./command_result');\nconst MESSAGE_HEADER_SIZE = require('../wireprotocol/shared').MESSAGE_HEADER_SIZE;\nconst opcodes = require('../wireprotocol/shared').opcodes;\nconst compress = require('../wireprotocol/compression').compress;\nconst compressorIDs = require('../wireprotocol/compression').compressorIDs;\nconst uncompressibleCommands = require('../wireprotocol/compression').uncompressibleCommands;\nconst resolveClusterTime = require('../topologies/shared').resolveClusterTime;\nconst apm = require('./apm');\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\nconst Buffer = require('safe-buffer').Buffer;\n\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar DESTROYING = 'destroying';\nvar DESTROYED = 'destroyed';\n\nvar _id = 0;\n\nfunction hasSessionSupport(topology) {\n  if (topology == null) return false;\n  return topology.ismaster == null ? false : topology.ismaster.maxWireVersion >= 6;\n}\n\n/**\n * Creates a new Pool instance\n * @class\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Max server connection pool size\n * @param {number} [options.minSize=0] Minimum server connection pool size\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=300000] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=30000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=360000] TCP Socket timeout setting\n * @param {number} [options.monitoringSocketTimeout=30000] TCP Socket timeout setting for replicaset monitoring socket\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passPhrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=false] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @fires Pool#connect\n * @fires Pool#close\n * @fires Pool#error\n * @fires Pool#timeout\n * @fires Pool#parseError\n * @return {Pool} A cursor instance\n */\nvar Pool = function(topology, options) {\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Store topology for later use\n  this.topology = topology;\n\n  // Add the options\n  this.options = Object.assign(\n    {\n      // Host and port settings\n      host: 'localhost',\n      port: 27017,\n      // Pool default max size\n      size: 5,\n      // Pool default min size\n      minSize: 0,\n      // socket settings\n      connectionTimeout: 30000,\n      socketTimeout: 360000,\n      keepAlive: true,\n      keepAliveInitialDelay: 300000,\n      noDelay: true,\n      // SSL Settings\n      ssl: false,\n      checkServerIdentity: true,\n      ca: null,\n      crl: null,\n      cert: null,\n      key: null,\n      passPhrase: null,\n      rejectUnauthorized: false,\n      promoteLongs: true,\n      promoteValues: true,\n      promoteBuffers: false,\n      // Reconnection options\n      reconnect: true,\n      reconnectInterval: 1000,\n      reconnectTries: 30,\n      // Enable domains\n      domainsEnabled: false\n    },\n    options\n  );\n\n  // Identification information\n  this.id = _id++;\n  // Current reconnect retries\n  this.retriesLeft = this.options.reconnectTries;\n  this.reconnectId = null;\n  // No bson parser passed in\n  if (\n    !options.bson ||\n    (options.bson &&\n      (typeof options.bson.serialize !== 'function' ||\n        typeof options.bson.deserialize !== 'function'))\n  ) {\n    throw new Error('must pass in valid bson parser');\n  }\n\n  // Logger instance\n  this.logger = Logger('Pool', options);\n  // Pool state\n  this.state = DISCONNECTED;\n  // Connections\n  this.availableConnections = [];\n  this.inUseConnections = [];\n  this.connectingConnections = [];\n  // Currently executing\n  this.executing = false;\n  // Operation work queue\n  this.queue = [];\n\n  // All the authProviders\n  this.authProviders = options.authProviders || defaultAuthProviders(options.bson);\n\n  // Contains the reconnect connection\n  this.reconnectConnection = null;\n\n  // Are we currently authenticating\n  this.authenticating = false;\n  this.loggingout = false;\n  this.nonAuthenticatedConnections = [];\n  this.authenticatingTimestamp = null;\n  // Number of consecutive timeouts caught\n  this.numberOfConsecutiveTimeouts = 0;\n  // Current pool Index\n  this.connectionIndex = 0;\n};\n\ninherits(Pool, EventEmitter);\n\nObject.defineProperty(Pool.prototype, 'size', {\n  enumerable: true,\n  get: function() {\n    return this.options.size;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'minSize', {\n  enumerable: true,\n  get: function() {\n    return this.options.minSize;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'connectionTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.connectionTimeout;\n  }\n});\n\nObject.defineProperty(Pool.prototype, 'socketTimeout', {\n  enumerable: true,\n  get: function() {\n    return this.options.socketTimeout;\n  }\n});\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYING, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYING, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYING],\n    destroying: [DESTROYING, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.emit('stateChanged', self.state, newState);\n    self.state = newState;\n  } else {\n    self.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\nfunction authenticate(pool, auth, connection, cb) {\n  if (auth[0] === undefined) return cb(null);\n  // We need to authenticate the server\n  var mechanism = auth[0];\n  var db = auth[1];\n  // Validate if the mechanism exists\n  if (!pool.authProviders[mechanism]) {\n    throw new MongoError(f('authMechanism %s not supported', mechanism));\n  }\n\n  // Get the provider\n  var provider = pool.authProviders[mechanism];\n\n  // Authenticate using the provided mechanism\n  provider.auth.apply(provider, [write(pool), [connection], db].concat(auth.slice(2)).concat([cb]));\n}\n\n// The write function used by the authentication mechanism (bypasses external)\nfunction write(self) {\n  return function(connection, command, callback) {\n    // Get the raw buffer\n    // Ensure we stop auth if pool was destroyed\n    if (self.state === DESTROYED || self.state === DESTROYING) {\n      return callback(new MongoError('pool destroyed'));\n    }\n\n    // Set the connection workItem callback\n    connection.workItems.push({\n      cb: callback,\n      command: true,\n      requestId: command.requestId\n    });\n\n    // Write the buffer out to the connection\n    connection.write(command.toBin());\n  };\n}\n\nfunction reauthenticate(pool, connection, cb) {\n  // Authenticate\n  function authenticateAgainstProvider(pool, connection, providers, cb) {\n    // Finished re-authenticating against providers\n    if (providers.length === 0) return cb();\n    // Get the provider name\n    var provider = pool.authProviders[providers.pop()];\n\n    // Auth provider\n    provider.reauthenticate(write(pool), [connection], function(err) {\n      // We got an error return immediately\n      if (err) return cb(err);\n      // Continue authenticating the connection\n      authenticateAgainstProvider(pool, connection, providers, cb);\n    });\n  }\n\n  // Start re-authenticating process\n  authenticateAgainstProvider(pool, connection, Object.keys(pool.authProviders), cb);\n}\n\nfunction connectionFailureHandler(self, event) {\n  return function(err) {\n    if (this._connectionFailHandled) return;\n    this._connectionFailHandled = true;\n    // Destroy the connection\n    this.destroy();\n\n    // Remove the connection\n    removeConnection(self, this);\n\n    // Flush all work Items on this connection\n    while (this.workItems.length > 0) {\n      var workItem = this.workItems.shift();\n      if (workItem.cb) workItem.cb(err);\n    }\n\n    // Did we catch a timeout, increment the numberOfConsecutiveTimeouts\n    if (event === 'timeout') {\n      self.numberOfConsecutiveTimeouts = self.numberOfConsecutiveTimeouts + 1;\n\n      // Have we timed out more than reconnectTries in a row ?\n      // Force close the pool as we are trying to connect to tcp sink hole\n      if (self.numberOfConsecutiveTimeouts > self.options.reconnectTries) {\n        self.numberOfConsecutiveTimeouts = 0;\n        // Destroy all connections and pool\n        self.destroy(true);\n        // Emit close event\n        return self.emit('close', self);\n      }\n    }\n\n    // No more socket available propegate the event\n    if (self.socketCount() === 0) {\n      if (self.state !== DESTROYED && self.state !== DESTROYING) {\n        stateTransition(self, DISCONNECTED);\n      }\n\n      // Do not emit error events, they are always close events\n      // do not trigger the low level error handler in node\n      event = event === 'error' ? 'close' : event;\n      self.emit(event, err);\n    }\n\n    // Start reconnection attempts\n    if (!self.reconnectId && self.options.reconnect) {\n      self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n    }\n\n    // Do we need to do anything to maintain the minimum pool size\n    const totalConnections =\n      self.availableConnections.length +\n      self.connectingConnections.length +\n      self.inUseConnections.length;\n\n    if (totalConnections < self.minSize) {\n      _createConnection(self);\n    }\n  };\n}\n\nfunction attemptReconnect(self) {\n  return function() {\n    self.emit('attemptReconnect', self);\n    if (self.state === DESTROYED || self.state === DESTROYING) return;\n\n    // We are connected do not try again\n    if (self.isConnected()) {\n      self.reconnectId = null;\n      return;\n    }\n\n    // If we have failure schedule a retry\n    function _connectionFailureHandler(self) {\n      return function() {\n        if (this._connectionFailHandled) return;\n        this._connectionFailHandled = true;\n        // Destroy the connection\n        this.destroy();\n        // Count down the number of reconnects\n        self.retriesLeft = self.retriesLeft - 1;\n        // How many retries are left\n        if (self.retriesLeft <= 0) {\n          // Destroy the instance\n          self.destroy();\n          // Emit close event\n          self.emit(\n            'reconnectFailed',\n            new MongoNetworkError(\n              f(\n                'failed to reconnect after %s attempts with interval %s ms',\n                self.options.reconnectTries,\n                self.options.reconnectInterval\n              )\n            )\n          );\n        } else {\n          self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n        }\n      };\n    }\n\n    // Got a connect handler\n    function _connectHandler(self) {\n      return function() {\n        // Assign\n        var connection = this;\n\n        // Pool destroyed stop the connection\n        if (self.state === DESTROYED || self.state === DESTROYING) {\n          return connection.destroy();\n        }\n\n        // Clear out all handlers\n        handlers.forEach(function(event) {\n          connection.removeAllListeners(event);\n        });\n\n        // Reset reconnect id\n        self.reconnectId = null;\n\n        // Apply pool connection handlers\n        connection.on('error', connectionFailureHandler(self, 'error'));\n        connection.on('close', connectionFailureHandler(self, 'close'));\n        connection.on('timeout', connectionFailureHandler(self, 'timeout'));\n        connection.on('parseError', connectionFailureHandler(self, 'parseError'));\n\n        // Apply any auth to the connection\n        reauthenticate(self, this, function() {\n          // Reset retries\n          self.retriesLeft = self.options.reconnectTries;\n          // Push to available connections\n          self.availableConnections.push(connection);\n          // Set the reconnectConnection to null\n          self.reconnectConnection = null;\n          // Emit reconnect event\n          self.emit('reconnect', self);\n          // Trigger execute to start everything up again\n          _execute(self)();\n        });\n      };\n    }\n\n    // Create a connection\n    self.reconnectConnection = new Connection(messageHandler(self), self.options);\n    // Add handlers\n    self.reconnectConnection.on('close', _connectionFailureHandler(self, 'close'));\n    self.reconnectConnection.on('error', _connectionFailureHandler(self, 'error'));\n    self.reconnectConnection.on('timeout', _connectionFailureHandler(self, 'timeout'));\n    self.reconnectConnection.on('parseError', _connectionFailureHandler(self, 'parseError'));\n    // On connection\n    self.reconnectConnection.on('connect', _connectHandler(self));\n    // Attempt connection\n    self.reconnectConnection.connect();\n  };\n}\n\nfunction moveConnectionBetween(connection, from, to) {\n  var index = from.indexOf(connection);\n  // Move the connection from connecting to available\n  if (index !== -1) {\n    from.splice(index, 1);\n    to.push(connection);\n  }\n}\n\nfunction messageHandler(self) {\n  return function(message, connection) {\n    // workItem to execute\n    var workItem = null;\n\n    // Locate the workItem\n    for (var i = 0; i < connection.workItems.length; i++) {\n      if (connection.workItems[i].requestId === message.responseTo) {\n        // Get the callback\n        workItem = connection.workItems[i];\n        // Remove from list of workItems\n        connection.workItems.splice(i, 1);\n      }\n    }\n\n    // Reset timeout counter\n    self.numberOfConsecutiveTimeouts = 0;\n\n    // Reset the connection timeout if we modified it for\n    // this operation\n    if (workItem && workItem.socketTimeout) {\n      connection.resetSocketTimeout();\n    }\n\n    // Log if debug enabled\n    if (self.logger.isDebug()) {\n      self.logger.debug(\n        f(\n          'message [%s] received from %s:%s',\n          message.raw.toString('hex'),\n          self.options.host,\n          self.options.port\n        )\n      );\n    }\n\n    // Authenticate any straggler connections\n    function authenticateStragglers(self, connection, callback) {\n      // Get any non authenticated connections\n      var connections = self.nonAuthenticatedConnections.slice(0);\n      var nonAuthenticatedConnections = self.nonAuthenticatedConnections;\n      self.nonAuthenticatedConnections = [];\n\n      // Establish if the connection need to be authenticated\n      // Add to authentication list if\n      // 1. we were in an authentication process when the operation was executed\n      // 2. our current authentication timestamp is from the workItem one, meaning an auth has happened\n      if (\n        connection.workItems.length === 1 &&\n        (connection.workItems[0].authenticating === true ||\n          (typeof connection.workItems[0].authenticatingTimestamp === 'number' &&\n            connection.workItems[0].authenticatingTimestamp !== self.authenticatingTimestamp))\n      ) {\n        // Add connection to the list\n        connections.push(connection);\n      }\n\n      // No connections need to be re-authenticated\n      if (connections.length === 0) {\n        // Release the connection back to the pool\n        moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n        // Finish\n        return callback();\n      }\n\n      // Apply re-authentication to all connections before releasing back to pool\n      var connectionCount = connections.length;\n      // Authenticate all connections\n      for (var i = 0; i < connectionCount; i++) {\n        reauthenticate(self, connections[i], function() {\n          connectionCount = connectionCount - 1;\n\n          if (connectionCount === 0) {\n            // Put non authenticated connections in available connections\n            self.availableConnections = self.availableConnections.concat(\n              nonAuthenticatedConnections\n            );\n            // Release the connection back to the pool\n            moveConnectionBetween(connection, self.inUseConnections, self.availableConnections);\n            // Return\n            callback();\n          }\n        });\n      }\n    }\n\n    function handleOperationCallback(self, cb, err, result) {\n      // No domain enabled\n      if (!self.options.domainsEnabled) {\n        return process.nextTick(function() {\n          return cb(err, result);\n        });\n      }\n\n      // Domain enabled just call the callback\n      cb(err, result);\n    }\n\n    authenticateStragglers(self, connection, function() {\n      // Keep executing, ensure current message handler does not stop execution\n      if (!self.executing) {\n        process.nextTick(function() {\n          _execute(self)();\n        });\n      }\n\n      // Time to dispatch the message if we have a callback\n      if (workItem && !workItem.immediateRelease) {\n        try {\n          // Parse the message according to the provided options\n          message.parse(workItem);\n        } catch (err) {\n          return handleOperationCallback(self, workItem.cb, new MongoError(err));\n        }\n\n        // Look for clusterTime, and operationTime and update them if necessary\n        if (message.documents[0]) {\n          if (message.documents[0].$clusterTime) {\n            const $clusterTime = message.documents[0].$clusterTime;\n            self.topology.clusterTime = $clusterTime;\n\n            if (workItem.session != null) {\n              resolveClusterTime(workItem.session, $clusterTime);\n            }\n          }\n\n          if (\n            message.documents[0].operationTime &&\n            workItem.session &&\n            workItem.session.supports.causalConsistency\n          ) {\n            workItem.session.advanceOperationTime(message.documents[0].operationTime);\n          }\n        }\n\n        // Establish if we have an error\n        if (workItem.command && message.documents[0]) {\n          const responseDoc = message.documents[0];\n          if (responseDoc.ok === 0 || responseDoc.$err || responseDoc.errmsg || responseDoc.code) {\n            return handleOperationCallback(self, workItem.cb, new MongoError(responseDoc));\n          }\n\n          if (responseDoc.writeConcernError) {\n            const err =\n              responseDoc.ok === 1\n                ? new MongoWriteConcernError(responseDoc.writeConcernError, responseDoc)\n                : new MongoWriteConcernError(responseDoc.writeConcernError);\n            return handleOperationCallback(self, workItem.cb, err);\n          }\n        }\n\n        // Add the connection details\n        message.hashedName = connection.hashedName;\n\n        // Return the documents\n        handleOperationCallback(\n          self,\n          workItem.cb,\n          null,\n          new CommandResult(\n            workItem.fullResult ? message : message.documents[0],\n            connection,\n            message\n          )\n        );\n      }\n    });\n  };\n}\n\n/**\n * Return the total socket count in the pool.\n * @method\n * @return {Number} The number of socket available.\n */\nPool.prototype.socketCount = function() {\n  return this.availableConnections.length + this.inUseConnections.length;\n  // + this.connectingConnections.length;\n};\n\n/**\n * Return all pool connections\n * @method\n * @return {Connection[]} The pool connections\n */\nPool.prototype.allConnections = function() {\n  return this.availableConnections.concat(this.inUseConnections).concat(this.connectingConnections);\n};\n\n/**\n * Get a pool connection (round-robin)\n * @method\n * @return {Connection}\n */\nPool.prototype.get = function() {\n  return this.allConnections()[0];\n};\n\n/**\n * Is the pool connected\n * @method\n * @return {boolean}\n */\nPool.prototype.isConnected = function() {\n  // We are in a destroyed state\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    return false;\n  }\n\n  // Get connections\n  var connections = this.availableConnections.concat(this.inUseConnections);\n\n  // Check if we have any connected connections\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i].isConnected()) return true;\n  }\n\n  // Might be authenticating, but we are still connected\n  if (connections.length === 0 && this.authenticating) {\n    return true;\n  }\n\n  // Not connected\n  return false;\n};\n\n/**\n * Was the pool destroyed\n * @method\n * @return {boolean}\n */\nPool.prototype.isDestroyed = function() {\n  return this.state === DESTROYED || this.state === DESTROYING;\n};\n\n/**\n * Is the pool in a disconnected state\n * @method\n * @return {boolean}\n */\nPool.prototype.isDisconnected = function() {\n  return this.state === DISCONNECTED;\n};\n\n/**\n * Connect pool\n * @method\n */\nPool.prototype.connect = function() {\n  if (this.state !== DISCONNECTED) {\n    throw new MongoError('connection in unlawful state ' + this.state);\n  }\n\n  var self = this;\n  // Transition to connecting state\n  stateTransition(this, CONNECTING);\n  // Create an array of the arguments\n  var args = Array.prototype.slice.call(arguments, 0);\n  // Create a connection\n  var connection = new Connection(messageHandler(self), this.options);\n  // Add to list of connections\n  this.connectingConnections.push(connection);\n  // Add listeners to the connection\n  connection.once('connect', function(connection) {\n    if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n    // If we are in a topology, delegate the auth to it\n    // This is to avoid issues where we would auth against an\n    // arbiter\n    if (self.options.inTopology) {\n      // Set connected mode\n      stateTransition(self, CONNECTED);\n\n      // Move the active connection\n      moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);\n\n      // Emit the connect event\n      return self.emit('connect', self);\n    }\n\n    // Apply any store credentials\n    reauthenticate(self, connection, function(err) {\n      if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n      // We have an error emit it\n      if (err) {\n        // Destroy the pool\n        self.destroy();\n        // Emit the error\n        return self.emit('error', err);\n      }\n\n      // Authenticate\n      authenticate(self, args, connection, function(err) {\n        if (self.state === DESTROYED || self.state === DESTROYING) return self.destroy();\n\n        // We have an error emit it\n        if (err) {\n          // Destroy the pool\n          self.destroy();\n          // Emit the error\n          return self.emit('error', err);\n        }\n        // Set connected mode\n        stateTransition(self, CONNECTED);\n\n        // Move the active connection\n        moveConnectionBetween(connection, self.connectingConnections, self.availableConnections);\n\n        // if we have a minPoolSize, create a connection\n        if (self.minSize) {\n          for (let i = 0; i < self.minSize; i++) _createConnection(self);\n        }\n\n        // Emit the connect event\n        self.emit('connect', self);\n      });\n    });\n  });\n\n  // Add error handlers\n  connection.once('error', connectionFailureHandler(this, 'error'));\n  connection.once('close', connectionFailureHandler(this, 'close'));\n  connection.once('timeout', connectionFailureHandler(this, 'timeout'));\n  connection.once('parseError', connectionFailureHandler(this, 'parseError'));\n\n  try {\n    connection.connect();\n  } catch (err) {\n    // SSL or something threw on connect\n    process.nextTick(function() {\n      self.emit('error', err);\n    });\n  }\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.auth = function(mechanism) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  var callback = args.pop();\n\n  // If we don't have the mechanism fail\n  if (self.authProviders[mechanism] == null && mechanism !== 'default') {\n    throw new MongoError(f('auth provider %s does not exist', mechanism));\n  }\n\n  // Signal that we are authenticating a new set of credentials\n  this.authenticating = true;\n  this.authenticatingTimestamp = new Date().getTime();\n\n  // Authenticate all live connections\n  function authenticateLiveConnections(self, args, cb) {\n    // Get the current viable connections\n    var connections = self.allConnections();\n    // Allow nothing else to use the connections while we authenticate them\n    self.availableConnections = [];\n    self.inUseConnections = [];\n    self.connectingConnections = [];\n\n    var connectionsCount = connections.length;\n    var error = null;\n    // No connections available, return\n    if (connectionsCount === 0) {\n      self.authenticating = false;\n      return callback(null);\n    }\n\n    // Authenticate the connections\n    for (var i = 0; i < connections.length; i++) {\n      authenticate(self, args, connections[i], function(err, result) {\n        connectionsCount = connectionsCount - 1;\n\n        // Store the error\n        if (err) error = err;\n\n        // Processed all connections\n        if (connectionsCount === 0) {\n          // Auth finished\n          self.authenticating = false;\n          // Add the connections back to available connections\n          self.availableConnections = self.availableConnections.concat(connections);\n          // We had an error, return it\n          if (error) {\n            // Log the error\n            if (self.logger.isError()) {\n              self.logger.error(\n                f(\n                  '[%s] failed to authenticate against server %s:%s',\n                  self.id,\n                  self.options.host,\n                  self.options.port\n                )\n              );\n            }\n\n            return cb(error, result);\n          }\n          cb(null, result);\n        }\n      });\n    }\n  }\n\n  // Wait for a logout in process to happen\n  function waitForLogout(self, cb) {\n    if (!self.loggingout) return cb();\n    setTimeout(function() {\n      waitForLogout(self, cb);\n    }, 1);\n  }\n\n  // Wait for loggout to finish\n  waitForLogout(self, function() {\n    // Authenticate all live connections\n    authenticateLiveConnections(self, args, function(err, result) {\n      // Credentials correctly stored in auth provider if successful\n      // Any new connections will now reauthenticate correctly\n      self.authenticating = false;\n      // Return after authentication connections\n      callback(err, result);\n    });\n  });\n};\n\n/**\n * Logout all users against a database\n * @method\n * @param {string} dbName The database name\n * @param {authResultCallback} callback A callback function\n */\nPool.prototype.logout = function(dbName, callback) {\n  var self = this;\n  if (typeof dbName !== 'string') {\n    throw new MongoError('logout method requires a db name as first argument');\n  }\n\n  if (typeof callback !== 'function') {\n    throw new MongoError('logout method requires a callback');\n  }\n\n  // Indicate logout in process\n  this.loggingout = true;\n\n  // Get all relevant connections\n  var connections = self.availableConnections.concat(self.inUseConnections);\n  var count = connections.length;\n  // Store any error\n  var error = null;\n\n  // Send logout command over all the connections\n  for (var i = 0; i < connections.length; i++) {\n    write(self)(\n      connections[i],\n      new Query(\n        this.options.bson,\n        f('%s.$cmd', dbName),\n        { logout: 1 },\n        { numberToSkip: 0, numberToReturn: 1 }\n      ),\n      function(err) {\n        count = count - 1;\n        if (err) error = err;\n\n        if (count === 0) {\n          self.loggingout = false;\n          callback(error);\n        }\n      }\n    );\n  }\n};\n\n/**\n * Unref the pool\n * @method\n */\nPool.prototype.unref = function() {\n  // Get all the known connections\n  var connections = this.availableConnections\n    .concat(this.inUseConnections)\n    .concat(this.connectingConnections);\n  connections.forEach(function(c) {\n    c.unref();\n  });\n};\n\n// Events\nvar events = ['error', 'close', 'timeout', 'parseError', 'connect'];\n\n// Destroy the connections\nfunction destroy(self, connections) {\n  // Destroy all connections\n  connections.forEach(function(c) {\n    // Remove all listeners\n    for (var i = 0; i < events.length; i++) {\n      c.removeAllListeners(events[i]);\n    }\n    // Destroy connection\n    c.destroy();\n  });\n\n  // Zero out all connections\n  self.inUseConnections = [];\n  self.availableConnections = [];\n  self.nonAuthenticatedConnections = [];\n  self.connectingConnections = [];\n\n  // Set state to destroyed\n  stateTransition(self, DESTROYED);\n}\n\n/**\n * Destroy pool\n * @method\n */\nPool.prototype.destroy = function(force) {\n  var self = this;\n  // Do not try again if the pool is already dead\n  if (this.state === DESTROYED || self.state === DESTROYING) return;\n  // Set state to destroyed\n  stateTransition(this, DESTROYING);\n\n  // Are we force closing\n  if (force) {\n    // Get all the known connections\n    var connections = self.availableConnections\n      .concat(self.inUseConnections)\n      .concat(self.nonAuthenticatedConnections)\n      .concat(self.connectingConnections);\n\n    // Flush any remaining work items with\n    // an error\n    while (self.queue.length > 0) {\n      var workItem = self.queue.shift();\n      if (typeof workItem.cb === 'function') {\n        workItem.cb(new MongoError('Pool was force destroyed'));\n      }\n    }\n\n    // Destroy the topology\n    return destroy(self, connections);\n  }\n\n  // Clear out the reconnect if set\n  if (this.reconnectId) {\n    clearTimeout(this.reconnectId);\n  }\n\n  // If we have a reconnect connection running, close\n  // immediately\n  if (this.reconnectConnection) {\n    this.reconnectConnection.destroy();\n  }\n\n  // Wait for the operations to drain before we close the pool\n  function checkStatus() {\n    flushMonitoringOperations(self.queue);\n\n    if (self.queue.length === 0) {\n      // Get all the known connections\n      var connections = self.availableConnections\n        .concat(self.inUseConnections)\n        .concat(self.nonAuthenticatedConnections)\n        .concat(self.connectingConnections);\n\n      // Check if we have any in flight operations\n      for (var i = 0; i < connections.length; i++) {\n        // There is an operation still in flight, reschedule a\n        // check waiting for it to drain\n        if (connections[i].workItems.length > 0) {\n          return setTimeout(checkStatus, 1);\n        }\n      }\n\n      destroy(self, connections);\n      // } else if (self.queue.length > 0 && !this.reconnectId) {\n    } else {\n      // Ensure we empty the queue\n      _execute(self)();\n      // Set timeout\n      setTimeout(checkStatus, 1);\n    }\n  }\n\n  // Initiate drain of operations\n  checkStatus();\n};\n\n// Prepare the buffer that Pool.prototype.write() uses to send to the server\nvar serializeCommands = function(self, commands, result, callback) {\n  // Base case when there are no more commands to serialize\n  if (commands.length === 0) return callback(null, result);\n\n  // Pop off the zeroth command and serialize it\n  var thisCommand = commands.shift();\n  var originalCommandBuffer = thisCommand.toBin();\n\n  // Check whether we and the server have agreed to use a compressor\n  if (self.options.agreedCompressor && !hasUncompressibleCommands(thisCommand)) {\n    // Transform originalCommandBuffer into OP_COMPRESSED\n    var concatenatedOriginalCommandBuffer = Buffer.concat(originalCommandBuffer);\n    var messageToBeCompressed = concatenatedOriginalCommandBuffer.slice(MESSAGE_HEADER_SIZE);\n\n    // Extract information needed for OP_COMPRESSED from the uncompressed message\n    var originalCommandOpCode = concatenatedOriginalCommandBuffer.readInt32LE(12);\n\n    // Compress the message body\n    compress(self, messageToBeCompressed, function(err, compressedMessage) {\n      if (err) return callback(err, null);\n\n      // Create the msgHeader of OP_COMPRESSED\n      var msgHeader = Buffer.alloc(MESSAGE_HEADER_SIZE);\n      msgHeader.writeInt32LE(MESSAGE_HEADER_SIZE + 9 + compressedMessage.length, 0); // messageLength\n      msgHeader.writeInt32LE(thisCommand.requestId, 4); // requestID\n      msgHeader.writeInt32LE(0, 8); // responseTo (zero)\n      msgHeader.writeInt32LE(opcodes.OP_COMPRESSED, 12); // opCode\n\n      // Create the compression details of OP_COMPRESSED\n      var compressionDetails = Buffer.alloc(9);\n      compressionDetails.writeInt32LE(originalCommandOpCode, 0); // originalOpcode\n      compressionDetails.writeInt32LE(messageToBeCompressed.length, 4); // Size of the uncompressed compressedMessage, excluding the MsgHeader\n      compressionDetails.writeUInt8(compressorIDs[self.options.agreedCompressor], 8); // compressorID\n\n      // Push the concatenation of the OP_COMPRESSED message onto results\n      result.push(Buffer.concat([msgHeader, compressionDetails, compressedMessage]));\n\n      // Continue recursing through the commands array\n      serializeCommands(self, commands, result, callback);\n    });\n  } else {\n    // Push the serialization of the command onto results\n    result.push(originalCommandBuffer);\n\n    // Continue recursing through the commands array\n    serializeCommands(self, commands, result, callback);\n  }\n};\n\n/**\n * Write a message to MongoDB\n * @method\n * @return {Connection}\n */\nPool.prototype.write = function(commands, options, cb) {\n  var self = this;\n  // Ensure we have a callback\n  if (typeof options === 'function') {\n    cb = options;\n  }\n\n  // Always have options\n  options = options || {};\n\n  // We need to have a callback function unless the message returns no response\n  if (!(typeof cb === 'function') && !options.noResponse) {\n    throw new MongoError('write method must provide a callback');\n  }\n\n  // Pool was destroyed error out\n  if (this.state === DESTROYED || this.state === DESTROYING) {\n    // Callback with an error\n    if (cb) {\n      try {\n        cb(new MongoError('pool destroyed'));\n      } catch (err) {\n        process.nextTick(function() {\n          throw err;\n        });\n      }\n    }\n\n    return;\n  }\n\n  if (this.options.domainsEnabled && process.domain && typeof cb === 'function') {\n    // if we have a domain bind to it\n    var oldCb = cb;\n    cb = process.domain.bind(function() {\n      // v8 - argumentsToArray one-liner\n      var args = new Array(arguments.length);\n      for (var i = 0; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n      // bounce off event loop so domain switch takes place\n      process.nextTick(function() {\n        oldCb.apply(null, args);\n      });\n    });\n  }\n\n  // Do we have an operation\n  var operation = {\n    cb: cb,\n    raw: false,\n    promoteLongs: true,\n    promoteValues: true,\n    promoteBuffers: false,\n    fullResult: false\n  };\n\n  // Set the options for the parsing\n  operation.promoteLongs = typeof options.promoteLongs === 'boolean' ? options.promoteLongs : true;\n  operation.promoteValues =\n    typeof options.promoteValues === 'boolean' ? options.promoteValues : true;\n  operation.promoteBuffers =\n    typeof options.promoteBuffers === 'boolean' ? options.promoteBuffers : false;\n  operation.raw = typeof options.raw === 'boolean' ? options.raw : false;\n  operation.immediateRelease =\n    typeof options.immediateRelease === 'boolean' ? options.immediateRelease : false;\n  operation.documentsReturnedIn = options.documentsReturnedIn;\n  operation.command = typeof options.command === 'boolean' ? options.command : false;\n  operation.fullResult = typeof options.fullResult === 'boolean' ? options.fullResult : false;\n  operation.noResponse = typeof options.noResponse === 'boolean' ? options.noResponse : false;\n  operation.session = options.session || null;\n\n  // Optional per operation socketTimeout\n  operation.socketTimeout = options.socketTimeout;\n  operation.monitoring = options.monitoring;\n  // Custom socket Timeout\n  if (options.socketTimeout) {\n    operation.socketTimeout = options.socketTimeout;\n  }\n\n  // Ensure commands is an array\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n\n  // Get the requestId\n  operation.requestId = commands[commands.length - 1].requestId;\n\n  if (hasSessionSupport(this.topology)) {\n    let sessionOptions = {};\n    if (this.topology.clusterTime) {\n      sessionOptions = { $clusterTime: this.topology.clusterTime };\n    }\n\n    if (operation.session) {\n      // TODO: reenable when sessions development is complete\n      // if (operation.session.topology !== this.topology) {\n      //   return cb(\n      //     new MongoError('Sessions may only be used with the client they were created from')\n      //   );\n      // }\n\n      if (operation.session.hasEnded) {\n        return cb(new MongoError('Use of expired sessions is not permitted'));\n      }\n\n      if (\n        operation.session.clusterTime &&\n        operation.session.clusterTime.clusterTime.greaterThan(\n          sessionOptions.$clusterTime.clusterTime\n        )\n      ) {\n        sessionOptions.$clusterTime = operation.session.clusterTime;\n      }\n\n      sessionOptions.lsid = operation.session.id;\n\n      // update the `lastUse` of the acquired ServerSession\n      operation.session.serverSession.lastUse = Date.now();\n    }\n\n    // decorate the commands with session-specific details\n    commands.forEach(command => {\n      if (command instanceof Query) {\n        if (command.query.$query) {\n          Object.assign(command.query.$query, sessionOptions);\n        } else {\n          Object.assign(command.query, sessionOptions);\n        }\n      } else {\n        Object.assign(command, sessionOptions);\n      }\n    });\n  }\n\n  // If command monitoring is enabled we need to modify the callback here\n  if (self.options.monitorCommands) {\n    // NOTE: there is only ever a single command, for some legacy reason I am unaware of we\n    //       treat this as a potential array of commands\n    const command = commands[0];\n    this.emit('commandStarted', new apm.CommandStartedEvent(this, command));\n\n    operation.started = process.hrtime();\n    operation.cb = (err, reply) => {\n      if (err) {\n        self.emit(\n          'commandFailed',\n          new apm.CommandFailedEvent(this, command, err, operation.started)\n        );\n      } else {\n        if (reply && reply.result && (reply.result.ok === 0 || reply.result.$err)) {\n          self.emit(\n            'commandFailed',\n            new apm.CommandFailedEvent(this, command, reply.result, operation.started)\n          );\n        } else {\n          self.emit(\n            'commandSucceeded',\n            new apm.CommandSucceededEvent(this, command, reply, operation.started)\n          );\n        }\n      }\n\n      if (typeof cb === 'function') cb(err, reply);\n    };\n  }\n\n  // Prepare the operation buffer\n  serializeCommands(self, commands, [], function(err, serializedCommands) {\n    if (err) throw err;\n\n    // Set the operation's buffer to the serialization of the commands\n    operation.buffer = serializedCommands;\n\n    // If we have a monitoring operation schedule as the very first operation\n    // Otherwise add to back of queue\n    if (options.monitoring) {\n      self.queue.unshift(operation);\n    } else {\n      self.queue.push(operation);\n    }\n\n    // Attempt to execute the operation\n    if (!self.executing) {\n      process.nextTick(function() {\n        _execute(self)();\n      });\n    }\n  });\n};\n\n// Return whether a command contains an uncompressible command term\n// Will return true if command contains no uncompressible command terms\nvar hasUncompressibleCommands = function(command) {\n  return uncompressibleCommands.some(function(cmd) {\n    return command.query.hasOwnProperty(cmd);\n  });\n};\n\n// Remove connection method\nfunction remove(connection, connections) {\n  for (var i = 0; i < connections.length; i++) {\n    if (connections[i] === connection) {\n      connections.splice(i, 1);\n      return true;\n    }\n  }\n}\n\nfunction removeConnection(self, connection) {\n  if (remove(connection, self.availableConnections)) return;\n  if (remove(connection, self.inUseConnections)) return;\n  if (remove(connection, self.connectingConnections)) return;\n  if (remove(connection, self.nonAuthenticatedConnections)) return;\n}\n\n// All event handlers\nvar handlers = ['close', 'message', 'error', 'timeout', 'parseError', 'connect'];\n\nfunction _createConnection(self) {\n  if (self.state === DESTROYED || self.state === DESTROYING) {\n    return;\n  }\n  var connection = new Connection(messageHandler(self), self.options);\n\n  // Push the connection\n  self.connectingConnections.push(connection);\n\n  // Handle any errors\n  var tempErrorHandler = function(_connection) {\n    return function() {\n      // Destroy the connection\n      _connection.destroy();\n      // Remove the connection from the connectingConnections list\n      removeConnection(self, _connection);\n      // Start reconnection attempts\n      if (!self.reconnectId && self.options.reconnect) {\n        self.reconnectId = setTimeout(attemptReconnect(self), self.options.reconnectInterval);\n      }\n    };\n  };\n\n  // Handle successful connection\n  var tempConnectHandler = function(_connection) {\n    return function() {\n      // Destroyed state return\n      if (self.state === DESTROYED || self.state === DESTROYING) {\n        // Remove the connection from the list\n        removeConnection(self, _connection);\n        return _connection.destroy();\n      }\n\n      // Destroy all event emitters\n      handlers.forEach(function(e) {\n        _connection.removeAllListeners(e);\n      });\n\n      // Add the final handlers\n      _connection.once('close', connectionFailureHandler(self, 'close'));\n      _connection.once('error', connectionFailureHandler(self, 'error'));\n      _connection.once('timeout', connectionFailureHandler(self, 'timeout'));\n      _connection.once('parseError', connectionFailureHandler(self, 'parseError'));\n\n      // Signal\n      reauthenticate(self, _connection, function(err) {\n        if (self.state === DESTROYED || self.state === DESTROYING) {\n          return _connection.destroy();\n        }\n        // Remove the connection from the connectingConnections list\n        removeConnection(self, _connection);\n\n        // Handle error\n        if (err) {\n          return _connection.destroy();\n        }\n\n        // If we are c at the moment\n        // Do not automatially put in available connections\n        // As we need to apply the credentials first\n        if (self.authenticating) {\n          self.nonAuthenticatedConnections.push(_connection);\n        } else {\n          // Push to available\n          self.availableConnections.push(_connection);\n          // Execute any work waiting\n          _execute(self)();\n        }\n      });\n    };\n  };\n\n  // Add all handlers\n  connection.once('close', tempErrorHandler(connection));\n  connection.once('error', tempErrorHandler(connection));\n  connection.once('timeout', tempErrorHandler(connection));\n  connection.once('parseError', tempErrorHandler(connection));\n  connection.once('connect', tempConnectHandler(connection));\n\n  // Start connection\n  connection.connect();\n}\n\nfunction flushMonitoringOperations(queue) {\n  for (var i = 0; i < queue.length; i++) {\n    if (queue[i].monitoring) {\n      var workItem = queue[i];\n      queue.splice(i, 1);\n      workItem.cb(\n        new MongoError({ message: 'no connection available for monitoring', driver: true })\n      );\n    }\n  }\n}\n\nfunction _execute(self) {\n  return function() {\n    if (self.state === DESTROYED) return;\n    // Already executing, skip\n    if (self.executing) return;\n    // Set pool as executing\n    self.executing = true;\n\n    // Wait for auth to clear before continuing\n    function waitForAuth(cb) {\n      if (!self.authenticating) return cb();\n      // Wait for a milisecond and try again\n      setTimeout(function() {\n        waitForAuth(cb);\n      }, 1);\n    }\n\n    // Block on any auth in process\n    waitForAuth(function() {\n      // New pool connections are in progress, wait them to finish\n      // before executing any more operation to ensure distribution of\n      // operations\n      if (self.connectingConnections.length > 0) {\n        return;\n      }\n\n      // As long as we have available connections\n      // eslint-disable-next-line\n      while (true) {\n        // Total availble connections\n        var totalConnections =\n          self.availableConnections.length +\n          self.connectingConnections.length +\n          self.inUseConnections.length;\n\n        // No available connections available, flush any monitoring ops\n        if (self.availableConnections.length === 0) {\n          // Flush any monitoring operations\n          flushMonitoringOperations(self.queue);\n          break;\n        }\n\n        // No queue break\n        if (self.queue.length === 0) {\n          break;\n        }\n\n        // Get a connection\n        var connection = null;\n\n        // Locate all connections that have no work\n        var connections = [];\n        // Get a list of all connections\n        for (var i = 0; i < self.availableConnections.length; i++) {\n          if (self.availableConnections[i].workItems.length === 0) {\n            connections.push(self.availableConnections[i]);\n          }\n        }\n\n        // No connection found that has no work on it, just pick one for pipelining\n        if (connections.length === 0) {\n          connection =\n            self.availableConnections[self.connectionIndex++ % self.availableConnections.length];\n        } else {\n          connection = connections[self.connectionIndex++ % connections.length];\n        }\n\n        // Is the connection connected\n        if (connection.isConnected()) {\n          // Get the next work item\n          var workItem = self.queue.shift();\n\n          // If we are monitoring we need to use a connection that is not\n          // running another operation to avoid socket timeout changes\n          // affecting an existing operation\n          if (workItem.monitoring) {\n            var foundValidConnection = false;\n\n            for (i = 0; i < self.availableConnections.length; i++) {\n              // If the connection is connected\n              // And there are no pending workItems on it\n              // Then we can safely use it for monitoring.\n              if (\n                self.availableConnections[i].isConnected() &&\n                self.availableConnections[i].workItems.length === 0\n              ) {\n                foundValidConnection = true;\n                connection = self.availableConnections[i];\n                break;\n              }\n            }\n\n            // No safe connection found, attempt to grow the connections\n            // if possible and break from the loop\n            if (!foundValidConnection) {\n              // Put workItem back on the queue\n              self.queue.unshift(workItem);\n\n              // Attempt to grow the pool if it's not yet maxsize\n              if (totalConnections < self.options.size && self.queue.length > 0) {\n                // Create a new connection\n                _createConnection(self);\n              }\n\n              // Re-execute the operation\n              setTimeout(function() {\n                _execute(self)();\n              }, 10);\n\n              break;\n            }\n          }\n\n          // Don't execute operation until we have a full pool\n          if (totalConnections < self.options.size) {\n            // Connection has work items, then put it back on the queue\n            // and create a new connection\n            if (connection.workItems.length > 0) {\n              // Lets put the workItem back on the list\n              self.queue.unshift(workItem);\n              // Create a new connection\n              _createConnection(self);\n              // Break from the loop\n              break;\n            }\n          }\n\n          // Get actual binary commands\n          var buffer = workItem.buffer;\n\n          // Set current status of authentication process\n          workItem.authenticating = self.authenticating;\n          workItem.authenticatingTimestamp = self.authenticatingTimestamp;\n\n          // If we are monitoring take the connection of the availableConnections\n          if (workItem.monitoring) {\n            moveConnectionBetween(connection, self.availableConnections, self.inUseConnections);\n          }\n\n          // Track the executing commands on the mongo server\n          // as long as there is an expected response\n          if (!workItem.noResponse) {\n            connection.workItems.push(workItem);\n          }\n\n          // We have a custom socketTimeout\n          if (!workItem.immediateRelease && typeof workItem.socketTimeout === 'number') {\n            connection.setSocketTimeout(workItem.socketTimeout);\n          }\n\n          // Capture if write was successful\n          var writeSuccessful = true;\n\n          // Put operation on the wire\n          if (Array.isArray(buffer)) {\n            for (i = 0; i < buffer.length; i++) {\n              writeSuccessful = connection.write(buffer[i]);\n            }\n          } else {\n            writeSuccessful = connection.write(buffer);\n          }\n\n          // if the command is designated noResponse, call the callback immeditely\n          if (workItem.noResponse && typeof workItem.cb === 'function') {\n            workItem.cb(null, null);\n          }\n\n          if (writeSuccessful && workItem.immediateRelease && self.authenticating) {\n            removeConnection(self, connection);\n            self.nonAuthenticatedConnections.push(connection);\n          } else if (writeSuccessful === false) {\n            // If write not successful put back on queue\n            self.queue.unshift(workItem);\n            // Remove the disconnected connection\n            removeConnection(self, connection);\n            // Flush any monitoring operations in the queue, failing fast\n            flushMonitoringOperations(self.queue);\n          }\n        } else {\n          // Remove the disconnected connection\n          removeConnection(self, connection);\n          // Flush any monitoring operations in the queue, failing fast\n          flushMonitoringOperations(self.queue);\n        }\n      }\n    });\n\n    self.executing = false;\n  };\n}\n\n// Make execution loop available for testing\nPool._execute = _execute;\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Pool#connect\n * @type {Pool}\n */\n\n/**\n * A server reconnect event, used to verify that pool reconnected.\n *\n * @event Pool#reconnect\n * @type {Pool}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Pool#close\n * @type {Pool}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Pool#error\n * @type {Pool}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Pool#timeout\n * @type {Pool}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Pool#parseError\n * @type {Pool}\n */\n\n/**\n * The driver attempted to reconnect\n *\n * @event Pool#attemptReconnect\n * @type {Pool}\n */\n\n/**\n * The driver exhausted all reconnect attempts\n *\n * @event Pool#reconnectFailed\n * @type {Pool}\n */\n\nmodule.exports = Pool;\n","'use strict';\n\n/**\n * Creates a new CommandResult instance\n * @class\n * @param {object} result CommandResult object\n * @param {Connection} connection A connection instance associated with this result\n * @return {CommandResult} A cursor instance\n */\nvar CommandResult = function(result, connection, message) {\n  this.result = result;\n  this.connection = connection;\n  this.message = message;\n};\n\n/**\n * Convert CommandResult to JSON\n * @method\n * @return {object}\n */\nCommandResult.prototype.toJSON = function() {\n  return this.result;\n};\n\n/**\n * Convert CommandResult to String representation\n * @method\n * @return {string}\n */\nCommandResult.prototype.toString = function() {\n  return JSON.stringify(this.toJSON());\n};\n\nmodule.exports = CommandResult;\n","'use strict';\nconst KillCursor = require('../connection/commands').KillCursor;\nconst GetMore = require('../connection/commands').GetMore;\nconst calculateDurationInMs = require('../utils').calculateDurationInMs;\n\n/** Commands that we want to redact because of the sensitive nature of their contents */\nconst SENSITIVE_COMMANDS = new Set([\n  'authenticate',\n  'saslStart',\n  'saslContinue',\n  'getnonce',\n  'createUser',\n  'updateUser',\n  'copydbgetnonce',\n  'copydbsaslstart',\n  'copydb'\n]);\n\n// helper methods\nconst extractCommandName = command => Object.keys(command)[0];\nconst namespace = command => command.ns;\nconst databaseName = command => command.ns.split('.')[0];\nconst collectionName = command => command.ns.split('.')[1];\nconst generateConnectionId = pool => `${pool.options.host}:${pool.options.port}`;\nconst maybeRedact = (commandName, result) => (SENSITIVE_COMMANDS.has(commandName) ? {} : result);\n\nconst LEGACY_FIND_QUERY_MAP = {\n  $query: 'filter',\n  $orderby: 'sort',\n  $hint: 'hint',\n  $comment: 'comment',\n  $maxScan: 'maxScan',\n  $max: 'max',\n  $min: 'min',\n  $returnKey: 'returnKey',\n  $showDiskLoc: 'showRecordId',\n  $maxTimeMS: 'maxTimeMS',\n  $snapshot: 'snapshot'\n};\n\nconst LEGACY_FIND_OPTIONS_MAP = {\n  numberToSkip: 'skip',\n  numberToReturn: 'batchSize',\n  returnFieldsSelector: 'projection'\n};\n\nconst OP_QUERY_KEYS = [\n  'tailable',\n  'oplogReplay',\n  'noCursorTimeout',\n  'awaitData',\n  'partial',\n  'exhaust'\n];\n\n/**\n * Extract the actual command from the query, possibly upconverting if it's a legacy\n * format\n *\n * @param {Object} command the command\n */\nconst extractCommand = command => {\n  if (command instanceof GetMore) {\n    return {\n      getMore: command.cursorId,\n      collection: collectionName(command),\n      batchSize: command.numberToReturn\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      killCursors: collectionName(command),\n      cursors: command.cursorIds\n    };\n  }\n\n  if (command.query && command.query.$query) {\n    let result;\n    if (command.ns === 'admin.$cmd') {\n      // upconvert legacy command\n      result = Object.assign({}, command.query.$query);\n    } else {\n      // upconvert legacy find command\n      result = { find: collectionName(command) };\n      Object.keys(LEGACY_FIND_QUERY_MAP).forEach(key => {\n        if (typeof command.query[key] !== 'undefined')\n          result[LEGACY_FIND_QUERY_MAP[key]] = command.query[key];\n      });\n    }\n\n    Object.keys(LEGACY_FIND_OPTIONS_MAP).forEach(key => {\n      if (typeof command.options[key] !== 'undefined')\n        result[LEGACY_FIND_OPTIONS_MAP[key]] = command.options[key];\n    });\n\n    OP_QUERY_KEYS.forEach(key => {\n      if (command[key]) result[key] = command[key];\n    });\n\n    if (typeof command.pre32Limit !== 'undefined') {\n      result.limit = command.pre32Limit;\n    }\n\n    if (command.query.$explain) {\n      return { explain: result };\n    }\n\n    return result;\n  }\n\n  return command.query ? command.query : command;\n};\n\nconst extractReply = (command, reply) => {\n  if (command instanceof GetMore) {\n    return {\n      ok: 1,\n      cursor: {\n        id: reply.message.cursorId,\n        ns: namespace(command),\n        nextBatch: reply.message.documents\n      }\n    };\n  }\n\n  if (command instanceof KillCursor) {\n    return {\n      ok: 1,\n      cursorsUnknown: command.cursorIds\n    };\n  }\n\n  // is this a legacy find command?\n  if (command.query && typeof command.query.$query !== 'undefined') {\n    return {\n      ok: 1,\n      cursor: {\n        id: reply.message.cursorId,\n        ns: namespace(command),\n        firstBatch: reply.message.documents\n      }\n    };\n  }\n\n  return reply.result;\n};\n\n/** An event indicating the start of a given command */\nclass CommandStartedEvent {\n  /**\n   * Create a started event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   */\n  constructor(pool, command) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n\n    // NOTE: remove in major revision, this is not spec behavior\n    if (SENSITIVE_COMMANDS.has(commandName)) {\n      this.commandObj = {};\n      this.commandObj[commandName] = true;\n    }\n\n    Object.assign(this, {\n      command: cmd,\n      databaseName: databaseName(command),\n      commandName,\n      requestId: command.requestId,\n      connectionId: generateConnectionId(pool)\n    });\n  }\n}\n\n/** An event indicating the success of a given command */\nclass CommandSucceededEvent {\n  /**\n   * Create a succeeded event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   * @param {Object} reply the reply for this command from the server\n   * @param {Array} started a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(pool, command, reply, started) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n\n    Object.assign(this, {\n      duration: calculateDurationInMs(started),\n      commandName,\n      reply: maybeRedact(commandName, extractReply(command, reply)),\n      requestId: command.requestId,\n      connectionId: generateConnectionId(pool)\n    });\n  }\n}\n\n/** An event indicating the failure of a given command */\nclass CommandFailedEvent {\n  /**\n   * Create a failure event\n   *\n   * @param {Pool} pool the pool that originated the command\n   * @param {Object} command the command\n   * @param {MongoError|Object} error the generated error or a server error response\n   * @param {Array} started a high resolution tuple timestamp of when the command was first sent, to calculate duration\n   */\n  constructor(pool, command, error, started) {\n    const cmd = extractCommand(command);\n    const commandName = extractCommandName(cmd);\n\n    Object.assign(this, {\n      duration: calculateDurationInMs(started),\n      commandName,\n      failure: maybeRedact(commandName, error),\n      requestId: command.requestId,\n      connectionId: generateConnectionId(pool)\n    });\n  }\n}\n\nmodule.exports = {\n  CommandStartedEvent,\n  CommandSucceededEvent,\n  CommandFailedEvent\n};\n","'use strict';\n\nconst f = require('util').format;\nconst Query = require('../connection/commands').Query;\nconst MongoError = require('../error').MongoError;\nconst retrieveKerberos = require('../utils').retrieveKerberos;\n\nvar AuthSession = function(db, username, password, options) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n  this.options = options;\n};\n\nAuthSession.prototype.equal = function(session) {\n  return (\n    session.db === this.db &&\n    session.username === this.username &&\n    session.password === this.password\n  );\n};\n\n/**\n * Creates a new SSPI authentication mechanism\n * @class\n * @return {SSPI} A cursor instance\n */\nvar SSPI = function(bson) {\n  this.bson = bson;\n  this.authStore = [];\n};\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nSSPI.prototype.auth = function(server, connections, db, username, password, options, callback) {\n  var self = this;\n  let kerberos;\n  try {\n    kerberos = retrieveKerberos();\n  } catch (e) {\n    return callback(e, null);\n  }\n\n  var gssapiServiceName = options['gssapiServiceName'] || 'mongodb';\n  // Total connections\n  var count = connections.length;\n  if (count === 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while (connections.length > 0) {\n    // Execute MongoCR\n    var execute = function(connection) {\n      // Start Auth process for a connection\n      SSIPAuthenticate(\n        self,\n        kerberos.processes.MongoAuthProcess,\n        username,\n        password,\n        gssapiServiceName,\n        server,\n        connection,\n        options,\n        function(err, r) {\n          // Adjust count\n          count = count - 1;\n\n          // If we have an error\n          if (err) {\n            errorObject = err;\n          } else if (r && typeof r === 'object' && r.result['$err']) {\n            errorObject = r.result;\n          } else if (r && typeof r === 'object' && r.result['errmsg']) {\n            errorObject = r.result;\n          } else {\n            numberOfValidConnections = numberOfValidConnections + 1;\n          }\n\n          // We have authenticated all connections\n          if (count === 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password, options));\n            // Return correct authentication\n            callback(null, true);\n          } else if (count === 0) {\n            if (errorObject == null)\n              errorObject = new MongoError(f('failed to authenticate using mongocr'));\n            callback(errorObject, false);\n          }\n        }\n      );\n    };\n\n    var _execute = function(_connection) {\n      process.nextTick(function() {\n        execute(_connection);\n      });\n    };\n\n    _execute(connections.shift());\n  }\n};\n\nfunction SSIPAuthenticate(\n  self,\n  MongoAuthProcess,\n  username,\n  password,\n  gssapiServiceName,\n  server,\n  connection,\n  options,\n  callback\n) {\n  const authProcess = new MongoAuthProcess(\n    connection.host,\n    connection.port,\n    gssapiServiceName,\n    options\n  );\n\n  function authCommand(command, authCb) {\n    const query = new Query(self.bson, '$external.$cmd', command, {\n      numberToSkip: 0,\n      numberToReturn: 1\n    });\n\n    server(connection, query, authCb);\n  }\n\n  authProcess.init(username, password, err => {\n    if (err) return callback(err, false);\n\n    authProcess.transition('', (err, payload) => {\n      if (err) return callback(err, false);\n\n      const command = {\n        saslStart: 1,\n        mechanism: 'GSSAPI',\n        payload,\n        autoAuthorize: 1\n      };\n\n      authCommand(command, (err, result) => {\n        if (err) return callback(err, false);\n        const doc = result.result;\n\n        authProcess.transition(doc.payload, (err, payload) => {\n          if (err) return callback(err, false);\n          const command = {\n            saslContinue: 1,\n            conversationId: doc.conversationId,\n            payload\n          };\n\n          authCommand(command, (err, result) => {\n            if (err) return callback(err, false);\n            const doc = result.result;\n\n            authProcess.transition(doc.payload, (err, payload) => {\n              if (err) return callback(err, false);\n              const command = {\n                saslContinue: 1,\n                conversationId: doc.conversationId,\n                payload\n              };\n\n              authCommand(command, (err, response) => {\n                if (err) return callback(err, false);\n\n                authProcess.transition(null, err => {\n                  if (err) return callback(err, null);\n                  callback(null, response);\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for (var i = 0; i < authStore.length; i++) {\n    if (authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) authStore.push(session);\n};\n\n/**\n * Remove authStore credentials\n * @method\n * @param {string} db Name of database we are removing authStore details about\n * @return {object}\n */\nSSPI.prototype.logout = function(dbName) {\n  this.authStore = this.authStore.filter(function(x) {\n    return x.db !== dbName;\n  });\n};\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {[]Connections} connections Connections to authenticate using this authenticator\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nSSPI.prototype.reauthenticate = function(server, connections, callback) {\n  var authStore = this.authStore.slice(0);\n  var count = authStore.length;\n  if (count === 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for (var i = 0; i < authStore.length; i++) {\n    this.auth(\n      server,\n      connections,\n      authStore[i].db,\n      authStore[i].username,\n      authStore[i].password,\n      authStore[i].options,\n      function(err) {\n        count = count - 1;\n        // Done re-authenticating\n        if (count === 0) {\n          callback(err, null);\n        }\n      }\n    );\n  }\n};\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = SSPI;\n","'use strict'\n\nconst {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n} = require('./lib/memory-code-points')\n\nmodule.exports = saslprep\n\n// 2.1.  Mapping\n\n/**\n * non-ASCII space characters [StringPrep, C.1.2] that can be\n * mapped to SPACE (U+0020)\n */\nconst mapping2space = non_ASCII_space_characters\n\n/**\n * the \"commonly mapped to nothing\" characters [StringPrep, B.1]\n * that can be mapped to nothing.\n */\nconst mapping2nothing = commonly_mapped_to_nothing\n\n// utils\nconst getCodePoint = character => character.codePointAt(0)\nconst first = x => x[0]\nconst last = x => x[x.length - 1]\n\n/**\n * SASLprep.\n * @param {string} input\n * @param {object} opts\n * @param {boolean} opts.allowUnassigned\n */\nfunction saslprep(input, opts = {}) {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected string.')\n  }\n\n  if (input.length === 0) {\n    return ''\n  }\n\n  // 1. Map\n  const mapped_input = input\n    .split('')\n    .map(getCodePoint)\n    // 1.1 mapping to space\n    .map(character => (mapping2space.get(character) ? 0x20 : character))\n    // 1.2 mapping to nothing\n    .filter(character => !mapping2nothing.get(character))\n\n  // 2. Normalize\n  const normalized_input = String.fromCodePoint(...mapped_input).normalize('NFKC')\n\n  const normalized_map = normalized_input.split('').map(getCodePoint)\n\n  // 3. Prohibit\n  const hasProhibited = normalized_map.some(character =>\n    prohibited_characters.get(character)\n  )\n\n  if (hasProhibited) {\n    throw new Error(\n      'Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3'\n    )\n  }\n\n  // Unassigned Code Points\n  if (opts.allowUnassigned !== true) {\n    const hasUnassigned = normalized_map.some(character =>\n      unassigned_code_points.get(character)\n    )\n\n    if (hasUnassigned) {\n      throw new Error(\n        'Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5'\n      )\n    }\n  }\n\n  // 4. check bidi\n\n  const hasBidiRAL = normalized_map\n    .some((character) => bidirectional_r_al.get(character))\n\n  const hasBidiL = normalized_map\n    .some((character) => bidirectional_l.get(character))\n\n  // 4.1 If a string contains any RandALCat character, the string MUST NOT\n  // contain any LCat character.\n  if (hasBidiRAL && hasBidiL) {\n    throw new Error(\n      'String must not contain RandALCat and LCat at the same time,' +\n      ' see https://tools.ietf.org/html/rfc3454#section-6'\n    )\n  }\n\n  /**\n   * 4.2 If a string contains any RandALCat character, a RandALCat\n   * character MUST be the first character of the string, and a\n   * RandALCat character MUST be the last character of the string.\n   */\n\n  const isFirstBidiRAL = bidirectional_r_al.get(getCodePoint(first(normalized_input)))\n  const isLastBidiRAL = bidirectional_r_al.get(getCodePoint(last(normalized_input)))\n\n  if (hasBidiRAL && !(isFirstBidiRAL && isLastBidiRAL)) {\n    throw new Error(\n      'Bidirectional RandALCat character must be the first and the last' +\n      ' character of the string, see https://tools.ietf.org/html/rfc3454#section-6'\n    )\n  }\n\n  return normalized_input\n}\n","'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst bitfield = require('sparse-bitfield');\n\nconst memory = fs.readFileSync(path.resolve(__dirname, '../code-points.mem'));\nlet offset = 0;\n\nfunction read() {\n  const size = memory.readUInt32BE(offset);\n  offset += 4;\n\n  const codepoints = memory.slice(offset, offset + size);\n  offset += size;\n\n  return bitfield({ buffer: codepoints });\n}\n\nconst unassigned_code_points = read();\nconst commonly_mapped_to_nothing = read();\nconst non_ASCII_space_characters = read();\nconst prohibited_characters = read();\nconst bidirectional_r_al = read();\nconst bidirectional_l = read();\n\nmodule.exports = {\n  unassigned_code_points,\n  commonly_mapped_to_nothing,\n  non_ASCII_space_characters,\n  prohibited_characters,\n  bidirectional_r_al,\n  bidirectional_l,\n}\n","var pager = require('memory-pager')\n\nmodule.exports = Bitfield\n\nfunction Bitfield (opts) {\n  if (!(this instanceof Bitfield)) return new Bitfield(opts)\n  if (!opts) opts = {}\n  if (Buffer.isBuffer(opts)) opts = {buffer: opts}\n\n  this.pageOffset = opts.pageOffset || 0\n  this.pageSize = opts.pageSize || 1024\n  this.pages = opts.pages || pager(this.pageSize)\n\n  this.byteLength = this.pages.length * this.pageSize\n  this.length = 8 * this.byteLength\n\n  if (!powerOfTwo(this.pageSize)) throw new Error('The page size should be a power of two')\n\n  this._trackUpdates = !!opts.trackUpdates\n  this._pageMask = this.pageSize - 1\n\n  if (opts.buffer) {\n    for (var i = 0; i < opts.buffer.length; i += this.pageSize) {\n      this.pages.set(i / this.pageSize, opts.buffer.slice(i, i + this.pageSize))\n    }\n    this.byteLength = opts.buffer.length\n    this.length = 8 * this.byteLength\n  }\n}\n\nBitfield.prototype.get = function (i) {\n  var o = i & 7\n  var j = (i - o) / 8\n\n  return !!(this.getByte(j) & (128 >> o))\n}\n\nBitfield.prototype.getByte = function (i) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, true)\n\n  return page ? page.buffer[o + this.pageOffset] : 0\n}\n\nBitfield.prototype.set = function (i, v) {\n  var o = i & 7\n  var j = (i - o) / 8\n  var b = this.getByte(j)\n\n  return this.setByte(j, v ? b | (128 >> o) : b & (255 ^ (128 >> o)))\n}\n\nBitfield.prototype.toBuffer = function () {\n  var all = alloc(this.pages.length * this.pageSize)\n\n  for (var i = 0; i < this.pages.length; i++) {\n    var next = this.pages.get(i, true)\n    var allOffset = i * this.pageSize\n    if (next) next.buffer.copy(all, allOffset, this.pageOffset, this.pageOffset + this.pageSize)\n  }\n\n  return all\n}\n\nBitfield.prototype.setByte = function (i, b) {\n  var o = i & this._pageMask\n  var j = (i - o) / this.pageSize\n  var page = this.pages.get(j, false)\n\n  o += this.pageOffset\n\n  if (page.buffer[o] === b) return false\n  page.buffer[o] = b\n\n  if (i >= this.byteLength) {\n    this.byteLength = i + 1\n    this.length = this.byteLength * 8\n  }\n\n  if (this._trackUpdates) this.pages.updated(page)\n\n  return true\n}\n\nfunction alloc (n) {\n  if (Buffer.alloc) return Buffer.alloc(n)\n  var b = new Buffer(n)\n  b.fill(0)\n  return b\n}\n\nfunction powerOfTwo (x) {\n  return !(x & (x - 1))\n}\n","module.exports = Pager\n\nfunction Pager (pageSize, opts) {\n  if (!(this instanceof Pager)) return new Pager(pageSize, opts)\n\n  this.length = 0\n  this.updates = []\n  this.pages = new Array(16)\n  this.pageSize = pageSize || 1024\n  this.deduplicate = opts ? opts.deduplicate : null\n}\n\nPager.prototype.updated = function (page) {\n  while (this.deduplicate && page.buffer[page.deduplicate] === this.deduplicate[page.deduplicate]) {\n    page.deduplicate++\n    if (page.deduplicate === this.deduplicate.length) {\n      page.deduplicate = 0\n      if (page.buffer.equals && page.buffer.equals(this.deduplicate)) page.buffer = this.deduplicate\n      break\n    }\n  }\n  if (page.updated || !this.updates) return\n  page.updated = true\n  this.updates.push(page)\n}\n\nPager.prototype.lastUpdate = function () {\n  if (!this.updates || !this.updates.length) return null\n  var page = this.updates.pop()\n  page.updated = false\n  return page\n}\n\nPager.prototype.get = function (i, noAllocate) {\n  if (i >= this.pages.length) {\n    if (noAllocate) return\n    this.pages = grow(this.pages, i, this.length)\n  }\n\n  var page = this.pages[i]\n\n  if (!page && !noAllocate) {\n    page = this.pages[i] = new Page(i, alloc(this.pageSize))\n    if (i >= this.length) this.length = i + 1\n  }\n\n  if (page && page.buffer === this.deduplicate && this.deduplicate && !noAllocate) {\n    page.buffer = copy(page.buffer)\n    page.deduplicate = 0\n  }\n\n  return page\n}\n\nPager.prototype.set = function (i, buf) {\n  if (i >= this.pages.length) this.pages = grow(this.pages, i, this.length)\n  if (i >= this.length) this.length = i + 1\n\n  if (!buf) {\n    this.pages[i] = undefined\n    return\n  }\n\n  if (this.deduplicate && buf.equals && buf.equals(this.deduplicate)) {\n    buf = this.deduplicate\n  }\n\n  var page = this.pages[i]\n  var b = truncate(buf, this.pageSize)\n\n  if (page) page.buffer = b\n  else this.pages[i] = new Page(i, b)\n}\n\nPager.prototype.toBuffer = function () {\n  var list = new Array(this.length)\n  var empty = alloc(this.pageSize)\n\n  for (var i = 0; i < list.length; i++) {\n    list[i] = this.pages[i] ? this.pages[i].buffer : empty\n  }\n\n  return Buffer.concat(list)\n}\n\nfunction grow (list, index, len) {\n  var nlen = list.length * 2\n  while (nlen <= index) nlen *= 2\n\n  var twice = new Array(nlen)\n  for (var i = 0; i < len; i++) twice[i] = list[i]\n  return twice\n}\n\nfunction truncate (buf, len) {\n  if (buf.length === len) return buf\n  if (buf.length > len) return buf.slice(0, len)\n  var cpy = alloc(len)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction alloc (size) {\n  if (Buffer.alloc) return Buffer.alloc(size)\n  var buf = new Buffer(size)\n  buf.fill(0)\n  return buf\n}\n\nfunction copy (buf) {\n  var cpy = Buffer.allocUnsafe ? Buffer.allocUnsafe(buf.length) : new Buffer(buf.length)\n  buf.copy(cpy)\n  return cpy\n}\n\nfunction Page (i, buf) {\n  this.offset = i * buf.length\n  this.buffer = buf\n  this.updated = false\n  this.deduplicate = 0\n}\n","'use strict';\n\nvar copy = require('../connection/utils').copy,\n  retrieveBSON = require('../connection/utils').retrieveBSON,\n  KillCursor = require('../connection/commands').KillCursor,\n  GetMore = require('../connection/commands').GetMore,\n  Query = require('../connection/commands').Query,\n  f = require('util').format,\n  MongoError = require('../error').MongoError,\n  getReadPreference = require('./shared').getReadPreference;\n\nvar BSON = retrieveBSON(),\n  Long = BSON.Long;\n\nvar WireProtocol = function() {};\n\n//\n// Execute a write operation\nvar executeWrite = function(pool, bson, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError('insert must contain at least one document');\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split('.');\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern;\n\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // Options object\n  var opts = { command: true };\n  if (typeof options.session !== 'undefined') opts.session = options.session;\n  var queryOptions = { checkKeys: false, numberToSkip: 0, numberToReturn: 1 };\n  if (type === 'insert') queryOptions.checkKeys = true;\n  if (typeof options.checkKeys === 'boolean') queryOptions.checkKeys = options.checkKeys;\n  // Ensure we support serialization of functions\n  if (options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if (options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    var cmd = new Query(bson, f('%s.$cmd', d), writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch (err) {\n    callback(err);\n  }\n};\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.update = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.remove = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorState, pool, callback) {\n  var cursorId = cursorState.cursorId;\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, ns, [cursorId]);\n\n  // Build killCursor options\n  const options = {\n    immediateRelease: true,\n    noResponse: true\n  };\n\n  if (typeof cursorState.session === 'object') {\n    options.session = cursorState.session;\n  }\n\n  // Execute the kill cursor command\n  if (pool && pool.isConnected()) {\n    try {\n      pool.write(killCursor, options, callback);\n    } catch (err) {\n      if (typeof callback === 'function') {\n        callback(err, null);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n};\n\nWireProtocol.prototype.getMore = function(\n  bson,\n  ns,\n  cursorState,\n  batchSize,\n  raw,\n  connection,\n  options,\n  callback\n) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, { numberToReturn: batchSize });\n\n  // Query callback\n  var queryCallback = function(err, result) {\n    if (err) return callback(err);\n    // Get the raw message\n    var r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      return callback(new MongoError('cursor does not exist, was killed or timed out'), null);\n    }\n\n    // Ensure we have a Long valie cursor id\n    var cursorId = typeof r.cursorId === 'number' ? Long.fromNumber(r.cursorId) : r.cursorId;\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = cursorId;\n\n    // Return\n    callback(null, null, r.connection);\n  };\n\n  // Contains any query options\n  var queryOptions = {};\n\n  // If we have a raw query decorate the function\n  if (raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Check if we need to promote longs\n  if (typeof cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if (typeof cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if (typeof cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  if (typeof cursorState.session === 'object') {\n    queryOptions.session = cursorState.session;\n  }\n\n  // Write out the getMore command\n  connection.write(getMore, queryOptions, queryCallback);\n};\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if (cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options);\n  } else if (cursorState.cursorId != null) {\n    return;\n  } else if (cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f('command %s does not return a cursor', JSON.stringify(cmd)));\n  }\n};\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n\n  // Unpack the limit and batchSize values\n  if (cursorState.limit === 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if (\n    cursorState.limit < 0 ||\n    cursorState.limit < cursorState.batchSize ||\n    (cursorState.limit > 0 && cursorState.batchSize === 0)\n  ) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n  }\n\n  // Add special modifiers to the query\n  if (cmd.sort) findCmd['$orderby'] = cmd.sort;\n  if (cmd.hint) findCmd['$hint'] = cmd.hint;\n  if (cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot;\n  if (typeof cmd.returnKey !== 'undefined') findCmd['$returnKey'] = cmd.returnKey;\n  if (cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan;\n  if (cmd.min) findCmd['$min'] = cmd.min;\n  if (cmd.max) findCmd['$max'] = cmd.max;\n  if (typeof cmd.showDiskLoc !== 'undefined') findCmd['$showDiskLoc'] = cmd.showDiskLoc;\n  if (cmd.comment) findCmd['$comment'] = cmd.comment;\n  if (cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS;\n\n  if (cmd.explain) {\n    // nToReturn must be 0 (match all) or negative (match N and close cursor)\n    // nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    findCmd['$explain'] = true;\n  }\n\n  // Add the query\n  findCmd['$query'] = cmd.query;\n\n  // Throw on majority readConcern passed in\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      f('server find command does not support a readConcern level of %s', cmd.readConcern.level)\n    );\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if (cmd.readConcern) {\n    cmd = copy(cmd);\n    delete cmd['readConcern'];\n  }\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n    numberToSkip: numberToSkip,\n    numberToReturn: numberToReturn,\n    pre32Limit: typeof cmd.limit !== 'undefined' ? cmd.limit : undefined,\n    checkKeys: false,\n    returnFieldSelector: cmd.fields,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if (typeof cmd.tailable === 'boolean') {\n    query.tailable = cmd.tailable;\n  }\n\n  if (typeof cmd.oplogReplay === 'boolean') {\n    query.oplogReplay = cmd.oplogReplay;\n  }\n\n  if (typeof cmd.noCursorTimeout === 'boolean') {\n    query.noCursorTimeout = cmd.noCursorTimeout;\n  }\n\n  if (typeof cmd.awaitData === 'boolean') {\n    query.awaitData = cmd.awaitData;\n  }\n\n  if (typeof cmd.partial === 'boolean') {\n    query.partial = cmd.partial;\n  }\n\n  // Return the query\n  return query;\n};\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {};\n  // Get the readPreference\n  var readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  var finalCmd = {};\n  for (var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n\n  var ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // Throw on majority readConcern passed in\n  if (cmd.readConcern && cmd.readConcern.level !== 'local') {\n    throw new MongoError(\n      f(\n        'server %s command does not support a readConcern level of %s',\n        JSON.stringify(cmd),\n        cmd.readConcern.level\n      )\n    );\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if (cmd.readConcern) delete cmd['readConcern'];\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n};\n\nmodule.exports = WireProtocol;\n","'use strict';\n\nconst Query = require('../connection/commands').Query;\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst MongoNetworkError = require('../error').MongoNetworkError;\nconst getReadPreference = require('./shared').getReadPreference;\nconst BSON = retrieveBSON();\nconst Long = BSON.Long;\nconst ReadPreference = require('../topologies/read_preference');\nconst TxnState = require('../transactions').TxnState;\n\nconst WireProtocol = function() {};\n\nfunction isTransactionCommand(command) {\n  return !!(command.commitTransaction || command.abortTransaction);\n}\n\n/**\n * Optionally decorate a command with sessions specific keys\n *\n * @param {Object} command the command to decorate\n * @param {ClientSession} session the session tracking transaction state\n * @param {Object} [options] Optional settings passed to calling operation\n * @param {Function} [callback] Optional callback passed from calling operation\n * @return {MongoError|null} An error, if some error condition was met\n */\nfunction decorateWithSessionsData(command, session, options) {\n  if (!session) {\n    return;\n  }\n\n  // first apply non-transaction-specific sessions data\n  const serverSession = session.serverSession;\n  const inTransaction = session.inTransaction() || isTransactionCommand(command);\n  const isRetryableWrite = options.willRetryWrite;\n\n  if (serverSession.txnNumber && (isRetryableWrite || inTransaction)) {\n    command.txnNumber = BSON.Long.fromNumber(serverSession.txnNumber);\n  }\n\n  // now attempt to apply transaction-specific sessions data\n  if (!inTransaction) {\n    if (session.transaction.state !== TxnState.NO_TRANSACTION) {\n      session.transaction.transition(TxnState.NO_TRANSACTION);\n    }\n\n    // for causal consistency\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n\n    return;\n  }\n\n  if (options.readPreference && !options.readPreference.equals(ReadPreference.primary)) {\n    return new MongoError(\n      `Read preference in a transaction must be primary, not: ${options.readPreference.mode}`\n    );\n  }\n\n  // `autocommit` must always be false to differentiate from retryable writes\n  command.autocommit = false;\n\n  if (session.transaction.state === TxnState.STARTING_TRANSACTION) {\n    session.transaction.transition(TxnState.TRANSACTION_IN_PROGRESS);\n    command.startTransaction = true;\n\n    const readConcern =\n      session.transaction.options.readConcern || session.clientOptions.readConcern;\n    if (readConcern) {\n      command.readConcern = readConcern;\n    }\n\n    if (session.supports.causalConsistency && session.operationTime) {\n      command.readConcern = command.readConcern || {};\n      Object.assign(command.readConcern, { afterClusterTime: session.operationTime });\n    }\n  }\n}\n\n//\n// Execute a write operation\nfunction executeWrite(pool, bson, type, opsField, ns, ops, options, callback) {\n  if (ops.length === 0) throw new MongoError('insert must contain at least one document');\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n    options = options || {};\n  }\n\n  // Split the ns up to get db and collection\n  const p = ns.split('.');\n  const d = p.shift();\n  // Options\n  const ordered = typeof options.ordered === 'boolean' ? options.ordered : true;\n  const writeConcern = options.writeConcern;\n\n  // return skeleton\n  const writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if (writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // If we have collation passed in\n  if (options.collation) {\n    for (let i = 0; i < writeCommand[opsField].length; i++) {\n      if (!writeCommand[opsField][i].collation) {\n        writeCommand[opsField][i].collation = options.collation;\n      }\n    }\n  }\n\n  // Do we have bypassDocumentValidation set, then enable it on the write command\n  if (options.bypassDocumentValidation === true) {\n    writeCommand.bypassDocumentValidation = options.bypassDocumentValidation;\n  }\n\n  // optionally decorate command with transactions data\n  const err = decorateWithSessionsData(writeCommand, options.session, options, callback);\n  if (err) {\n    return callback(err, null);\n  }\n\n  // Options object\n  const opts = { command: true };\n  if (typeof options.session !== 'undefined') opts.session = options.session;\n  const queryOptions = { checkKeys: false, numberToSkip: 0, numberToReturn: 1 };\n  if (type === 'insert') queryOptions.checkKeys = true;\n  if (typeof options.checkKeys === 'boolean') queryOptions.checkKeys = options.checkKeys;\n\n  // Ensure we support serialization of functions\n  if (options.serializeFunctions) queryOptions.serializeFunctions = options.serializeFunctions;\n  // Do not serialize the undefined fields\n  if (options.ignoreUndefined) queryOptions.ignoreUndefined = options.ignoreUndefined;\n\n  try {\n    // Create write command\n    const cmd = new Query(bson, `${d}.$cmd`, writeCommand, queryOptions);\n    // Execute command\n    pool.write(cmd, opts, callback);\n  } catch (err) {\n    callback(err);\n  }\n}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'insert', 'documents', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.update = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'update', 'updates', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.remove = function(pool, ns, bson, ops, options, callback) {\n  executeWrite(pool, bson, 'delete', 'deletes', ns, ops, options, callback);\n};\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorState, pool, callback) {\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n  const cursorId = cursorState.cursorId;\n  // Create killCursor command\n  const killcursorCmd = {\n    killCursors: parts.join('.'),\n    cursors: [cursorId]\n  };\n\n  // Build Query object\n  const query = new Query(bson, commandns, killcursorCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    returnFieldSelector: null\n  });\n\n  // Kill cursor callback\n  function killCursorCallback(err, result) {\n    if (err) {\n      if (typeof callback !== 'function') return;\n      return callback(err);\n    }\n\n    // Result\n    const r = result.message;\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      if (typeof callback !== 'function') return;\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    if (!Array.isArray(r.documents) || r.documents.length === 0) {\n      if (typeof callback !== 'function') return;\n      return callback(\n        new MongoError(`invalid killCursors result returned for cursor id ${cursorId}`)\n      );\n    }\n\n    // Return the result\n    if (typeof callback === 'function') {\n      callback(null, r.documents[0]);\n    }\n  }\n\n  const options = { command: true };\n  if (typeof cursorState.session === 'object') {\n    options.session = cursorState.session;\n  }\n\n  // Execute the kill cursor command\n  if (pool && pool.isConnected()) {\n    try {\n      pool.write(query, options, killCursorCallback);\n    } catch (err) {\n      killCursorCallback(err, null);\n    }\n\n    return;\n  }\n\n  // Callback\n  if (typeof callback === 'function') callback(null, null);\n};\n\nWireProtocol.prototype.getMore = function(\n  bson,\n  ns,\n  cursorState,\n  batchSize,\n  raw,\n  connection,\n  options,\n  callback\n) {\n  options = options || {};\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n\n  // Create getMore command\n  const getMoreCmd = {\n    getMore: cursorState.cursorId,\n    collection: parts.join('.'),\n    batchSize: Math.abs(batchSize)\n  };\n\n  // optionally decorate command with transactions data\n  const err = decorateWithSessionsData(getMoreCmd, options.session, options, callback);\n  if (err) {\n    return callback(err, null);\n  }\n\n  if (cursorState.cmd.tailable && typeof cursorState.cmd.maxAwaitTimeMS === 'number') {\n    getMoreCmd.maxTimeMS = cursorState.cmd.maxAwaitTimeMS;\n  }\n\n  // Build Query object\n  const query = new Query(bson, commandns, getMoreCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    returnFieldSelector: null\n  });\n\n  // Query callback\n  function queryCallback(err, result) {\n    if (err) return callback(err);\n    // Get the raw message\n    const r = result.message;\n\n    // If we have a timed out query or a cursor that was killed\n    if ((r.responseFlags & (1 << 0)) !== 0) {\n      return callback(new MongoNetworkError('cursor killed or timed out'), null);\n    }\n\n    // Raw, return all the extracted documents\n    if (raw) {\n      cursorState.documents = r.documents;\n      cursorState.cursorId = r.cursorId;\n      return callback(null, r.documents);\n    }\n\n    // We have an error detected\n    if (r.documents[0].ok === 0) {\n      return callback(new MongoError(r.documents[0]));\n    }\n\n    // Ensure we have a Long valid cursor id\n    const cursorId =\n      typeof r.documents[0].cursor.id === 'number'\n        ? Long.fromNumber(r.documents[0].cursor.id)\n        : r.documents[0].cursor.id;\n\n    // Set all the values\n    cursorState.documents = r.documents[0].cursor.nextBatch;\n    cursorState.cursorId = cursorId;\n\n    // Return the result\n    callback(null, r.documents[0], r.connection);\n  }\n\n  // Query options\n  const queryOptions = { command: true };\n\n  // If we have a raw query decorate the function\n  if (raw) {\n    queryOptions.raw = raw;\n  }\n\n  // Add the result field needed\n  queryOptions.documentsReturnedIn = 'nextBatch';\n\n  // Check if we need to promote longs\n  if (typeof cursorState.promoteLongs === 'boolean') {\n    queryOptions.promoteLongs = cursorState.promoteLongs;\n  }\n\n  if (typeof cursorState.promoteValues === 'boolean') {\n    queryOptions.promoteValues = cursorState.promoteValues;\n  }\n\n  if (typeof cursorState.promoteBuffers === 'boolean') {\n    queryOptions.promoteBuffers = cursorState.promoteBuffers;\n  }\n\n  if (typeof cursorState.session === 'object') {\n    queryOptions.session = cursorState.session;\n  }\n\n  // Write out the getMore command\n  connection.write(query, queryOptions, queryCallback);\n};\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  options = options || {};\n  // Check if this is a wire protocol command or not\n  const wireProtocolCommand =\n    typeof options.wireProtocolCommand === 'boolean' ? options.wireProtocolCommand : true;\n\n  // Establish type of command\n  let query;\n  if (cmd.find && wireProtocolCommand) {\n    // Create the find command\n    query = executeFindCommand(bson, ns, cmd, cursorState, topology, options);\n\n    // Mark the cmd as virtual\n    cmd.virtual = false;\n    // Signal the documents are in the firstBatch value\n    query.documentsReturnedIn = 'firstBatch';\n  } else if (cursorState.cursorId != null) {\n    return;\n  } else if (cmd) {\n    query = setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    return new MongoError(`command ${JSON.stringify(cmd)} does not return a cursor`);\n  }\n\n  if (query instanceof MongoError) {\n    return query;\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(query.query, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  return query;\n};\n\n// // Command\n// {\n//     find: ns\n//   , query: <object>\n//   , limit: <n>\n//   , fields: <object>\n//   , skip: <n>\n//   , hint: <string>\n//   , explain: <boolean>\n//   , snapshot: <boolean>\n//   , batchSize: <n>\n//   , returnKey: <boolean>\n//   , maxScan: <n>\n//   , min: <n>\n//   , max: <n>\n//   , showDiskLoc: <boolean>\n//   , comment: <string>\n//   , maxTimeMS: <n>\n//   , raw: <boolean>\n//   , readPreference: <ReadPreference>\n//   , tailable: <boolean>\n//   , oplogReplay: <boolean>\n//   , noCursorTimeout: <boolean>\n//   , awaitdata: <boolean>\n//   , exhaust: <boolean>\n//   , partial: <boolean>\n// }\n\n// FIND/GETMORE SPEC\n// {\n//     “find”: <string>,\n//     “filter”: { ... },\n//     “sort”: { ... },\n//     “projection”: { ... },\n//     “hint”: { ... },\n//     “skip”: <int>,\n//     “limit”: <int>,\n//     “batchSize”: <int>,\n//     “singleBatch”: <bool>,\n//     “comment”: <string>,\n//     “maxScan”: <int>,\n//     “maxTimeMS”: <int>,\n//     “max”: { ... },\n//     “min”: { ... },\n//     “returnKey”: <bool>,\n//     “showRecordId”: <bool>,\n//     “snapshot”: <bool>,\n//     “tailable”: <bool>,\n//     “oplogReplay”: <bool>,\n//     “noCursorTimeout”: <bool>,\n//     “awaitData”: <bool>,\n//     “partial”: <bool>,\n//     “$readPreference”: { ... }\n// }\n\n//\n// Execute a find command\nfunction executeFindCommand(bson, ns, cmd, cursorState, topology, options) {\n  // Ensure we have at least some options\n  options = options || {};\n  // Get the readPreference\n  const readPreference = getReadPreference(cmd, options);\n\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n\n  // Build command namespace\n  const parts = ns.split(/\\./);\n  // Command namespace\n  const commandns = `${parts.shift()}.$cmd`;\n\n  // Build actual find command\n  let findCmd = {\n    find: parts.join('.')\n  };\n\n  // I we provided a filter\n  if (cmd.query) {\n    // Check if the user is passing in the $query parameter\n    if (cmd.query['$query']) {\n      findCmd.filter = cmd.query['$query'];\n    } else {\n      findCmd.filter = cmd.query;\n    }\n  }\n\n  // Sort value\n  let sortValue = cmd.sort;\n\n  // Handle issue of sort being an Array\n  if (Array.isArray(sortValue)) {\n    const sortObject = {};\n\n    if (sortValue.length > 0 && !Array.isArray(sortValue[0])) {\n      let sortDirection = sortValue[1];\n      // Translate the sort order text\n      if (sortDirection === 'asc') {\n        sortDirection = 1;\n      } else if (sortDirection === 'desc') {\n        sortDirection = -1;\n      }\n\n      // Set the sort order\n      sortObject[sortValue[0]] = sortDirection;\n    } else {\n      for (var i = 0; i < sortValue.length; i++) {\n        let sortDirection = sortValue[i][1];\n        // Translate the sort order text\n        if (sortDirection === 'asc') {\n          sortDirection = 1;\n        } else if (sortDirection === 'desc') {\n          sortDirection = -1;\n        }\n\n        // Set the sort order\n        sortObject[sortValue[i][0]] = sortDirection;\n      }\n    }\n\n    sortValue = sortObject;\n  }\n\n  // Add sort to command\n  if (cmd.sort) findCmd.sort = sortValue;\n  // Add a projection to the command\n  if (cmd.fields) findCmd.projection = cmd.fields;\n  // Add a hint to the command\n  if (cmd.hint) findCmd.hint = cmd.hint;\n  // Add a skip\n  if (cmd.skip) findCmd.skip = cmd.skip;\n  // Add a limit\n  if (cmd.limit) findCmd.limit = cmd.limit;\n\n  // Check if we wish to have a singleBatch\n  if (cmd.limit < 0) {\n    findCmd.limit = Math.abs(cmd.limit);\n    findCmd.singleBatch = true;\n  }\n\n  // Add a batchSize\n  if (typeof cmd.batchSize === 'number') {\n    if (cmd.batchSize < 0) {\n      if (cmd.limit !== 0 && Math.abs(cmd.batchSize) < Math.abs(cmd.limit)) {\n        findCmd.limit = Math.abs(cmd.batchSize);\n      }\n\n      findCmd.singleBatch = true;\n    }\n\n    findCmd.batchSize = Math.abs(cmd.batchSize);\n  }\n\n  // If we have comment set\n  if (cmd.comment) findCmd.comment = cmd.comment;\n\n  // If we have maxScan\n  if (cmd.maxScan) findCmd.maxScan = cmd.maxScan;\n\n  // If we have maxTimeMS set\n  if (cmd.maxTimeMS) findCmd.maxTimeMS = cmd.maxTimeMS;\n\n  // If we have min\n  if (cmd.min) findCmd.min = cmd.min;\n\n  // If we have max\n  if (cmd.max) findCmd.max = cmd.max;\n\n  // If we have returnKey set\n  findCmd.returnKey = cmd.returnKey ? cmd.returnKey : false;\n\n  // If we have showDiskLoc set\n  findCmd.showRecordId = cmd.showDiskLoc ? cmd.showDiskLoc : false;\n\n  // If we have snapshot set\n  if (cmd.snapshot) findCmd.snapshot = cmd.snapshot;\n\n  // If we have tailable set\n  if (cmd.tailable) findCmd.tailable = cmd.tailable;\n\n  // If we have oplogReplay set\n  if (cmd.oplogReplay) findCmd.oplogReplay = cmd.oplogReplay;\n\n  // If we have noCursorTimeout set\n  if (cmd.noCursorTimeout) findCmd.noCursorTimeout = cmd.noCursorTimeout;\n\n  // If we have awaitData set\n  if (cmd.awaitData) findCmd.awaitData = cmd.awaitData;\n  if (cmd.awaitdata) findCmd.awaitData = cmd.awaitdata;\n\n  // If we have partial set\n  if (cmd.partial) findCmd.partial = cmd.partial;\n\n  // If we have collation passed in\n  if (cmd.collation) findCmd.collation = cmd.collation;\n\n  // If we have explain, we need to rewrite the find command\n  // to wrap it in the explain command\n  if (cmd.explain) {\n    findCmd = {\n      explain: findCmd\n    };\n  }\n\n  // Did we provide a readConcern\n  if (cmd.readConcern) findCmd.readConcern = cmd.readConcern;\n\n  // Set up the serialize and ignoreUndefined fields\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    findCmd = {\n      $query: findCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(findCmd, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  // Build Query object\n  const query = new Query(bson, commandns, findCmd, {\n    numberToSkip: 0,\n    numberToReturn: 1,\n    checkKeys: false,\n    returnFieldSelector: null,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n//\n// Set up a command cursor\nfunction setupCommand(bson, ns, cmd, cursorState, topology, options) {\n  // Set empty options object\n  options = options || {};\n  // Get the readPreference\n  const readPreference = getReadPreference(cmd, options);\n\n  // Final query\n  let finalCmd = {};\n  for (let name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  const parts = ns.split(/\\./);\n\n  // Serialize functions\n  const serializeFunctions =\n    typeof options.serializeFunctions === 'boolean' ? options.serializeFunctions : false;\n\n  // Set up the serialize and ignoreUndefined fields\n  const ignoreUndefined =\n    typeof options.ignoreUndefined === 'boolean' ? options.ignoreUndefined : false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if (topology.type === 'mongos' && readPreference && readPreference.preference !== 'primary') {\n    finalCmd = {\n      $query: finalCmd,\n      $readPreference: readPreference.toJSON()\n    };\n  }\n\n  // optionally decorate query with transaction data\n  const err = decorateWithSessionsData(finalCmd, options.session, options);\n  if (err) {\n    return err;\n  }\n\n  // Build Query object\n  const query = new Query(bson, `${parts.shift()}.$cmd`, finalCmd, {\n    numberToSkip: 0,\n    numberToReturn: -1,\n    checkKeys: false,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\nmodule.exports = WireProtocol;\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\nconst ReadPreference = require('./read_preference');\nconst BasicCursor = require('../cursor');\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst Logger = require('../connection/logger');\nconst MongoError = require('../error').MongoError;\nconst Server = require('./server');\nconst ReplSetState = require('./replset_state');\nconst clone = require('./shared').clone;\nconst Timeout = require('./shared').Timeout;\nconst Interval = require('./shared').Interval;\nconst createClientInfo = require('./shared').createClientInfo;\nconst SessionMixins = require('./shared').SessionMixins;\nconst isRetryableWritesSupported = require('./shared').isRetryableWritesSupported;\nconst relayEvents = require('../utils').relayEvents;\nconst isRetryableError = require('../error').isRetryableError;\n\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\n\nvar BSON = retrieveBSON();\n\n//\n// States\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar UNREFERENCED = 'unreferenced';\nvar DESTROYED = 'destroyed';\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYED, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],\n    unreferenced: [UNREFERENCED, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.state = newState;\n  } else {\n    self.s.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\n//\n// ReplSet instance id\nvar id = 1;\nvar handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];\n\n/**\n * Creates a new Replset instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {boolean} options.setName The Replicaset set name\n * @param {boolean} [options.secondaryOnlyConnectionAllowed=false] Allow connection to a secondary only replicaset\n * @param {number} [options.haInterval=10000] The High availability period for replicaset inquiry\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=10000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for Replicaset member selection\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {ReplSet} A cursor instance\n * @fires ReplSet#connect\n * @fires ReplSet#ha\n * @fires ReplSet#joined\n * @fires ReplSet#left\n * @fires ReplSet#failed\n * @fires ReplSet#fullsetup\n * @fires ReplSet#all\n * @fires ReplSet#error\n * @fires ReplSet#serverHeartbeatStarted\n * @fires ReplSet#serverHeartbeatSucceeded\n * @fires ReplSet#serverHeartbeatFailed\n * @fires ReplSet#topologyOpening\n * @fires ReplSet#topologyClosed\n * @fires ReplSet#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar ReplSet = function(seedlist, options) {\n  var self = this;\n  options = options || {};\n\n  // Validate seedlist\n  if (!Array.isArray(seedlist)) throw new MongoError('seedlist must be an array');\n  // Validate list\n  if (seedlist.length === 0) throw new MongoError('seedlist must contain at least one entry');\n  // Validate entries\n  seedlist.forEach(function(e) {\n    if (typeof e.host !== 'string' || typeof e.port !== 'number')\n      throw new MongoError('seedlist entry must contain a host and port');\n  });\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Get replSet Id\n  this.id = id++;\n\n  // Get the localThresholdMS\n  var localThresholdMS = options.localThresholdMS || 15;\n  // Backward compatibility\n  if (options.acceptableLatency) localThresholdMS = options.acceptableLatency;\n\n  // Create a logger\n  var logger = Logger('ReplSet', options);\n\n  // Internal state\n  this.s = {\n    options: Object.assign({}, options),\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Factory overrides\n    Cursor: options.cursorFactory || BasicCursor,\n    // Logger instance\n    logger: logger,\n    // Seedlist\n    seedlist: seedlist,\n    // Replicaset state\n    replicaSetState: new ReplSetState({\n      id: this.id,\n      setName: options.setName,\n      acceptableLatency: localThresholdMS,\n      heartbeatFrequencyMS: options.haInterval ? options.haInterval : 10000,\n      logger: logger\n    }),\n    // Current servers we are connecting to\n    connectingServers: [],\n    // Ha interval\n    haInterval: options.haInterval ? options.haInterval : 10000,\n    // Minimum heartbeat frequency used if we detect a server close\n    minHeartbeatFrequencyMS: 500,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Server selection index\n    index: 0,\n    // Connect function options passed in\n    connectOptions: {},\n    // Are we running in debug mode\n    debug: typeof options.debug === 'boolean' ? options.debug : false,\n    // Client info\n    clientInfo: createClientInfo(options),\n    // Authentication context\n    authenticationContexts: []\n  };\n\n  // Add handler for topology change\n  this.s.replicaSetState.on('topologyDescriptionChanged', function(r) {\n    self.emit('topologyDescriptionChanged', r);\n  });\n\n  // Log info warning if the socketTimeout < haInterval as it will cause\n  // a lot of recycled connections to happen.\n  if (\n    this.s.logger.isWarn() &&\n    this.s.options.socketTimeout !== 0 &&\n    this.s.options.socketTimeout < this.s.haInterval\n  ) {\n    this.s.logger.warn(\n      f(\n        'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts',\n        this.s.options.socketTimeout,\n        this.s.haInterval\n      )\n    );\n  }\n\n  // All the authProviders\n  this.authProviders = options.authProviders || defaultAuthProviders(this.s.bson);\n\n  // Add forwarding of events from state handler\n  var types = ['joined', 'left'];\n  types.forEach(function(x) {\n    self.s.replicaSetState.on(x, function(t, s) {\n      self.emit(x, t, s);\n    });\n  });\n\n  // Connect stat\n  this.initialConnectState = {\n    connect: false,\n    fullsetup: false,\n    all: false\n  };\n\n  // Disconnected state\n  this.state = DISCONNECTED;\n  this.haTimeoutId = null;\n  // Are we authenticating\n  this.authenticating = false;\n  // Last ismaster\n  this.ismaster = null;\n  // Contains the intervalId\n  this.intervalIds = [];\n\n  // Highest clusterTime seen in responses from the current deployment\n  this.clusterTime = null;\n};\n\ninherits(ReplSet, EventEmitter);\nObject.assign(ReplSet.prototype, SessionMixins);\n\nObject.defineProperty(ReplSet.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return 'replset';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(ReplSet.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    return this.s.replicaSetState.logicalSessionTimeoutMinutes || null;\n  }\n});\n\nfunction rexecuteOperations(self) {\n  // If we have a primary and a disconnect handler, execute\n  // buffered operations\n  if (self.s.replicaSetState.hasPrimaryAndSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute();\n  } else if (self.s.replicaSetState.hasPrimary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executePrimary: true });\n  } else if (self.s.replicaSetState.hasSecondary() && self.s.disconnectHandler) {\n    self.s.disconnectHandler.execute({ executeSecondary: true });\n  }\n}\n\nfunction connectNewServers(self, servers, callback) {\n  // Count lefts\n  var count = servers.length;\n  var error = null;\n\n  // Handle events\n  var _handleEvent = function(self, event) {\n    return function(err) {\n      var _self = this;\n      count = count - 1;\n\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return this.destroy({ force: true });\n      }\n\n      if (event === 'connect' && !self.authenticating) {\n        // Destroyed\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          return _self.destroy({ force: true });\n        }\n\n        // Do we have authentication contexts that need to be applied\n        applyAuthenticationContexts(self, _self, function() {\n          // Destroy the instance\n          if (self.state === DESTROYED || self.state === UNREFERENCED) {\n            return _self.destroy({ force: true });\n          }\n\n          // Update the state\n          var result = self.s.replicaSetState.update(_self);\n          // Update the state with the new server\n          if (result) {\n            // Primary lastIsMaster store it\n            if (_self.lastIsMaster() && _self.lastIsMaster().ismaster) {\n              self.ismaster = _self.lastIsMaster();\n            }\n\n            // Remove the handlers\n            for (var i = 0; i < handlers.length; i++) {\n              _self.removeAllListeners(handlers[i]);\n            }\n\n            // Add stable state handlers\n            _self.on('error', handleEvent(self, 'error'));\n            _self.on('close', handleEvent(self, 'close'));\n            _self.on('timeout', handleEvent(self, 'timeout'));\n            _self.on('parseError', handleEvent(self, 'parseError'));\n\n            // Enalbe the monitoring of the new server\n            monitorServer(_self.lastIsMaster().me, self, {});\n\n            // Rexecute any stalled operation\n            rexecuteOperations(self);\n          } else {\n            _self.destroy({ force: true });\n          }\n        });\n      } else if (event === 'connect' && self.authenticating) {\n        this.destroy({ force: true });\n      } else if (event === 'error') {\n        error = err;\n      }\n\n      // Rexecute any stalled operation\n      rexecuteOperations(self);\n\n      // Are we done finish up callback\n      if (count === 0) {\n        callback(error);\n      }\n    };\n  };\n\n  // No new servers\n  if (count === 0) return callback();\n\n  // Execute method\n  function execute(_server, i) {\n    setTimeout(function() {\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      // Create a new server instance\n      var server = new Server(\n        Object.assign({}, self.s.options, {\n          host: _server.split(':')[0],\n          port: parseInt(_server.split(':')[1], 10),\n          authProviders: self.authProviders,\n          reconnect: false,\n          monitoring: false,\n          parent: self,\n          clientInfo: clone(self.s.clientInfo)\n        })\n      );\n\n      // Add temp handlers\n      server.once('connect', _handleEvent(self, 'connect'));\n      server.once('close', _handleEvent(self, 'close'));\n      server.once('timeout', _handleEvent(self, 'timeout'));\n      server.once('error', _handleEvent(self, 'error'));\n      server.once('parseError', _handleEvent(self, 'parseError'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      server.connect(self.s.connectOptions);\n    }, i);\n  }\n\n  // Create new instances\n  for (var i = 0; i < servers.length; i++) {\n    execute(servers[i], i);\n  }\n}\n\n// Ping the server\nvar pingServer = function(self, server, cb) {\n  // Measure running time\n  var start = new Date().getTime();\n\n  // Emit the server heartbeat start\n  emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: server.name });\n\n  // Execute ismaster\n  // Set the socketTimeout for a monitoring message to a low number\n  // Ensuring ismaster calls are timed out quickly\n  server.command(\n    'admin.$cmd',\n    {\n      ismaster: true\n    },\n    {\n      monitoring: true,\n      socketTimeout: self.s.options.connectionTimeout || 2000\n    },\n    function(err, r) {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        server.destroy({ force: true });\n        return cb(err, r);\n      }\n\n      // Calculate latency\n      var latencyMS = new Date().getTime() - start;\n      // Set the last updatedTime\n      var hrTime = process.hrtime();\n      // Calculate the last update time\n      server.lastUpdateTime = hrTime[0] * 1000 + Math.round(hrTime[1] / 1000);\n\n      // We had an error, remove it from the state\n      if (err) {\n        // Emit the server heartbeat failure\n        emitSDAMEvent(self, 'serverHeartbeatFailed', {\n          durationMS: latencyMS,\n          failure: err,\n          connectionId: server.name\n        });\n\n        // Remove server from the state\n        self.s.replicaSetState.remove(server);\n      } else {\n        // Update the server ismaster\n        server.ismaster = r.result;\n\n        // Check if we have a lastWriteDate convert it to MS\n        // and store on the server instance for later use\n        if (server.ismaster.lastWrite && server.ismaster.lastWrite.lastWriteDate) {\n          server.lastWriteDate = server.ismaster.lastWrite.lastWriteDate.getTime();\n        }\n\n        // Do we have a brand new server\n        if (server.lastIsMasterMS === -1) {\n          server.lastIsMasterMS = latencyMS;\n        } else if (server.lastIsMasterMS) {\n          // After the first measurement, average RTT MUST be computed using an\n          // exponentially-weighted moving average formula, with a weighting factor (alpha) of 0.2.\n          // If the prior average is denoted old_rtt, then the new average (new_rtt) is\n          // computed from a new RTT measurement (x) using the following formula:\n          // alpha = 0.2\n          // new_rtt = alpha * x + (1 - alpha) * old_rtt\n          server.lastIsMasterMS = 0.2 * latencyMS + (1 - 0.2) * server.lastIsMasterMS;\n        }\n\n        if (self.s.replicaSetState.update(server)) {\n          // Primary lastIsMaster store it\n          if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n            self.ismaster = server.lastIsMaster();\n          }\n        }\n\n        // Server heart beat event\n        emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n          durationMS: latencyMS,\n          reply: r.result,\n          connectionId: server.name\n        });\n      }\n\n      // Calculate the staleness for this server\n      self.s.replicaSetState.updateServerMaxStaleness(server, self.s.haInterval);\n\n      // Callback\n      cb(err, r);\n    }\n  );\n};\n\n// Each server is monitored in parallel in their own timeout loop\nvar monitorServer = function(host, self, options) {\n  // If this is not the initial scan\n  // Is this server already being monitoried, then skip monitoring\n  if (!options.haInterval) {\n    for (var i = 0; i < self.intervalIds.length; i++) {\n      if (self.intervalIds[i].__host === host) {\n        return;\n      }\n    }\n  }\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  // Create the interval\n  var intervalId = new _process(function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      // clearInterval(intervalId);\n      intervalId.stop();\n      return;\n    }\n\n    // Do we already have server connection available for this host\n    var _server = self.s.replicaSetState.get(host);\n\n    // Check if we have a known server connection and reuse\n    if (_server) {\n      // Ping the server\n      return pingServer(self, _server, function(err) {\n        if (err) {\n          // NOTE: should something happen here?\n          return;\n        }\n\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          intervalId.stop();\n          return;\n        }\n\n        // Filter out all called intervaliIds\n        self.intervalIds = self.intervalIds.filter(function(intervalId) {\n          return intervalId.isRunning();\n        });\n\n        // Initial sweep\n        if (_process === Timeout) {\n          if (\n            self.state === CONNECTING &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            self.state = CONNECTED;\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('connect', self);\n            });\n\n            // Start topology interval check\n            topologyMonitor(self, {});\n          }\n        } else {\n          if (\n            self.state === DISCONNECTED &&\n            ((self.s.replicaSetState.hasSecondary() &&\n              self.s.options.secondaryOnlyConnectionAllowed) ||\n              self.s.replicaSetState.hasPrimary())\n          ) {\n            self.state = CONNECTED;\n\n            // Rexecute any stalled operation\n            rexecuteOperations(self);\n\n            // Emit connected sign\n            process.nextTick(function() {\n              self.emit('reconnect', self);\n            });\n          }\n        }\n\n        if (\n          self.initialConnectState.connect &&\n          !self.initialConnectState.fullsetup &&\n          self.s.replicaSetState.hasPrimaryAndSecondary()\n        ) {\n          // Set initial connect state\n          self.initialConnectState.fullsetup = true;\n          self.initialConnectState.all = true;\n\n          process.nextTick(function() {\n            self.emit('fullsetup', self);\n            self.emit('all', self);\n          });\n        }\n      });\n    }\n  }, _haInterval);\n\n  // Start the interval\n  intervalId.start();\n  // Add the intervalId host name\n  intervalId.__host = host;\n  // Add the intervalId to our list of intervalIds\n  self.intervalIds.push(intervalId);\n};\n\nfunction topologyMonitor(self, options) {\n  if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n  options = options || {};\n\n  // Get the servers\n  var servers = Object.keys(self.s.replicaSetState.set);\n\n  // Get the haInterval\n  var _process = options.haInterval ? Timeout : Interval;\n  var _haInterval = options.haInterval ? options.haInterval : self.s.haInterval;\n\n  if (_process === Timeout) {\n    return connectNewServers(self, self.s.replicaSetState.unknownServers, function(err) {\n      // Don't emit errors if the connection was already\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      if (!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no primary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      } else if (\n        !self.s.replicaSetState.hasSecondary() &&\n        self.s.options.secondaryOnlyConnectionAllowed\n      ) {\n        if (err) {\n          return self.emit('error', err);\n        }\n\n        self.emit(\n          'error',\n          new MongoError('no secondary found in replicaset or invalid replica set name')\n        );\n        return self.destroy({ force: true });\n      }\n\n      for (var i = 0; i < servers.length; i++) {\n        monitorServer(servers[i], self, options);\n      }\n    });\n  } else {\n    for (var i = 0; i < servers.length; i++) {\n      monitorServer(servers[i], self, options);\n    }\n  }\n\n  // Run the reconnect process\n  function executeReconnect(self) {\n    return function() {\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      connectNewServers(self, self.s.replicaSetState.unknownServers, function() {\n        var monitoringFrequencey = self.s.replicaSetState.hasPrimary()\n          ? _haInterval\n          : self.s.minHeartbeatFrequencyMS;\n\n        // Create a timeout\n        self.intervalIds.push(new Timeout(executeReconnect(self), monitoringFrequencey).start());\n      });\n    };\n  }\n\n  // Decide what kind of interval to use\n  var intervalTime = !self.s.replicaSetState.hasPrimary()\n    ? self.s.minHeartbeatFrequencyMS\n    : _haInterval;\n\n  self.intervalIds.push(new Timeout(executeReconnect(self), intervalTime).start());\n}\n\nfunction addServerToList(list, server) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].name.toLowerCase() === server.name.toLowerCase()) return true;\n  }\n\n  list.push(server);\n}\n\nfunction handleEvent(self, event) {\n  return function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f('handleEvent %s from server %s in replset with id %s', event, this.name, self.id)\n      );\n    }\n\n    // Remove from the replicaset state\n    self.s.replicaSetState.remove(this);\n\n    // Are we in a destroyed state return\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n    // If no primary and secondary available\n    if (\n      !self.s.replicaSetState.hasPrimary() &&\n      !self.s.replicaSetState.hasSecondary() &&\n      self.s.options.secondaryOnlyConnectionAllowed\n    ) {\n      stateTransition(self, DISCONNECTED);\n    } else if (!self.s.replicaSetState.hasPrimary()) {\n      stateTransition(self, DISCONNECTED);\n    }\n\n    addServerToList(self.s.connectingServers, this);\n  };\n}\n\nfunction applyAuthenticationContexts(self, server, callback) {\n  if (self.s.authenticationContexts.length === 0) {\n    return callback();\n  }\n\n  // Do not apply any auth contexts if it's an arbiter\n  if (server.lastIsMaster() && server.lastIsMaster().arbiterOnly) {\n    return callback();\n  }\n\n  // Copy contexts to ensure no modificiation in the middle of\n  // auth process.\n  var authContexts = self.s.authenticationContexts.slice(0);\n\n  // Apply one of the contexts\n  function applyAuth(authContexts, server, callback) {\n    if (authContexts.length === 0) return callback();\n    // Get the first auth context\n    var authContext = authContexts.shift();\n    // Copy the params\n    var customAuthContext = authContext.slice(0);\n    // Push our callback handler\n    customAuthContext.push(function(/* err */) {\n      applyAuth(authContexts, server, callback);\n    });\n\n    // Attempt authentication\n    server.auth.apply(server, customAuthContext);\n  }\n\n  // Apply all auth contexts\n  applyAuth(authContexts, server, callback);\n}\n\nfunction shouldTriggerConnect(self) {\n  const isConnecting = self.state === CONNECTING;\n  const hasPrimary = self.s.replicaSetState.hasPrimary();\n  const hasSecondary = self.s.replicaSetState.hasSecondary();\n  const secondaryOnlyConnectionAllowed = self.s.options.secondaryOnlyConnectionAllowed;\n  const readPreferenceSecondary =\n    self.s.connectOptions.readPreference &&\n    self.s.connectOptions.readPreference.equals(ReadPreference.secondary);\n\n  return (\n    (isConnecting &&\n      ((readPreferenceSecondary && hasSecondary) || (!readPreferenceSecondary && hasPrimary))) ||\n    (hasSecondary && secondaryOnlyConnectionAllowed)\n  );\n}\n\nfunction handleInitialConnectEvent(self, event) {\n  return function() {\n    var _this = this;\n    // Debug log\n    if (self.s.logger.isDebug()) {\n      self.s.logger.debug(\n        f(\n          'handleInitialConnectEvent %s from server %s in replset with id %s',\n          event,\n          this.name,\n          self.id\n        )\n      );\n    }\n\n    // Destroy the instance\n    if (self.state === DESTROYED || self.state === UNREFERENCED) {\n      return this.destroy({ force: true });\n    }\n\n    // Check the type of server\n    if (event === 'connect') {\n      // Do we have authentication contexts that need to be applied\n      applyAuthenticationContexts(self, _this, function() {\n        // Destroy the instance\n        if (self.state === DESTROYED || self.state === UNREFERENCED) {\n          return _this.destroy({ force: true });\n        }\n\n        // Update the state\n        var result = self.s.replicaSetState.update(_this);\n        if (result === true) {\n          // Primary lastIsMaster store it\n          if (_this.lastIsMaster() && _this.lastIsMaster().ismaster) {\n            self.ismaster = _this.lastIsMaster();\n          }\n\n          // Debug log\n          if (self.s.logger.isDebug()) {\n            self.s.logger.debug(\n              f(\n                'handleInitialConnectEvent %s from server %s in replset with id %s has state [%s]',\n                event,\n                _this.name,\n                self.id,\n                JSON.stringify(self.s.replicaSetState.set)\n              )\n            );\n          }\n\n          // Remove the handlers\n          for (var i = 0; i < handlers.length; i++) {\n            _this.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _this.on('error', handleEvent(self, 'error'));\n          _this.on('close', handleEvent(self, 'close'));\n          _this.on('timeout', handleEvent(self, 'timeout'));\n          _this.on('parseError', handleEvent(self, 'parseError'));\n\n          // Do we have a primary or primaryAndSecondary\n          if (shouldTriggerConnect(self)) {\n            // We are connected\n            self.state = CONNECTED;\n\n            // Set initial connect state\n            self.initialConnectState.connect = true;\n            // Emit connect event\n            process.nextTick(function() {\n              self.emit('connect', self);\n            });\n\n            topologyMonitor(self, {});\n          }\n        } else if (result instanceof MongoError) {\n          _this.destroy({ force: true });\n          self.destroy({ force: true });\n          return self.emit('error', result);\n        } else {\n          _this.destroy({ force: true });\n        }\n      });\n    } else {\n      // Emit failure to connect\n      self.emit('failed', this);\n\n      addServerToList(self.s.connectingServers, this);\n      // Remove from the state\n      self.s.replicaSetState.remove(this);\n    }\n\n    if (\n      self.initialConnectState.connect &&\n      !self.initialConnectState.fullsetup &&\n      self.s.replicaSetState.hasPrimaryAndSecondary()\n    ) {\n      // Set initial connect state\n      self.initialConnectState.fullsetup = true;\n      self.initialConnectState.all = true;\n\n      process.nextTick(function() {\n        self.emit('fullsetup', self);\n        self.emit('all', self);\n      });\n    }\n\n    // Remove from the list from connectingServers\n    for (var i = 0; i < self.s.connectingServers.length; i++) {\n      if (self.s.connectingServers[i].equals(this)) {\n        self.s.connectingServers.splice(i, 1);\n      }\n    }\n\n    // Trigger topologyMonitor\n    if (self.s.connectingServers.length === 0 && self.state === CONNECTING) {\n      topologyMonitor(self, { haInterval: 1 });\n    }\n  };\n}\n\nfunction connectServers(self, servers) {\n  // Update connectingServers\n  self.s.connectingServers = self.s.connectingServers.concat(servers);\n\n  // Index used to interleaf the server connects, avoiding\n  // runtime issues on io constrained vm's\n  var timeoutInterval = 0;\n\n  function connect(server, timeoutInterval) {\n    setTimeout(function() {\n      // Add the server to the state\n      if (self.s.replicaSetState.update(server)) {\n        // Primary lastIsMaster store it\n        if (server.lastIsMaster() && server.lastIsMaster().ismaster) {\n          self.ismaster = server.lastIsMaster();\n        }\n      }\n\n      // Add event handlers\n      server.once('close', handleInitialConnectEvent(self, 'close'));\n      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));\n      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));\n      server.once('error', handleInitialConnectEvent(self, 'error'));\n      server.once('connect', handleInitialConnectEvent(self, 'connect'));\n\n      // SDAM Monitoring events\n      server.on('serverOpening', e => self.emit('serverOpening', e));\n      server.on('serverDescriptionChanged', e => self.emit('serverDescriptionChanged', e));\n      server.on('serverClosed', e => self.emit('serverClosed', e));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Start connection\n      server.connect(self.s.connectOptions);\n    }, timeoutInterval);\n  }\n\n  // Start all the servers\n  while (servers.length > 0) {\n    connect(servers.shift(), timeoutInterval++);\n  }\n}\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\n/**\n * Initiate server connect\n * @method\n * @param {array} [options.auth=null] Array of auth options to apply on connect\n */\nReplSet.prototype.connect = function(options) {\n  var self = this;\n  // Add any connect level options to the internal state\n  this.s.connectOptions = options || {};\n  // Set connecting state\n  stateTransition(this, CONNECTING);\n  // Create server instances\n  var servers = this.s.seedlist.map(function(x) {\n    return new Server(\n      Object.assign({}, self.s.options, x, {\n        authProviders: self.authProviders,\n        reconnect: false,\n        monitoring: false,\n        parent: self,\n        clientInfo: clone(self.s.clientInfo)\n      })\n    );\n  });\n\n  // Error out as high availbility interval must be < than socketTimeout\n  if (\n    this.s.options.socketTimeout > 0 &&\n    this.s.options.socketTimeout <= this.s.options.haInterval\n  ) {\n    return self.emit(\n      'error',\n      new MongoError(\n        f(\n          'haInterval [%s] MS must be set to less than socketTimeout [%s] MS',\n          this.s.options.haInterval,\n          this.s.options.socketTimeout\n        )\n      )\n    );\n  }\n\n  // Emit the topology opening event\n  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });\n  // Start all server connections\n  connectServers(self, servers);\n};\n\n/**\n * Destroy the server connection\n * @param {boolean} [options.force=false] Force destroy the pool\n * @method\n */\nReplSet.prototype.destroy = function(options) {\n  options = options || {};\n  // Transition state\n  stateTransition(this, DESTROYED);\n  // Clear out any monitoring process\n  if (this.haTimeoutId) clearTimeout(this.haTimeoutId);\n  // Destroy the replicaset\n  this.s.replicaSetState.destroy(options);\n  // Clear out authentication contexts\n  this.s.authenticationContexts = [];\n\n  // Destroy all connecting servers\n  this.s.connectingServers.forEach(function(x) {\n    x.destroy(options);\n  });\n\n  // Clear out all monitoring\n  for (var i = 0; i < this.intervalIds.length; i++) {\n    this.intervalIds[i].stop();\n  }\n\n  // Reset list of intervalIds\n  this.intervalIds = [];\n\n  // Emit toplogy closing event\n  emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nReplSet.prototype.unref = function() {\n  // Transition state\n  stateTransition(this, UNREFERENCED);\n\n  this.s.replicaSetState.allServers().forEach(function(x) {\n    x.unref();\n  });\n\n  clearTimeout(this.haTimeoutId);\n};\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nReplSet.prototype.lastIsMaster = function() {\n  // If secondaryOnlyConnectionAllowed and no primary but secondary\n  // return the secondaries ismaster result.\n  if (\n    this.s.options.secondaryOnlyConnectionAllowed &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.replicaSetState.hasSecondary()\n  ) {\n    return this.s.replicaSetState.secondaries[0].lastIsMaster();\n  }\n\n  return this.s.replicaSetState.primary\n    ? this.s.replicaSetState.primary.lastIsMaster()\n    : this.ismaster;\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nReplSet.prototype.connections = function() {\n  var servers = this.s.replicaSetState.allServers();\n  var connections = [];\n  for (var i = 0; i < servers.length; i++) {\n    connections = connections.concat(servers[i].connections());\n  }\n\n  return connections;\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {boolean}\n */\nReplSet.prototype.isConnected = function(options) {\n  options = options || {};\n\n  // If we are authenticating signal not connected\n  // To avoid interleaving of operations\n  if (this.authenticating) return false;\n\n  // If we specified a read preference check if we are connected to something\n  // than can satisfy this\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondary)) {\n    return this.s.replicaSetState.hasSecondary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primary)) {\n    return this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.primaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (options.readPreference && options.readPreference.equals(ReadPreference.secondaryPreferred)) {\n    return this.s.replicaSetState.hasSecondary() || this.s.replicaSetState.hasPrimary();\n  }\n\n  if (this.s.options.secondaryOnlyConnectionAllowed && this.s.replicaSetState.hasSecondary()) {\n    return true;\n  }\n\n  return this.s.replicaSetState.hasPrimary();\n};\n\n/**\n * Figure out if the replicaset instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nReplSet.prototype.isDestroyed = function() {\n  return this.state === DESTROYED;\n};\n\n/**\n * Selects a server\n *\n * @method\n * @param {function} selector Unused\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {function} callback\n */\nReplSet.prototype.selectServer = function(selector, options, callback) {\n  if (typeof selector === 'function' && typeof callback === 'undefined')\n    (callback = selector), (selector = undefined), (options = {});\n  if (typeof options === 'function')\n    (callback = options), (options = selector), (selector = undefined);\n  options = options || {};\n\n  const server = this.s.replicaSetState.pickServer(options.readPreference);\n  if (this.s.debug) this.emit('pickedServer', options.readPreference, server);\n  callback(null, server);\n};\n\n/**\n * Get all connected servers\n * @method\n * @return {Server[]}\n */\nReplSet.prototype.getServers = function() {\n  return this.s.replicaSetState.allServers();\n};\n\n//\n// Execute write operation\nfunction executeWriteOperation(args, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // TODO: once we drop Node 4, use destructuring either here or in arguments.\n  const self = args.self;\n  const op = args.op;\n  const ns = args.ns;\n  const ops = args.ops;\n\n  if (self.state === DESTROYED) {\n    return callback(new MongoError(f('topology was destroyed')));\n  }\n\n  const willRetryWrite =\n    !args.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction();\n\n  if (!self.s.replicaSetState.hasPrimary()) {\n    if (self.s.disconnectHandler) {\n      // Not connected but we have a disconnecthandler\n      return self.s.disconnectHandler.add(op, ns, ops, options, callback);\n    } else if (!willRetryWrite) {\n      // No server returned we had an error\n      return callback(new MongoError('no primary server found'));\n    }\n  }\n\n  const handler = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newArgs = Object.assign({}, args, { retrying: true });\n      return executeWriteOperation(newArgs, options, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (self.s.replicaSetState.primary) {\n      self.s.replicaSetState.remove(self.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  if (callback.operationId) {\n    handler.operationId = callback.operationId;\n  }\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  self.s.replicaSetState.primary[op](ns, ops, options, handler);\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.insert = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'insert', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.update = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'update', ns, ops }, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.remove = function(ns, ops, options, callback) {\n  // Execute write operation\n  executeWriteOperation({ self: this, op: 'remove', ns, ops }, options, callback);\n};\n\nconst RETRYABLE_WRITE_OPERATIONS = ['findAndModify', 'insert', 'update', 'delete'];\n\nfunction isWriteCommand(command) {\n  return RETRYABLE_WRITE_OPERATIONS.some(op => command[op]);\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nReplSet.prototype.command = function(ns, cmd, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Establish readPreference\n  var readPreference = options.readPreference ? options.readPreference : ReadPreference.primary;\n\n  // If the readPreference is primary and we have no primary, store it\n  if (\n    readPreference.preference === 'primary' &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference === 'secondary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  } else if (\n    readPreference.preference !== 'primary' &&\n    !this.s.replicaSetState.hasSecondary() &&\n    !this.s.replicaSetState.hasPrimary() &&\n    this.s.disconnectHandler != null\n  ) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // Pick a server\n  var server = this.s.replicaSetState.pickServer(readPreference);\n  // We received an error, return it\n  if (!(server instanceof Server)) return callback(server);\n  // Emit debug event\n  if (self.s.debug) self.emit('pickedServer', ReadPreference.primary, server);\n\n  // No server returned we had an error\n  if (server == null) {\n    return callback(\n      new MongoError(\n        f('no server found that matches the provided readPreference %s', readPreference)\n      )\n    );\n  }\n\n  const willRetryWrite =\n    !options.retrying &&\n    !!options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction() &&\n    isWriteCommand(cmd);\n\n  const cb = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newOptions = Object.assign({}, options, { retrying: true });\n      return this.command(ns, cmd, newOptions, callback);\n    }\n\n    // Per SDAM, remove primary from replicaset\n    if (this.s.replicaSetState.primary) {\n      this.s.replicaSetState.remove(this.s.replicaSetState.primary, { force: true });\n    }\n\n    return callback(err);\n  };\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  // Execute the command\n  server.command(ns, cmd, options, cb);\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nReplSet.prototype.auth = function(mechanism, db) {\n  var allArgs = Array.prototype.slice.call(arguments, 0).slice(0);\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  var callback = args.pop();\n  var currentContextIndex = 0;\n\n  // If we don't have the mechanism fail\n  if (this.authProviders[mechanism] == null && mechanism !== 'default') {\n    return callback(new MongoError(f('auth provider %s does not exist', mechanism)));\n  }\n\n  // Are we already authenticating, throw\n  if (this.authenticating) {\n    return callback(new MongoError('authentication or logout allready in process'));\n  }\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if (!this.isConnected() && self.s.disconnectHandler != null) {\n    if (!self.s.replicaSetState.hasPrimary() && !self.s.options.secondaryOnlyConnectionAllowed) {\n      return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);\n    } else if (\n      !self.s.replicaSetState.hasSecondary() &&\n      self.s.options.secondaryOnlyConnectionAllowed\n    ) {\n      return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);\n    }\n  }\n\n  // Set to authenticating\n  this.authenticating = true;\n  // All errors\n  var errors = [];\n\n  // Get all the servers\n  var servers = this.s.replicaSetState.allServers();\n  // No servers return\n  if (servers.length === 0) {\n    this.authenticating = false;\n    callback(null, true);\n  }\n\n  // Authenticate\n  function auth(server) {\n    // Arguments without a callback\n    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));\n    // Create arguments\n    var finalArguments = argsWithoutCallback.concat([\n      function(err) {\n        count = count - 1;\n        // Save all the errors\n        if (err) errors.push({ name: server.name, err: err });\n        // We are done\n        if (count === 0) {\n          // Auth is done\n          self.authenticating = false;\n\n          // Return the auth error\n          if (errors.length) {\n            // Remove the entry from the stored authentication contexts\n            self.s.authenticationContexts.splice(currentContextIndex, 0);\n            // Return error\n            return callback(\n              new MongoError({\n                message: 'authentication fail',\n                errors: errors\n              }),\n              false\n            );\n          }\n\n          // Successfully authenticated session\n          callback(null, self);\n        }\n      }\n    ]);\n\n    if (!server.lastIsMaster().arbiterOnly) {\n      // Execute the auth only against non arbiter servers\n      server.auth.apply(server, finalArguments);\n    } else {\n      // If we are authenticating against an arbiter just ignore it\n      finalArguments.pop()(null);\n    }\n  }\n\n  // Get total count\n  var count = servers.length;\n\n  // Save current context index\n  currentContextIndex = this.s.authenticationContexts.length;\n\n  // Store the auth context and return the last index\n  this.s.authenticationContexts.push([mechanism, db].concat(args.slice(0)));\n\n  // Authenticate against all servers\n  while (servers.length > 0) {\n    auth(servers.shift());\n  }\n};\n\n/**\n * Logout from a database\n * @method\n * @param {string} db The db we are logging out from\n * @param {authResultCallback} callback A callback function\n */\nReplSet.prototype.logout = function(dbName, callback) {\n  var self = this;\n  // Are we authenticating or logging out, throw\n  if (this.authenticating) {\n    throw new MongoError('authentication or logout allready in process');\n  }\n\n  // Ensure no new members are processed while logging out\n  this.authenticating = true;\n\n  // Remove from all auth providers (avoid any reaplication of the auth details)\n  var providers = Object.keys(this.authProviders);\n  for (var i = 0; i < providers.length; i++) {\n    this.authProviders[providers[i]].logout(dbName);\n  }\n\n  // Clear out any contexts associated with the db\n  self.s.authenticationContexts = self.s.authenticationContexts.filter(function(context) {\n    return context[1] !== dbName;\n  });\n\n  // Now logout all the servers\n  var servers = this.s.replicaSetState.allServers();\n  var count = servers.length;\n  if (count === 0) return callback();\n  var errors = [];\n\n  function logoutServer(_server, cb) {\n    _server.logout(dbName, function(err) {\n      if (err) errors.push({ name: _server.name, err: err });\n      cb();\n    });\n  }\n\n  // Execute logout on all server instances\n  for (i = 0; i < servers.length; i++) {\n    logoutServer(servers[i], function() {\n      count = count - 1;\n\n      if (count === 0) {\n        // Do not block new operations\n        self.authenticating = false;\n        // If we have one or more errors\n        if (errors.length)\n          return callback(\n            new MongoError({\n              message: f('logout failed against db %s', dbName),\n              errors: errors\n            }),\n            false\n          );\n\n        // No errors\n        callback();\n      }\n    });\n  }\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nReplSet.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(this.s.bson, ns, cmd, options, topology, this.s.options);\n};\n\n/**\n * A replset connect event, used to verify that the connection is up and running\n *\n * @event ReplSet#connect\n * @type {ReplSet}\n */\n\n/**\n * A replset reconnect event, used to verify that the topology reconnected\n *\n * @event ReplSet#reconnect\n * @type {ReplSet}\n */\n\n/**\n * A replset fullsetup event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#fullsetup\n * @type {ReplSet}\n */\n\n/**\n * A replset all event, used to signal that all topology members have been contacted.\n *\n * @event ReplSet#all\n * @type {ReplSet}\n */\n\n/**\n * A replset failed event, used to signal that initial replset connection failed.\n *\n * @event ReplSet#failed\n * @type {ReplSet}\n */\n\n/**\n * A server member left the replicaset\n *\n * @event ReplSet#left\n * @type {function}\n * @param {string} type The type of member that left (primary|secondary|arbiter)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the replicaset\n *\n * @event ReplSet#joined\n * @type {function}\n * @param {string} type The type of member that joined (primary|secondary|arbiter)\n * @param {Server} server The server object that joined\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event ReplSet#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event ReplSet#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event ReplSet#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event ReplSet#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event ReplSet#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event ReplSet#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event ReplSet#serverHeartbeatStarted\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event ReplSet#serverHeartbeatFailed\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event ReplSet#serverHeartbeatSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event ReplSet#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event ReplSet#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event ReplSet#commandFailed\n * @type {object}\n */\n\nmodule.exports = ReplSet;\n","'use strict';\n\nvar inherits = require('util').inherits,\n  f = require('util').format,\n  diff = require('./shared').diff,\n  EventEmitter = require('events').EventEmitter,\n  Logger = require('../connection/logger'),\n  ReadPreference = require('./read_preference'),\n  MongoError = require('../error').MongoError,\n  Buffer = require('safe-buffer').Buffer;\n\nvar TopologyType = {\n  Single: 'Single',\n  ReplicaSetNoPrimary: 'ReplicaSetNoPrimary',\n  ReplicaSetWithPrimary: 'ReplicaSetWithPrimary',\n  Sharded: 'Sharded',\n  Unknown: 'Unknown'\n};\n\nvar ServerType = {\n  Standalone: 'Standalone',\n  Mongos: 'Mongos',\n  PossiblePrimary: 'PossiblePrimary',\n  RSPrimary: 'RSPrimary',\n  RSSecondary: 'RSSecondary',\n  RSArbiter: 'RSArbiter',\n  RSOther: 'RSOther',\n  RSGhost: 'RSGhost',\n  Unknown: 'Unknown'\n};\n\nvar ReplSetState = function(options) {\n  options = options || {};\n  // Add event listener\n  EventEmitter.call(this);\n  // Topology state\n  this.topologyType = TopologyType.ReplicaSetNoPrimary;\n  this.setName = options.setName;\n\n  // Server set\n  this.set = {};\n\n  // Unpacked options\n  this.id = options.id;\n  this.setName = options.setName;\n\n  // Replicaset logger\n  this.logger = options.logger || Logger('ReplSet', options);\n\n  // Server selection index\n  this.index = 0;\n  // Acceptable latency\n  this.acceptableLatency = options.acceptableLatency || 15;\n\n  // heartbeatFrequencyMS\n  this.heartbeatFrequencyMS = options.heartbeatFrequencyMS || 10000;\n\n  // Server side\n  this.primary = null;\n  this.secondaries = [];\n  this.arbiters = [];\n  this.passives = [];\n  this.ghosts = [];\n  // Current unknown hosts\n  this.unknownServers = [];\n  // In set status\n  this.set = {};\n  // Status\n  this.maxElectionId = null;\n  this.maxSetVersion = 0;\n  // Description of the Replicaset\n  this.replicasetDescription = {\n    topologyType: 'Unknown',\n    servers: []\n  };\n\n  this.logicalSessionTimeoutMinutes = undefined;\n};\n\ninherits(ReplSetState, EventEmitter);\n\nReplSetState.prototype.hasPrimaryAndSecondary = function() {\n  return this.primary != null && this.secondaries.length > 0;\n};\n\nReplSetState.prototype.hasPrimaryOrSecondary = function() {\n  return this.hasPrimary() || this.hasSecondary();\n};\n\nReplSetState.prototype.hasPrimary = function() {\n  return this.primary != null;\n};\n\nReplSetState.prototype.hasSecondary = function() {\n  return this.secondaries.length > 0;\n};\n\nReplSetState.prototype.get = function(host) {\n  var servers = this.allServers();\n\n  for (var i = 0; i < servers.length; i++) {\n    if (servers[i].name.toLowerCase() === host.toLowerCase()) {\n      return servers[i];\n    }\n  }\n\n  return null;\n};\n\nReplSetState.prototype.allServers = function(options) {\n  options = options || {};\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  if (!options.ignoreArbiters) servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n  return servers;\n};\n\nReplSetState.prototype.destroy = function(options) {\n  // Destroy all sockets\n  if (this.primary) this.primary.destroy(options);\n  this.secondaries.forEach(function(x) {\n    x.destroy(options);\n  });\n  this.arbiters.forEach(function(x) {\n    x.destroy(options);\n  });\n  this.passives.forEach(function(x) {\n    x.destroy(options);\n  });\n  this.ghosts.forEach(function(x) {\n    x.destroy(options);\n  });\n  // Clear out the complete state\n  this.secondaries = [];\n  this.arbiters = [];\n  this.passives = [];\n  this.ghosts = [];\n  this.unknownServers = [];\n  this.set = {};\n  this.primary = null;\n  // Emit the topology changed\n  emitTopologyDescriptionChanged(this);\n};\n\nReplSetState.prototype.remove = function(server, options) {\n  options = options || {};\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  // Only remove if the current server is not connected\n  var servers = this.primary ? [this.primary] : [];\n  servers = servers.concat(this.secondaries);\n  servers = servers.concat(this.arbiters);\n  servers = servers.concat(this.passives);\n\n  // Check if it's active and this is just a failed connection attempt\n  for (var i = 0; i < servers.length; i++) {\n    if (\n      !options.force &&\n      servers[i].equals(server) &&\n      servers[i].isConnected &&\n      servers[i].isConnected()\n    ) {\n      return;\n    }\n  }\n\n  // If we have it in the set remove it\n  if (this.set[serverName]) {\n    this.set[serverName].type = ServerType.Unknown;\n    this.set[serverName].electionId = null;\n    this.set[serverName].setName = null;\n    this.set[serverName].setVersion = null;\n  }\n\n  // Remove type\n  var removeType = null;\n\n  // Remove from any lists\n  if (this.primary && this.primary.equals(server)) {\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    removeType = 'primary';\n  }\n\n  // Remove from any other server lists\n  removeType = removeFrom(server, this.secondaries) ? 'secondary' : removeType;\n  removeType = removeFrom(server, this.arbiters) ? 'arbiter' : removeType;\n  removeType = removeFrom(server, this.passives) ? 'secondary' : removeType;\n  removeFrom(server, this.ghosts);\n  removeFrom(server, this.unknownServers);\n\n  // Push to unknownServers\n  this.unknownServers.push(serverName);\n\n  // Do we have a removeType\n  if (removeType) {\n    this.emit('left', removeType, server);\n  }\n};\n\nconst isArbiter = ismaster => ismaster.arbiterOnly && ismaster.setName;\n\nReplSetState.prototype.update = function(server) {\n  var self = this;\n  // Get the current ismaster\n  var ismaster = server.lastIsMaster();\n\n  // Get the server name and lowerCase it\n  var serverName = server.name.toLowerCase();\n\n  //\n  // Add any hosts\n  //\n  if (ismaster) {\n    // Join all the possible new hosts\n    var hosts = Array.isArray(ismaster.hosts) ? ismaster.hosts : [];\n    hosts = hosts.concat(Array.isArray(ismaster.arbiters) ? ismaster.arbiters : []);\n    hosts = hosts.concat(Array.isArray(ismaster.passives) ? ismaster.passives : []);\n    hosts = hosts.map(function(s) {\n      return s.toLowerCase();\n    });\n\n    // Add all hosts as unknownServers\n    for (var i = 0; i < hosts.length; i++) {\n      // Add to the list of unknown server\n      if (\n        this.unknownServers.indexOf(hosts[i]) === -1 &&\n        (!this.set[hosts[i]] || this.set[hosts[i]].type === ServerType.Unknown)\n      ) {\n        this.unknownServers.push(hosts[i].toLowerCase());\n      }\n\n      if (!this.set[hosts[i]]) {\n        this.set[hosts[i]] = {\n          type: ServerType.Unknown,\n          electionId: null,\n          setName: null,\n          setVersion: null\n        };\n      }\n    }\n  }\n\n  //\n  // Unknown server\n  //\n  if (!ismaster && !inList(ismaster, server, this.unknownServers)) {\n    self.set[serverName] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n    // Update set information about the server instance\n    self.set[serverName].type = ServerType.Unknown;\n    self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n    self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n    self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n\n    if (self.unknownServers.indexOf(server.name) === -1) {\n      self.unknownServers.push(serverName);\n    }\n\n    // Set the topology\n    return false;\n  }\n\n  // Update logicalSessionTimeoutMinutes\n  if (ismaster.logicalSessionTimeoutMinutes !== undefined && !isArbiter(ismaster)) {\n    if (\n      self.logicalSessionTimeoutMinutes === undefined ||\n      ismaster.logicalSessionTimeoutMinutes === null\n    ) {\n      self.logicalSessionTimeoutMinutes = ismaster.logicalSessionTimeoutMinutes;\n    } else {\n      self.logicalSessionTimeoutMinutes = Math.min(\n        self.logicalSessionTimeoutMinutes,\n        ismaster.logicalSessionTimeoutMinutes\n      );\n    }\n  }\n\n  //\n  // Is this a mongos\n  //\n  if (ismaster && ismaster.msg === 'isdbgrid') {\n    return false;\n  }\n\n  // A RSOther instance\n  if (\n    (ismaster.setName && ismaster.hidden) ||\n    (ismaster.setName &&\n      !ismaster.ismaster &&\n      !ismaster.secondary &&\n      !ismaster.arbiterOnly &&\n      !ismaster.passive)\n  ) {\n    self.set[serverName] = {\n      type: ServerType.RSOther,\n      setVersion: null,\n      electionId: null,\n      setName: ismaster.setName\n    };\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    return false;\n  }\n\n  // A RSGhost instance\n  if (ismaster.isreplicaset) {\n    self.set[serverName] = {\n      type: ServerType.RSGhost,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n\n    // Set the topology\n    return false;\n  }\n\n  //\n  // Standalone server, destroy and return\n  //\n  if (ismaster && ismaster.ismaster && !ismaster.setName) {\n    this.topologyType = this.primary ? TopologyType.ReplicaSetWithPrimary : TopologyType.Unknown;\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // Server in maintanance mode\n  //\n  if (ismaster && !ismaster.ismaster && !ismaster.secondary && !ismaster.arbiterOnly) {\n    this.remove(server, { force: true });\n    return false;\n  }\n\n  //\n  // If the .me field does not match the passed in server\n  //\n  if (ismaster.me && ismaster.me.toLowerCase() !== serverName) {\n    if (this.logger.isWarn()) {\n      this.logger.warn(\n        f(\n          'the seedlist server was removed due to its address %s not matching its ismaster.me address %s',\n          server.name,\n          ismaster.me\n        )\n      );\n    }\n\n    // Delete from the set\n    delete this.set[serverName];\n    // Delete unknown servers\n    removeFrom(server, self.unknownServers);\n\n    // Destroy the instance\n    server.destroy();\n\n    // Set the type of topology we have\n    if (this.primary && !this.primary.equals(server)) {\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    //\n    // We have a potential primary\n    //\n    if (!this.primary && ismaster.primary) {\n      this.set[ismaster.primary.toLowerCase()] = {\n        type: ServerType.PossiblePrimary,\n        setName: null,\n        electionId: null,\n        setVersion: null\n      };\n    }\n\n    return false;\n  }\n\n  //\n  // Primary handling\n  //\n  if (!this.primary && ismaster.ismaster && ismaster.setName) {\n    var ismasterElectionId = server.lastIsMaster().electionId;\n    if (this.setName && this.setName !== ismaster.setName) {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      return new MongoError(\n        f(\n          'setName from ismaster does not match provided connection setName [%s] != [%s]',\n          ismaster.setName,\n          this.setName\n        )\n      );\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      var result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n      // Get the electionIds\n      var ismasterSetVersion = server.lastIsMaster().setVersion;\n\n      if (result === 1) {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n        return false;\n      } else if (result === 0 && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          this.topologyType = TopologyType.ReplicaSetNoPrimary;\n          return false;\n        }\n      }\n\n      this.maxSetVersion = ismasterSetVersion;\n      this.maxElectionId = ismasterElectionId;\n    }\n\n    // Hande normalization of server names\n    var normalizedHosts = ismaster.hosts.map(function(x) {\n      return x.toLowerCase();\n    });\n    var locationIndex = normalizedHosts.indexOf(serverName);\n\n    // Validate that the server exists in the host list\n    if (locationIndex !== -1) {\n      self.primary = server;\n      self.set[serverName] = {\n        type: ServerType.RSPrimary,\n        setVersion: ismaster.setVersion,\n        electionId: ismaster.electionId,\n        setName: ismaster.setName\n      };\n\n      // Set the topology\n      this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      if (ismaster.setName) this.setName = ismaster.setName;\n      removeFrom(server, self.unknownServers);\n      removeFrom(server, self.secondaries);\n      removeFrom(server, self.passives);\n      self.emit('joined', 'primary', server);\n    } else {\n      this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    }\n\n    emitTopologyDescriptionChanged(self);\n    return true;\n  } else if (ismaster.ismaster && ismaster.setName) {\n    // Get the electionIds\n    var currentElectionId = self.set[self.primary.name.toLowerCase()].electionId;\n    var currentSetVersion = self.set[self.primary.name.toLowerCase()].setVersion;\n    var currentSetName = self.set[self.primary.name.toLowerCase()].setName;\n    ismasterElectionId = server.lastIsMaster().electionId;\n    ismasterSetVersion = server.lastIsMaster().setVersion;\n    var ismasterSetName = server.lastIsMaster().setName;\n\n    // Is it the same server instance\n    if (this.primary.equals(server) && currentSetName === ismasterSetName) {\n      return false;\n    }\n\n    // If we do not have the same rs name\n    if (currentSetName && currentSetName !== ismasterSetName) {\n      if (!this.primary.equals(server)) {\n        this.topologyType = TopologyType.ReplicaSetWithPrimary;\n      } else {\n        this.topologyType = TopologyType.ReplicaSetNoPrimary;\n      }\n\n      return false;\n    }\n\n    // Check if we need to replace the server\n    if (currentElectionId && ismasterElectionId) {\n      result = compareObjectIds(currentElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion > ismasterSetVersion) {\n        return false;\n      }\n    } else if (!currentElectionId && ismasterElectionId && ismasterSetVersion) {\n      if (ismasterSetVersion < this.maxSetVersion) {\n        return false;\n      }\n    }\n\n    if (!this.maxElectionId && ismasterElectionId) {\n      this.maxElectionId = ismasterElectionId;\n    } else if (this.maxElectionId && ismasterElectionId) {\n      result = compareObjectIds(this.maxElectionId, ismasterElectionId);\n\n      if (result === 1) {\n        return false;\n      } else if (result === 0 && currentSetVersion && ismasterSetVersion) {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      } else {\n        if (ismasterSetVersion < this.maxSetVersion) {\n          return false;\n        }\n      }\n\n      this.maxElectionId = ismasterElectionId;\n      this.maxSetVersion = ismasterSetVersion;\n    } else {\n      this.maxSetVersion = ismasterSetVersion;\n    }\n\n    // Modify the entry to unknown\n    self.set[self.primary.name.toLowerCase()] = {\n      type: ServerType.Unknown,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n\n    // Signal primary left\n    self.emit('left', 'primary', this.primary);\n    // Destroy the instance\n    self.primary.destroy();\n    // Set the new instance\n    self.primary = server;\n    // Set the set information\n    self.set[serverName] = {\n      type: ServerType.RSPrimary,\n      setVersion: ismaster.setVersion,\n      electionId: ismaster.electionId,\n      setName: ismaster.setName\n    };\n\n    // Set the topology\n    this.topologyType = TopologyType.ReplicaSetWithPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    removeFrom(server, self.secondaries);\n    removeFrom(server, self.passives);\n    self.emit('joined', 'primary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  // A possible instance\n  if (!this.primary && ismaster.primary) {\n    self.set[ismaster.primary.toLowerCase()] = {\n      type: ServerType.PossiblePrimary,\n      setVersion: null,\n      electionId: null,\n      setName: null\n    };\n  }\n\n  //\n  // Secondary handling\n  //\n  if (\n    ismaster.secondary &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.secondaries) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.secondaries);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy();\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    // Emit secondary joined replicaset\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Arbiter handling\n  //\n  if (\n    isArbiter(ismaster) &&\n    !inList(ismaster, server, this.arbiters) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSArbiter, ismaster, server, this.arbiters);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n    self.emit('joined', 'arbiter', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Passive handling\n  //\n  if (\n    ismaster.passive &&\n    ismaster.setName &&\n    !inList(ismaster, server, this.passives) &&\n    this.setName &&\n    this.setName === ismaster.setName\n  ) {\n    addToList(self, ServerType.RSSecondary, ismaster, server, this.passives);\n    // Set the topology\n    this.topologyType = this.primary\n      ? TopologyType.ReplicaSetWithPrimary\n      : TopologyType.ReplicaSetNoPrimary;\n    if (ismaster.setName) this.setName = ismaster.setName;\n    removeFrom(server, self.unknownServers);\n\n    // Remove primary\n    if (this.primary && this.primary.name.toLowerCase() === serverName) {\n      server.destroy();\n      this.primary = null;\n      self.emit('left', 'primary', server);\n    }\n\n    self.emit('joined', 'secondary', server);\n    emitTopologyDescriptionChanged(self);\n    return true;\n  }\n\n  //\n  // Remove the primary\n  //\n  if (this.set[serverName] && this.set[serverName].type === ServerType.RSPrimary) {\n    self.emit('left', 'primary', this.primary);\n    this.primary.destroy();\n    this.primary = null;\n    this.topologyType = TopologyType.ReplicaSetNoPrimary;\n    return false;\n  }\n\n  this.topologyType = this.primary\n    ? TopologyType.ReplicaSetWithPrimary\n    : TopologyType.ReplicaSetNoPrimary;\n  return false;\n};\n\n/**\n * Recalculate single server max staleness\n * @method\n */\nReplSetState.prototype.updateServerMaxStaleness = function(server, haInterval) {\n  // Locate the max secondary lastwrite\n  var max = 0;\n  // Go over all secondaries\n  for (var i = 0; i < this.secondaries.length; i++) {\n    max = Math.max(max, this.secondaries[i].lastWriteDate);\n  }\n\n  // Perform this servers staleness calculation\n  if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary && this.hasPrimary()) {\n    server.staleness =\n      server.lastUpdateTime -\n      server.lastWriteDate -\n      (this.primary.lastUpdateTime - this.primary.lastWriteDate) +\n      haInterval;\n  } else if (server.ismaster.maxWireVersion >= 5 && server.ismaster.secondary) {\n    server.staleness = max - server.lastWriteDate + haInterval;\n  }\n};\n\n/**\n * Recalculate all the staleness values for secodaries\n * @method\n */\nReplSetState.prototype.updateSecondariesMaxStaleness = function(haInterval) {\n  for (var i = 0; i < this.secondaries.length; i++) {\n    this.updateServerMaxStaleness(this.secondaries[i], haInterval);\n  }\n};\n\n/**\n * Pick a server by the passed in ReadPreference\n * @method\n * @param {ReadPreference} readPreference The ReadPreference instance to use\n */\nReplSetState.prototype.pickServer = function(readPreference) {\n  // If no read Preference set to primary by default\n  readPreference = readPreference || ReadPreference.primary;\n\n  // maxStalenessSeconds is not allowed with a primary read\n  if (readPreference.preference === 'primary' && readPreference.maxStalenessSeconds != null) {\n    return new MongoError('primary readPreference incompatible with maxStalenessSeconds');\n  }\n\n  // Check if we have any non compatible servers for maxStalenessSeconds\n  var allservers = this.primary ? [this.primary] : [];\n  allservers = allservers.concat(this.secondaries);\n\n  // Does any of the servers not support the right wire protocol version\n  // for maxStalenessSeconds when maxStalenessSeconds specified on readPreference. Then error out\n  if (readPreference.maxStalenessSeconds != null) {\n    for (var i = 0; i < allservers.length; i++) {\n      if (allservers[i].ismaster.maxWireVersion < 5) {\n        return new MongoError(\n          'maxStalenessSeconds not supported by at least one of the replicaset members'\n        );\n      }\n    }\n  }\n\n  // Do we have the nearest readPreference\n  if (readPreference.preference === 'nearest' && readPreference.maxStalenessSeconds == null) {\n    return pickNearest(this, readPreference);\n  } else if (\n    readPreference.preference === 'nearest' &&\n    readPreference.maxStalenessSeconds != null\n  ) {\n    return pickNearestMaxStalenessSeconds(this, readPreference);\n  }\n\n  // Get all the secondaries\n  var secondaries = this.secondaries;\n\n  // Check if we can satisfy and of the basic read Preferences\n  if (readPreference.equals(ReadPreference.secondary) && secondaries.length === 0) {\n    return new MongoError('no secondary server available');\n  }\n\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) &&\n    secondaries.length === 0 &&\n    this.primary == null\n  ) {\n    return new MongoError('no secondary or primary server available');\n  }\n\n  if (readPreference.equals(ReadPreference.primary) && this.primary == null) {\n    return new MongoError('no primary server available');\n  }\n\n  // Secondary preferred or just secondaries\n  if (\n    readPreference.equals(ReadPreference.secondaryPreferred) ||\n    readPreference.equals(ReadPreference.secondary)\n  ) {\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      // Pick nearest of any other servers available\n      var server = pickNearest(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      // Pick nearest of any other servers available\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n      // No server in the window return primary\n      if (server) {\n        return server;\n      }\n    }\n\n    if (readPreference.equals(ReadPreference.secondaryPreferred)) {\n      return this.primary;\n    }\n\n    return null;\n  }\n\n  // Primary preferred\n  if (readPreference.equals(ReadPreference.primaryPreferred)) {\n    server = null;\n\n    // We prefer the primary if it's available\n    if (this.primary) {\n      return this.primary;\n    }\n\n    // Pick a secondary\n    if (secondaries.length > 0 && readPreference.maxStalenessSeconds == null) {\n      server = pickNearest(this, readPreference);\n    } else if (secondaries.length > 0 && readPreference.maxStalenessSeconds != null) {\n      server = pickNearestMaxStalenessSeconds(this, readPreference);\n    }\n\n    //  Did we find a server\n    if (server) return server;\n  }\n\n  // Return the primary\n  return this.primary;\n};\n\n//\n// Filter serves by tags\nvar filterByTags = function(readPreference, servers) {\n  if (readPreference.tags == null) return servers;\n  var filteredServers = [];\n  var tagsArray = Array.isArray(readPreference.tags) ? readPreference.tags : [readPreference.tags];\n\n  // Iterate over the tags\n  for (var j = 0; j < tagsArray.length; j++) {\n    var tags = tagsArray[j];\n\n    // Iterate over all the servers\n    for (var i = 0; i < servers.length; i++) {\n      var serverTag = servers[i].lastIsMaster().tags || {};\n\n      // Did we find the a matching server\n      var found = true;\n      // Check if the server is valid\n      for (var name in tags) {\n        if (serverTag[name] !== tags[name]) {\n          found = false;\n        }\n      }\n\n      // Add to candidate list\n      if (found) {\n        filteredServers.push(servers[i]);\n      }\n    }\n  }\n\n  // Returned filtered servers\n  return filteredServers;\n};\n\nfunction pickNearestMaxStalenessSeconds(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Get the maxStalenessMS\n  var maxStalenessMS = readPreference.maxStalenessSeconds * 1000;\n\n  // Check if the maxStalenessMS > 90 seconds\n  if (maxStalenessMS < 90 * 1000) {\n    return new MongoError('maxStalenessSeconds must be set to at least 90 seconds');\n  }\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (self.primary && servers.length === 0 && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.staleness <= maxStalenessMS;\n  });\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    return a.lastIsMasterMS - b.lastIsMasterMS;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction pickNearest(self, readPreference) {\n  // Only get primary and secondaries as seeds\n  var servers = [];\n\n  // Add primary to list if not a secondary read preference\n  if (\n    self.primary &&\n    readPreference.preference !== 'secondary' &&\n    readPreference.preference !== 'secondaryPreferred'\n  ) {\n    servers.push(self.primary);\n  }\n\n  // Add all the secondaries\n  for (var i = 0; i < self.secondaries.length; i++) {\n    servers.push(self.secondaries[i]);\n  }\n\n  // If we have a secondaryPreferred readPreference and no server add the primary\n  if (servers.length === 0 && self.primary && readPreference.preference !== 'secondaryPreferred') {\n    servers.push(self.primary);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Sort by time\n  servers.sort(function(a, b) {\n    return a.lastIsMasterMS - b.lastIsMasterMS;\n  });\n\n  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)\n  var lowest = servers.length > 0 ? servers[0].lastIsMasterMS : 0;\n\n  // Filter by latency\n  servers = servers.filter(function(s) {\n    return s.lastIsMasterMS <= lowest + self.acceptableLatency;\n  });\n\n  // No servers, default to primary\n  if (servers.length === 0) {\n    return null;\n  }\n\n  // Ensure index does not overflow the number of available servers\n  self.index = self.index % servers.length;\n  // Get the server\n  var server = servers[self.index];\n  // Add to the index\n  self.index = self.index + 1;\n  // Return the first server of the sorted and filtered list\n  return server;\n}\n\nfunction inList(ismaster, server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i] && list[i].name && list[i].name.toLowerCase() === server.name.toLowerCase())\n      return true;\n  }\n\n  return false;\n}\n\nfunction addToList(self, type, ismaster, server, list) {\n  var serverName = server.name.toLowerCase();\n  // Update set information about the server instance\n  self.set[serverName].type = type;\n  self.set[serverName].electionId = ismaster ? ismaster.electionId : ismaster;\n  self.set[serverName].setName = ismaster ? ismaster.setName : ismaster;\n  self.set[serverName].setVersion = ismaster ? ismaster.setVersion : ismaster;\n  // Add to the list\n  list.push(server);\n}\n\nfunction compareObjectIds(id1, id2) {\n  var a = Buffer.from(id1.toHexString(), 'hex');\n  var b = Buffer.from(id2.toHexString(), 'hex');\n\n  if (a === b) {\n    return 0;\n  }\n\n  if (typeof Buffer.compare === 'function') {\n    return Buffer.compare(a, b);\n  }\n\n  var x = a.length;\n  var y = b.length;\n  var len = Math.min(x, y);\n\n  for (var i = 0; i < len; i++) {\n    if (a[i] !== b[i]) {\n      break;\n    }\n  }\n\n  if (i !== len) {\n    x = a[i];\n    y = b[i];\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0;\n}\n\nfunction removeFrom(server, list) {\n  for (var i = 0; i < list.length; i++) {\n    if (list[i].equals && list[i].equals(server)) {\n      list.splice(i, 1);\n      return true;\n    } else if (typeof list[i] === 'string' && list[i].toLowerCase() === server.name.toLowerCase()) {\n      list.splice(i, 1);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction emitTopologyDescriptionChanged(self) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    var topology = 'Unknown';\n    var setName = self.setName;\n\n    if (self.hasPrimaryAndSecondary()) {\n      topology = 'ReplicaSetWithPrimary';\n    } else if (!self.hasPrimary() && self.hasSecondary()) {\n      topology = 'ReplicaSetNoPrimary';\n    }\n\n    // Generate description\n    var description = {\n      topologyType: topology,\n      setName: setName,\n      servers: []\n    };\n\n    // Add the primary to the list\n    if (self.hasPrimary()) {\n      var desc = self.primary.getDescription();\n      desc.type = 'RSPrimary';\n      description.servers.push(desc);\n    }\n\n    // Add all the secondaries\n    description.servers = description.servers.concat(\n      self.secondaries.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Add all the arbiters\n    description.servers = description.servers.concat(\n      self.arbiters.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSArbiter';\n        return description;\n      })\n    );\n\n    // Add all the passives\n    description.servers = description.servers.concat(\n      self.passives.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'RSSecondary';\n        return description;\n      })\n    );\n\n    // Get the diff\n    var diffResult = diff(self.replicasetDescription, description);\n\n    // Create the result\n    var result = {\n      topologyId: self.id,\n      previousDescription: self.replicasetDescription,\n      newDescription: description,\n      diff: diffResult\n    };\n\n    // Emit the topologyDescription change\n    // if(diffResult.servers.length > 0) {\n    self.emit('topologyDescriptionChanged', result);\n    // }\n\n    // Set the new description\n    self.replicasetDescription = description;\n  }\n}\n\nmodule.exports = ReplSetState;\n","'use strict';\n\nconst inherits = require('util').inherits;\nconst f = require('util').format;\nconst EventEmitter = require('events').EventEmitter;\nconst BasicCursor = require('../cursor');\nconst Logger = require('../connection/logger');\nconst retrieveBSON = require('../connection/utils').retrieveBSON;\nconst MongoError = require('../error').MongoError;\nconst Server = require('./server');\nconst clone = require('./shared').clone;\nconst diff = require('./shared').diff;\nconst cloneOptions = require('./shared').cloneOptions;\nconst createClientInfo = require('./shared').createClientInfo;\nconst SessionMixins = require('./shared').SessionMixins;\nconst isRetryableWritesSupported = require('./shared').isRetryableWritesSupported;\nconst relayEvents = require('../utils').relayEvents;\nconst isRetryableError = require('../error').isRetryableError;\nconst BSON = retrieveBSON();\n\n/**\n * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is\n * used to construct connections.\n *\n * @example\n * var Mongos = require('mongodb-core').Mongos\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n *\n * var server = new Mongos([{host: 'localhost', port: 30000}]);\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   server.destroy();\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\nconst defaultAuthProviders = require('../auth/defaultAuthProviders').defaultAuthProviders;\n\n//\n// States\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar UNREFERENCED = 'unreferenced';\nvar DESTROYED = 'destroyed';\n\nfunction stateTransition(self, newState) {\n  var legalTransitions = {\n    disconnected: [CONNECTING, DESTROYED, DISCONNECTED],\n    connecting: [CONNECTING, DESTROYED, CONNECTED, DISCONNECTED],\n    connected: [CONNECTED, DISCONNECTED, DESTROYED, UNREFERENCED],\n    unreferenced: [UNREFERENCED, DESTROYED],\n    destroyed: [DESTROYED]\n  };\n\n  // Get current state\n  var legalStates = legalTransitions[self.state];\n  if (legalStates && legalStates.indexOf(newState) !== -1) {\n    self.state = newState;\n  } else {\n    self.logger.error(\n      f(\n        'Pool with id [%s] failed attempted illegal state transition from [%s] to [%s] only following state allowed [%s]',\n        self.id,\n        self.state,\n        newState,\n        legalStates\n      )\n    );\n  }\n}\n\n//\n// ReplSet instance id\nvar id = 1;\nvar handlers = ['connect', 'close', 'error', 'timeout', 'parseError'];\n\n/**\n * Creates a new Mongos instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {number} [options.haInterval=5000] The High availability period for replicaset inquiry\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for MongoS proxy selection\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=1000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.crl] SSL Certificate revocation store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {string} [options.servername=null] String containing the server name requested via TLS SNI.\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @param {boolean} [options.promoteValues=true] Promotes BSON values to native types where possible, set to false to only receive wrapper types.\n * @param {boolean} [options.promoteBuffers=false] Promotes Binary BSON values to native Node Buffers.\n * @param {boolean} [options.domainsEnabled=false] Enable the wrapping of the callback in the current domain, disabled by default to avoid perf hit.\n * @param {boolean} [options.monitorCommands=false] Enable command monitoring for this topology\n * @return {Mongos} A cursor instance\n * @fires Mongos#connect\n * @fires Mongos#reconnect\n * @fires Mongos#joined\n * @fires Mongos#left\n * @fires Mongos#failed\n * @fires Mongos#fullsetup\n * @fires Mongos#all\n * @fires Mongos#serverHeartbeatStarted\n * @fires Mongos#serverHeartbeatSucceeded\n * @fires Mongos#serverHeartbeatFailed\n * @fires Mongos#topologyOpening\n * @fires Mongos#topologyClosed\n * @fires Mongos#topologyDescriptionChanged\n * @property {string} type the topology type.\n * @property {string} parserType the parser type used (c++ or js).\n */\nvar Mongos = function(seedlist, options) {\n  options = options || {};\n\n  // Get replSet Id\n  this.id = id++;\n\n  // Internal state\n  this.s = {\n    options: Object.assign({}, options),\n    // BSON instance\n    bson:\n      options.bson ||\n      new BSON([\n        BSON.Binary,\n        BSON.Code,\n        BSON.DBRef,\n        BSON.Decimal128,\n        BSON.Double,\n        BSON.Int32,\n        BSON.Long,\n        BSON.Map,\n        BSON.MaxKey,\n        BSON.MinKey,\n        BSON.ObjectId,\n        BSON.BSONRegExp,\n        BSON.Symbol,\n        BSON.Timestamp\n      ]),\n    // Factory overrides\n    Cursor: options.cursorFactory || BasicCursor,\n    // Logger instance\n    logger: Logger('Mongos', options),\n    // Seedlist\n    seedlist: seedlist,\n    // Ha interval\n    haInterval: options.haInterval ? options.haInterval : 10000,\n    // Disconnect handler\n    disconnectHandler: options.disconnectHandler,\n    // Server selection index\n    index: 0,\n    // Connect function options passed in\n    connectOptions: {},\n    // Are we running in debug mode\n    debug: typeof options.debug === 'boolean' ? options.debug : false,\n    // localThresholdMS\n    localThresholdMS: options.localThresholdMS || 15,\n    // Client info\n    clientInfo: createClientInfo(options),\n    // Authentication context\n    authenticationContexts: []\n  };\n\n  // Set the client info\n  this.s.options.clientInfo = createClientInfo(options);\n\n  // Log info warning if the socketTimeout < haInterval as it will cause\n  // a lot of recycled connections to happen.\n  if (\n    this.s.logger.isWarn() &&\n    this.s.options.socketTimeout !== 0 &&\n    this.s.options.socketTimeout < this.s.haInterval\n  ) {\n    this.s.logger.warn(\n      f(\n        'warning socketTimeout %s is less than haInterval %s. This might cause unnecessary server reconnections due to socket timeouts',\n        this.s.options.socketTimeout,\n        this.s.haInterval\n      )\n    );\n  }\n\n  // All the authProviders\n  this.authProviders = options.authProviders || defaultAuthProviders(this.s.bson);\n\n  // Disconnected state\n  this.state = DISCONNECTED;\n\n  // Current proxies we are connecting to\n  this.connectingProxies = [];\n  // Currently connected proxies\n  this.connectedProxies = [];\n  // Disconnected proxies\n  this.disconnectedProxies = [];\n  // Are we authenticating\n  this.authenticating = false;\n  // Index of proxy to run operations against\n  this.index = 0;\n  // High availability timeout id\n  this.haTimeoutId = null;\n  // Last ismaster\n  this.ismaster = null;\n\n  // Description of the Replicaset\n  this.topologyDescription = {\n    topologyType: 'Unknown',\n    servers: []\n  };\n\n  // Highest clusterTime seen in responses from the current deployment\n  this.clusterTime = null;\n\n  // Add event listener\n  EventEmitter.call(this);\n};\n\ninherits(Mongos, EventEmitter);\nObject.assign(Mongos.prototype, SessionMixins);\n\nObject.defineProperty(Mongos.prototype, 'type', {\n  enumerable: true,\n  get: function() {\n    return 'mongos';\n  }\n});\n\nObject.defineProperty(Mongos.prototype, 'parserType', {\n  enumerable: true,\n  get: function() {\n    return BSON.native ? 'c++' : 'js';\n  }\n});\n\nObject.defineProperty(Mongos.prototype, 'logicalSessionTimeoutMinutes', {\n  enumerable: true,\n  get: function() {\n    if (!this.ismaster) return null;\n    return this.ismaster.logicalSessionTimeoutMinutes || null;\n  }\n});\n\n/**\n * Emit event if it exists\n * @method\n */\nfunction emitSDAMEvent(self, event, description) {\n  if (self.listeners(event).length > 0) {\n    self.emit(event, description);\n  }\n}\n\nconst SERVER_EVENTS = ['serverDescriptionChanged', 'error', 'close', 'timeout', 'parseError'];\nfunction destroyServer(server, options) {\n  options = options || {};\n  SERVER_EVENTS.forEach(event => server.removeAllListeners(event));\n  server.destroy(options);\n}\n\n/**\n * Initiate server connect\n * @method\n * @param {array} [options.auth=null] Array of auth options to apply on connect\n */\nMongos.prototype.connect = function(options) {\n  var self = this;\n  // Add any connect level options to the internal state\n  this.s.connectOptions = options || {};\n\n  // Set connecting state\n  stateTransition(this, CONNECTING);\n\n  // Create server instances\n  var servers = this.s.seedlist.map(function(x) {\n    const server = new Server(\n      Object.assign({}, self.s.options, x, {\n        authProviders: self.authProviders,\n        reconnect: false,\n        monitoring: false,\n        parent: self,\n        clientInfo: clone(self.s.clientInfo)\n      })\n    );\n\n    relayEvents(server, self, ['serverDescriptionChanged']);\n    return server;\n  });\n\n  // Emit the topology opening event\n  emitSDAMEvent(this, 'topologyOpening', { topologyId: this.id });\n\n  // Start all server connections\n  connectProxies(self, servers);\n};\n\nfunction handleEvent(self) {\n  return function() {\n    if (self.state === DESTROYED) return;\n    // Move to list of disconnectedProxies\n    moveServerFrom(self.connectedProxies, self.disconnectedProxies, this);\n    // Emit the initial topology\n    emitTopologyDescriptionChanged(self);\n    // Emit the left signal\n    self.emit('left', 'mongos', this);\n    // Emit the sdam event\n    self.emit('serverClosed', {\n      topologyId: self.id,\n      address: this.name\n    });\n  };\n}\n\nfunction handleInitialConnectEvent(self, event) {\n  return function() {\n    var _this = this;\n\n    // Destroy the instance\n    if (self.state === DESTROYED) {\n      // Emit the initial topology\n      emitTopologyDescriptionChanged(self);\n      // Move from connectingProxies\n      moveServerFrom(self.connectingProxies, self.disconnectedProxies, this);\n      return this.destroy();\n    }\n\n    // Check the type of server\n    if (event === 'connect') {\n      // Do we have authentication contexts that need to be applied\n      applyAuthenticationContexts(self, _this, function() {\n        // Get last known ismaster\n        self.ismaster = _this.lastIsMaster();\n\n        // Is this not a proxy, remove t\n        if (self.ismaster.msg === 'isdbgrid') {\n          // Add to the connectd list\n          for (var i = 0; i < self.connectedProxies.length; i++) {\n            if (self.connectedProxies[i].name === _this.name) {\n              // Move from connectingProxies\n              moveServerFrom(self.connectingProxies, self.disconnectedProxies, _this);\n              // Emit the initial topology\n              emitTopologyDescriptionChanged(self);\n              _this.destroy();\n              return self.emit('failed', _this);\n            }\n          }\n\n          // Remove the handlers\n          for (i = 0; i < handlers.length; i++) {\n            _this.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _this.on('error', handleEvent(self, 'error'));\n          _this.on('close', handleEvent(self, 'close'));\n          _this.on('timeout', handleEvent(self, 'timeout'));\n          _this.on('parseError', handleEvent(self, 'parseError'));\n\n          // Move from connecting proxies connected\n          moveServerFrom(self.connectingProxies, self.connectedProxies, _this);\n          // Emit the joined event\n          self.emit('joined', 'mongos', _this);\n        } else {\n          // Print warning if we did not find a mongos proxy\n          if (self.s.logger.isWarn()) {\n            var message = 'expected mongos proxy, but found replicaset member mongod for server %s';\n            // We have a standalone server\n            if (!self.ismaster.hosts) {\n              message = 'expected mongos proxy, but found standalone mongod for server %s';\n            }\n\n            self.s.logger.warn(f(message, _this.name));\n          }\n\n          // This is not a mongos proxy, remove it completely\n          removeProxyFrom(self.connectingProxies, _this);\n          // Emit the left event\n          self.emit('left', 'server', _this);\n          // Emit failed event\n          self.emit('failed', _this);\n        }\n      });\n    } else {\n      moveServerFrom(self.connectingProxies, self.disconnectedProxies, this);\n      // Emit the left event\n      self.emit('left', 'mongos', this);\n      // Emit failed event\n      self.emit('failed', this);\n    }\n\n    // Emit the initial topology\n    emitTopologyDescriptionChanged(self);\n\n    // Trigger topologyMonitor\n    if (self.connectingProxies.length === 0) {\n      // Emit connected if we are connected\n      if (self.connectedProxies.length > 0 && self.state === CONNECTING) {\n        // Set the state to connected\n        stateTransition(self, CONNECTED);\n        // Emit the connect event\n        self.emit('connect', self);\n        self.emit('fullsetup', self);\n        self.emit('all', self);\n      } else if (self.disconnectedProxies.length === 0) {\n        // Print warning if we did not find a mongos proxy\n        if (self.s.logger.isWarn()) {\n          self.s.logger.warn(\n            f('no mongos proxies found in seed list, did you mean to connect to a replicaset')\n          );\n        }\n\n        // Emit the error that no proxies were found\n        return self.emit('error', new MongoError('no mongos proxies found in seed list'));\n      }\n\n      // Topology monitor\n      topologyMonitor(self, { firstConnect: true });\n    }\n  };\n}\n\nfunction connectProxies(self, servers) {\n  // Update connectingProxies\n  self.connectingProxies = self.connectingProxies.concat(servers);\n\n  // Index used to interleaf the server connects, avoiding\n  // runtime issues on io constrained vm's\n  var timeoutInterval = 0;\n\n  function connect(server, timeoutInterval) {\n    setTimeout(function() {\n      // Emit opening server event\n      self.emit('serverOpening', {\n        topologyId: self.id,\n        address: server.name\n      });\n\n      // Emit the initial topology\n      emitTopologyDescriptionChanged(self);\n\n      // Add event handlers\n      server.once('close', handleInitialConnectEvent(self, 'close'));\n      server.once('timeout', handleInitialConnectEvent(self, 'timeout'));\n      server.once('parseError', handleInitialConnectEvent(self, 'parseError'));\n      server.once('error', handleInitialConnectEvent(self, 'error'));\n      server.once('connect', handleInitialConnectEvent(self, 'connect'));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Start connection\n      server.connect(self.s.connectOptions);\n    }, timeoutInterval);\n  }\n  // Start all the servers\n  while (servers.length > 0) {\n    connect(servers.shift(), timeoutInterval++);\n  }\n}\n\nfunction pickProxy(self) {\n  // Get the currently connected Proxies\n  var connectedProxies = self.connectedProxies.slice(0);\n\n  // Set lower bound\n  var lowerBoundLatency = Number.MAX_VALUE;\n\n  // Determine the lower bound for the Proxies\n  for (var i = 0; i < connectedProxies.length; i++) {\n    if (connectedProxies[i].lastIsMasterMS < lowerBoundLatency) {\n      lowerBoundLatency = connectedProxies[i].lastIsMasterMS;\n    }\n  }\n\n  // Filter out the possible servers\n  connectedProxies = connectedProxies.filter(function(server) {\n    if (\n      server.lastIsMasterMS <= lowerBoundLatency + self.s.localThresholdMS &&\n      server.isConnected()\n    ) {\n      return true;\n    }\n  });\n\n  // We have no connectedProxies pick first of the connected ones\n  if (connectedProxies.length === 0) {\n    return self.connectedProxies[0];\n  }\n\n  // Get proxy\n  var proxy = connectedProxies[self.index % connectedProxies.length];\n  // Update the index\n  self.index = (self.index + 1) % connectedProxies.length;\n  // Return the proxy\n  return proxy;\n}\n\nfunction moveServerFrom(from, to, proxy) {\n  for (var i = 0; i < from.length; i++) {\n    if (from[i].name === proxy.name) {\n      from.splice(i, 1);\n    }\n  }\n\n  for (i = 0; i < to.length; i++) {\n    if (to[i].name === proxy.name) {\n      to.splice(i, 1);\n    }\n  }\n\n  to.push(proxy);\n}\n\nfunction removeProxyFrom(from, proxy) {\n  for (var i = 0; i < from.length; i++) {\n    if (from[i].name === proxy.name) {\n      from.splice(i, 1);\n    }\n  }\n}\n\nfunction reconnectProxies(self, proxies, callback) {\n  // Count lefts\n  var count = proxies.length;\n\n  // Handle events\n  var _handleEvent = function(self, event) {\n    return function() {\n      var _self = this;\n      count = count - 1;\n\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n        return this.destroy();\n      }\n\n      if (event === 'connect' && !self.authenticating) {\n        // Do we have authentication contexts that need to be applied\n        applyAuthenticationContexts(self, _self, function() {\n          // Destroyed\n          if (self.state === DESTROYED || self.state === UNREFERENCED) {\n            moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n            return _self.destroy();\n          }\n\n          // Remove the handlers\n          for (var i = 0; i < handlers.length; i++) {\n            _self.removeAllListeners(handlers[i]);\n          }\n\n          // Add stable state handlers\n          _self.on('error', handleEvent(self, 'error'));\n          _self.on('close', handleEvent(self, 'close'));\n          _self.on('timeout', handleEvent(self, 'timeout'));\n          _self.on('parseError', handleEvent(self, 'parseError'));\n\n          // Move to the connected servers\n          moveServerFrom(self.connectingProxies, self.connectedProxies, _self);\n          // Emit topology Change\n          emitTopologyDescriptionChanged(self);\n          // Emit joined event\n          self.emit('joined', 'mongos', _self);\n        });\n      } else {\n        // Move from connectingProxies\n        moveServerFrom(self.connectingProxies, self.disconnectedProxies, _self);\n        this.destroy();\n      }\n\n      // Are we done finish up callback\n      if (count === 0) {\n        callback();\n      }\n    };\n  };\n\n  // No new servers\n  if (count === 0) {\n    return callback();\n  }\n\n  // Execute method\n  function execute(_server, i) {\n    setTimeout(function() {\n      // Destroyed\n      if (self.state === DESTROYED || self.state === UNREFERENCED) {\n        return;\n      }\n\n      // Create a new server instance\n      var server = new Server(\n        Object.assign({}, self.s.options, {\n          host: _server.name.split(':')[0],\n          port: parseInt(_server.name.split(':')[1], 10),\n          authProviders: self.authProviders,\n          reconnect: false,\n          monitoring: false,\n          parent: self,\n          clientInfo: clone(self.s.clientInfo)\n        })\n      );\n\n      destroyServer(_server);\n      removeProxyFrom(self.disconnectedProxies, _server);\n\n      // Relay the server description change\n      relayEvents(server, self, ['serverDescriptionChanged']);\n\n      // Emit opening server event\n      self.emit('serverOpening', {\n        topologyId: server.s.topologyId !== -1 ? server.s.topologyId : self.id,\n        address: server.name\n      });\n\n      // Add temp handlers\n      server.once('connect', _handleEvent(self, 'connect'));\n      server.once('close', _handleEvent(self, 'close'));\n      server.once('timeout', _handleEvent(self, 'timeout'));\n      server.once('error', _handleEvent(self, 'error'));\n      server.once('parseError', _handleEvent(self, 'parseError'));\n\n      // Command Monitoring events\n      relayEvents(server, self, ['commandStarted', 'commandSucceeded', 'commandFailed']);\n\n      // Connect to proxy\n      self.connectingProxies.push(server);\n      server.connect(self.s.connectOptions);\n    }, i);\n  }\n\n  // Create new instances\n  for (var i = 0; i < proxies.length; i++) {\n    execute(proxies[i], i);\n  }\n}\n\nfunction applyAuthenticationContexts(self, server, callback) {\n  if (self.s.authenticationContexts.length === 0) {\n    return callback();\n  }\n\n  // Copy contexts to ensure no modificiation in the middle of\n  // auth process.\n  var authContexts = self.s.authenticationContexts.slice(0);\n\n  // Apply one of the contexts\n  function applyAuth(authContexts, server, callback) {\n    if (authContexts.length === 0) return callback();\n    // Get the first auth context\n    var authContext = authContexts.shift();\n    // Copy the params\n    var customAuthContext = authContext.slice(0);\n    // Push our callback handler\n    customAuthContext.push(function(/* err */) {\n      applyAuth(authContexts, server, callback);\n    });\n\n    // Attempt authentication\n    server.auth.apply(server, customAuthContext);\n  }\n\n  // Apply all auth contexts\n  applyAuth(authContexts, server, callback);\n}\n\nfunction topologyMonitor(self, options) {\n  options = options || {};\n\n  // Set momitoring timeout\n  self.haTimeoutId = setTimeout(function() {\n    if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n    // If we have a primary and a disconnect handler, execute\n    // buffered operations\n    if (self.isConnected() && self.s.disconnectHandler) {\n      self.s.disconnectHandler.execute();\n    }\n\n    // Get the connectingServers\n    var proxies = self.connectedProxies.slice(0);\n    // Get the count\n    var count = proxies.length;\n\n    // If the count is zero schedule a new fast\n    function pingServer(_self, _server, cb) {\n      // Measure running time\n      var start = new Date().getTime();\n\n      // Emit the server heartbeat start\n      emitSDAMEvent(self, 'serverHeartbeatStarted', { connectionId: _server.name });\n\n      // Execute ismaster\n      _server.command(\n        'admin.$cmd',\n        {\n          ismaster: true\n        },\n        {\n          monitoring: true,\n          socketTimeout: self.s.options.connectionTimeout || 2000\n        },\n        function(err, r) {\n          if (self.state === DESTROYED || self.state === UNREFERENCED) {\n            // Move from connectingProxies\n            moveServerFrom(self.connectedProxies, self.disconnectedProxies, _server);\n            _server.destroy();\n            return cb(err, r);\n          }\n\n          // Calculate latency\n          var latencyMS = new Date().getTime() - start;\n\n          // We had an error, remove it from the state\n          if (err) {\n            // Emit the server heartbeat failure\n            emitSDAMEvent(self, 'serverHeartbeatFailed', {\n              durationMS: latencyMS,\n              failure: err,\n              connectionId: _server.name\n            });\n            // Move from connected proxies to disconnected proxies\n            moveServerFrom(self.connectedProxies, self.disconnectedProxies, _server);\n          } else {\n            // Update the server ismaster\n            _server.ismaster = r.result;\n            _server.lastIsMasterMS = latencyMS;\n\n            // Server heart beat event\n            emitSDAMEvent(self, 'serverHeartbeatSucceeded', {\n              durationMS: latencyMS,\n              reply: r.result,\n              connectionId: _server.name\n            });\n          }\n\n          cb(err, r);\n        }\n      );\n    }\n\n    // No proxies initiate monitor again\n    if (proxies.length === 0) {\n      // Emit close event if any listeners registered\n      if (self.listeners('close').length > 0 && self.state === CONNECTING) {\n        self.emit('error', new MongoError('no mongos proxy available'));\n      } else {\n        self.emit('close', self);\n      }\n\n      // Attempt to connect to any unknown servers\n      return reconnectProxies(self, self.disconnectedProxies, function() {\n        if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n        // Are we connected ? emit connect event\n        if (self.state === CONNECTING && options.firstConnect) {\n          self.emit('connect', self);\n          self.emit('fullsetup', self);\n          self.emit('all', self);\n        } else if (self.isConnected()) {\n          self.emit('reconnect', self);\n        } else if (!self.isConnected() && self.listeners('close').length > 0) {\n          self.emit('close', self);\n        }\n\n        // Perform topology monitor\n        topologyMonitor(self);\n      });\n    }\n\n    // Ping all servers\n    for (var i = 0; i < proxies.length; i++) {\n      pingServer(self, proxies[i], function() {\n        count = count - 1;\n\n        if (count === 0) {\n          if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n\n          // Attempt to connect to any unknown servers\n          reconnectProxies(self, self.disconnectedProxies, function() {\n            if (self.state === DESTROYED || self.state === UNREFERENCED) return;\n            // Perform topology monitor\n            topologyMonitor(self);\n          });\n        }\n      });\n    }\n  }, self.s.haInterval);\n}\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nMongos.prototype.lastIsMaster = function() {\n  return this.ismaster;\n};\n\n/**\n * Unref all connections belong to this server\n * @method\n */\nMongos.prototype.unref = function() {\n  // Transition state\n  stateTransition(this, UNREFERENCED);\n  // Get all proxies\n  var proxies = this.connectedProxies.concat(this.connectingProxies);\n  proxies.forEach(function(x) {\n    x.unref();\n  });\n\n  clearTimeout(this.haTimeoutId);\n};\n\n/**\n * Destroy the server connection\n * @param {boolean} [options.force=false] Force destroy the pool\n * @method\n */\nMongos.prototype.destroy = function(options) {\n  var self = this;\n  // Transition state\n  stateTransition(this, DESTROYED);\n  // Get all proxies\n  var proxies = this.connectedProxies.concat(this.connectingProxies);\n  // Clear out any monitoring process\n  if (this.haTimeoutId) clearTimeout(this.haTimeoutId);\n  // Clear out authentication contexts\n  this.s.authenticationContexts = [];\n\n  // Destroy all connecting servers\n  proxies.forEach(function(server) {\n    // Emit the sdam event\n    self.emit('serverClosed', {\n      topologyId: self.id,\n      address: server.name\n    });\n\n    destroyServer(server, options);\n\n    // Move to list of disconnectedProxies\n    moveServerFrom(self.connectedProxies, self.disconnectedProxies, server);\n  });\n  // Emit the final topology change\n  emitTopologyDescriptionChanged(self);\n  // Emit toplogy closing event\n  emitSDAMEvent(this, 'topologyClosed', { topologyId: this.id });\n};\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nMongos.prototype.isConnected = function() {\n  return this.connectedProxies.length > 0;\n};\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nMongos.prototype.isDestroyed = function() {\n  return this.state === DESTROYED;\n};\n\n//\n// Operations\n//\n\n// Execute write operation\nvar executeWriteOperation = function(self, op, ns, ops, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Pick a server\n  let server = pickProxy(self);\n  // No server found error out\n  if (!server) return callback(new MongoError('no mongos proxy available'));\n\n  if (!options.retryWrites || !options.session || !isRetryableWritesSupported(self)) {\n    // Execute the command\n    return server[op](ns, ops, options, callback);\n  }\n\n  // increment and assign txnNumber\n  options.willRetryWrite = true;\n  options.session.incrementTransactionNumber();\n\n  server[op](ns, ops, options, (err, result) => {\n    if (!err) return callback(null, result);\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    // Pick another server\n    server = pickProxy(self);\n\n    // No server found error out with original error\n    if (!server || !isRetryableWritesSupported(server)) {\n      return callback(err);\n    }\n\n    // rerun the operation\n    server[op](ns, ops, options, callback);\n  });\n};\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.insert = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('insert', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation(this, 'insert', ns, ops, options, callback);\n};\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.update = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('update', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation(this, 'update', ns, ops, options, callback);\n};\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {boolean} [options.retryWrites] Enable retryable writes for this operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.remove = function(ns, ops, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n\n  // Not connected but we have a disconnecthandler\n  if (!this.isConnected() && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('remove', ns, ops, options, callback);\n  }\n\n  // No mongos proxy available\n  if (!this.isConnected()) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Execute write operation\n  executeWriteOperation(this, 'remove', ns, ops, options, callback);\n};\n\nconst RETRYABLE_WRITE_OPERATIONS = ['findAndModify', 'insert', 'update', 'delete'];\n\nfunction isWriteCommand(command) {\n  return RETRYABLE_WRITE_OPERATIONS.some(op => command[op]);\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.command = function(ns, cmd, options, callback) {\n  if (typeof options === 'function') {\n    (callback = options), (options = {}), (options = options || {});\n  }\n\n  if (this.state === DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Pick a proxy\n  var server = pickProxy(self);\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if ((server == null || !server.isConnected()) && this.s.disconnectHandler != null) {\n    return this.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // No server returned we had an error\n  if (server == null) {\n    return callback(new MongoError('no mongos proxy available'));\n  }\n\n  // Cloned options\n  var clonedOptions = cloneOptions(options);\n  clonedOptions.topology = self;\n\n  const willRetryWrite =\n    !options.retrying &&\n    options.retryWrites &&\n    options.session &&\n    isRetryableWritesSupported(self) &&\n    !options.session.inTransaction() &&\n    isWriteCommand(cmd);\n\n  const cb = (err, result) => {\n    if (!err) return callback(null, result);\n    if (!isRetryableError(err)) {\n      return callback(err);\n    }\n\n    if (willRetryWrite) {\n      const newOptions = Object.assign({}, clonedOptions, { retrying: true });\n      return this.command(ns, cmd, newOptions, callback);\n    }\n\n    return callback(err);\n  };\n\n  // increment and assign txnNumber\n  if (willRetryWrite) {\n    options.session.incrementTransactionNumber();\n    options.willRetryWrite = willRetryWrite;\n  }\n\n  // Execute the command\n  server.command(ns, cmd, clonedOptions, cb);\n};\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object|Long} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options] Options for the cursor\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {ClientSession} [options.session=null] Session to use for the operation\n * @param {object} [options.topology] The internal topology of the created cursor\n * @returns {Cursor}\n */\nMongos.prototype.cursor = function(ns, cmd, options) {\n  options = options || {};\n  const topology = options.topology || this;\n\n  // Set up final cursor type\n  var FinalCursor = options.cursorFactory || this.s.Cursor;\n\n  // Return the cursor\n  return new FinalCursor(this.s.bson, ns, cmd, options, topology, this.s.options);\n};\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nMongos.prototype.auth = function(mechanism, db) {\n  var allArgs = Array.prototype.slice.call(arguments, 0).slice(0);\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  var callback = args.pop();\n  var currentContextIndex = 0;\n\n  // If we don't have the mechanism fail\n  if (this.authProviders[mechanism] == null && mechanism !== 'default') {\n    return callback(new MongoError(f('auth provider %s does not exist', mechanism)));\n  }\n\n  // Are we already authenticating, throw\n  if (this.authenticating) {\n    return callback(new MongoError('authentication or logout allready in process'));\n  }\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if (!self.isConnected() && self.s.disconnectHandler != null) {\n    return self.s.disconnectHandler.add('auth', db, allArgs, {}, callback);\n  }\n\n  // Set to authenticating\n  this.authenticating = true;\n  // All errors\n  var errors = [];\n\n  // Get all the servers\n  var servers = this.connectedProxies.slice(0);\n  // No servers return\n  if (servers.length === 0) {\n    this.authenticating = false;\n    callback(null, true);\n  }\n\n  // Authenticate\n  function auth(server) {\n    // Arguments without a callback\n    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));\n    // Create arguments\n    var finalArguments = argsWithoutCallback.concat([\n      function(err) {\n        count = count - 1;\n        // Save all the errors\n        if (err) errors.push({ name: server.name, err: err });\n        // We are done\n        if (count === 0) {\n          // Auth is done\n          self.authenticating = false;\n\n          // Return the auth error\n          if (errors.length) {\n            // Remove the entry from the stored authentication contexts\n            self.s.authenticationContexts.splice(currentContextIndex, 0);\n            // Return error\n            return callback(\n              new MongoError({\n                message: 'authentication fail',\n                errors: errors\n              }),\n              false\n            );\n          }\n\n          // Successfully authenticated session\n          callback(null, self);\n        }\n      }\n    ]);\n\n    // Execute the auth only against non arbiter servers\n    if (!server.lastIsMaster().arbiterOnly) {\n      server.auth.apply(server, finalArguments);\n    }\n  }\n\n  // Save current context index\n  currentContextIndex = this.s.authenticationContexts.length;\n  // Store the auth context and return the last index\n  this.s.authenticationContexts.push([mechanism, db].concat(args.slice(0)));\n\n  // Get total count\n  var count = servers.length;\n  // Authenticate against all servers\n  while (servers.length > 0) {\n    auth(servers.shift());\n  }\n};\n\n/**\n * Logout from a database\n * @method\n * @param {string} db The db we are logging out from\n * @param {authResultCallback} callback A callback function\n */\nMongos.prototype.logout = function(dbName, callback) {\n  var self = this;\n  // Are we authenticating or logging out, throw\n  if (this.authenticating) {\n    throw new MongoError('authentication or logout allready in process');\n  }\n\n  // Ensure no new members are processed while logging out\n  this.authenticating = true;\n\n  // Remove from all auth providers (avoid any reaplication of the auth details)\n  var providers = Object.keys(this.authProviders);\n  for (var i = 0; i < providers.length; i++) {\n    this.authProviders[providers[i]].logout(dbName);\n  }\n\n  // Now logout all the servers\n  var servers = this.connectedProxies.slice(0);\n  var count = servers.length;\n  if (count === 0) return callback();\n  var errors = [];\n\n  function logoutServer(_server, cb) {\n    _server.logout(dbName, function(err) {\n      if (err) errors.push({ name: _server.name, err: err });\n      cb();\n    });\n  }\n\n  // Execute logout on all server instances\n  for (i = 0; i < servers.length; i++) {\n    logoutServer(servers[i], function() {\n      count = count - 1;\n\n      if (count === 0) {\n        // Do not block new operations\n        self.authenticating = false;\n        // If we have one or more errors\n        if (errors.length)\n          return callback(\n            new MongoError({\n              message: f('logout failed against db %s', dbName),\n              errors: errors\n            }),\n            false\n          );\n\n        // No errors\n        callback();\n      }\n    });\n  }\n};\n\n/**\n * Selects a server\n *\n * @method\n * @param {function} selector Unused\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {function} callback\n */\nMongos.prototype.selectServer = function(selector, options, callback) {\n  if (typeof selector === 'function' && typeof callback === 'undefined')\n    (callback = selector), (selector = undefined), (options = {});\n  if (typeof options === 'function')\n    (callback = options), (options = selector), (selector = undefined);\n  options = options || {};\n\n  const server = pickProxy(this);\n  if (this.s.debug) this.emit('pickedServer', null, server);\n  callback(null, server);\n};\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nMongos.prototype.connections = function() {\n  var connections = [];\n\n  for (var i = 0; i < this.connectedProxies.length; i++) {\n    connections = connections.concat(this.connectedProxies[i].connections());\n  }\n\n  return connections;\n};\n\nfunction emitTopologyDescriptionChanged(self) {\n  if (self.listeners('topologyDescriptionChanged').length > 0) {\n    var topology = 'Unknown';\n    if (self.connectedProxies.length > 0) {\n      topology = 'Sharded';\n    }\n\n    // Generate description\n    var description = {\n      topologyType: topology,\n      servers: []\n    };\n\n    // All proxies\n    var proxies = self.disconnectedProxies.concat(self.connectingProxies);\n\n    // Add all the disconnected proxies\n    description.servers = description.servers.concat(\n      proxies.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'Unknown';\n        return description;\n      })\n    );\n\n    // Add all the connected proxies\n    description.servers = description.servers.concat(\n      self.connectedProxies.map(function(x) {\n        var description = x.getDescription();\n        description.type = 'Mongos';\n        return description;\n      })\n    );\n\n    // Get the diff\n    var diffResult = diff(self.topologyDescription, description);\n\n    // Create the result\n    var result = {\n      topologyId: self.id,\n      previousDescription: self.topologyDescription,\n      newDescription: description,\n      diff: diffResult\n    };\n\n    // Emit the topologyDescription change\n    if (diffResult.servers.length > 0) {\n      self.emit('topologyDescriptionChanged', result);\n    }\n\n    // Set the new description\n    self.topologyDescription = description;\n  }\n}\n\n/**\n * A mongos connect event, used to verify that the connection is up and running\n *\n * @event Mongos#connect\n * @type {Mongos}\n */\n\n/**\n * A mongos reconnect event, used to verify that the mongos topology has reconnected\n *\n * @event Mongos#reconnect\n * @type {Mongos}\n */\n\n/**\n * A mongos fullsetup event, used to signal that all topology members have been contacted.\n *\n * @event Mongos#fullsetup\n * @type {Mongos}\n */\n\n/**\n * A mongos all event, used to signal that all topology members have been contacted.\n *\n * @event Mongos#all\n * @type {Mongos}\n */\n\n/**\n * A server member left the mongos list\n *\n * @event Mongos#left\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the mongos list\n *\n * @event Mongos#joined\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that joined\n */\n\n/**\n * A server opening SDAM monitoring event\n *\n * @event Mongos#serverOpening\n * @type {object}\n */\n\n/**\n * A server closed SDAM monitoring event\n *\n * @event Mongos#serverClosed\n * @type {object}\n */\n\n/**\n * A server description SDAM change monitoring event\n *\n * @event Mongos#serverDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology open SDAM event\n *\n * @event Mongos#topologyOpening\n * @type {object}\n */\n\n/**\n * A topology closed SDAM event\n *\n * @event Mongos#topologyClosed\n * @type {object}\n */\n\n/**\n * A topology structure SDAM change event\n *\n * @event Mongos#topologyDescriptionChanged\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatStarted SDAM event\n *\n * @event Mongos#serverHeartbeatStarted\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatFailed SDAM event\n *\n * @event Mongos#serverHeartbeatFailed\n * @type {object}\n */\n\n/**\n * A topology serverHeartbeatSucceeded SDAM change event\n *\n * @event Mongos#serverHeartbeatSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command was started, if command monitoring is enabled\n *\n * @event Mongos#commandStarted\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command succeeded, if command monitoring is enabled\n *\n * @event Mongos#commandSucceeded\n * @type {object}\n */\n\n/**\n * An event emitted indicating a command failed, if command monitoring is enabled\n *\n * @event Mongos#commandFailed\n * @type {object}\n */\n\nmodule.exports = Mongos;\n","'use strict';\n\nconst retrieveBSON = require('./connection/utils').retrieveBSON;\nconst EventEmitter = require('events');\nconst BSON = retrieveBSON();\nconst Binary = BSON.Binary;\nconst uuidV4 = require('./utils').uuidV4;\nconst MongoError = require('./error').MongoError;\nconst isRetryableError = require('././error').isRetryableError;\nconst MongoNetworkError = require('./error').MongoNetworkError;\nconst MongoWriteConcernError = require('./error').MongoWriteConcernError;\nconst Transaction = require('./transactions').Transaction;\nconst TxnState = require('./transactions').TxnState;\n\nfunction assertAlive(session, callback) {\n  if (session.serverSession == null) {\n    const error = new MongoError('Cannot use a session that has ended');\n    if (typeof callback === 'function') {\n      callback(error, null);\n      return false;\n    }\n\n    throw error;\n  }\n\n  return true;\n}\n\n/**\n * Options to pass when creating a Client Session\n * @typedef {Object} SessionOptions\n * @property {boolean} [causalConsistency=true] Whether causal consistency should be enabled on this session\n * @property {TransactionOptions} [defaultTransactionOptions] The default TransactionOptions to use for transactions started on this session.\n */\n\n/**\n * A BSON document reflecting the lsid of a {@link ClientSession}\n * @typedef {Object} SessionId\n */\n\n/**\n * A class representing a client session on the server\n * WARNING: not meant to be instantiated directly.\n * @class\n * @hideconstructor\n */\nclass ClientSession extends EventEmitter {\n  /**\n   * Create a client session.\n   * WARNING: not meant to be instantiated directly\n   *\n   * @param {Topology} topology The current client's topology (Internal Class)\n   * @param {ServerSessionPool} sessionPool The server session pool (Internal Class)\n   * @param {SessionOptions} [options] Optional settings\n   * @param {Object} [clientOptions] Optional settings provided when creating a client in the porcelain driver\n   */\n  constructor(topology, sessionPool, options, clientOptions) {\n    super();\n\n    if (topology == null) {\n      throw new Error('ClientSession requires a topology');\n    }\n\n    if (sessionPool == null || !(sessionPool instanceof ServerSessionPool)) {\n      throw new Error('ClientSession requires a ServerSessionPool');\n    }\n\n    options = options || {};\n    this.topology = topology;\n    this.sessionPool = sessionPool;\n    this.hasEnded = false;\n    this.serverSession = sessionPool.acquire();\n    this.clientOptions = clientOptions;\n\n    this.supports = {\n      causalConsistency:\n        typeof options.causalConsistency !== 'undefined' ? options.causalConsistency : true\n    };\n\n    options = options || {};\n    if (typeof options.initialClusterTime !== 'undefined') {\n      this.clusterTime = options.initialClusterTime;\n    } else {\n      this.clusterTime = null;\n    }\n\n    this.operationTime = null;\n    this.explicit = !!options.explicit;\n    this.owner = options.owner;\n    this.defaultTransactionOptions = Object.assign({}, options.defaultTransactionOptions);\n    this.transaction = new Transaction();\n  }\n\n  /**\n   * The server id associated with this session\n   * @type {SessionId}\n   */\n  get id() {\n    return this.serverSession.id;\n  }\n\n  /**\n   * Ends this session on the server\n   *\n   * @param {Object} [options] Optional settings. Currently reserved for future use\n   * @param {Function} [callback] Optional callback for completion of this operation\n   */\n  endSession(options, callback) {\n    if (typeof options === 'function') (callback = options), (options = {});\n    options = options || {};\n\n    if (this.hasEnded) {\n      if (typeof callback === 'function') callback(null, null);\n      return;\n    }\n\n    if (this.serverSession && this.inTransaction()) {\n      this.abortTransaction(); // pass in callback?\n    }\n\n    // mark the session as ended, and emit a signal\n    this.hasEnded = true;\n    this.emit('ended', this);\n\n    // release the server session back to the pool\n    this.sessionPool.release(this.serverSession);\n\n    // spec indicates that we should ignore all errors for `endSessions`\n    if (typeof callback === 'function') callback(null, null);\n  }\n\n  /**\n   * Advances the operationTime for a ClientSession.\n   *\n   * @param {Timestamp} operationTime the `BSON.Timestamp` of the operation type it is desired to advance to\n   */\n  advanceOperationTime(operationTime) {\n    if (this.operationTime == null) {\n      this.operationTime = operationTime;\n      return;\n    }\n\n    if (operationTime.greaterThan(this.operationTime)) {\n      this.operationTime = operationTime;\n    }\n  }\n\n  /**\n   * Used to determine if this session equals another\n   * @param {ClientSession} session\n   * @return {boolean} true if the sessions are equal\n   */\n  equals(session) {\n    if (!(session instanceof ClientSession)) {\n      return false;\n    }\n\n    return this.id.id.buffer.equals(session.id.id.buffer);\n  }\n\n  /**\n   * Increment the transaction number on the internal ServerSession\n   */\n  incrementTransactionNumber() {\n    this.serverSession.txnNumber++;\n  }\n\n  /**\n   * @returns {boolean} whether this session is currently in a transaction or not\n   */\n  inTransaction() {\n    return this.transaction.isActive;\n  }\n\n  /**\n   * Starts a new transaction with the given options.\n   *\n   * @param {TransactionOptions} options Options for the transaction\n   */\n  startTransaction(options) {\n    assertAlive(this);\n    if (this.inTransaction()) {\n      throw new MongoError('Transaction already in progress');\n    }\n\n    // increment txnNumber\n    this.incrementTransactionNumber();\n\n    // create transaction state\n    this.transaction = new Transaction(\n      Object.assign({}, this.clientOptions, options || this.defaultTransactionOptions)\n    );\n\n    this.transaction.transition(TxnState.STARTING_TRANSACTION);\n  }\n\n  /**\n   * Commits the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  commitTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'commitTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'commitTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * Aborts the currently active transaction in this session.\n   *\n   * @param {Function} [callback] optional callback for completion of this operation\n   * @return {Promise} A promise is returned if no callback is provided\n   */\n  abortTransaction(callback) {\n    if (typeof callback === 'function') {\n      endTransaction(this, 'abortTransaction', callback);\n      return;\n    }\n\n    return new Promise((resolve, reject) => {\n      endTransaction(\n        this,\n        'abortTransaction',\n        (err, reply) => (err ? reject(err) : resolve(reply))\n      );\n    });\n  }\n\n  /**\n   * This is here to ensure that ClientSession is never serialized to BSON.\n   * @ignore\n   */\n  toBSON() {\n    throw new Error('ClientSession cannot be serialized to BSON.');\n  }\n}\n\nfunction endTransaction(session, commandName, callback) {\n  if (!assertAlive(session, callback)) {\n    // checking result in case callback was called\n    return;\n  }\n\n  // handle any initial problematic cases\n  let txnState = session.transaction.state;\n\n  if (txnState === TxnState.NO_TRANSACTION) {\n    callback(new MongoError('No transaction started'));\n    return;\n  }\n\n  if (commandName === 'commitTransaction') {\n    if (\n      txnState === TxnState.STARTING_TRANSACTION ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED_EMPTY);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call commitTransaction after calling abortTransaction'));\n      return;\n    }\n  } else {\n    if (txnState === TxnState.STARTING_TRANSACTION) {\n      // the transaction was never started, we can safely exit here\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n      callback(null, null);\n      return;\n    }\n\n    if (txnState === TxnState.TRANSACTION_ABORTED) {\n      callback(new MongoError('Cannot call abortTransaction twice'));\n      return;\n    }\n\n    if (\n      txnState === TxnState.TRANSACTION_COMMITTED ||\n      txnState === TxnState.TRANSACTION_COMMITTED_EMPTY\n    ) {\n      callback(new MongoError('Cannot call abortTransaction after calling commitTransaction'));\n      return;\n    }\n  }\n\n  // construct and send the command\n  const command = { [commandName]: 1 };\n\n  // apply a writeConcern if specified\n  if (session.transaction.options.writeConcern) {\n    Object.assign(command, { writeConcern: session.transaction.options.writeConcern });\n  } else if (session.clientOptions && session.clientOptions.w) {\n    Object.assign(command, { writeConcern: { w: session.clientOptions.w } });\n  }\n\n  function commandHandler(e, r) {\n    if (commandName === 'commitTransaction') {\n      session.transaction.transition(TxnState.TRANSACTION_COMMITTED);\n\n      if (\n        e &&\n        (e instanceof MongoNetworkError ||\n          e instanceof MongoWriteConcernError ||\n          isRetryableError(e))\n      ) {\n        if (e.errorLabels) {\n          const idx = e.errorLabels.indexOf('TransientTransactionError');\n          if (idx !== -1) {\n            e.errorLabels.splice(idx, 1);\n          }\n        } else {\n          e.errorLabels = [];\n        }\n\n        e.errorLabels.push('UnknownTransactionCommitResult');\n      }\n    } else {\n      session.transaction.transition(TxnState.TRANSACTION_ABORTED);\n    }\n\n    callback(e, r);\n  }\n\n  // The spec indicates that we should ignore all errors on `abortTransaction`\n  function transactionError(err) {\n    return commandName === 'commitTransaction' ? err : null;\n  }\n\n  // send the command\n  session.topology.command('admin.$cmd', command, { session }, (err, reply) => {\n    if (err && isRetryableError(err)) {\n      return session.topology.command('admin.$cmd', command, { session }, (_err, _reply) =>\n        commandHandler(transactionError(_err), _reply)\n      );\n    }\n\n    commandHandler(transactionError(err), reply);\n  });\n}\n\n/**\n * Reflects the existence of a session on the server. Can be reused by the session pool.\n * WARNING: not meant to be instantiated directly. For internal use only.\n * @ignore\n */\nclass ServerSession {\n  constructor() {\n    this.id = { id: new Binary(uuidV4(), Binary.SUBTYPE_UUID) };\n    this.lastUse = Date.now();\n    this.txnNumber = 0;\n  }\n\n  /**\n   * Determines if the server session has timed out.\n   * @ignore\n   * @param {Date} sessionTimeoutMinutes The server's \"logicalSessionTimeoutMinutes\"\n   * @return {boolean} true if the session has timed out.\n   */\n  hasTimedOut(sessionTimeoutMinutes) {\n    // Take the difference of the lastUse timestamp and now, which will result in a value in\n    // milliseconds, and then convert milliseconds to minutes to compare to `sessionTimeoutMinutes`\n    const idleTimeMinutes = Math.round(\n      (((Date.now() - this.lastUse) % 86400000) % 3600000) / 60000\n    );\n\n    return idleTimeMinutes > sessionTimeoutMinutes - 1;\n  }\n}\n\n/**\n * Maintains a pool of Server Sessions.\n * For internal use only\n * @ignore\n */\nclass ServerSessionPool {\n  constructor(topology) {\n    if (topology == null) {\n      throw new Error('ServerSessionPool requires a topology');\n    }\n\n    this.topology = topology;\n    this.sessions = [];\n  }\n\n  /**\n   * Ends all sessions in the session pool.\n   * @ignore\n   */\n  endAllPooledSessions() {\n    if (this.sessions.length) {\n      this.topology.endSessions(this.sessions.map(session => session.id));\n      this.sessions = [];\n    }\n  }\n\n  /**\n   * Acquire a Server Session from the pool.\n   * Iterates through each session in the pool, removing any stale sessions\n   * along the way. The first non-stale session found is removed from the\n   * pool and returned. If no non-stale session is found, a new ServerSession\n   * is created.\n   * @ignore\n   * @returns {ServerSession}\n   */\n  acquire() {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions.shift();\n      if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n        return session;\n      }\n    }\n\n    return new ServerSession();\n  }\n\n  /**\n   * Release a session to the session pool\n   * Adds the session back to the session pool if the session has not timed out yet.\n   * This method also removes any stale sessions from the pool.\n   * @ignore\n   * @param {ServerSession} session The session to release to the pool\n   */\n  release(session) {\n    const sessionTimeoutMinutes = this.topology.logicalSessionTimeoutMinutes;\n    while (this.sessions.length) {\n      const session = this.sessions[this.sessions.length - 1];\n      if (session.hasTimedOut(sessionTimeoutMinutes)) {\n        this.sessions.pop();\n      } else {\n        break;\n      }\n    }\n\n    if (!session.hasTimedOut(sessionTimeoutMinutes)) {\n      this.sessions.unshift(session);\n    }\n  }\n}\n\nmodule.exports = {\n  ClientSession,\n  ServerSession,\n  ServerSessionPool,\n  TxnState\n};\n","'use strict';\nconst URL = require('url');\nconst qs = require('querystring');\nconst dns = require('dns');\nconst MongoParseError = require('./error').MongoParseError;\nconst ReadPreference = require('./topologies/read_preference');\n\n/**\n * The following regular expression validates a connection string and breaks the\n * provide string into the following capture groups: [protocol, username, password, hosts]\n */\nconst HOSTS_RX = /(mongodb(?:\\+srv|)):\\/\\/(?: (?:[^:]*) (?: : ([^@]*) )? @ )?([^/?]*)(?:\\/|)(.*)/;\n\n/**\n * Determines whether a provided address matches the provided parent domain in order\n * to avoid certain attack vectors.\n *\n * @param {String} srvAddress The address to check against a domain\n * @param {String} parentDomain The domain to check the provided address against\n * @return {Boolean} Whether the provided address matches the parent domain\n */\nfunction matchesParentDomain(srvAddress, parentDomain) {\n  const regex = /^.*?\\./;\n  const srv = `.${srvAddress.replace(regex, '')}`;\n  const parent = `.${parentDomain.replace(regex, '')}`;\n  return srv.endsWith(parent);\n}\n\n/**\n * Lookup a `mongodb+srv` connection string, combine the parts and reparse it as a normal\n * connection string.\n *\n * @param {string} uri The connection string to parse\n * @param {object} options Optional user provided connection string options\n * @param {function} callback\n */\nfunction parseSrvConnectionString(uri, options, callback) {\n  const result = URL.parse(uri, true);\n\n  if (result.hostname.split('.').length < 3) {\n    return callback(new MongoParseError('URI does not have hostname, domain name and tld'));\n  }\n\n  result.domainLength = result.hostname.split('.').length;\n  if (result.pathname && result.pathname.match(',')) {\n    return callback(new MongoParseError('Invalid URI, cannot contain multiple hostnames'));\n  }\n\n  if (result.port) {\n    return callback(new MongoParseError(`Ports not accepted with '${PROTOCOL_MONGODB_SRV}' URIs`));\n  }\n\n  // Resolve the SRV record and use the result as the list of hosts to connect to.\n  const lookupAddress = result.host;\n  dns.resolveSrv(`_mongodb._tcp.${lookupAddress}`, (err, addresses) => {\n    if (err) return callback(err);\n\n    if (addresses.length === 0) {\n      return callback(new MongoParseError('No addresses found at host'));\n    }\n\n    for (let i = 0; i < addresses.length; i++) {\n      if (!matchesParentDomain(addresses[i].name, result.hostname, result.domainLength)) {\n        return callback(\n          new MongoParseError('Server record does not share hostname with parent URI')\n        );\n      }\n    }\n\n    // Convert the original URL to a non-SRV URL.\n    result.protocol = 'mongodb';\n    result.host = addresses.map(address => `${address.name}:${address.port}`).join(',');\n\n    // Default to SSL true if it's not specified.\n    if (\n      !('ssl' in options) &&\n      (!result.search || !('ssl' in result.query) || result.query.ssl === null)\n    ) {\n      result.query.ssl = true;\n    }\n\n    // Resolve TXT record and add options from there if they exist.\n    dns.resolveTxt(lookupAddress, (err, record) => {\n      if (err) {\n        if (err.code !== 'ENODATA') {\n          return callback(err);\n        }\n        record = null;\n      }\n\n      if (record) {\n        if (record.length > 1) {\n          return callback(new MongoParseError('Multiple text records not allowed'));\n        }\n\n        record = qs.parse(record[0].join(''));\n        if (Object.keys(record).some(key => key !== 'authSource' && key !== 'replicaSet')) {\n          return callback(\n            new MongoParseError('Text record must only set `authSource` or `replicaSet`')\n          );\n        }\n\n        Object.assign(result.query, record);\n      }\n\n      // Set completed options back into the URL object.\n      result.search = qs.stringify(result.query);\n\n      const finalString = URL.format(result);\n      parseConnectionString(finalString, options, callback);\n    });\n  });\n}\n\n/**\n * Parses a query string item according to the connection string spec\n *\n * @param {string} key The key for the parsed value\n * @param {Array|String} value The value to parse\n * @return {Array|Object|String} The parsed value\n */\nfunction parseQueryStringItemValue(key, value) {\n  if (Array.isArray(value)) {\n    // deduplicate and simplify arrays\n    value = value.filter((v, idx) => value.indexOf(v) === idx);\n    if (value.length === 1) value = value[0];\n  } else if (value.indexOf(':') > 0) {\n    value = value.split(',').reduce((result, pair) => {\n      const parts = pair.split(':');\n      result[parts[0]] = parseQueryStringItemValue(key, parts[1]);\n      return result;\n    }, {});\n  } else if (value.indexOf(',') > 0) {\n    value = value.split(',').map(v => {\n      return parseQueryStringItemValue(key, v);\n    });\n  } else if (value.toLowerCase() === 'true' || value.toLowerCase() === 'false') {\n    value = value.toLowerCase() === 'true';\n  } else if (!Number.isNaN(value) && !STRING_OPTIONS.has(key)) {\n    const numericValue = parseFloat(value);\n    if (!Number.isNaN(numericValue)) {\n      value = parseFloat(value);\n    }\n  }\n\n  return value;\n}\n\n// Options that are known boolean types\nconst BOOLEAN_OPTIONS = new Set([\n  'slaveok',\n  'slave_ok',\n  'sslvalidate',\n  'fsync',\n  'safe',\n  'retrywrites',\n  'j'\n]);\n\n// Known string options, only used to bypass Number coercion in `parseQueryStringItemValue`\nconst STRING_OPTIONS = new Set(['authsource', 'replicaset']);\n\n// Supported text representations of auth mechanisms\n// NOTE: this list exists in native already, if it is merged here we should deduplicate\nconst AUTH_MECHANISMS = new Set([\n  'GSSAPI',\n  'MONGODB-X509',\n  'MONGODB-CR',\n  'DEFAULT',\n  'SCRAM-SHA-1',\n  'SCRAM-SHA-256',\n  'PLAIN'\n]);\n\n// Lookup table used to translate normalized (lower-cased) forms of connection string\n// options to their expected camelCase version\nconst CASE_TRANSLATION = {\n  replicaset: 'replicaSet',\n  connecttimeoutms: 'connectTimeoutMS',\n  sockettimeoutms: 'socketTimeoutMS',\n  maxpoolsize: 'maxPoolSize',\n  minpoolsize: 'minPoolSize',\n  maxidletimems: 'maxIdleTimeMS',\n  waitqueuemultiple: 'waitQueueMultiple',\n  waitqueuetimeoutms: 'waitQueueTimeoutMS',\n  wtimeoutms: 'wtimeoutMS',\n  readconcern: 'readConcern',\n  readconcernlevel: 'readConcernLevel',\n  readpreference: 'readPreference',\n  maxstalenessseconds: 'maxStalenessSeconds',\n  readpreferencetags: 'readPreferenceTags',\n  authsource: 'authSource',\n  authmechanism: 'authMechanism',\n  authmechanismproperties: 'authMechanismProperties',\n  gssapiservicename: 'gssapiServiceName',\n  localthresholdms: 'localThresholdMS',\n  serverselectiontimeoutms: 'serverSelectionTimeoutMS',\n  serverselectiontryonce: 'serverSelectionTryOnce',\n  heartbeatfrequencyms: 'heartbeatFrequencyMS',\n  appname: 'appName',\n  retrywrites: 'retryWrites',\n  uuidrepresentation: 'uuidRepresentation',\n  zlibcompressionlevel: 'zlibCompressionLevel'\n};\n\n/**\n * Sets the value for `key`, allowing for any required translation\n *\n * @param {object} obj The object to set the key on\n * @param {string} key The key to set the value for\n * @param {*} value The value to set\n * @param {object} options The options used for option parsing\n */\nfunction applyConnectionStringOption(obj, key, value, options) {\n  // simple key translation\n  if (key === 'journal') {\n    key = 'j';\n  } else if (key === 'wtimeoutms') {\n    key = 'wtimeout';\n  }\n\n  // more complicated translation\n  if (BOOLEAN_OPTIONS.has(key)) {\n    value = value === 'true' || value === true;\n  } else if (key === 'appname') {\n    value = decodeURIComponent(value);\n  } else if (key === 'readconcernlevel') {\n    key = 'readconcern';\n    value = { level: value };\n  }\n\n  // simple validation\n  if (key === 'compressors') {\n    value = Array.isArray(value) ? value : [value];\n\n    if (!value.every(c => c === 'snappy' || c === 'zlib')) {\n      throw new MongoParseError(\n        'Value for `compressors` must be at least one of: `snappy`, `zlib`'\n      );\n    }\n  }\n\n  if (key === 'authmechanism' && !AUTH_MECHANISMS.has(value)) {\n    throw new MongoParseError(\n      'Value for `authMechanism` must be one of: `DEFAULT`, `GSSAPI`, `PLAIN`, `MONGODB-X509`, `SCRAM-SHA-1`, `SCRAM-SHA-256`'\n    );\n  }\n\n  if (key === 'readpreference' && !ReadPreference.isValid(value)) {\n    throw new MongoParseError(\n      'Value for `readPreference` must be one of: `primary`, `primaryPreferred`, `secondary`, `secondaryPreferred`, `nearest`'\n    );\n  }\n\n  if (key === 'zlibcompressionlevel' && (value < -1 || value > 9)) {\n    throw new MongoParseError('zlibCompressionLevel must be an integer between -1 and 9');\n  }\n\n  // special cases\n  if (key === 'compressors' || key === 'zlibcompressionlevel') {\n    obj.compression = obj.compression || {};\n    obj = obj.compression;\n  }\n\n  if (key === 'authmechanismproperties') {\n    if (typeof value.SERVICE_NAME === 'string') obj.gssapiServiceName = value.SERVICE_NAME;\n    if (typeof value.SERVICE_REALM === 'string') obj.gssapiServiceRealm = value.SERVICE_REALM;\n    if (typeof value.CANONICALIZE_HOST_NAME !== 'undefined') {\n      obj.gssapiCanonicalizeHostName = value.CANONICALIZE_HOST_NAME;\n    }\n  }\n\n  // set the actual value\n  if (options.caseTranslate && CASE_TRANSLATION[key]) {\n    obj[CASE_TRANSLATION[key]] = value;\n    return;\n  }\n\n  obj[key] = value;\n}\n\nconst USERNAME_REQUIRED_MECHANISMS = new Set([\n  'GSSAPI',\n  'MONGODB-CR',\n  'PLAIN',\n  'SCRAM-SHA-1',\n  'SCRAM-SHA-256'\n]);\n\n/**\n * Modifies the parsed connection string object taking into account expectations we\n * have for authentication-related options.\n *\n * @param {object} parsed The parsed connection string result\n * @return The parsed connection string result possibly modified for auth expectations\n */\nfunction applyAuthExpectations(parsed) {\n  if (parsed.options == null) {\n    return;\n  }\n\n  const options = parsed.options;\n  const authSource = options.authsource || options.authSource;\n  if (authSource != null) {\n    parsed.auth = Object.assign({}, parsed.auth, { db: authSource });\n  }\n\n  const authMechanism = options.authmechanism || options.authMechanism;\n  if (authMechanism != null) {\n    if (\n      USERNAME_REQUIRED_MECHANISMS.has(authMechanism) &&\n      (!parsed.auth || parsed.auth.username == null)\n    ) {\n      throw new MongoParseError(`Username required for mechanism \\`${authMechanism}\\``);\n    }\n\n    if (authMechanism === 'GSSAPI') {\n      if (authSource != null && authSource !== '$external') {\n        throw new MongoParseError(\n          `Invalid source \\`${authSource}\\` for mechanism \\`${authMechanism}\\` specified.`\n        );\n      }\n\n      parsed.auth = Object.assign({}, parsed.auth, { db: '$external' });\n    }\n\n    if (authMechanism === 'MONGODB-X509') {\n      if (parsed.auth && parsed.auth.password != null) {\n        throw new MongoParseError(`Password not allowed for mechanism \\`${authMechanism}\\``);\n      }\n\n      if (authSource != null && authSource !== '$external') {\n        throw new MongoParseError(\n          `Invalid source \\`${authSource}\\` for mechanism \\`${authMechanism}\\` specified.`\n        );\n      }\n\n      parsed.auth = Object.assign({}, parsed.auth, { db: '$external' });\n    }\n\n    if (authMechanism === 'PLAIN') {\n      if (parsed.auth && parsed.auth.db == null) {\n        parsed.auth = Object.assign({}, parsed.auth, { db: '$external' });\n      }\n    }\n  }\n\n  // default to `admin` if nothing else was resolved\n  if (parsed.auth && parsed.auth.db == null) {\n    parsed.auth = Object.assign({}, parsed.auth, { db: 'admin' });\n  }\n\n  return parsed;\n}\n\n/**\n * Parses a query string according the connection string spec.\n *\n * @param {String} query The query string to parse\n * @param {object} [options] The options used for options parsing\n * @return {Object|Error} The parsed query string as an object, or an error if one was encountered\n */\nfunction parseQueryString(query, options) {\n  const result = {};\n  let parsedQueryString = qs.parse(query);\n\n  for (const key in parsedQueryString) {\n    const value = parsedQueryString[key];\n    if (value === '' || value == null) {\n      throw new MongoParseError('Incomplete key value pair for option');\n    }\n\n    const normalizedKey = key.toLowerCase();\n    const parsedValue = parseQueryStringItemValue(normalizedKey, value);\n    applyConnectionStringOption(result, normalizedKey, parsedValue, options);\n  }\n\n  // special cases for known deprecated options\n  if (result.wtimeout && result.wtimeoutms) {\n    delete result.wtimeout;\n    console.warn('Unsupported option `wtimeout` specified');\n  }\n\n  return Object.keys(result).length ? result : null;\n}\n\nconst PROTOCOL_MONGODB = 'mongodb';\nconst PROTOCOL_MONGODB_SRV = 'mongodb+srv';\nconst SUPPORTED_PROTOCOLS = [PROTOCOL_MONGODB, PROTOCOL_MONGODB_SRV];\n\n/**\n * Parses a MongoDB connection string\n *\n * @param {*} uri the MongoDB connection string to parse\n * @param {object} [options] Optional settings.\n * @param {boolean} [options.caseTranslate] Whether the parser should translate options back into camelCase after normalization\n * @param {parseCallback} callback\n */\nfunction parseConnectionString(uri, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = Object.assign({}, { caseTranslate: true }, options);\n\n  // Check for bad uris before we parse\n  try {\n    URL.parse(uri);\n  } catch (e) {\n    return callback(new MongoParseError('URI malformed, cannot be parsed'));\n  }\n\n  const cap = uri.match(HOSTS_RX);\n  if (!cap) {\n    return callback(new MongoParseError('Invalid connection string'));\n  }\n\n  const protocol = cap[1];\n  if (SUPPORTED_PROTOCOLS.indexOf(protocol) === -1) {\n    return callback(new MongoParseError('Invalid protocol provided'));\n  }\n\n  if (protocol === PROTOCOL_MONGODB_SRV) {\n    return parseSrvConnectionString(uri, options, callback);\n  }\n\n  const dbAndQuery = cap[4].split('?');\n  const db = dbAndQuery.length > 0 ? dbAndQuery[0] : null;\n  const query = dbAndQuery.length > 1 ? dbAndQuery[1] : null;\n\n  let parsedOptions;\n  try {\n    parsedOptions = parseQueryString(query, options);\n  } catch (parseError) {\n    return callback(parseError);\n  }\n\n  parsedOptions = Object.assign({}, parsedOptions, options);\n  const auth = { username: null, password: null, db: db && db !== '' ? qs.unescape(db) : null };\n  if (parsedOptions.auth) {\n    // maintain support for legacy options passed into `MongoClient`\n    if (parsedOptions.auth.username) auth.username = parsedOptions.auth.username;\n    if (parsedOptions.auth.user) auth.username = parsedOptions.auth.user;\n    if (parsedOptions.auth.password) auth.password = parsedOptions.auth.password;\n  }\n\n  if (cap[4].split('?')[0].indexOf('@') !== -1) {\n    return callback(new MongoParseError('Unescaped slash in userinfo section'));\n  }\n\n  const authorityParts = cap[3].split('@');\n  if (authorityParts.length > 2) {\n    return callback(new MongoParseError('Unescaped at-sign in authority section'));\n  }\n\n  if (authorityParts.length > 1) {\n    const authParts = authorityParts.shift().split(':');\n    if (authParts.length > 2) {\n      return callback(new MongoParseError('Unescaped colon in authority section'));\n    }\n\n    auth.username = qs.unescape(authParts[0]);\n    auth.password = authParts[1] ? qs.unescape(authParts[1]) : null;\n  }\n\n  let hostParsingError = null;\n  const hosts = authorityParts\n    .shift()\n    .split(',')\n    .map(host => {\n      let parsedHost = URL.parse(`mongodb://${host}`);\n      if (parsedHost.path === '/:') {\n        hostParsingError = new MongoParseError('Double colon in host identifier');\n        return null;\n      }\n\n      // heuristically determine if we're working with a domain socket\n      if (host.match(/\\.sock/)) {\n        parsedHost.hostname = qs.unescape(host);\n        parsedHost.port = null;\n      }\n\n      if (Number.isNaN(parsedHost.port)) {\n        hostParsingError = new MongoParseError('Invalid port (non-numeric string)');\n        return;\n      }\n\n      const result = {\n        host: parsedHost.hostname,\n        port: parsedHost.port ? parseInt(parsedHost.port) : 27017\n      };\n\n      if (result.port === 0) {\n        hostParsingError = new MongoParseError('Invalid port (zero) with hostname');\n        return;\n      }\n\n      if (result.port > 65535) {\n        hostParsingError = new MongoParseError('Invalid port (larger than 65535) with hostname');\n        return;\n      }\n\n      if (result.port < 0) {\n        hostParsingError = new MongoParseError('Invalid port (negative number)');\n        return;\n      }\n\n      return result;\n    })\n    .filter(host => !!host);\n\n  if (hostParsingError) {\n    return callback(hostParsingError);\n  }\n\n  if (hosts.length === 0 || hosts[0].host === '' || hosts[0].host === null) {\n    return callback(new MongoParseError('No hostname or hostnames provided in connection string'));\n  }\n\n  const result = {\n    hosts: hosts,\n    auth: auth.db || auth.username ? auth : null,\n    options: Object.keys(parsedOptions).length ? parsedOptions : null\n  };\n\n  if (result.auth && result.auth.db) {\n    result.defaultDatabase = result.auth.db;\n  }\n\n  try {\n    applyAuthExpectations(result);\n  } catch (authError) {\n    return callback(authError);\n  }\n\n  callback(null, result);\n}\n\nmodule.exports = parseConnectionString;\n","'use strict';\nconst EventEmitter = require('events').EventEmitter;\n\nclass Instrumentation extends EventEmitter {\n  constructor() {\n    super();\n  }\n\n  instrument(MongoClient, callback) {\n    // store a reference to the original functions\n    this.$MongoClient = MongoClient;\n    const $prototypeConnect = (this.$prototypeConnect = MongoClient.prototype.connect);\n\n    const instrumentation = this;\n    MongoClient.prototype.connect = function(callback) {\n      this.s.options.monitorCommands = true;\n      this.on('commandStarted', event => instrumentation.emit('started', event));\n      this.on('commandSucceeded', event => instrumentation.emit('succeeded', event));\n      this.on('commandFailed', event => instrumentation.emit('failed', event));\n      return $prototypeConnect.call(this, callback);\n    };\n\n    if (typeof callback === 'function') callback(null, this);\n  }\n\n  uninstrument() {\n    this.$MongoClient.prototype.connect = this.$prototypeConnect;\n  }\n}\n\nmodule.exports = Instrumentation;\n","'use strict';\n\nconst MongoNetworkError = require('mongodb-core').MongoNetworkError;\nconst mongoErrorContextSymbol = require('mongodb-core').mongoErrorContextSymbol;\n\nconst GET_MORE_NON_RESUMABLE_CODES = new Set([\n  136, // CappedPositionLost\n  237, // CursorKilled\n  11601 // Interrupted\n]);\n\n// From spec@https://github.com/mongodb/specifications/blob/35e466ddf25059cb30e4113de71cdebd3754657f/source/change-streams.rst#resumable-error:\n//\n// An error is considered resumable if it meets any of the following criteria:\n// - any error encountered which is not a server error (e.g. a timeout error or network error)\n// - any server error response from a getMore command excluding those containing the following error codes\n//   - Interrupted: 11601\n//   - CappedPositionLost: 136\n//   - CursorKilled: 237\n// - a server error response with an error message containing the substring \"not master\" or \"node is recovering\"\n//\n// An error on an aggregate command is not a resumable error. Only errors on a getMore command may be considered resumable errors.\n\nfunction isGetMoreError(error) {\n  if (error[mongoErrorContextSymbol]) {\n    return error[mongoErrorContextSymbol].isGetMore;\n  }\n}\n\nfunction isResumableError(error) {\n  if (!isGetMoreError(error)) {\n    return false;\n  }\n\n  return !!(\n    error instanceof MongoNetworkError ||\n    !GET_MORE_NON_RESUMABLE_CODES.has(error.code) ||\n    error.message.match(/not master/) ||\n    error.message.match(/node is recovering/)\n  );\n}\n\nmodule.exports = { GET_MORE_NON_RESUMABLE_CODES, isResumableError };\n","'use strict';\n\nconst common = require('./common');\nconst BulkOperationBase = common.BulkOperationBase;\nconst utils = require('../utils');\nconst toError = utils.toError;\nconst handleCallback = utils.handleCallback;\nconst BulkWriteResult = common.BulkWriteResult;\nconst Batch = common.Batch;\nconst mergeBatchResults = common.mergeBatchResults;\nconst executeOperation = utils.executeOperation;\nconst MongoWriteConcernError = require('mongodb-core').MongoWriteConcernError;\nconst handleMongoWriteConcernError = require('./common').handleMongoWriteConcernError;\nconst bson = common.bson;\n\n/**\n * Add to internal list of Operations\n *\n * @param {UnorderedBulkOperation} bulkOperation\n * @param {number} docType number indicating the document type\n * @param {object} document\n * @return {UnorderedBulkOperation}\n */\nfunction addToOperationsList(bulkOperation, docType, document) {\n  // Get the bsonSize\n  const bsonSize = bson.calculateObjectSize(document, {\n    checkKeys: false\n  });\n  // Throw error if the doc is bigger than the max BSON size\n  if (bsonSize >= bulkOperation.s.maxBatchSizeBytes)\n    throw toError('document is larger than the maximum size ' + bulkOperation.s.maxBatchSizeBytes);\n  // Holds the current batch\n  bulkOperation.s.currentBatch = null;\n  // Get the right type of batch\n  if (docType === common.INSERT) {\n    bulkOperation.s.currentBatch = bulkOperation.s.currentInsertBatch;\n  } else if (docType === common.UPDATE) {\n    bulkOperation.s.currentBatch = bulkOperation.s.currentUpdateBatch;\n  } else if (docType === common.REMOVE) {\n    bulkOperation.s.currentBatch = bulkOperation.s.currentRemoveBatch;\n  }\n\n  // Create a new batch object if we don't have a current one\n  if (bulkOperation.s.currentBatch == null)\n    bulkOperation.s.currentBatch = new Batch(docType, bulkOperation.s.currentIndex);\n\n  // Check if we need to create a new batch\n  if (\n    bulkOperation.s.currentBatch.size + 1 >= bulkOperation.s.maxWriteBatchSize ||\n    bulkOperation.s.currentBatch.sizeBytes + bsonSize >= bulkOperation.s.maxBatchSizeBytes ||\n    bulkOperation.s.currentBatch.batchType !== docType\n  ) {\n    // Save the batch to the execution stack\n    bulkOperation.s.batches.push(bulkOperation.s.currentBatch);\n\n    // Create a new batch\n    bulkOperation.s.currentBatch = new Batch(docType, bulkOperation.s.currentIndex);\n  }\n\n  // We have an array of documents\n  if (Array.isArray(document)) {\n    throw toError('operation passed in cannot be an Array');\n  } else {\n    bulkOperation.s.currentBatch.operations.push(document);\n    bulkOperation.s.currentBatch.originalIndexes.push(bulkOperation.s.currentIndex);\n    bulkOperation.s.currentIndex = bulkOperation.s.currentIndex + 1;\n  }\n\n  // Save back the current Batch to the right type\n  if (docType === common.INSERT) {\n    bulkOperation.s.currentInsertBatch = bulkOperation.s.currentBatch;\n    bulkOperation.s.bulkResult.insertedIds.push({\n      index: bulkOperation.s.bulkResult.insertedIds.length,\n      _id: document._id\n    });\n  } else if (docType === common.UPDATE) {\n    bulkOperation.s.currentUpdateBatch = bulkOperation.s.currentBatch;\n  } else if (docType === common.REMOVE) {\n    bulkOperation.s.currentRemoveBatch = bulkOperation.s.currentBatch;\n  }\n\n  // Update current batch size\n  bulkOperation.s.currentBatch.size = bulkOperation.s.currentBatch.size + 1;\n  bulkOperation.s.currentBatch.sizeBytes = bulkOperation.s.currentBatch.sizeBytes + bsonSize;\n\n  // Return bulkOperation\n  return bulkOperation;\n}\n\n/**\n * Create a new UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {number} length Get the number of operations in the bulk.\n * @return {UnorderedBulkOperation} a UnorderedBulkOperation instance.\n */\nclass UnorderedBulkOperation extends BulkOperationBase {\n  constructor(topology, collection, options) {\n    options = options || {};\n    options = Object.assign(options, { addToOperationsList });\n\n    super(topology, collection, options, false);\n  }\n\n  /**\n   * The callback format for results\n   * @callback UnorderedBulkOperation~resultCallback\n   * @param {MongoError} error An error instance representing the error during the execution.\n   * @param {BulkWriteResult} result The bulk write result.\n   */\n\n  /**\n   * Execute the ordered bulk operation\n   *\n   * @method\n   * @param {object} [options] Optional settings.\n   * @param {(number|string)} [options.w] The write concern.\n   * @param {number} [options.wtimeout] The write concern timeout.\n   * @param {boolean} [options.j=false] Specify a journal write concern.\n   * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n   * @param {UnorderedBulkOperation~resultCallback} [callback] The result callback\n   * @throws {MongoError}\n   * @return {Promise} returns Promise if no callback passed\n   */\n  execute(_writeConcern, options, callback) {\n    const ret = this.bulkExecute(_writeConcern, options, callback);\n    options = ret.options;\n    callback = ret.callback;\n\n    return executeOperation(this.s.topology, executeBatches, [this, options, callback]);\n  }\n}\n\n/**\n * Execute the command\n *\n * @param {UnorderedBulkOperation} bulkOperation\n * @param {object} batch\n * @param {object} options\n * @param {function} callback\n */\nfunction executeBatch(bulkOperation, batch, options, callback) {\n  function resultHandler(err, result) {\n    // Error is a driver related error not a bulk op error, terminate\n    if (((err && err.driver) || (err && err.message)) && !(err instanceof MongoWriteConcernError)) {\n      return handleCallback(callback, err);\n    }\n\n    // If we have and error\n    if (err) err.ok = 0;\n    if (err instanceof MongoWriteConcernError) {\n      return handleMongoWriteConcernError(batch, bulkOperation.s.bulkResult, false, err, callback);\n    }\n    handleCallback(\n      callback,\n      null,\n      mergeBatchResults(false, batch, bulkOperation.s.bulkResult, err, result)\n    );\n  }\n\n  bulkOperation.finalOptionsHandler({ options, batch, resultHandler }, callback);\n}\n\n/**\n * Execute all the commands\n *\n * @param {UnorderedBulkOperation} bulkOperation\n * @param {object} options\n * @param {function} callback\n */\nfunction executeBatches(bulkOperation, options, callback) {\n  let numberOfCommandsToExecute = bulkOperation.s.batches.length;\n  // Execute over all the batches\n  for (let i = 0; i < bulkOperation.s.batches.length; i++) {\n    executeBatch(bulkOperation, bulkOperation.s.batches[i], options, function(err) {\n      // Count down the number of commands left to execute\n      numberOfCommandsToExecute = numberOfCommandsToExecute - 1;\n\n      // Execute\n      if (numberOfCommandsToExecute === 0) {\n        // Driver level error\n        if (err) return handleCallback(callback, err);\n\n        const writeResult = new BulkWriteResult(bulkOperation.s.bulkResult);\n        if (bulkOperation.handleWriteError(callback, writeResult)) return;\n\n        return handleCallback(callback, null, writeResult);\n      }\n    });\n  }\n}\n\n/**\n * Returns an unordered batch object\n * @ignore\n */\nfunction initializeUnorderedBulkOp(topology, collection, options) {\n  return new UnorderedBulkOperation(topology, collection, options);\n}\n\ninitializeUnorderedBulkOp.UnorderedBulkOperation = UnorderedBulkOperation;\nmodule.exports = initializeUnorderedBulkOp;\nmodule.exports.Bulk = UnorderedBulkOperation;\n","'use strict';\n\nconst common = require('./common');\nconst BulkOperationBase = common.BulkOperationBase;\nconst utils = require('../utils');\nconst toError = utils.toError;\nconst handleCallback = utils.handleCallback;\nconst BulkWriteResult = common.BulkWriteResult;\nconst Batch = common.Batch;\nconst mergeBatchResults = common.mergeBatchResults;\nconst executeOperation = utils.executeOperation;\nconst MongoWriteConcernError = require('mongodb-core').MongoWriteConcernError;\nconst handleMongoWriteConcernError = require('./common').handleMongoWriteConcernError;\nconst bson = common.bson;\n\n/**\n * Add to internal list of Operations\n *\n * @param {OrderedBulkOperation} bulkOperation\n * @param {number} docType number indicating the document type\n * @param {object} document\n * @return {OrderedBulkOperation}\n */\nfunction addToOperationsList(bulkOperation, docType, document) {\n  // Get the bsonSize\n  const bsonSize = bson.calculateObjectSize(document, {\n    checkKeys: false\n  });\n\n  // Throw error if the doc is bigger than the max BSON size\n  if (bsonSize >= bulkOperation.s.maxBatchSizeBytes)\n    throw toError('document is larger than the maximum size ' + bulkOperation.s.maxBatchSizeBytes);\n\n  // Create a new batch object if we don't have a current one\n  if (bulkOperation.s.currentBatch == null)\n    bulkOperation.s.currentBatch = new Batch(docType, bulkOperation.s.currentIndex);\n\n  // Check if we need to create a new batch\n  if (\n    bulkOperation.s.currentBatchSize + 1 >= bulkOperation.s.maxWriteBatchSize ||\n    bulkOperation.s.currentBatchSizeBytes + bulkOperation.s.currentBatchSizeBytes >=\n      bulkOperation.s.maxBatchSizeBytes ||\n    bulkOperation.s.currentBatch.batchType !== docType\n  ) {\n    // Save the batch to the execution stack\n    bulkOperation.s.batches.push(bulkOperation.s.currentBatch);\n\n    // Create a new batch\n    bulkOperation.s.currentBatch = new Batch(docType, bulkOperation.s.currentIndex);\n\n    // Reset the current size trackers\n    bulkOperation.s.currentBatchSize = 0;\n    bulkOperation.s.currentBatchSizeBytes = 0;\n  } else {\n    // Update current batch size\n    bulkOperation.s.currentBatchSize = bulkOperation.s.currentBatchSize + 1;\n    bulkOperation.s.currentBatchSizeBytes = bulkOperation.s.currentBatchSizeBytes + bsonSize;\n  }\n\n  if (docType === common.INSERT) {\n    bulkOperation.s.bulkResult.insertedIds.push({\n      index: bulkOperation.s.currentIndex,\n      _id: document._id\n    });\n  }\n\n  // We have an array of documents\n  if (Array.isArray(document)) {\n    throw toError('operation passed in cannot be an Array');\n  } else {\n    bulkOperation.s.currentBatch.originalIndexes.push(bulkOperation.s.currentIndex);\n    bulkOperation.s.currentBatch.operations.push(document);\n    bulkOperation.s.currentBatchSizeBytes = bulkOperation.s.currentBatchSizeBytes + bsonSize;\n    bulkOperation.s.currentIndex = bulkOperation.s.currentIndex + 1;\n  }\n\n  // Return bulkOperation\n  return bulkOperation;\n}\n\n/**\n * Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {number} length Get the number of operations in the bulk.\n * @return {OrderedBulkOperation} a OrderedBulkOperation instance.\n */\n\nclass OrderedBulkOperation extends BulkOperationBase {\n  constructor(topology, collection, options) {\n    options = options || {};\n    options = Object.assign(options, { addToOperationsList });\n\n    super(topology, collection, options, true);\n  }\n\n  /**\n   * The callback format for results\n   * @callback OrderedBulkOperation~resultCallback\n   * @param {MongoError} error An error instance representing the error during the execution.\n   * @param {BulkWriteResult} result The bulk write result.\n   */\n\n  /**\n   * Execute the ordered bulk operation\n   *\n   * @method\n   * @param {object} [options] Optional settings.\n   * @param {(number|string)} [options.w] The write concern.\n   * @param {number} [options.wtimeout] The write concern timeout.\n   * @param {boolean} [options.j=false] Specify a journal write concern.\n   * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n   * @param {OrderedBulkOperation~resultCallback} [callback] The result callback\n   * @throws {MongoError}\n   * @return {Promise} returns Promise if no callback passed\n   */\n  execute(_writeConcern, options, callback) {\n    const ret = this.bulkExecute(_writeConcern, options, callback);\n    options = ret.options;\n    callback = ret.callback;\n\n    return executeOperation(this.s.topology, executeCommands, [this, options, callback]);\n  }\n}\n\n/**\n * Execute next write command in a chain\n *\n * @param {OrderedBulkOperation} bulkOperation\n * @param {object} options\n * @param {function} callback\n */\nfunction executeCommands(bulkOperation, options, callback) {\n  if (bulkOperation.s.batches.length === 0) {\n    return handleCallback(callback, null, new BulkWriteResult(bulkOperation.s.bulkResult));\n  }\n\n  // Ordered execution of the command\n  const batch = bulkOperation.s.batches.shift();\n\n  function resultHandler(err, result) {\n    // Error is a driver related error not a bulk op error, terminate\n    if (((err && err.driver) || (err && err.message)) && !(err instanceof MongoWriteConcernError)) {\n      return handleCallback(callback, err);\n    }\n\n    // If we have and error\n    if (err) err.ok = 0;\n    if (err instanceof MongoWriteConcernError) {\n      return handleMongoWriteConcernError(batch, bulkOperation.s.bulkResult, true, err, callback);\n    }\n\n    // Merge the results together\n    const writeResult = new BulkWriteResult(bulkOperation.s.bulkResult);\n    const mergeResult = mergeBatchResults(true, batch, bulkOperation.s.bulkResult, err, result);\n    if (mergeResult != null) {\n      return handleCallback(callback, null, writeResult);\n    }\n\n    if (bulkOperation.handleWriteError(callback, writeResult)) return;\n\n    // Execute the next command in line\n    executeCommands(bulkOperation, options, callback);\n  }\n\n  bulkOperation.finalOptionsHandler({ options, batch, resultHandler }, callback);\n}\n\n/**\n * Returns an unordered batch object\n * @ignore\n */\nfunction initializeOrderedBulkOp(topology, collection, options) {\n  return new OrderedBulkOperation(topology, collection, options);\n}\n\ninitializeOrderedBulkOp.OrderedBulkOperation = OrderedBulkOperation;\nmodule.exports = initializeOrderedBulkOp;\nmodule.exports.Bulk = OrderedBulkOperation;\n","'use strict';\n\nvar shallowClone = require('./utils').shallowClone,\n  handleCallback = require('./utils').handleCallback,\n  MongoError = require('mongodb-core').MongoError,\n  f = require('util').format;\n\nvar authenticate = function(client, username, password, options, callback) {\n  // Did the user destroy the topology\n  if (client.topology && client.topology.isDestroyed())\n    return callback(new MongoError('topology was destroyed'));\n\n  // the default db to authenticate against is 'self'\n  // if authententicate is called from a retry context, it may be another one, like admin\n  var authdb = options.dbName;\n  authdb = options.authdb ? options.authdb : authdb;\n  authdb = options.authSource ? options.authSource : authdb;\n\n  // Callback\n  var _callback = function(err, result) {\n    if (client.listeners('authenticated').length > 0) {\n      client.emit('authenticated', err, result);\n    }\n\n    // Return to caller\n    handleCallback(callback, err, result);\n  };\n\n  // authMechanism\n  var authMechanism = options.authMechanism || '';\n  authMechanism = authMechanism.toUpperCase();\n\n  // If classic auth delegate to auth command\n  if (authMechanism === 'MONGODB-CR') {\n    client.topology.auth('mongocr', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'PLAIN') {\n    client.topology.auth('plain', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'MONGODB-X509') {\n    client.topology.auth('x509', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'SCRAM-SHA-1') {\n    client.topology.auth('scram-sha-1', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'SCRAM-SHA-256') {\n    client.topology.auth('scram-sha-256', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else if (authMechanism === 'GSSAPI') {\n    if (process.platform === 'win32') {\n      client.topology.auth('sspi', authdb, username, password, options, function(err) {\n        if (err) return handleCallback(callback, err, false);\n        _callback(null, true);\n      });\n    } else {\n      client.topology.auth('gssapi', authdb, username, password, options, function(err) {\n        if (err) return handleCallback(callback, err, false);\n        _callback(null, true);\n      });\n    }\n  } else if (authMechanism === 'DEFAULT') {\n    client.topology.auth('default', authdb, username, password, function(err) {\n      if (err) return handleCallback(callback, err, false);\n      _callback(null, true);\n    });\n  } else {\n    handleCallback(\n      callback,\n      MongoError.create({\n        message: f('authentication mechanism %s not supported', options.authMechanism),\n        driver: true\n      })\n    );\n  }\n};\n\nmodule.exports = function(self, username, password, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  // Shallow copy the options\n  options = shallowClone(options);\n\n  // Set default mechanism\n  if (!options.authMechanism) {\n    options.authMechanism = 'DEFAULT';\n  } else if (\n    options.authMechanism !== 'GSSAPI' &&\n    options.authMechanism !== 'DEFAULT' &&\n    options.authMechanism !== 'MONGODB-CR' &&\n    options.authMechanism !== 'MONGODB-X509' &&\n    options.authMechanism !== 'SCRAM-SHA-1' &&\n    options.authMechanism !== 'SCRAM-SHA-256' &&\n    options.authMechanism !== 'PLAIN'\n  ) {\n    return handleCallback(\n      callback,\n      MongoError.create({\n        message:\n          'only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1 is supported by authMechanism',\n        driver: true\n      })\n    );\n  }\n\n  // If we have a callback fallback\n  if (typeof callback === 'function')\n    return authenticate(self, username, password, options, function(err, r) {\n      // Support failed auth method\n      if (err && err.message && err.message.indexOf('saslStart') !== -1) err.code = 59;\n      // Reject error\n      if (err) return callback(err, r);\n      callback(null, r);\n    });\n\n  // Return a promise\n  return new self.s.promiseLibrary(function(resolve, reject) {\n    authenticate(self, username, password, options, function(err, r) {\n      // Support failed auth method\n      if (err && err.message && err.message.indexOf('saslStart') !== -1) err.code = 59;\n      // Reject error\n      if (err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n","'use strict';\n\nconst ReadPreference = require('mongodb-core').ReadPreference,\n  parser = require('url'),\n  f = require('util').format,\n  Logger = require('mongodb-core').Logger,\n  dns = require('dns');\n\nmodule.exports = function(url, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  let result;\n  try {\n    result = parser.parse(url, true);\n  } catch (e) {\n    return callback(new Error('URL malformed, cannot be parsed'));\n  }\n\n  if (result.protocol !== 'mongodb:' && result.protocol !== 'mongodb+srv:') {\n    return callback(new Error('Invalid schema, expected `mongodb` or `mongodb+srv`'));\n  }\n\n  if (result.protocol === 'mongodb:') {\n    return parseHandler(url, options, callback);\n  }\n\n  // Otherwise parse this as an SRV record\n  if (result.hostname.split('.').length < 3) {\n    return callback(new Error('URI does not have hostname, domain name and tld'));\n  }\n\n  result.domainLength = result.hostname.split('.').length;\n\n  if (result.pathname && result.pathname.match(',')) {\n    return callback(new Error('Invalid URI, cannot contain multiple hostnames'));\n  }\n\n  if (result.port) {\n    return callback(new Error('Ports not accepted with `mongodb+srv` URIs'));\n  }\n\n  let srvAddress = `_mongodb._tcp.${result.host}`;\n  dns.resolveSrv(srvAddress, function(err, addresses) {\n    if (err) return callback(err);\n\n    if (addresses.length === 0) {\n      return callback(new Error('No addresses found at host'));\n    }\n\n    for (let i = 0; i < addresses.length; i++) {\n      if (!matchesParentDomain(addresses[i].name, result.hostname, result.domainLength)) {\n        return callback(new Error('Server record does not share hostname with parent URI'));\n      }\n    }\n\n    let base = result.auth ? `mongodb://${result.auth}@` : `mongodb://`;\n    let connectionStrings = addresses.map(function(address, i) {\n      if (i === 0) return `${base}${address.name}:${address.port}`;\n      else return `${address.name}:${address.port}`;\n    });\n\n    let connectionString = connectionStrings.join(',') + '/';\n    let connectionStringOptions = [];\n\n    // Add the default database if needed\n    if (result.path) {\n      let defaultDb = result.path.slice(1);\n      if (defaultDb.indexOf('?') !== -1) {\n        defaultDb = defaultDb.slice(0, defaultDb.indexOf('?'));\n      }\n\n      connectionString += defaultDb;\n    }\n\n    // Default to SSL true\n    if (!options.ssl && !result.search) {\n      connectionStringOptions.push('ssl=true');\n    } else if (!options.ssl && result.search && !result.search.match('ssl')) {\n      connectionStringOptions.push('ssl=true');\n    }\n\n    // Keep original uri options\n    if (result.search) {\n      connectionStringOptions.push(result.search.replace('?', ''));\n    }\n\n    dns.resolveTxt(result.host, function(err, record) {\n      if (err && err.code !== 'ENODATA') return callback(err);\n      if (err && err.code === 'ENODATA') record = null;\n\n      if (record) {\n        if (record.length > 1) {\n          return callback(new Error('Multiple text records not allowed'));\n        }\n\n        record = record[0];\n        if (record.length > 1) record = record.join('');\n        else record = record[0];\n\n        if (!record.includes('authSource') && !record.includes('replicaSet')) {\n          return callback(new Error('Text record must only set `authSource` or `replicaSet`'));\n        }\n\n        connectionStringOptions.push(record);\n      }\n\n      // Add any options to the connection string\n      if (connectionStringOptions.length) {\n        connectionString += `?${connectionStringOptions.join('&')}`;\n      }\n\n      parseHandler(connectionString, options, callback);\n    });\n  });\n};\n\nfunction matchesParentDomain(srvAddress, parentDomain) {\n  let regex = /^.*?\\./;\n  let srv = `.${srvAddress.replace(regex, '')}`;\n  let parent = `.${parentDomain.replace(regex, '')}`;\n  if (srv.endsWith(parent)) return true;\n  else return false;\n}\n\nfunction parseHandler(address, options, callback) {\n  let result, err;\n  try {\n    result = parseConnectionString(address, options);\n  } catch (e) {\n    err = e;\n  }\n\n  return err ? callback(err, null) : callback(null, result);\n}\n\nfunction parseConnectionString(url, options) {\n  // Variables\n  let connection_part = '';\n  let auth_part = '';\n  let query_string_part = '';\n  let dbName = 'admin';\n\n  // Url parser result\n  let result = parser.parse(url, true);\n  if ((result.hostname == null || result.hostname === '') && url.indexOf('.sock') === -1) {\n    throw new Error('No hostname or hostnames provided in connection string');\n  }\n\n  if (result.port === '0') {\n    throw new Error('Invalid port (zero) with hostname');\n  }\n\n  if (!isNaN(parseInt(result.port, 10)) && parseInt(result.port, 10) > 65535) {\n    throw new Error('Invalid port (larger than 65535) with hostname');\n  }\n\n  if (\n    result.path &&\n    result.path.length > 0 &&\n    result.path[0] !== '/' &&\n    url.indexOf('.sock') === -1\n  ) {\n    throw new Error('Missing delimiting slash between hosts and options');\n  }\n\n  if (result.query) {\n    for (let name in result.query) {\n      if (name.indexOf('::') !== -1) {\n        throw new Error('Double colon in host identifier');\n      }\n\n      if (result.query[name] === '') {\n        throw new Error('Query parameter ' + name + ' is an incomplete value pair');\n      }\n    }\n  }\n\n  if (result.auth) {\n    let parts = result.auth.split(':');\n    if (url.indexOf(result.auth) !== -1 && parts.length > 2) {\n      throw new Error('Username with password containing an unescaped colon');\n    }\n\n    if (url.indexOf(result.auth) !== -1 && result.auth.indexOf('@') !== -1) {\n      throw new Error('Username containing an unescaped at-sign');\n    }\n  }\n\n  // Remove query\n  let clean = url.split('?').shift();\n\n  // Extract the list of hosts\n  let strings = clean.split(',');\n  let hosts = [];\n\n  for (let i = 0; i < strings.length; i++) {\n    let hostString = strings[i];\n\n    if (hostString.indexOf('mongodb') !== -1) {\n      if (hostString.indexOf('@') !== -1) {\n        hosts.push(hostString.split('@').pop());\n      } else {\n        hosts.push(hostString.substr('mongodb://'.length));\n      }\n    } else if (hostString.indexOf('/') !== -1) {\n      hosts.push(hostString.split('/').shift());\n    } else if (hostString.indexOf('/') === -1) {\n      hosts.push(hostString.trim());\n    }\n  }\n\n  for (let i = 0; i < hosts.length; i++) {\n    let r = parser.parse(f('mongodb://%s', hosts[i].trim()));\n    if (r.path && r.path.indexOf('.sock') !== -1) continue;\n    if (r.path && r.path.indexOf(':') !== -1) {\n      // Not connecting to a socket so check for an extra slash in the hostname.\n      // Using String#split as perf is better than match.\n      if (r.path.split('/').length > 1 && r.path.indexOf('::') === -1) {\n        throw new Error('Slash in host identifier');\n      } else {\n        throw new Error('Double colon in host identifier');\n      }\n    }\n  }\n\n  // If we have a ? mark cut the query elements off\n  if (url.indexOf('?') !== -1) {\n    query_string_part = url.substr(url.indexOf('?') + 1);\n    connection_part = url.substring('mongodb://'.length, url.indexOf('?'));\n  } else {\n    connection_part = url.substring('mongodb://'.length);\n  }\n\n  // Check if we have auth params\n  if (connection_part.indexOf('@') !== -1) {\n    auth_part = connection_part.split('@')[0];\n    connection_part = connection_part.split('@')[1];\n  }\n\n  // Check there is not more than one unescaped slash\n  if (connection_part.split('/').length > 2) {\n    throw new Error(\n      \"Unsupported host '\" +\n        connection_part.split('?')[0] +\n        \"', hosts must be URL encoded and contain at most one unencoded slash\"\n    );\n  }\n\n  // Check if the connection string has a db\n  if (connection_part.indexOf('.sock') !== -1) {\n    if (connection_part.indexOf('.sock/') !== -1) {\n      dbName = connection_part.split('.sock/')[1];\n      // Check if multiple database names provided, or just an illegal trailing backslash\n      if (dbName.indexOf('/') !== -1) {\n        if (dbName.split('/').length === 2 && dbName.split('/')[1].length === 0) {\n          throw new Error('Illegal trailing backslash after database name');\n        }\n        throw new Error('More than 1 database name in URL');\n      }\n      connection_part = connection_part.split(\n        '/',\n        connection_part.indexOf('.sock') + '.sock'.length\n      );\n    }\n  } else if (connection_part.indexOf('/') !== -1) {\n    // Check if multiple database names provided, or just an illegal trailing backslash\n    if (connection_part.split('/').length > 2) {\n      if (connection_part.split('/')[2].length === 0) {\n        throw new Error('Illegal trailing backslash after database name');\n      }\n      throw new Error('More than 1 database name in URL');\n    }\n    dbName = connection_part.split('/')[1];\n    connection_part = connection_part.split('/')[0];\n  }\n\n  // URI decode the host information\n  connection_part = decodeURIComponent(connection_part);\n\n  // Result object\n  let object = {};\n\n  // Pick apart the authentication part of the string\n  let authPart = auth_part || '';\n  let auth = authPart.split(':', 2);\n\n  // Decode the authentication URI components and verify integrity\n  let user = decodeURIComponent(auth[0]);\n  if (auth[0] !== encodeURIComponent(user)) {\n    throw new Error('Username contains an illegal unescaped character');\n  }\n  auth[0] = user;\n\n  if (auth[1]) {\n    let pass = decodeURIComponent(auth[1]);\n    if (auth[1] !== encodeURIComponent(pass)) {\n      throw new Error('Password contains an illegal unescaped character');\n    }\n    auth[1] = pass;\n  }\n\n  // Add auth to final object if we have 2 elements\n  if (auth.length === 2) object.auth = { user: auth[0], password: auth[1] };\n  // if user provided auth options, use that\n  if (options && options.auth != null) object.auth = options.auth;\n\n  // Variables used for temporary storage\n  let hostPart;\n  let urlOptions;\n  let servers;\n  let compression;\n  let serverOptions = { socketOptions: {} };\n  let dbOptions = { read_preference_tags: [] };\n  let replSetServersOptions = { socketOptions: {} };\n  let mongosOptions = { socketOptions: {} };\n  // Add server options to final object\n  object.server_options = serverOptions;\n  object.db_options = dbOptions;\n  object.rs_options = replSetServersOptions;\n  object.mongos_options = mongosOptions;\n\n  // Let's check if we are using a domain socket\n  if (url.match(/\\.sock/)) {\n    // Split out the socket part\n    let domainSocket = url.substring(\n      url.indexOf('mongodb://') + 'mongodb://'.length,\n      url.lastIndexOf('.sock') + '.sock'.length\n    );\n    // Clean out any auth stuff if any\n    if (domainSocket.indexOf('@') !== -1) domainSocket = domainSocket.split('@')[1];\n    domainSocket = decodeURIComponent(domainSocket);\n    servers = [{ domain_socket: domainSocket }];\n  } else {\n    // Split up the db\n    hostPart = connection_part;\n    // Deduplicate servers\n    let deduplicatedServers = {};\n\n    // Parse all server results\n    servers = hostPart\n      .split(',')\n      .map(function(h) {\n        let _host, _port, ipv6match;\n        //check if it matches [IPv6]:port, where the port number is optional\n        if ((ipv6match = /\\[([^\\]]+)\\](?::(.+))?/.exec(h))) {\n          _host = ipv6match[1];\n          _port = parseInt(ipv6match[2], 10) || 27017;\n        } else {\n          //otherwise assume it's IPv4, or plain hostname\n          let hostPort = h.split(':', 2);\n          _host = hostPort[0] || 'localhost';\n          _port = hostPort[1] != null ? parseInt(hostPort[1], 10) : 27017;\n          // Check for localhost?safe=true style case\n          if (_host.indexOf('?') !== -1) _host = _host.split(/\\?/)[0];\n        }\n\n        // No entry returned for duplicate servr\n        if (deduplicatedServers[_host + '_' + _port]) return null;\n        deduplicatedServers[_host + '_' + _port] = 1;\n\n        // Return the mapped object\n        return { host: _host, port: _port };\n      })\n      .filter(function(x) {\n        return x != null;\n      });\n  }\n\n  // Get the db name\n  object.dbName = dbName || 'admin';\n  // Split up all the options\n  urlOptions = (query_string_part || '').split(/[&;]/);\n  // Ugh, we have to figure out which options go to which constructor manually.\n  urlOptions.forEach(function(opt) {\n    if (!opt) return;\n    var splitOpt = opt.split('='),\n      name = splitOpt[0],\n      value = splitOpt[1];\n\n    // Options implementations\n    switch (name) {\n      case 'slaveOk':\n      case 'slave_ok':\n        serverOptions.slave_ok = value === 'true';\n        dbOptions.slaveOk = value === 'true';\n        break;\n      case 'maxPoolSize':\n      case 'poolSize':\n        serverOptions.poolSize = parseInt(value, 10);\n        replSetServersOptions.poolSize = parseInt(value, 10);\n        break;\n      case 'appname':\n        object.appname = decodeURIComponent(value);\n        break;\n      case 'autoReconnect':\n      case 'auto_reconnect':\n        serverOptions.auto_reconnect = value === 'true';\n        break;\n      case 'ssl':\n        if (value === 'prefer') {\n          serverOptions.ssl = value;\n          replSetServersOptions.ssl = value;\n          mongosOptions.ssl = value;\n          break;\n        }\n        serverOptions.ssl = value === 'true';\n        replSetServersOptions.ssl = value === 'true';\n        mongosOptions.ssl = value === 'true';\n        break;\n      case 'sslValidate':\n        serverOptions.sslValidate = value === 'true';\n        replSetServersOptions.sslValidate = value === 'true';\n        mongosOptions.sslValidate = value === 'true';\n        break;\n      case 'replicaSet':\n      case 'rs_name':\n        replSetServersOptions.rs_name = value;\n        break;\n      case 'reconnectWait':\n        replSetServersOptions.reconnectWait = parseInt(value, 10);\n        break;\n      case 'retries':\n        replSetServersOptions.retries = parseInt(value, 10);\n        break;\n      case 'readSecondary':\n      case 'read_secondary':\n        replSetServersOptions.read_secondary = value === 'true';\n        break;\n      case 'fsync':\n        dbOptions.fsync = value === 'true';\n        break;\n      case 'journal':\n        dbOptions.j = value === 'true';\n        break;\n      case 'safe':\n        dbOptions.safe = value === 'true';\n        break;\n      case 'nativeParser':\n      case 'native_parser':\n        dbOptions.native_parser = value === 'true';\n        break;\n      case 'readConcernLevel':\n        dbOptions.readConcern = { level: value };\n        break;\n      case 'connectTimeoutMS':\n        serverOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        break;\n      case 'socketTimeoutMS':\n        serverOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        mongosOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        break;\n      case 'w':\n        dbOptions.w = parseInt(value, 10);\n        if (isNaN(dbOptions.w)) dbOptions.w = value;\n        break;\n      case 'authSource':\n        dbOptions.authSource = value;\n        break;\n      case 'gssapiServiceName':\n        dbOptions.gssapiServiceName = value;\n        break;\n      case 'authMechanism':\n        if (value === 'GSSAPI') {\n          // If no password provided decode only the principal\n          if (object.auth == null) {\n            let urlDecodeAuthPart = decodeURIComponent(authPart);\n            if (urlDecodeAuthPart.indexOf('@') === -1)\n              throw new Error('GSSAPI requires a provided principal');\n            object.auth = { user: urlDecodeAuthPart, password: null };\n          } else {\n            object.auth.user = decodeURIComponent(object.auth.user);\n          }\n        } else if (value === 'MONGODB-X509') {\n          object.auth = { user: decodeURIComponent(authPart) };\n        }\n\n        // Only support GSSAPI or MONGODB-CR for now\n        if (\n          value !== 'GSSAPI' &&\n          value !== 'MONGODB-X509' &&\n          value !== 'MONGODB-CR' &&\n          value !== 'DEFAULT' &&\n          value !== 'SCRAM-SHA-1' &&\n          value !== 'SCRAM-SHA-256' &&\n          value !== 'PLAIN'\n        )\n          throw new Error(\n            'Only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, or SCRAM-SHA-1 is supported by authMechanism'\n          );\n\n        // Authentication mechanism\n        dbOptions.authMechanism = value;\n        break;\n      case 'authMechanismProperties':\n        {\n          // Split up into key, value pairs\n          let values = value.split(',');\n          let o = {};\n          // For each value split into key, value\n          values.forEach(function(x) {\n            let v = x.split(':');\n            o[v[0]] = v[1];\n          });\n\n          // Set all authMechanismProperties\n          dbOptions.authMechanismProperties = o;\n          // Set the service name value\n          if (typeof o.SERVICE_NAME === 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;\n          if (typeof o.SERVICE_REALM === 'string') dbOptions.gssapiServiceRealm = o.SERVICE_REALM;\n          if (typeof o.CANONICALIZE_HOST_NAME === 'string')\n            dbOptions.gssapiCanonicalizeHostName =\n              o.CANONICALIZE_HOST_NAME === 'true' ? true : false;\n        }\n        break;\n      case 'wtimeoutMS':\n        dbOptions.wtimeout = parseInt(value, 10);\n        break;\n      case 'readPreference':\n        if (!ReadPreference.isValid(value))\n          throw new Error(\n            'readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest'\n          );\n        dbOptions.readPreference = value;\n        break;\n      case 'maxStalenessSeconds':\n        dbOptions.maxStalenessSeconds = parseInt(value, 10);\n        break;\n      case 'readPreferenceTags':\n        {\n          // Decode the value\n          value = decodeURIComponent(value);\n          // Contains the tag object\n          let tagObject = {};\n          if (value == null || value === '') {\n            dbOptions.read_preference_tags.push(tagObject);\n            break;\n          }\n\n          // Split up the tags\n          let tags = value.split(/,/);\n          for (let i = 0; i < tags.length; i++) {\n            let parts = tags[i].trim().split(/:/);\n            tagObject[parts[0]] = parts[1];\n          }\n\n          // Set the preferences tags\n          dbOptions.read_preference_tags.push(tagObject);\n        }\n        break;\n      case 'compressors':\n        {\n          compression = serverOptions.compression || {};\n          let compressors = value.split(',');\n          if (\n            !compressors.every(function(compressor) {\n              return compressor === 'snappy' || compressor === 'zlib';\n            })\n          ) {\n            throw new Error('Compressors must be at least one of snappy or zlib');\n          }\n\n          compression.compressors = compressors;\n          serverOptions.compression = compression;\n        }\n        break;\n      case 'zlibCompressionLevel':\n        {\n          compression = serverOptions.compression || {};\n          let zlibCompressionLevel = parseInt(value, 10);\n          if (zlibCompressionLevel < -1 || zlibCompressionLevel > 9) {\n            throw new Error('zlibCompressionLevel must be an integer between -1 and 9');\n          }\n\n          compression.zlibCompressionLevel = zlibCompressionLevel;\n          serverOptions.compression = compression;\n        }\n        break;\n      case 'retryWrites':\n        dbOptions.retryWrites = value === 'true';\n        break;\n      case 'minSize':\n        dbOptions.minSize = parseInt(value, 10);\n        break;\n      default:\n        {\n          let logger = Logger('URL Parser');\n          logger.warn(`${name} is not supported as a connection string option`);\n        }\n        break;\n    }\n  });\n\n  // No tags: should be null (not [])\n  if (dbOptions.read_preference_tags.length === 0) {\n    dbOptions.read_preference_tags = null;\n  }\n\n  // Validate if there are an invalid write concern combinations\n  if (\n    (dbOptions.w === -1 || dbOptions.w === 0) &&\n    (dbOptions.journal === true || dbOptions.fsync === true || dbOptions.safe === true)\n  )\n    throw new Error('w set to -1 or 0 cannot be combined with safe/w/journal/fsync');\n\n  // If no read preference set it to primary\n  if (!dbOptions.readPreference) {\n    dbOptions.readPreference = 'primary';\n  }\n\n  // make sure that user-provided options are applied with priority\n  dbOptions = Object.assign(dbOptions, options);\n\n  // Add servers to result\n  object.servers = servers;\n\n  // Returned parsed object\n  return object;\n}\n","'use strict';\n\n/**\n * @fileOverview GridFS is a tool for MongoDB to store files to the database.\n * Because of the restrictions of the object size the database can hold, a\n * facility to split a file into several chunks is needed. The {@link GridStore}\n * class offers a simplified api to interact with files while managing the\n * chunks of split files behind the scenes. More information about GridFS can be\n * found <a href=\"http://www.mongodb.org/display/DOCS/GridFS\">here</a>.\n *\n * @example\n * const MongoClient = require('mongodb').MongoClient;\n * const GridStore = require('mongodb').GridStore;\n * const ObjectID = require('mongodb').ObjectID;\n * const test = require('assert');\n * // Connection url\n * const url = 'mongodb://localhost:27017';\n * // Database Name\n * const dbName = 'test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, client) {\n *   const db = client.db(dbName);\n *   const gridStore = new GridStore(db, null, \"w\");\n *   gridStore.open(function(err, gridStore) {\n *     gridStore.write(\"hello world!\", function(err, gridStore) {\n *       gridStore.close(function(err, result) {\n *         // Let's read the file using object Id\n *         GridStore.read(db, result._id, function(err, data) {\n *           test.equal('hello world!', data);\n *           client.close();\n *           test.done();\n *         });\n *       });\n *     });\n *   });\n * });\n */\nconst Chunk = require('./chunk');\nconst ObjectID = require('mongodb-core').BSON.ObjectID;\nconst ReadPreference = require('mongodb-core').ReadPreference;\nconst Buffer = require('safe-buffer').Buffer;\nconst fs = require('fs');\nconst f = require('util').format;\nconst util = require('util');\nconst MongoError = require('mongodb-core').MongoError;\nconst inherits = util.inherits;\nconst Duplex = require('stream').Duplex;\nconst shallowClone = require('../utils').shallowClone;\nconst executeOperation = require('../utils').executeOperation;\nconst deprecate = require('util').deprecate;\n\nvar REFERENCE_BY_FILENAME = 0,\n  REFERENCE_BY_ID = 1;\n\nconst deprecationFn = deprecate(() => {},\n'GridStore is deprecated, and will be removed in a future version. Please use GridFSBucket instead');\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external Duplex\n */\n\n/**\n * Create a new GridStore instance\n *\n * Modes\n *  - **\"r\"** - read only. This is the default mode.\n *  - **\"w\"** - write in truncate mode. Existing data will be overwriten.\n *\n * @class\n * @param {Db} db A database instance to interact with.\n * @param {object} [id] optional unique id for this file\n * @param {string} [filename] optional filename for this file, no unique constrain on the field\n * @param {string} mode set the mode for this file.\n * @param {object} [options] Optional settings.\n * @param {(number|string)} [options.w] The write concern.\n * @param {number} [options.wtimeout] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {string} [options.root] Root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {string} [options.content_type] MIME type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n * @param {number} [options.chunk_size=261120] Size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n * @param {object} [options.metadata] Arbitrary data the user wants to store.\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @property {number} chunkSize Get the gridstore chunk size.\n * @property {number} md5 The md5 checksum for this file.\n * @property {number} chunkNumber The current chunk number the gridstore has materialized into memory\n * @return {GridStore} a GridStore instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStore = function GridStore(db, id, filename, mode, options) {\n  deprecationFn();\n  if (!(this instanceof GridStore)) return new GridStore(db, id, filename, mode, options);\n  this.db = db;\n\n  // Handle options\n  if (typeof options === 'undefined') options = {};\n  // Handle mode\n  if (typeof mode === 'undefined') {\n    mode = filename;\n    filename = undefined;\n  } else if (typeof mode === 'object') {\n    options = mode;\n    mode = filename;\n    filename = undefined;\n  }\n\n  if (id && id._bsontype === 'ObjectID') {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  } else if (typeof filename === 'undefined') {\n    this.referenceBy = REFERENCE_BY_FILENAME;\n    this.filename = id;\n    if (mode.indexOf('w') != null) {\n      this.fileId = new ObjectID();\n    }\n  } else {\n    this.referenceBy = REFERENCE_BY_ID;\n    this.fileId = id;\n    this.filename = filename;\n  }\n\n  // Set up the rest\n  this.mode = mode == null ? 'r' : mode;\n  this.options = options || {};\n\n  // Opened\n  this.isOpen = false;\n\n  // Set the root if overridden\n  this.root =\n    this.options['root'] == null ? GridStore.DEFAULT_ROOT_COLLECTION : this.options['root'];\n  this.position = 0;\n  this.readPreference =\n    this.options.readPreference || db.options.readPreference || ReadPreference.primary;\n  this.writeConcern = _getWriteConcern(db, this.options);\n  // Set default chunk size\n  this.internalChunkSize =\n    this.options['chunkSize'] == null ? Chunk.DEFAULT_CHUNK_SIZE : this.options['chunkSize'];\n\n  // Get the promiseLibrary\n  var promiseLibrary = this.options.promiseLibrary || Promise;\n\n  // Set the promiseLibrary\n  this.promiseLibrary = promiseLibrary;\n\n  Object.defineProperty(this, 'chunkSize', {\n    enumerable: true,\n    get: function() {\n      return this.internalChunkSize;\n    },\n    set: function(value) {\n      if (!(this.mode[0] === 'w' && this.position === 0 && this.uploadDate == null)) {\n        this.internalChunkSize = this.internalChunkSize;\n      } else {\n        this.internalChunkSize = value;\n      }\n    }\n  });\n\n  Object.defineProperty(this, 'md5', {\n    enumerable: true,\n    get: function() {\n      return this.internalMd5;\n    }\n  });\n\n  Object.defineProperty(this, 'chunkNumber', {\n    enumerable: true,\n    get: function() {\n      return this.currentChunk && this.currentChunk.chunkNumber\n        ? this.currentChunk.chunkNumber\n        : null;\n    }\n  });\n};\n\n/**\n * The callback format for the Gridstore.open method\n * @callback GridStore~openCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The GridStore instance if the open method was successful.\n */\n\n/**\n * Opens the file from the database and initialize this object. Also creates a\n * new one if file does not exist.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~openCallback} [callback] this will be called after executing this method\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.open = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  if (this.mode !== 'w' && this.mode !== 'w+' && this.mode !== 'r') {\n    throw MongoError.create({ message: 'Illegal mode ' + this.mode, driver: true });\n  }\n\n  return executeOperation(this.db.s.topology, open, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar open = function(self, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(self.db, self.options);\n\n  // If we are writing we need to ensure we have the right indexes for md5's\n  if (self.mode === 'w' || self.mode === 'w+') {\n    // Get files collection\n    var collection = self.collection();\n    // Put index on filename\n    collection.ensureIndex([['filename', 1]], writeConcern, function() {\n      // Get chunk collection\n      var chunkCollection = self.chunkCollection();\n      // Make an unique index for compatibility with mongo-cxx-driver:legacy\n      var chunkIndexOptions = shallowClone(writeConcern);\n      chunkIndexOptions.unique = true;\n      // Ensure index on chunk collection\n      chunkCollection.ensureIndex([['files_id', 1], ['n', 1]], chunkIndexOptions, function() {\n        // Open the connection\n        _open(self, writeConcern, function(err, r) {\n          if (err) return callback(err);\n          self.isOpen = true;\n          callback(err, r);\n        });\n      });\n    });\n  } else {\n    // Open the gridstore\n    _open(self, writeConcern, function(err, r) {\n      if (err) return callback(err);\n      self.isOpen = true;\n      callback(err, r);\n    });\n  }\n};\n\n/**\n * Verify if the file is at EOF.\n *\n * @method\n * @return {boolean} true if the read/write head is at the end of this file.\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.eof = function() {\n  return this.position === this.length ? true : false;\n};\n\n/**\n * The callback result format.\n * @callback GridStore~resultCallback\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object} result The result from the callback.\n */\n\n/**\n * Retrieves a single character from this file.\n *\n * @method\n * @param {GridStore~resultCallback} [callback] this gets called after this method is executed. Passes null to the first parameter and the character read to the second or null to the second if the read/write head is at the end of the file.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.getc = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, getc, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar getc = function(self, options, callback) {\n  if (self.eof()) {\n    callback(null, null);\n  } else if (self.currentChunk.eof()) {\n    nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n      self.currentChunk = chunk;\n      self.position = self.position + 1;\n      callback(err, self.currentChunk.getc());\n    });\n  } else {\n    self.position = self.position + 1;\n    callback(null, self.currentChunk.getc());\n  }\n};\n\n/**\n * Writes a string to the file with a newline character appended at the end if\n * the given string does not have one.\n *\n * @method\n * @param {string} string the string to write.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.puts = function(string, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  var finalString = string.match(/\\n$/) == null ? string + '\\n' : string;\n  return executeOperation(\n    this.db.s.topology,\n    this.write.bind(this),\n    [finalString, options, callback],\n    { skipSessions: true }\n  );\n};\n\n/**\n * Return a modified Readable stream including a possible transform method.\n *\n * @method\n * @return {GridStoreStream}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.stream = function() {\n  return new GridStoreStream(this);\n};\n\n/**\n * Writes some data. This method will work properly only if initialized with mode \"w\" or \"w+\".\n *\n * @method\n * @param {(string|Buffer)} data the data to write.\n * @param {boolean} [close] closes this file after writing if set to true.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.write = function write(data, close, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(\n    this.db.s.topology,\n    _writeNormal,\n    [this, data, close, options, callback],\n    { skipSessions: true }\n  );\n};\n\n/**\n * Handles the destroy part of a stream\n *\n * @method\n * @result {null}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.destroy = function destroy() {\n  // close and do not emit any more events. queued data is not sent.\n  if (!this.writable) return;\n  this.readable = false;\n  if (this.writable) {\n    this.writable = false;\n    this._q.length = 0;\n    this.emit('close');\n  }\n};\n\n/**\n * Stores a file from the file system to the GridFS database.\n *\n * @method\n * @param {(string|Buffer|FileHandle)} file the file to store.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.writeFile = function(file, options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, writeFile, [this, file, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar writeFile = function(self, file, options, callback) {\n  if (typeof file === 'string') {\n    fs.open(file, 'r', function(err, fd) {\n      if (err) return callback(err);\n      self.writeFile(fd, callback);\n    });\n    return;\n  }\n\n  self.open(function(err, self) {\n    if (err) return callback(err, self);\n\n    fs.fstat(file, function(err, stats) {\n      if (err) return callback(err, self);\n\n      var offset = 0;\n      var index = 0;\n\n      // Write a chunk\n      var writeChunk = function() {\n        // Allocate the buffer\n        var _buffer = Buffer.alloc(self.chunkSize);\n        // Read the file\n        fs.read(file, _buffer, 0, _buffer.length, offset, function(err, bytesRead, data) {\n          if (err) return callback(err, self);\n\n          offset = offset + bytesRead;\n\n          // Create a new chunk for the data\n          var chunk = new Chunk(self, { n: index++ }, self.writeConcern);\n          chunk.write(data.slice(0, bytesRead), function(err, chunk) {\n            if (err) return callback(err, self);\n\n            chunk.save({}, function(err) {\n              if (err) return callback(err, self);\n\n              self.position = self.position + bytesRead;\n\n              // Point to current chunk\n              self.currentChunk = chunk;\n\n              if (offset >= stats.size) {\n                fs.close(file, function(err) {\n                  if (err) return callback(err);\n\n                  self.close(function(err) {\n                    if (err) return callback(err, self);\n                    return callback(null, self);\n                  });\n                });\n              } else {\n                return process.nextTick(writeChunk);\n              }\n            });\n          });\n        });\n      };\n\n      // Process the first write\n      process.nextTick(writeChunk);\n    });\n  });\n};\n\n/**\n * Saves this file to the database. This will overwrite the old entry if it\n * already exists. This will work properly only if mode was initialized to\n * \"w\" or \"w+\".\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.close = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, close, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar close = function(self, options, callback) {\n  if (self.mode[0] === 'w') {\n    // Set up options\n    options = Object.assign({}, self.writeConcern, options);\n\n    if (self.currentChunk != null && self.currentChunk.position > 0) {\n      self.currentChunk.save({}, function(err) {\n        if (err && typeof callback === 'function') return callback(err);\n\n        self.collection(function(err, files) {\n          if (err && typeof callback === 'function') return callback(err);\n\n          // Build the mongo object\n          if (self.uploadDate != null) {\n            buildMongoObject(self, function(err, mongoObject) {\n              if (err) {\n                if (typeof callback === 'function') return callback(err);\n                else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if (typeof callback === 'function') callback(err, mongoObject);\n              });\n            });\n          } else {\n            self.uploadDate = new Date();\n            buildMongoObject(self, function(err, mongoObject) {\n              if (err) {\n                if (typeof callback === 'function') return callback(err);\n                else throw err;\n              }\n\n              files.save(mongoObject, options, function(err) {\n                if (typeof callback === 'function') callback(err, mongoObject);\n              });\n            });\n          }\n        });\n      });\n    } else {\n      self.collection(function(err, files) {\n        if (err && typeof callback === 'function') return callback(err);\n\n        self.uploadDate = new Date();\n        buildMongoObject(self, function(err, mongoObject) {\n          if (err) {\n            if (typeof callback === 'function') return callback(err);\n            else throw err;\n          }\n\n          files.save(mongoObject, options, function(err) {\n            if (typeof callback === 'function') callback(err, mongoObject);\n          });\n        });\n      });\n    }\n  } else if (self.mode[0] === 'r') {\n    if (typeof callback === 'function') callback(null, null);\n  } else {\n    if (typeof callback === 'function')\n      callback(MongoError.create({ message: f('Illegal mode %s', self.mode), driver: true }));\n  }\n};\n\n/**\n * The collection callback format.\n * @callback GridStore~collectionCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Collection} collection The collection from the command execution.\n */\n\n/**\n * Retrieve this file's chunks collection.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.chunkCollection = function(callback) {\n  if (typeof callback === 'function') return this.db.collection(this.root + '.chunks', callback);\n  return this.db.collection(this.root + '.chunks');\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.unlink = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, unlink, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar unlink = function(self, options, callback) {\n  deleteChunks(self, function(err) {\n    if (err !== null) {\n      err.message = 'at deleteChunks: ' + err.message;\n      return callback(err);\n    }\n\n    self.collection(function(err, collection) {\n      if (err !== null) {\n        err.message = 'at collection: ' + err.message;\n        return callback(err);\n      }\n\n      collection.remove({ _id: self.fileId }, self.writeConcern, function(err) {\n        callback(err, self);\n      });\n    });\n  });\n};\n\n/**\n * Retrieves the file collection associated with this object.\n *\n * @method\n * @param {GridStore~collectionCallback} callback the command callback.\n * @return {Collection}\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.collection = function(callback) {\n  if (typeof callback === 'function') this.db.collection(this.root + '.files', callback);\n  return this.db.collection(this.root + '.files');\n};\n\n/**\n * The readlines callback format.\n * @callback GridStore~readlinesCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {string[]} strings The array of strings returned.\n */\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.readlines = function(separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  separator = args.length ? args.shift() : '\\n';\n  separator = separator || '\\n';\n  options = args.length ? args.shift() : {};\n\n  return executeOperation(this.db.s.topology, readlines, [this, separator, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar readlines = function(self, separator, options, callback) {\n  self.read(function(err, data) {\n    if (err) return callback(err);\n\n    var items = data.toString().split(separator);\n    items = items.length > 0 ? items.splice(0, items.length - 1) : [];\n    for (var i = 0; i < items.length; i++) {\n      items[i] = items[i] + separator;\n    }\n\n    callback(null, items);\n  });\n};\n\n/**\n * Deletes all the chunks of this file in the database if mode was set to \"w\" or\n * \"w+\" and resets the read/write head to the initial position.\n *\n * @method\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] this will be called after executing this method. The first parameter will contain null and the second one will contain a reference to this object.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.rewind = function(options, callback) {\n  if (typeof options === 'function') (callback = options), (options = {});\n  options = options || {};\n\n  return executeOperation(this.db.s.topology, rewind, [this, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar rewind = function(self, options, callback) {\n  if (self.currentChunk.chunkNumber !== 0) {\n    if (self.mode[0] === 'w') {\n      deleteChunks(self, function(err) {\n        if (err) return callback(err);\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.position = 0;\n        callback(null, self);\n      });\n    } else {\n      self.currentChunk(0, function(err, chunk) {\n        if (err) return callback(err);\n        self.currentChunk = chunk;\n        self.currentChunk.rewind();\n        self.position = 0;\n        callback(null, self);\n      });\n    }\n  } else {\n    self.currentChunk.rewind();\n    self.position = 0;\n    callback(null, self);\n  }\n};\n\n/**\n * The read callback format.\n * @callback GridStore~readCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {Buffer} data The data read from the GridStore object\n */\n\n/**\n * Retrieves the contents of this file and advances the read/write head. Works with Buffers only.\n *\n * There are 3 signatures for this method:\n *\n * (callback)\n * (length, callback)\n * (length, buffer, callback)\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.read = function(length, buffer, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  length = args.length ? args.shift() : null;\n  buffer = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n\n  return executeOperation(this.db.s.topology, read, [this, length, buffer, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar read = function(self, length, buffer, options, callback) {\n  // The data is a c-terminated string and thus the length - 1\n  var finalLength = length == null ? self.length - self.position : length;\n  var finalBuffer = buffer == null ? Buffer.alloc(finalLength) : buffer;\n  // Add a index to buffer to keep track of writing position or apply current index\n  finalBuffer._index = buffer != null && buffer._index != null ? buffer._index : 0;\n\n  if (self.currentChunk.length() - self.currentChunk.position + finalBuffer._index >= finalLength) {\n    var slice = self.currentChunk.readSlice(finalLength - finalBuffer._index);\n    // Copy content to final buffer\n    slice.copy(finalBuffer, finalBuffer._index);\n    // Update internal position\n    self.position = self.position + finalBuffer.length;\n    // Check if we don't have a file at all\n    if (finalLength === 0 && finalBuffer.length === 0)\n      return callback(MongoError.create({ message: 'File does not exist', driver: true }), null);\n    // Else return data\n    return callback(null, finalBuffer);\n  }\n\n  // Read the next chunk\n  slice = self.currentChunk.readSlice(self.currentChunk.length() - self.currentChunk.position);\n  // Copy content to final buffer\n  slice.copy(finalBuffer, finalBuffer._index);\n  // Update index position\n  finalBuffer._index += slice.length;\n\n  // Load next chunk and read more\n  nthChunk(self, self.currentChunk.chunkNumber + 1, function(err, chunk) {\n    if (err) return callback(err);\n\n    if (chunk.length() > 0) {\n      self.currentChunk = chunk;\n      self.read(length, finalBuffer, callback);\n    } else {\n      if (finalBuffer._index > 0) {\n        callback(null, finalBuffer);\n      } else {\n        callback(\n          MongoError.create({\n            message: 'no chunks found for file, possibly corrupt',\n            driver: true\n          }),\n          null\n        );\n      }\n    }\n  });\n};\n\n/**\n * The tell callback format.\n * @callback GridStore~tellCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} position The current read position in the GridStore.\n */\n\n/**\n * Retrieves the position of the read/write head of this file.\n *\n * @method\n * @param {number} [length] the number of characters to read. Reads all the characters from the read/write head to the EOF if not specified.\n * @param {(string|Buffer)} [buffer] a string to hold temporary data. This is used for storing the string data read so far when recursively calling this method.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~tellCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.tell = function(callback) {\n  var self = this;\n  // We provided a callback leg\n  if (typeof callback === 'function') return callback(null, this.position);\n  // Return promise\n  return new self.promiseLibrary(function(resolve) {\n    resolve(self.position);\n  });\n};\n\n/**\n * The tell callback format.\n * @callback GridStore~gridStoreCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {GridStore} gridStore The gridStore.\n */\n\n/**\n * Moves the read/write head to a new location.\n *\n * There are 3 signatures for this method\n *\n * Seek Location Modes\n *  - **GridStore.IO_SEEK_SET**, **(default)** set the position from the start of the file.\n *  - **GridStore.IO_SEEK_CUR**, set the position from the current position in the file.\n *  - **GridStore.IO_SEEK_END**, set the position from the end of the file.\n *\n * @method\n * @param {number} [position] the position to seek to\n * @param {number} [seekLocation] seek mode. Use one of the Seek Location modes.\n * @param {object} [options] Optional settings\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~gridStoreCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.prototype.seek = function(position, seekLocation, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  seekLocation = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n\n  return executeOperation(\n    this.db.s.topology,\n    seek,\n    [this, position, seekLocation, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar seek = function(self, position, seekLocation, options, callback) {\n  // Seek only supports read mode\n  if (self.mode !== 'r') {\n    return callback(\n      MongoError.create({ message: 'seek is only supported for mode r', driver: true })\n    );\n  }\n\n  var seekLocationFinal = seekLocation == null ? GridStore.IO_SEEK_SET : seekLocation;\n  var finalPosition = position;\n  var targetPosition = 0;\n\n  // Calculate the position\n  if (seekLocationFinal === GridStore.IO_SEEK_CUR) {\n    targetPosition = self.position + finalPosition;\n  } else if (seekLocationFinal === GridStore.IO_SEEK_END) {\n    targetPosition = self.length + finalPosition;\n  } else {\n    targetPosition = finalPosition;\n  }\n\n  // Get the chunk\n  var newChunkNumber = Math.floor(targetPosition / self.chunkSize);\n  var seekChunk = function() {\n    nthChunk(self, newChunkNumber, function(err, chunk) {\n      if (err) return callback(err, null);\n      if (chunk == null) return callback(new Error('no chunk found'));\n\n      // Set the current chunk\n      self.currentChunk = chunk;\n      self.position = targetPosition;\n      self.currentChunk.position = self.position % self.chunkSize;\n      callback(err, self);\n    });\n  };\n\n  seekChunk();\n};\n\n/**\n * @ignore\n */\nvar _open = function(self, options, callback) {\n  var collection = self.collection();\n  // Create the query\n  var query =\n    self.referenceBy === REFERENCE_BY_ID ? { _id: self.fileId } : { filename: self.filename };\n  query = null == self.fileId && self.filename == null ? null : query;\n  options.readPreference = self.readPreference;\n\n  // Fetch the chunks\n  if (query != null) {\n    collection.findOne(query, options, function(err, doc) {\n      if (err) {\n        return error(err);\n      }\n\n      // Check if the collection for the files exists otherwise prepare the new one\n      if (doc != null) {\n        self.fileId = doc._id;\n        // Prefer a new filename over the existing one if this is a write\n        self.filename =\n          self.mode === 'r' || self.filename === undefined ? doc.filename : self.filename;\n        self.contentType = doc.contentType;\n        self.internalChunkSize = doc.chunkSize;\n        self.uploadDate = doc.uploadDate;\n        self.aliases = doc.aliases;\n        self.length = doc.length;\n        self.metadata = doc.metadata;\n        self.internalMd5 = doc.md5;\n      } else if (self.mode !== 'r') {\n        self.fileId = self.fileId == null ? new ObjectID() : self.fileId;\n        self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n        self.internalChunkSize =\n          self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n        self.length = 0;\n      } else {\n        self.length = 0;\n        var txtId = self.fileId._bsontype === 'ObjectID' ? self.fileId.toHexString() : self.fileId;\n        return error(\n          MongoError.create({\n            message: f(\n              'file with id %s not opened for writing',\n              self.referenceBy === REFERENCE_BY_ID ? txtId : self.filename\n            ),\n            driver: true\n          }),\n          self\n        );\n      }\n\n      // Process the mode of the object\n      if (self.mode === 'r') {\n        nthChunk(self, 0, options, function(err, chunk) {\n          if (err) return error(err);\n          self.currentChunk = chunk;\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode === 'w' && doc) {\n        // Delete any existing chunks\n        deleteChunks(self, options, function(err) {\n          if (err) return error(err);\n          self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n          self.contentType =\n            self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n          self.internalChunkSize =\n            self.options['chunk_size'] == null\n              ? self.internalChunkSize\n              : self.options['chunk_size'];\n          self.metadata =\n            self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = 0;\n          callback(null, self);\n        });\n      } else if (self.mode === 'w') {\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.contentType =\n          self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize =\n          self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      } else if (self.mode === 'w+') {\n        nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n          if (err) return error(err);\n          // Set the current chunk\n          self.currentChunk = chunk == null ? new Chunk(self, { n: 0 }, self.writeConcern) : chunk;\n          self.currentChunk.position = self.currentChunk.data.length();\n          self.metadata =\n            self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n          self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n          self.position = self.length;\n          callback(null, self);\n        });\n      }\n    });\n  } else {\n    // Write only mode\n    self.fileId = null == self.fileId ? new ObjectID() : self.fileId;\n    self.contentType = GridStore.DEFAULT_CONTENT_TYPE;\n    self.internalChunkSize =\n      self.internalChunkSize == null ? Chunk.DEFAULT_CHUNK_SIZE : self.internalChunkSize;\n    self.length = 0;\n\n    // No file exists set up write mode\n    if (self.mode === 'w') {\n      // Delete any existing chunks\n      deleteChunks(self, options, function(err) {\n        if (err) return error(err);\n        self.currentChunk = new Chunk(self, { n: 0 }, self.writeConcern);\n        self.contentType =\n          self.options['content_type'] == null ? self.contentType : self.options['content_type'];\n        self.internalChunkSize =\n          self.options['chunk_size'] == null ? self.internalChunkSize : self.options['chunk_size'];\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = 0;\n        callback(null, self);\n      });\n    } else if (self.mode === 'w+') {\n      nthChunk(self, lastChunkNumber(self), options, function(err, chunk) {\n        if (err) return error(err);\n        // Set the current chunk\n        self.currentChunk = chunk == null ? new Chunk(self, { n: 0 }, self.writeConcern) : chunk;\n        self.currentChunk.position = self.currentChunk.data.length();\n        self.metadata = self.options['metadata'] == null ? self.metadata : self.options['metadata'];\n        self.aliases = self.options['aliases'] == null ? self.aliases : self.options['aliases'];\n        self.position = self.length;\n        callback(null, self);\n      });\n    }\n  }\n\n  // only pass error to callback once\n  function error(err) {\n    if (error.err) return;\n    callback((error.err = err));\n  }\n};\n\n/**\n * @ignore\n */\nvar writeBuffer = function(self, buffer, close, callback) {\n  if (typeof close === 'function') {\n    callback = close;\n    close = null;\n  }\n  var finalClose = typeof close === 'boolean' ? close : false;\n\n  if (self.mode !== 'w') {\n    callback(\n      MongoError.create({\n        message: f(\n          'file with id %s not opened for writing',\n          self.referenceBy === REFERENCE_BY_ID ? self.referenceBy : self.filename\n        ),\n        driver: true\n      }),\n      null\n    );\n  } else {\n    if (self.currentChunk.position + buffer.length >= self.chunkSize) {\n      // Write out the current Chunk and then keep writing until we have less data left than a chunkSize left\n      // to a new chunk (recursively)\n      var previousChunkNumber = self.currentChunk.chunkNumber;\n      var leftOverDataSize = self.chunkSize - self.currentChunk.position;\n      var firstChunkData = buffer.slice(0, leftOverDataSize);\n      var leftOverData = buffer.slice(leftOverDataSize);\n      // A list of chunks to write out\n      var chunksToWrite = [self.currentChunk.write(firstChunkData)];\n      // If we have more data left than the chunk size let's keep writing new chunks\n      while (leftOverData.length >= self.chunkSize) {\n        // Create a new chunk and write to it\n        var newChunk = new Chunk(self, { n: previousChunkNumber + 1 }, self.writeConcern);\n        firstChunkData = leftOverData.slice(0, self.chunkSize);\n        leftOverData = leftOverData.slice(self.chunkSize);\n        // Update chunk number\n        previousChunkNumber = previousChunkNumber + 1;\n        // Write data\n        newChunk.write(firstChunkData);\n        // Push chunk to save list\n        chunksToWrite.push(newChunk);\n      }\n\n      // Set current chunk with remaining data\n      self.currentChunk = new Chunk(self, { n: previousChunkNumber + 1 }, self.writeConcern);\n      // If we have left over data write it\n      if (leftOverData.length > 0) self.currentChunk.write(leftOverData);\n\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // Total number of chunks to write\n      var numberOfChunksToWrite = chunksToWrite.length;\n\n      for (var i = 0; i < chunksToWrite.length; i++) {\n        chunksToWrite[i].save({}, function(err) {\n          if (err) return callback(err);\n\n          numberOfChunksToWrite = numberOfChunksToWrite - 1;\n\n          if (numberOfChunksToWrite <= 0) {\n            // We care closing the file before returning\n            if (finalClose) {\n              return self.close(function(err) {\n                callback(err, self);\n              });\n            }\n\n            // Return normally\n            return callback(null, self);\n          }\n        });\n      }\n    } else {\n      // Update the position for the gridstore\n      self.position = self.position + buffer.length;\n      // We have less data than the chunk size just write it and callback\n      self.currentChunk.write(buffer);\n      // We care closing the file before returning\n      if (finalClose) {\n        return self.close(function(err) {\n          callback(err, self);\n        });\n      }\n      // Return normally\n      return callback(null, self);\n    }\n  }\n};\n\n/**\n * Creates a mongoDB object representation of this object.\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this file\n *          'filename' : , // {string} name for this file\n *          'contentType' : , // {string} mime type for this file\n *          'length' : , // {number} size of this file?\n *          'chunksize' : , // {number} chunk size used by this file\n *          'uploadDate' : , // {Date}\n *          'aliases' : , // {array of string}\n *          'metadata' : , // {string}\n *        }\n *        </code></pre>\n *\n * @ignore\n */\nvar buildMongoObject = function(self, callback) {\n  // Calcuate the length\n  var mongoObject = {\n    _id: self.fileId,\n    filename: self.filename,\n    contentType: self.contentType,\n    length: self.position ? self.position : 0,\n    chunkSize: self.chunkSize,\n    uploadDate: self.uploadDate,\n    aliases: self.aliases,\n    metadata: self.metadata\n  };\n\n  var md5Command = { filemd5: self.fileId, root: self.root };\n  self.db.command(md5Command, function(err, results) {\n    if (err) return callback(err);\n\n    mongoObject.md5 = results.md5;\n    callback(null, mongoObject);\n  });\n};\n\n/**\n * Gets the nth chunk of this file.\n * @ignore\n */\nvar nthChunk = function(self, chunkNumber, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n  options.readPreference = self.readPreference;\n  // Get the nth chunk\n  self\n    .chunkCollection()\n    .findOne({ files_id: self.fileId, n: chunkNumber }, options, function(err, chunk) {\n      if (err) return callback(err);\n\n      var finalChunk = chunk == null ? {} : chunk;\n      callback(null, new Chunk(self, finalChunk, self.writeConcern));\n    });\n};\n\n/**\n * @ignore\n */\nvar lastChunkNumber = function(self) {\n  return Math.floor((self.length ? self.length - 1 : 0) / self.chunkSize);\n};\n\n/**\n * Deletes all the chunks of this file in the database.\n *\n * @ignore\n */\nvar deleteChunks = function(self, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || self.writeConcern;\n\n  if (self.fileId != null) {\n    self.chunkCollection().remove({ files_id: self.fileId }, options, function(err) {\n      if (err) return callback(err, false);\n      callback(null, true);\n    });\n  } else {\n    callback(null, true);\n  }\n};\n\n/**\n * The collection to be used for holding the files and chunks collection.\n *\n * @classconstant DEFAULT_ROOT_COLLECTION\n */\nGridStore.DEFAULT_ROOT_COLLECTION = 'fs';\n\n/**\n * Default file mime type\n *\n * @classconstant DEFAULT_CONTENT_TYPE\n */\nGridStore.DEFAULT_CONTENT_TYPE = 'binary/octet-stream';\n\n/**\n * Seek mode where the given length is absolute.\n *\n * @classconstant IO_SEEK_SET\n */\nGridStore.IO_SEEK_SET = 0;\n\n/**\n * Seek mode where the given length is an offset to the current read/write head.\n *\n * @classconstant IO_SEEK_CUR\n */\nGridStore.IO_SEEK_CUR = 1;\n\n/**\n * Seek mode where the given length is an offset to the end of the file.\n *\n * @classconstant IO_SEEK_END\n */\nGridStore.IO_SEEK_END = 2;\n\n/**\n * Checks if a file exists in the database.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file to look for.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.exist = function(db, fileIdObject, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeOperation(\n    db.s.topology,\n    exists,\n    [db, fileIdObject, rootCollection, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar exists = function(db, fileIdObject, rootCollection, options, callback) {\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.PRIMARY;\n  // Fetch collection\n  var rootCollectionFinal =\n    rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  db.collection(rootCollectionFinal + '.files', function(err, collection) {\n    if (err) return callback(err);\n\n    // Build query\n    var query =\n      typeof fileIdObject === 'string' ||\n      Object.prototype.toString.call(fileIdObject) === '[object RegExp]'\n        ? { filename: fileIdObject }\n        : { _id: fileIdObject }; // Attempt to locate file\n\n    // We have a specific query\n    if (\n      fileIdObject != null &&\n      typeof fileIdObject === 'object' &&\n      Object.prototype.toString.call(fileIdObject) !== '[object RegExp]'\n    ) {\n      query = fileIdObject;\n    }\n\n    // Check if the entry exists\n    collection.findOne(query, { readPreference: readPreference }, function(err, item) {\n      if (err) return callback(err);\n      callback(null, item == null ? false : true);\n    });\n  });\n};\n\n/**\n * Gets the list of files stored in the GridFS.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} [rootCollection] The root collection that holds the files and chunks collection. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] result from exists.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.list = function(db, rootCollection, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  rootCollection = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeOperation(db.s.topology, list, [db, rootCollection, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar list = function(db, rootCollection, options, callback) {\n  // Ensure we have correct values\n  if (rootCollection != null && typeof rootCollection === 'object') {\n    options = rootCollection;\n    rootCollection = null;\n  }\n\n  // Establish read preference\n  var readPreference = options.readPreference || ReadPreference.primary;\n  // Check if we are returning by id not filename\n  var byId = options['id'] != null ? options['id'] : false;\n  // Fetch item\n  var rootCollectionFinal =\n    rootCollection != null ? rootCollection : GridStore.DEFAULT_ROOT_COLLECTION;\n  var items = [];\n  db.collection(rootCollectionFinal + '.files', function(err, collection) {\n    if (err) return callback(err);\n\n    collection.find({}, { readPreference: readPreference }, function(err, cursor) {\n      if (err) return callback(err);\n\n      cursor.each(function(err, item) {\n        if (item != null) {\n          items.push(byId ? item._id : item.filename);\n        } else {\n          callback(err, items);\n        }\n      });\n    });\n  });\n};\n\n/**\n * Reads the contents of a file.\n *\n * This method has the following signatures\n *\n * (db, name, callback)\n * (db, name, length, callback)\n * (db, name, length, offset, callback)\n * (db, name, length, offset, options, callback)\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {string} name The name of the file.\n * @param {number} [length] The size of data to read.\n * @param {number} [offset] The offset from the head of the file of which to start reading from.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.read = function(db, name, length, offset, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  length = args.length ? args.shift() : null;\n  offset = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  return executeOperation(\n    db.s.topology,\n    readStatic,\n    [db, name, length, offset, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readStatic = function(db, name, length, offset, options, callback) {\n  new GridStore(db, name, 'r', options).open(function(err, gridStore) {\n    if (err) return callback(err);\n    // Make sure we are not reading out of bounds\n    if (offset && offset >= gridStore.length)\n      return callback('offset larger than size of file', null);\n    if (length && length > gridStore.length)\n      return callback('length is larger than the size of the file', null);\n    if (offset && length && offset + length > gridStore.length)\n      return callback('offset and length is larger than the size of the file', null);\n\n    if (offset != null) {\n      gridStore.seek(offset, function(err, gridStore) {\n        if (err) return callback(err);\n        gridStore.read(length, callback);\n      });\n    } else {\n      gridStore.read(length, callback);\n    }\n  });\n};\n\n/**\n * Read the entire file as a list of strings splitting by the provided separator.\n *\n * @method\n * @static\n * @param {Db} db the database to query.\n * @param {(String|object)} name the name of the file.\n * @param {string} [separator] The character to be recognized as the newline separator.\n * @param {object} [options] Optional settings.\n * @param {(ReadPreference|string)} [options.readPreference] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~readlinesCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.readlines = function(db, name, separator, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  separator = args.length ? args.shift() : null;\n  options = args.length ? args.shift() : null;\n  options = options || {};\n\n  return executeOperation(\n    db.s.topology,\n    readlinesStatic,\n    [db, name, separator, options, callback],\n    { skipSessions: true }\n  );\n};\n\nvar readlinesStatic = function(db, name, separator, options, callback) {\n  var finalSeperator = separator == null ? '\\n' : separator;\n  new GridStore(db, name, 'r', options).open(function(err, gridStore) {\n    if (err) return callback(err);\n    gridStore.readlines(finalSeperator, callback);\n  });\n};\n\n/**\n * Deletes the chunks and metadata information of a file from GridFS.\n *\n * @method\n * @static\n * @param {Db} db The database to query.\n * @param {(string|array)} names The name/names of the files to delete.\n * @param {object} [options] Optional settings.\n * @param {object} [options.promiseLibrary] A Promise library class the application wishes to use such as Bluebird, must be ES6 compatible\n * @param {ClientSession} [options.session] optional session to use for this operation\n * @param {GridStore~resultCallback} [callback] the command callback.\n * @return {Promise} returns Promise if no callback passed\n * @deprecated Use GridFSBucket API instead\n */\nGridStore.unlink = function(db, names, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  options = args.length ? args.shift() : {};\n  options = options || {};\n\n  return executeOperation(db.s.topology, unlinkStatic, [this, db, names, options, callback], {\n    skipSessions: true\n  });\n};\n\nvar unlinkStatic = function(self, db, names, options, callback) {\n  // Get the write concern\n  var writeConcern = _getWriteConcern(db, options);\n\n  // List of names\n  if (names.constructor === Array) {\n    var tc = 0;\n    for (var i = 0; i < names.length; i++) {\n      ++tc;\n      GridStore.unlink(db, names[i], options, function() {\n        if (--tc === 0) {\n          callback(null, self);\n        }\n      });\n    }\n  } else {\n    new GridStore(db, names, 'w', options).open(function(err, gridStore) {\n      if (err) return callback(err);\n      deleteChunks(gridStore, function(err) {\n        if (err) return callback(err);\n        gridStore.collection(function(err, collection) {\n          if (err) return callback(err);\n          collection.remove({ _id: gridStore.fileId }, writeConcern, function(err) {\n            callback(err, self);\n          });\n        });\n      });\n    });\n  }\n};\n\n/**\n *  @ignore\n */\nvar _writeNormal = function(self, data, close, options, callback) {\n  // If we have a buffer write it using the writeBuffer method\n  if (Buffer.isBuffer(data)) {\n    return writeBuffer(self, data, close, callback);\n  } else {\n    return writeBuffer(self, Buffer.from(data, 'binary'), close, callback);\n  }\n};\n\n/**\n * @ignore\n */\nvar _setWriteConcernHash = function(options) {\n  var finalOptions = {};\n  if (options.w != null) finalOptions.w = options.w;\n  if (options.journal === true) finalOptions.j = options.journal;\n  if (options.j === true) finalOptions.j = options.j;\n  if (options.fsync === true) finalOptions.fsync = options.fsync;\n  if (options.wtimeout != null) finalOptions.wtimeout = options.wtimeout;\n  return finalOptions;\n};\n\n/**\n * @ignore\n */\nvar _getWriteConcern = function(self, options) {\n  // Final options\n  var finalOptions = { w: 1 };\n  options = options || {};\n\n  // Local options verification\n  if (\n    options.w != null ||\n    typeof options.j === 'boolean' ||\n    typeof options.journal === 'boolean' ||\n    typeof options.fsync === 'boolean'\n  ) {\n    finalOptions = _setWriteConcernHash(options);\n  } else if (options.safe != null && typeof options.safe === 'object') {\n    finalOptions = _setWriteConcernHash(options.safe);\n  } else if (typeof options.safe === 'boolean') {\n    finalOptions = { w: options.safe ? 1 : 0 };\n  } else if (\n    self.options.w != null ||\n    typeof self.options.j === 'boolean' ||\n    typeof self.options.journal === 'boolean' ||\n    typeof self.options.fsync === 'boolean'\n  ) {\n    finalOptions = _setWriteConcernHash(self.options);\n  } else if (\n    self.safe &&\n    (self.safe.w != null ||\n      typeof self.safe.j === 'boolean' ||\n      typeof self.safe.journal === 'boolean' ||\n      typeof self.safe.fsync === 'boolean')\n  ) {\n    finalOptions = _setWriteConcernHash(self.safe);\n  } else if (typeof self.safe === 'boolean') {\n    finalOptions = { w: self.safe ? 1 : 0 };\n  }\n\n  // Ensure we don't have an invalid combination of write concerns\n  if (\n    finalOptions.w < 1 &&\n    (finalOptions.journal === true || finalOptions.j === true || finalOptions.fsync === true)\n  )\n    throw MongoError.create({\n      message: 'No acknowledgement using w < 1 cannot be combined with journal:true or fsync:true',\n      driver: true\n    });\n\n  // Return the options\n  return finalOptions;\n};\n\n/**\n * Create a new GridStoreStream instance (INTERNAL TYPE, do not instantiate directly)\n *\n * @class\n * @extends external:Duplex\n * @return {GridStoreStream} a GridStoreStream instance.\n * @deprecated Use GridFSBucket API instead\n */\nvar GridStoreStream = function(gs) {\n  // Initialize the duplex stream\n  Duplex.call(this);\n\n  // Get the gridstore\n  this.gs = gs;\n\n  // End called\n  this.endCalled = false;\n\n  // If we have a seek\n  this.totalBytesToRead = this.gs.length - this.gs.position;\n  this.seekPosition = this.gs.position;\n};\n\n//\n// Inherit duplex\ninherits(GridStoreStream, Duplex);\n\nGridStoreStream.prototype._pipe = GridStoreStream.prototype.pipe;\n\n// Set up override\nGridStoreStream.prototype.pipe = function(destination) {\n  var self = this;\n\n  // Only open gridstore if not already open\n  if (!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      if (err) return self.emit('error', err);\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      self._pipe.apply(self, [destination]);\n    });\n  } else {\n    self.totalBytesToRead = self.gs.length - self.gs.position;\n    self._pipe.apply(self, [destination]);\n  }\n\n  return destination;\n};\n\n// Called by stream\nGridStoreStream.prototype._read = function() {\n  var self = this;\n\n  var read = function() {\n    // Read data\n    self.gs.read(length, function(err, buffer) {\n      if (err && !self.endCalled) return self.emit('error', err);\n\n      // Stream is closed\n      if (self.endCalled || buffer == null) return self.push(null);\n      // Remove bytes read\n      if (buffer.length <= self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer.length;\n        self.push(buffer);\n      } else if (buffer.length > self.totalBytesToRead) {\n        self.totalBytesToRead = self.totalBytesToRead - buffer._index;\n        self.push(buffer.slice(0, buffer._index));\n      }\n\n      // Finished reading\n      if (self.totalBytesToRead <= 0) {\n        self.endCalled = true;\n      }\n    });\n  };\n\n  // Set read length\n  var length =\n    self.gs.length < self.gs.chunkSize ? self.gs.length - self.seekPosition : self.gs.chunkSize;\n  if (!self.gs.isOpen) {\n    self.gs.open(function(err) {\n      self.totalBytesToRead = self.gs.length - self.gs.position;\n      if (err) return self.emit('error', err);\n      read();\n    });\n  } else {\n    read();\n  }\n};\n\nGridStoreStream.prototype.destroy = function() {\n  this.pause();\n  this.endCalled = true;\n  this.gs.close();\n  this.emit('end');\n};\n\nGridStoreStream.prototype.write = function(chunk) {\n  var self = this;\n  if (self.endCalled)\n    return self.emit(\n      'error',\n      MongoError.create({ message: 'attempting to write to stream after end called', driver: true })\n    );\n  // Do we have to open the gridstore\n  if (!self.gs.isOpen) {\n    self.gs.open(function() {\n      self.gs.isOpen = true;\n      self.gs.write(chunk, function() {\n        process.nextTick(function() {\n          self.emit('drain');\n        });\n      });\n    });\n    return false;\n  } else {\n    self.gs.write(chunk, function() {\n      self.emit('drain');\n    });\n    return true;\n  }\n};\n\nGridStoreStream.prototype.end = function(chunk, encoding, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 0);\n  callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined;\n  chunk = args.length ? args.shift() : null;\n  encoding = args.length ? args.shift() : null;\n  self.endCalled = true;\n\n  if (chunk) {\n    self.gs.write(chunk, function() {\n      self.gs.close(function() {\n        if (typeof callback === 'function') callback();\n        self.emit('end');\n      });\n    });\n  }\n\n  self.gs.close(function() {\n    if (typeof callback === 'function') callback();\n    self.emit('end');\n  });\n};\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Duplex#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Duplex#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Duplex#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Duplex#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Duplex#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Duplex#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Duplex#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Duplex#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\n/**\n * This method writes some data to the underlying system, and calls the supplied callback once the data has been fully handled.\n * @function external:Duplex#write\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {boolean}\n */\n\n/**\n * Call this method when no more data will be written to the stream. If supplied, the callback is attached as a listener on the finish event.\n * @function external:Duplex#end\n * @param {(string|Buffer)} chunk The data to write\n * @param {string} encoding The encoding, if chunk is a String\n * @param {function} callback Callback for when this chunk of data is flushed\n * @return {null}\n */\n\n/**\n * GridStoreStream stream data event, fired for each document in the cursor.\n *\n * @event GridStoreStream#data\n * @type {object}\n */\n\n/**\n * GridStoreStream stream end event\n *\n * @event GridStoreStream#end\n * @type {null}\n */\n\n/**\n * GridStoreStream stream close event\n *\n * @event GridStoreStream#close\n * @type {null}\n */\n\n/**\n * GridStoreStream stream readable event\n *\n * @event GridStoreStream#readable\n * @type {null}\n */\n\n/**\n * GridStoreStream stream drain event\n *\n * @event GridStoreStream#drain\n * @type {null}\n */\n\n/**\n * GridStoreStream stream finish event\n *\n * @event GridStoreStream#finish\n * @type {null}\n */\n\n/**\n * GridStoreStream stream pipe event\n *\n * @event GridStoreStream#pipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream unpipe event\n *\n * @event GridStoreStream#unpipe\n * @type {null}\n */\n\n/**\n * GridStoreStream stream error event\n *\n * @event GridStoreStream#error\n * @type {null}\n */\n\n/**\n * @ignore\n */\nmodule.exports = GridStore;\n","'use strict';\n\nvar Emitter = require('events').EventEmitter;\nvar GridFSBucketReadStream = require('./download');\nvar GridFSBucketWriteStream = require('./upload');\nvar shallowClone = require('../utils').shallowClone;\nvar toError = require('../utils').toError;\nvar util = require('util');\nvar executeOperation = require('../utils').executeOperation;\n\nvar DEFAULT_GRIDFS_BUCKET_OPTIONS = {\n  bucketName: 'fs',\n  chunkSizeBytes: 255 * 1024\n};\n\nmodule.exports = GridFSBucket;\n\n/**\n * Constructor for a streaming GridFS interface\n * @class\n * @param {Db} db A db handle\n * @param {object} [options] Optional settings.\n * @param {string} [options.bucketName=\"fs\"] The 'files' and 'chunks' collections will be prefixed with the bucket name followed by a dot.\n * @param {number} [options.chunkSizeBytes=255 * 1024] Number of bytes stored in each chunk. Defaults to 255KB\n * @param {object} [options.writeConcern] Optional write concern to be passed to write operations, for instance `{ w: 1 }`\n * @param {object} [options.readPreference] Optional read preference to be passed to read operations\n * @fires GridFSBucketWriteStream#index\n * @return {GridFSBucket}\n */\n\nfunction GridFSBucket(db, options) {\n  Emitter.apply(this);\n  this.setMaxListeners(0);\n\n  if (options && typeof options === 'object') {\n    options = shallowClone(options);\n    var keys = Object.keys(DEFAULT_GRIDFS_BUCKET_OPTIONS);\n    for (var i = 0; i < keys.length; ++i) {\n      if (!options[keys[i]]) {\n        options[keys[i]] = DEFAULT_GRIDFS_BUCKET_OPTIONS[keys[i]];\n      }\n    }\n  } else {\n    options = DEFAULT_GRIDFS_BUCKET_OPTIONS;\n  }\n\n  this.s = {\n    db: db,\n    options: options,\n    _chunksCollection: db.collection(options.bucketName + '.chunks'),\n    _filesCollection: db.collection(options.bucketName + '.files'),\n    checkedIndexes: false,\n    calledOpenUploadStream: false,\n    promiseLibrary: db.s.promiseLibrary || Promise\n  };\n}\n\nutil.inherits(GridFSBucket, Emitter);\n\n/**\n * When the first call to openUploadStream is made, the upload stream will\n * check to see if it needs to create the proper indexes on the chunks and\n * files collections. This event is fired either when 1) it determines that\n * no index creation is necessary, 2) when it successfully creates the\n * necessary indexes.\n *\n * @event GridFSBucket#index\n * @type {Error}\n */\n\n/**\n * Returns a writable stream (GridFSBucketWriteStream) for writing\n * buffers to GridFS. The stream's 'id' property contains the resulting\n * file's id.\n * @method\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options] Optional settings.\n * @param {number} [options.chunkSizeBytes] Optional overwrite this bucket's chunkSizeBytes for this file\n * @param {object} [options.metadata] Optional object to store in the file document's `metadata` field\n * @param {string} [options.contentType] Optional string to store in the file document's `contentType` field\n * @param {array} [options.aliases] Optional array of strings to store in the file document's `aliases` field\n * @param {boolean} [options.disableMD5=false] If true, disables adding an md5 field to file data\n * @return {GridFSBucketWriteStream}\n */\n\nGridFSBucket.prototype.openUploadStream = function(filename, options) {\n  if (options) {\n    options = shallowClone(options);\n  } else {\n    options = {};\n  }\n  if (!options.chunkSizeBytes) {\n    options.chunkSizeBytes = this.s.options.chunkSizeBytes;\n  }\n  return new GridFSBucketWriteStream(this, filename, options);\n};\n\n/**\n * Returns a writable stream (GridFSBucketWriteStream) for writing\n * buffers to GridFS for a custom file id. The stream's 'id' property contains the resulting\n * file's id.\n * @method\n * @param {string|number|object} id A custom id used to identify the file\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options] Optional settings.\n * @param {number} [options.chunkSizeBytes] Optional overwrite this bucket's chunkSizeBytes for this file\n * @param {object} [options.metadata] Optional object to store in the file document's `metadata` field\n * @param {string} [options.contentType] Optional string to store in the file document's `contentType` field\n * @param {array} [options.aliases] Optional array of strings to store in the file document's `aliases` field\n * @param {boolean} [options.disableMD5=false] If true, disables adding an md5 field to file data\n * @return {GridFSBucketWriteStream}\n */\n\nGridFSBucket.prototype.openUploadStreamWithId = function(id, filename, options) {\n  if (options) {\n    options = shallowClone(options);\n  } else {\n    options = {};\n  }\n\n  if (!options.chunkSizeBytes) {\n    options.chunkSizeBytes = this.s.options.chunkSizeBytes;\n  }\n\n  options.id = id;\n\n  return new GridFSBucketWriteStream(this, filename, options);\n};\n\n/**\n * Returns a readable stream (GridFSBucketReadStream) for streaming file\n * data from GridFS.\n * @method\n * @param {ObjectId} id The id of the file doc\n * @param {Object} [options] Optional settings.\n * @param {Number} [options.start] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end] Optional 0-based offset in bytes to stop streaming before\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucket.prototype.openDownloadStream = function(id, options) {\n  var filter = { _id: id };\n  options = {\n    start: options && options.start,\n    end: options && options.end\n  };\n\n  return new GridFSBucketReadStream(\n    this.s._chunksCollection,\n    this.s._filesCollection,\n    this.s.options.readPreference,\n    filter,\n    options\n  );\n};\n\n/**\n * Deletes a file with the given id\n * @method\n * @param {ObjectId} id The id of the file doc\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.delete = function(id, callback) {\n  return executeOperation(this.s.db.s.topology, _delete, [this, id, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction _delete(_this, id, callback) {\n  _this.s._filesCollection.deleteOne({ _id: id }, function(error, res) {\n    if (error) {\n      return callback(error);\n    }\n\n    _this.s._chunksCollection.deleteMany({ files_id: id }, function(error) {\n      if (error) {\n        return callback(error);\n      }\n\n      // Delete orphaned chunks before returning FileNotFound\n      if (!res.result.n) {\n        var errmsg = 'FileNotFound: no file with id ' + id + ' found';\n        return callback(new Error(errmsg));\n      }\n\n      callback();\n    });\n  });\n}\n\n/**\n * Convenience wrapper around find on the files collection\n * @method\n * @param {Object} filter\n * @param {Object} [options] Optional settings for cursor\n * @param {number} [options.batchSize] Optional batch size for cursor\n * @param {number} [options.limit] Optional limit for cursor\n * @param {number} [options.maxTimeMS] Optional maxTimeMS for cursor\n * @param {boolean} [options.noCursorTimeout] Optionally set cursor's `noCursorTimeout` flag\n * @param {number} [options.skip] Optional skip for cursor\n * @param {object} [options.sort] Optional sort for cursor\n * @return {Cursor}\n */\n\nGridFSBucket.prototype.find = function(filter, options) {\n  filter = filter || {};\n  options = options || {};\n\n  var cursor = this.s._filesCollection.find(filter);\n\n  if (options.batchSize != null) {\n    cursor.batchSize(options.batchSize);\n  }\n  if (options.limit != null) {\n    cursor.limit(options.limit);\n  }\n  if (options.maxTimeMS != null) {\n    cursor.maxTimeMS(options.maxTimeMS);\n  }\n  if (options.noCursorTimeout != null) {\n    cursor.addCursorFlag('noCursorTimeout', options.noCursorTimeout);\n  }\n  if (options.skip != null) {\n    cursor.skip(options.skip);\n  }\n  if (options.sort != null) {\n    cursor.sort(options.sort);\n  }\n\n  return cursor;\n};\n\n/**\n * Returns a readable stream (GridFSBucketReadStream) for streaming the\n * file with the given name from GridFS. If there are multiple files with\n * the same name, this will stream the most recent file with the given name\n * (as determined by the `uploadDate` field). You can set the `revision`\n * option to change this behavior.\n * @method\n * @param {String} filename The name of the file to stream\n * @param {Object} [options] Optional settings\n * @param {number} [options.revision=-1] The revision number relative to the oldest file with the given filename. 0 gets you the oldest file, 1 gets you the 2nd oldest, -1 gets you the newest.\n * @param {Number} [options.start] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end] Optional 0-based offset in bytes to stop streaming before\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucket.prototype.openDownloadStreamByName = function(filename, options) {\n  var sort = { uploadDate: -1 };\n  var skip = null;\n  if (options && options.revision != null) {\n    if (options.revision >= 0) {\n      sort = { uploadDate: 1 };\n      skip = options.revision;\n    } else {\n      skip = -options.revision - 1;\n    }\n  }\n\n  var filter = { filename: filename };\n  options = {\n    sort: sort,\n    skip: skip,\n    start: options && options.start,\n    end: options && options.end\n  };\n  return new GridFSBucketReadStream(\n    this.s._chunksCollection,\n    this.s._filesCollection,\n    this.s.options.readPreference,\n    filter,\n    options\n  );\n};\n\n/**\n * Renames the file with the given _id to the given string\n * @method\n * @param {ObjectId} id the id of the file to rename\n * @param {String} filename new name for the file\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.rename = function(id, filename, callback) {\n  return executeOperation(this.s.db.s.topology, _rename, [this, id, filename, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction _rename(_this, id, filename, callback) {\n  var filter = { _id: id };\n  var update = { $set: { filename: filename } };\n  _this.s._filesCollection.updateOne(filter, update, function(error, res) {\n    if (error) {\n      return callback(error);\n    }\n    if (!res.result.n) {\n      return callback(toError('File with id ' + id + ' not found'));\n    }\n    callback();\n  });\n}\n\n/**\n * Removes this bucket's files collection, followed by its chunks collection.\n * @method\n * @param {GridFSBucket~errorCallback} [callback]\n */\n\nGridFSBucket.prototype.drop = function(callback) {\n  return executeOperation(this.s.db.s.topology, _drop, [this, callback], {\n    skipSessions: true\n  });\n};\n\n/**\n * Return the db logger\n * @method\n * @return {Logger} return the db logger\n * @ignore\n */\nGridFSBucket.prototype.getLogger = function() {\n  return this.s.db.s.logger;\n};\n\n/**\n * @ignore\n */\n\nfunction _drop(_this, callback) {\n  _this.s._filesCollection.drop(function(error) {\n    if (error) {\n      return callback(error);\n    }\n    _this.s._chunksCollection.drop(function(error) {\n      if (error) {\n        return callback(error);\n      }\n\n      return callback();\n    });\n  });\n}\n\n/**\n * Callback format for all GridFSBucket methods that can accept a callback.\n * @callback GridFSBucket~errorCallback\n * @param {MongoError} error An error instance representing any errors that occurred\n */\n","'use strict';\n\nvar stream = require('stream'),\n  util = require('util');\n\nmodule.exports = GridFSBucketReadStream;\n\n/**\n * A readable stream that enables you to read buffers from GridFS.\n *\n * Do not instantiate this class directly. Use `openDownloadStream()` instead.\n *\n * @class\n * @param {Collection} chunks Handle for chunks collection\n * @param {Collection} files Handle for files collection\n * @param {Object} readPreference The read preference to use\n * @param {Object} filter The query to use to find the file document\n * @param {Object} [options] Optional settings.\n * @param {Number} [options.sort] Optional sort for the file find query\n * @param {Number} [options.skip] Optional skip for the file find query\n * @param {Number} [options.start] Optional 0-based offset in bytes to start streaming from\n * @param {Number} [options.end] Optional 0-based offset in bytes to stop streaming before\n * @fires GridFSBucketReadStream#error\n * @fires GridFSBucketReadStream#file\n * @return {GridFSBucketReadStream} a GridFSBucketReadStream instance.\n */\n\nfunction GridFSBucketReadStream(chunks, files, readPreference, filter, options) {\n  this.s = {\n    bytesRead: 0,\n    chunks: chunks,\n    cursor: null,\n    expected: 0,\n    files: files,\n    filter: filter,\n    init: false,\n    expectedEnd: 0,\n    file: null,\n    options: options,\n    readPreference: readPreference\n  };\n\n  stream.Readable.call(this);\n}\n\nutil.inherits(GridFSBucketReadStream, stream.Readable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketReadStream#error\n * @type {Error}\n */\n\n/**\n * Fires when the stream loaded the file document corresponding to the\n * provided id.\n *\n * @event GridFSBucketReadStream#file\n * @type {object}\n */\n\n/**\n * Emitted when a chunk of data is available to be consumed.\n *\n * @event GridFSBucketReadStream#data\n * @type {object}\n */\n\n/**\n * Fired when the stream is exhausted (no more data events).\n *\n * @event GridFSBucketReadStream#end\n * @type {object}\n */\n\n/**\n * Fired when the stream is exhausted and the underlying cursor is killed\n *\n * @event GridFSBucketReadStream#close\n * @type {object}\n */\n\n/**\n * Reads from the cursor and pushes to the stream.\n * @method\n */\n\nGridFSBucketReadStream.prototype._read = function() {\n  var _this = this;\n  if (this.destroyed) {\n    return;\n  }\n\n  waitForFile(_this, function() {\n    doRead(_this);\n  });\n};\n\n/**\n * Sets the 0-based offset in bytes to start streaming from. Throws\n * an error if this stream has entered flowing mode\n * (e.g. if you've already called `on('data')`)\n * @method\n * @param {Number} start Offset in bytes to start reading at\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucketReadStream.prototype.start = function(start) {\n  throwIfInitialized(this);\n  this.s.options.start = start;\n  return this;\n};\n\n/**\n * Sets the 0-based offset in bytes to start streaming from. Throws\n * an error if this stream has entered flowing mode\n * (e.g. if you've already called `on('data')`)\n * @method\n * @param {Number} end Offset in bytes to stop reading at\n * @return {GridFSBucketReadStream}\n */\n\nGridFSBucketReadStream.prototype.end = function(end) {\n  throwIfInitialized(this);\n  this.s.options.end = end;\n  return this;\n};\n\n/**\n * Marks this stream as aborted (will never push another `data` event)\n * and kills the underlying cursor. Will emit the 'end' event, and then\n * the 'close' event once the cursor is successfully killed.\n *\n * @method\n * @param {GridFSBucket~errorCallback} [callback] called when the cursor is successfully closed or an error occurred.\n * @fires GridFSBucketWriteStream#close\n * @fires GridFSBucketWriteStream#end\n */\n\nGridFSBucketReadStream.prototype.abort = function(callback) {\n  var _this = this;\n  this.push(null);\n  this.destroyed = true;\n  if (this.s.cursor) {\n    this.s.cursor.close(function(error) {\n      _this.emit('close');\n      callback && callback(error);\n    });\n  } else {\n    if (!this.s.init) {\n      // If not initialized, fire close event because we will never\n      // get a cursor\n      _this.emit('close');\n    }\n    callback && callback();\n  }\n};\n\n/**\n * @ignore\n */\n\nfunction throwIfInitialized(self) {\n  if (self.s.init) {\n    throw new Error('You cannot change options after the stream has entered' + 'flowing mode!');\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction doRead(_this) {\n  if (_this.destroyed) {\n    return;\n  }\n\n  _this.s.cursor.next(function(error, doc) {\n    if (_this.destroyed) {\n      return;\n    }\n    if (error) {\n      return __handleError(_this, error);\n    }\n    if (!doc) {\n      _this.push(null);\n      return _this.s.cursor.close(function(error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        _this.emit('close');\n      });\n    }\n\n    var bytesRemaining = _this.s.file.length - _this.s.bytesRead;\n    var expectedN = _this.s.expected++;\n    var expectedLength = Math.min(_this.s.file.chunkSize, bytesRemaining);\n\n    if (doc.n > expectedN) {\n      var errmsg = 'ChunkIsMissing: Got unexpected n: ' + doc.n + ', expected: ' + expectedN;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    if (doc.n < expectedN) {\n      errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n + ', expected: ' + expectedN;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    var buf = Buffer.isBuffer(doc.data) ? doc.data : doc.data.buffer;\n\n    if (buf.length !== expectedLength) {\n      if (bytesRemaining <= 0) {\n        errmsg = 'ExtraChunk: Got unexpected n: ' + doc.n;\n        return __handleError(_this, new Error(errmsg));\n      }\n\n      errmsg =\n        'ChunkIsWrongSize: Got unexpected length: ' + buf.length + ', expected: ' + expectedLength;\n      return __handleError(_this, new Error(errmsg));\n    }\n\n    _this.s.bytesRead += buf.length;\n\n    if (buf.length === 0) {\n      return _this.push(null);\n    }\n\n    var sliceStart = null;\n    var sliceEnd = null;\n\n    if (_this.s.bytesToSkip != null) {\n      sliceStart = _this.s.bytesToSkip;\n      _this.s.bytesToSkip = 0;\n    }\n\n    if (expectedN === _this.s.expectedEnd && _this.s.bytesToTrim != null) {\n      sliceEnd = _this.s.bytesToTrim;\n    }\n\n    // If the remaining amount of data left is < chunkSize read the right amount of data\n    if (_this.s.options.end && _this.s.options.end - _this.s.bytesToSkip < buf.length) {\n      sliceEnd = _this.s.options.end - _this.s.bytesToSkip;\n    }\n\n    if (sliceStart != null || sliceEnd != null) {\n      buf = buf.slice(sliceStart || 0, sliceEnd || buf.length);\n    }\n\n    _this.push(buf);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction init(self) {\n  var findOneOptions = {};\n  if (self.s.readPreference) {\n    findOneOptions.readPreference = self.s.readPreference;\n  }\n  if (self.s.options && self.s.options.sort) {\n    findOneOptions.sort = self.s.options.sort;\n  }\n  if (self.s.options && self.s.options.skip) {\n    findOneOptions.skip = self.s.options.skip;\n  }\n\n  self.s.files.findOne(self.s.filter, findOneOptions, function(error, doc) {\n    if (error) {\n      return __handleError(self, error);\n    }\n    if (!doc) {\n      var identifier = self.s.filter._id ? self.s.filter._id.toString() : self.s.filter.filename;\n      var errmsg = 'FileNotFound: file ' + identifier + ' was not found';\n      var err = new Error(errmsg);\n      err.code = 'ENOENT';\n      return __handleError(self, err);\n    }\n\n    // If document is empty, kill the stream immediately and don't\n    // execute any reads\n    if (doc.length <= 0) {\n      self.push(null);\n      return;\n    }\n\n    if (self.destroyed) {\n      // If user destroys the stream before we have a cursor, wait\n      // until the query is done to say we're 'closed' because we can't\n      // cancel a query.\n      self.emit('close');\n      return;\n    }\n\n    self.s.bytesToSkip = handleStartOption(self, doc, self.s.options);\n\n    var filter = { files_id: doc._id };\n\n    // Currently (MongoDB 3.4.4) skip function does not support the index,\n    // it needs to retrieve all the documents first and then skip them. (CS-25811)\n    // As work around we use $gte on the \"n\" field.\n    if (self.s.options && self.s.options.start != null) {\n      var skip = Math.floor(self.s.options.start / doc.chunkSize);\n      if (skip > 0) {\n        filter['n'] = { $gte: skip };\n      }\n    }\n    self.s.cursor = self.s.chunks.find(filter).sort({ n: 1 });\n\n    if (self.s.readPreference) {\n      self.s.cursor.setReadPreference(self.s.readPreference);\n    }\n\n    self.s.expectedEnd = Math.ceil(doc.length / doc.chunkSize);\n    self.s.file = doc;\n    self.s.bytesToTrim = handleEndOption(self, doc, self.s.cursor, self.s.options);\n    self.emit('file', doc);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction waitForFile(_this, callback) {\n  if (_this.s.file) {\n    return callback();\n  }\n\n  if (!_this.s.init) {\n    init(_this);\n    _this.s.init = true;\n  }\n\n  _this.once('file', function() {\n    callback();\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction handleStartOption(stream, doc, options) {\n  if (options && options.start != null) {\n    if (options.start > doc.length) {\n      throw new Error(\n        'Stream start (' +\n          options.start +\n          ') must not be ' +\n          'more than the length of the file (' +\n          doc.length +\n          ')'\n      );\n    }\n    if (options.start < 0) {\n      throw new Error('Stream start (' + options.start + ') must not be ' + 'negative');\n    }\n    if (options.end != null && options.end < options.start) {\n      throw new Error(\n        'Stream start (' +\n          options.start +\n          ') must not be ' +\n          'greater than stream end (' +\n          options.end +\n          ')'\n      );\n    }\n\n    stream.s.bytesRead = Math.floor(options.start / doc.chunkSize) * doc.chunkSize;\n    stream.s.expected = Math.floor(options.start / doc.chunkSize);\n\n    return options.start - stream.s.bytesRead;\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction handleEndOption(stream, doc, cursor, options) {\n  if (options && options.end != null) {\n    if (options.end > doc.length) {\n      throw new Error(\n        'Stream end (' +\n          options.end +\n          ') must not be ' +\n          'more than the length of the file (' +\n          doc.length +\n          ')'\n      );\n    }\n    if (options.start < 0) {\n      throw new Error('Stream end (' + options.end + ') must not be ' + 'negative');\n    }\n\n    var start = options.start != null ? Math.floor(options.start / doc.chunkSize) : 0;\n\n    cursor.limit(Math.ceil(options.end / doc.chunkSize) - start);\n\n    stream.s.expectedEnd = Math.ceil(options.end / doc.chunkSize);\n\n    return Math.ceil(options.end / doc.chunkSize) * doc.chunkSize - options.end;\n  }\n}\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error) {\n  _this.emit('error', error);\n}\n","'use strict';\n\nvar core = require('mongodb-core');\nvar crypto = require('crypto');\nvar stream = require('stream');\nvar util = require('util');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar ERROR_NAMESPACE_NOT_FOUND = 26;\n\nmodule.exports = GridFSBucketWriteStream;\n\n/**\n * A writable stream that enables you to write buffers to GridFS.\n *\n * Do not instantiate this class directly. Use `openUploadStream()` instead.\n *\n * @class\n * @param {GridFSBucket} bucket Handle for this stream's corresponding bucket\n * @param {string} filename The value of the 'filename' key in the files doc\n * @param {object} [options] Optional settings.\n * @param {string|number|object} [options.id] Custom file id for the GridFS file.\n * @param {number} [options.chunkSizeBytes] The chunk size to use, in bytes\n * @param {number} [options.w] The write concern\n * @param {number} [options.wtimeout] The write concern timeout\n * @param {number} [options.j] The journal write concern\n * @param {boolean} [options.disableMD5=false] If true, disables adding an md5 field to file data\n * @fires GridFSBucketWriteStream#error\n * @fires GridFSBucketWriteStream#finish\n * @return {GridFSBucketWriteStream} a GridFSBucketWriteStream instance.\n */\n\nfunction GridFSBucketWriteStream(bucket, filename, options) {\n  options = options || {};\n  this.bucket = bucket;\n  this.chunks = bucket.s._chunksCollection;\n  this.filename = filename;\n  this.files = bucket.s._filesCollection;\n  this.options = options;\n  // Signals the write is all done\n  this.done = false;\n\n  this.id = options.id ? options.id : core.BSON.ObjectId();\n  this.chunkSizeBytes = this.options.chunkSizeBytes;\n  this.bufToStore = Buffer.alloc(this.chunkSizeBytes);\n  this.length = 0;\n  this.md5 = !options.disableMD5 && crypto.createHash('md5');\n  this.n = 0;\n  this.pos = 0;\n  this.state = {\n    streamEnd: false,\n    outstandingRequests: 0,\n    errored: false,\n    aborted: false,\n    promiseLibrary: this.bucket.s.promiseLibrary\n  };\n\n  if (!this.bucket.s.calledOpenUploadStream) {\n    this.bucket.s.calledOpenUploadStream = true;\n\n    var _this = this;\n    checkIndexes(this, function() {\n      _this.bucket.s.checkedIndexes = true;\n      _this.bucket.emit('index');\n    });\n  }\n}\n\nutil.inherits(GridFSBucketWriteStream, stream.Writable);\n\n/**\n * An error occurred\n *\n * @event GridFSBucketWriteStream#error\n * @type {Error}\n */\n\n/**\n * `end()` was called and the write stream successfully wrote the file\n * metadata and all the chunks to MongoDB.\n *\n * @event GridFSBucketWriteStream#finish\n * @type {object}\n */\n\n/**\n * Write a buffer to the stream.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {Function} callback Function to call when the chunk was added to the buffer, or if the entire chunk was persisted to MongoDB if this chunk caused a flush.\n * @return {Boolean} False if this write required flushing a chunk to MongoDB. True otherwise.\n */\n\nGridFSBucketWriteStream.prototype.write = function(chunk, encoding, callback) {\n  var _this = this;\n  return waitForIndexes(this, function() {\n    return doWrite(_this, chunk, encoding, callback);\n  });\n};\n\n/**\n * Places this write stream into an aborted state (all future writes fail)\n * and deletes all chunks that have already been written.\n *\n * @method\n * @param {GridFSBucket~errorCallback} callback called when chunks are successfully removed or error occurred\n * @return {Promise} if no callback specified\n */\n\nGridFSBucketWriteStream.prototype.abort = function(callback) {\n  if (this.state.streamEnd) {\n    var error = new Error('Cannot abort a stream that has already completed');\n    if (typeof callback === 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  if (this.state.aborted) {\n    error = new Error('Cannot call abort() on a stream twice');\n    if (typeof callback === 'function') {\n      return callback(error);\n    }\n    return this.state.promiseLibrary.reject(error);\n  }\n  this.state.aborted = true;\n  this.chunks.deleteMany({ files_id: this.id }, function(error) {\n    if (typeof callback === 'function') callback(error);\n  });\n};\n\n/**\n * Tells the stream that no more data will be coming in. The stream will\n * persist the remaining data to MongoDB, write the files document, and\n * then emit a 'finish' event.\n *\n * @method\n * @param {Buffer} chunk Buffer to write\n * @param {String} encoding Optional encoding for the buffer\n * @param {Function} callback Function to call when all files and chunks have been persisted to MongoDB\n */\n\nGridFSBucketWriteStream.prototype.end = function(chunk, encoding, callback) {\n  var _this = this;\n  if (typeof chunk === 'function') {\n    (callback = chunk), (chunk = null), (encoding = null);\n  } else if (typeof encoding === 'function') {\n    (callback = encoding), (encoding = null);\n  }\n\n  if (checkAborted(this, callback)) {\n    return;\n  }\n  this.state.streamEnd = true;\n\n  if (callback) {\n    this.once('finish', function(result) {\n      callback(null, result);\n    });\n  }\n\n  if (!chunk) {\n    waitForIndexes(this, function() {\n      writeRemnant(_this);\n    });\n    return;\n  }\n\n  this.write(chunk, encoding, function() {\n    writeRemnant(_this);\n  });\n};\n\n/**\n * @ignore\n */\n\nfunction __handleError(_this, error, callback) {\n  if (_this.state.errored) {\n    return;\n  }\n  _this.state.errored = true;\n  if (callback) {\n    return callback(error);\n  }\n  _this.emit('error', error);\n}\n\n/**\n * @ignore\n */\n\nfunction createChunkDoc(filesId, n, data) {\n  return {\n    _id: core.BSON.ObjectId(),\n    files_id: filesId,\n    n: n,\n    data: data\n  };\n}\n\n/**\n * @ignore\n */\n\nfunction checkChunksIndex(_this, callback) {\n  _this.chunks.listIndexes().toArray(function(error, indexes) {\n    if (error) {\n      // Collection doesn't exist so create index\n      if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n        var index = { files_id: 1, n: 1 };\n        _this.chunks.createIndex(index, { background: false, unique: true }, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          callback();\n        });\n        return;\n      }\n      return callback(error);\n    }\n\n    var hasChunksIndex = false;\n    indexes.forEach(function(index) {\n      if (index.key) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.files_id === 1 && index.key.n === 1) {\n          hasChunksIndex = true;\n        }\n      }\n    });\n\n    if (hasChunksIndex) {\n      callback();\n    } else {\n      index = { files_id: 1, n: 1 };\n      var indexOptions = getWriteOptions(_this);\n\n      indexOptions.background = false;\n      indexOptions.unique = true;\n\n      _this.chunks.createIndex(index, indexOptions, function(error) {\n        if (error) {\n          return callback(error);\n        }\n\n        callback();\n      });\n    }\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkDone(_this, callback) {\n  if (_this.done) return true;\n  if (_this.state.streamEnd && _this.state.outstandingRequests === 0 && !_this.state.errored) {\n    // Set done so we dont' trigger duplicate createFilesDoc\n    _this.done = true;\n    // Create a new files doc\n    var filesDoc = createFilesDoc(\n      _this.id,\n      _this.length,\n      _this.chunkSizeBytes,\n      _this.md5 && _this.md5.digest('hex'),\n      _this.filename,\n      _this.options.contentType,\n      _this.options.aliases,\n      _this.options.metadata\n    );\n\n    if (checkAborted(_this, callback)) {\n      return false;\n    }\n\n    _this.files.insertOne(filesDoc, getWriteOptions(_this), function(error) {\n      if (error) {\n        return __handleError(_this, error, callback);\n      }\n      _this.emit('finish', filesDoc);\n    });\n\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction checkIndexes(_this, callback) {\n  _this.files.findOne({}, { _id: 1 }, function(error, doc) {\n    if (error) {\n      return callback(error);\n    }\n    if (doc) {\n      return callback();\n    }\n\n    _this.files.listIndexes().toArray(function(error, indexes) {\n      if (error) {\n        // Collection doesn't exist so create index\n        if (error.code === ERROR_NAMESPACE_NOT_FOUND) {\n          var index = { filename: 1, uploadDate: 1 };\n          _this.files.createIndex(index, { background: false }, function(error) {\n            if (error) {\n              return callback(error);\n            }\n\n            checkChunksIndex(_this, callback);\n          });\n          return;\n        }\n        return callback(error);\n      }\n\n      var hasFileIndex = false;\n      indexes.forEach(function(index) {\n        var keys = Object.keys(index.key);\n        if (keys.length === 2 && index.key.filename === 1 && index.key.uploadDate === 1) {\n          hasFileIndex = true;\n        }\n      });\n\n      if (hasFileIndex) {\n        checkChunksIndex(_this, callback);\n      } else {\n        index = { filename: 1, uploadDate: 1 };\n\n        var indexOptions = getWriteOptions(_this);\n\n        indexOptions.background = false;\n\n        _this.files.createIndex(index, indexOptions, function(error) {\n          if (error) {\n            return callback(error);\n          }\n\n          checkChunksIndex(_this, callback);\n        });\n      }\n    });\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction createFilesDoc(_id, length, chunkSize, md5, filename, contentType, aliases, metadata) {\n  var ret = {\n    _id: _id,\n    length: length,\n    chunkSize: chunkSize,\n    uploadDate: new Date(),\n    filename: filename\n  };\n\n  if (md5) {\n    ret.md5 = md5;\n  }\n\n  if (contentType) {\n    ret.contentType = contentType;\n  }\n\n  if (aliases) {\n    ret.aliases = aliases;\n  }\n\n  if (metadata) {\n    ret.metadata = metadata;\n  }\n\n  return ret;\n}\n\n/**\n * @ignore\n */\n\nfunction doWrite(_this, chunk, encoding, callback) {\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  var inputBuf = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding);\n\n  _this.length += inputBuf.length;\n\n  // Input is small enough to fit in our buffer\n  if (_this.pos + inputBuf.length < _this.chunkSizeBytes) {\n    inputBuf.copy(_this.bufToStore, _this.pos);\n    _this.pos += inputBuf.length;\n\n    callback && callback();\n\n    // Note that we reverse the typical semantics of write's return value\n    // to be compatible with node's `.pipe()` function.\n    // True means client can keep writing.\n    return true;\n  }\n\n  // Otherwise, buffer is too big for current chunk, so we need to flush\n  // to MongoDB.\n  var inputBufRemaining = inputBuf.length;\n  var spaceRemaining = _this.chunkSizeBytes - _this.pos;\n  var numToCopy = Math.min(spaceRemaining, inputBuf.length);\n  var outstandingRequests = 0;\n  while (inputBufRemaining > 0) {\n    var inputBufPos = inputBuf.length - inputBufRemaining;\n    inputBuf.copy(_this.bufToStore, _this.pos, inputBufPos, inputBufPos + numToCopy);\n    _this.pos += numToCopy;\n    spaceRemaining -= numToCopy;\n    if (spaceRemaining === 0) {\n      if (_this.md5) {\n        _this.md5.update(_this.bufToStore);\n      }\n      var doc = createChunkDoc(_this.id, _this.n, _this.bufToStore);\n      ++_this.state.outstandingRequests;\n      ++outstandingRequests;\n\n      if (checkAborted(_this, callback)) {\n        return false;\n      }\n\n      _this.chunks.insertOne(doc, getWriteOptions(_this), function(error) {\n        if (error) {\n          return __handleError(_this, error);\n        }\n        --_this.state.outstandingRequests;\n        --outstandingRequests;\n\n        if (!outstandingRequests) {\n          _this.emit('drain', doc);\n          callback && callback();\n          checkDone(_this);\n        }\n      });\n\n      spaceRemaining = _this.chunkSizeBytes;\n      _this.pos = 0;\n      ++_this.n;\n    }\n    inputBufRemaining -= numToCopy;\n    numToCopy = Math.min(spaceRemaining, inputBufRemaining);\n  }\n\n  // Note that we reverse the typical semantics of write's return value\n  // to be compatible with node's `.pipe()` function.\n  // False means the client should wait for the 'drain' event.\n  return false;\n}\n\n/**\n * @ignore\n */\n\nfunction getWriteOptions(_this) {\n  var obj = {};\n  if (_this.options.writeConcern) {\n    obj.w = _this.options.writeConcern.w;\n    obj.wtimeout = _this.options.writeConcern.wtimeout;\n    obj.j = _this.options.writeConcern.j;\n  }\n  return obj;\n}\n\n/**\n * @ignore\n */\n\nfunction waitForIndexes(_this, callback) {\n  if (_this.bucket.s.checkedIndexes) {\n    return callback(false);\n  }\n\n  _this.bucket.once('index', function() {\n    callback(true);\n  });\n\n  return true;\n}\n\n/**\n * @ignore\n */\n\nfunction writeRemnant(_this, callback) {\n  // Buffer is empty, so don't bother to insert\n  if (_this.pos === 0) {\n    return checkDone(_this, callback);\n  }\n\n  ++_this.state.outstandingRequests;\n\n  // Create a new buffer to make sure the buffer isn't bigger than it needs\n  // to be.\n  var remnant = Buffer.alloc(_this.pos);\n  _this.bufToStore.copy(remnant, 0, 0, _this.pos);\n  if (_this.md5) {\n    _this.md5.update(remnant);\n  }\n  var doc = createChunkDoc(_this.id, _this.n, remnant);\n\n  // If the stream was aborted, do not write remnant\n  if (checkAborted(_this, callback)) {\n    return false;\n  }\n\n  _this.chunks.insertOne(doc, getWriteOptions(_this), function(error) {\n    if (error) {\n      return __handleError(_this, error);\n    }\n    --_this.state.outstandingRequests;\n    checkDone(_this);\n  });\n}\n\n/**\n * @ignore\n */\n\nfunction checkAborted(_this, callback) {\n  if (_this.state.aborted) {\n    if (typeof callback === 'function') {\n      callback(new Error('this stream has been aborted'));\n    }\n    return true;\n  }\n  return false;\n}\n"],"sourceRoot":""}